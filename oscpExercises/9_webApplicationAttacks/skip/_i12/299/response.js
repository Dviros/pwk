var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 14:57:15 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Fri, 29 Mar 2019 00:49:51 GMT\x0aETag: \x228125-585310c5f09c0-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-9370/9371\x0aContent-Length: 9371\x0aKeep-Alive: timeout=5, max=78\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/* global getUserSetting, setUserSetting */\x0a( function( tinymce ) {\x0a// Set the minimum value for the modals z-index higher than #wpadminbar (100000)\x0aif ( ! tinymce.ui.FloatPanel.zIndex || tinymce.ui.FloatPanel.zIndex \x3c 100100 ) {\x0a\x09tinymce.ui.FloatPanel.zIndex = 100100;\x0a}\x0a\x0atinymce.PluginManager.add( \x27wordpress\x27, function( editor ) {\x0a\x09var wpAdvButton, style,\x0a\x09\x09DOM = tinymce.DOM,\x0a\x09\x09each = tinymce.each,\x0a\x09\x09__ = editor.editorManager.i18n.translate,\x0a\x09\x09$ = window.jQuery,\x0a\x09\x09wp = window.wp,\x0a\x09\x09hasWpautop = ( wp && wp.editor && wp.editor.autop && editor.getParam( \x27wpautop\x27, true ) ),\x0a\x09\x09wpTooltips = false;\x0a\x0a\x09if ( $ ) {\x0a\x09\x09$( document ).triggerHandler( \x27tinymce-editor-setup\x27, [ editor ] );\x0a\x09}\x0a\x0a\x09function toggleToolbars( state ) {\x0a\x09\x09var initial, toolbars, iframeHeight,\x0a\x09\x09\x09pixels = 0,\x0a\x09\x09\x09classicBlockToolbar = tinymce.$( \x27.block-library-classic__toolbar\x27 );\x0a\x0a\x09\x09if ( state === \x27hide\x27 ) {\x0a\x09\x09\x09initial = true;\x0a\x09\x09} else if ( classicBlockToolbar.length && ! classicBlockToolbar.hasClass( \x27has-advanced-toolbar\x27 ) ) {\x0a\x09\x09\x09// Show the second, third, etc. toolbar rows in the Classic block instance.\x0a\x09\x09\x09classicBlockToolbar.addClass( \x27has-advanced-toolbar\x27 );\x0a\x09\x09\x09state = \x27show\x27;\x0a\x09\x09}\x0a\x0a\x09\x09if ( editor.theme.panel ) {\x0a\x09\x09\x09toolbars = editor.theme.panel.find(\x27.toolbar:not(.menubar)\x27);\x0a\x09\x09}\x0a\x0a\x09\x09if ( toolbars && toolbars.length \x3e 1 ) {\x0a\x09\x09\x09if ( ! state && toolbars[1].visible() ) {\x0a\x09\x09\x09\x09state = \x27hide\x27;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09each( toolbars, function( toolbar, i ) {\x0a\x09\x09\x09\x09if ( i \x3e 0 ) {\x0a\x09\x09\x09\x09\x09if ( state === \x27hide\x27 ) {\x0a\x09\x09\x09\x09\x09\x09toolbar.hide();\x0a\x09\x09\x09\x09\x09\x09pixels += 34;\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09toolbar.show();\x0a\x09\x09\x09\x09\x09\x09pixels -= 34;\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x0a\x09\x09// Resize editor iframe, not needed for iOS and inline instances.\x0a\x09\x09// Don\x27t resize if the editor is in a hidden container.\x0a\x09\x09if ( pixels && ! tinymce.Env.iOS && editor.iframeElement && editor.iframeElement.clientHeight ) {\x0a\x09\x09\x09iframeHeight = editor.iframeElement.clientHeight + pixels;\x0a\x0a\x09\x09\x09// Keep min-height.\x0a\x09\x09\x09if ( iframeHeight \x3e 50  ) {\x0a\x09\x09\x09\x09DOM.setStyle( editor.iframeElement, \x27height\x27, iframeHeight );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! initial ) {\x0a\x09\x09\x09if ( state === \x27hide\x27 ) {\x0a\x09\x09\x09\x09setUserSetting( \x27hidetb\x27, \x270\x27 );\x0a\x09\x09\x09\x09wpAdvButton && wpAdvButton.active( false );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09setUserSetting( \x27hidetb\x27, \x271\x27 );\x0a\x09\x09\x09\x09wpAdvButton && wpAdvButton.active( true );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09editor.fire( \x27wp-toolbar-toggle\x27 );\x0a\x09}\x0a\x0a\x09// Add the kitchen sink button :)\x0a\x09editor.addButton( \x27wp_adv\x27, {\x0a\x09\x09tooltip: \x27Toolbar Toggle\x27,\x0a\x09\x09cmd: \x27WP_Adv\x27,\x0a\x09\x09onPostRender: function() {\x0a\x09\x09\x09wpAdvButton = this;\x0a\x09\x09\x09wpAdvButton.active( getUserSetting( \x27hidetb\x27 ) === \x271\x27 );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09// Hide the toolbars after loading\x0a\x09editor.on( \x27PostRender\x27, function() {\x0a\x09\x09if ( editor.getParam( \x27wordpress_adv_hidden\x27, true ) && getUserSetting( \x27hidetb\x27, \x270\x27 ) === \x270\x27 ) {\x0a\x09\x09\x09toggleToolbars( \x27hide\x27 );\x0a\x09\x09} else {\x0a\x09\x09\x09tinymce.$( \x27.block-library-classic__toolbar\x27 ).addClass( \x27has-advanced-toolbar\x27 );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.addCommand( \x27WP_Adv\x27, function() {\x0a\x09\x09toggleToolbars();\x0a\x09});\x0a\x0a\x09editor.on( \x27focus\x27, function() {\x0a        window.wpActiveEditor = editor.id;\x0a    });\x0a\x0a\x09editor.on( \x27BeforeSetContent\x27, function( event ) {\x0a\x09\x09var title;\x0a\x0a\x09\x09if ( event.content ) {\x0a\x09\x09\x09if ( event.content.indexOf( \x27\x3c!--more\x27 ) !== -1 ) {\x0a\x09\x09\x09\x09title = __( \x27Read more...\x27 );\x0a\x0a\x09\x09\x09\x09event.content = event.content.replace( /\x3c!--more(.*?)--\x3e/g, function( match, moretext ) {\x0a\x09\x09\x09\x09\x09return \x27\x3cimg src=\x22\x27 + tinymce.Env.transparentSrc + \x27\x22 data-wp-more=\x22more\x22 data-wp-more-text=\x22\x27 + moretext + \x27\x22 \x27 +\x0a\x09\x09\x09\x09\x09\x09\x27class=\x22wp-more-tag mce-wp-more\x22 alt=\x22\x22 title=\x22\x27 + title + \x27\x22 data-mce-resize=\x22false\x22 data-mce-placeholder=\x221\x22 /\x3e\x27;\x0a\x09\x09\x09\x09});\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( event.content.indexOf( \x27\x3c!--nextpage--\x3e\x27 ) !== -1 ) {\x0a\x09\x09\x09\x09title = __( \x27Page break\x27 );\x0a\x0a\x09\x09\x09\x09event.content = event.content.replace( /\x3c!--nextpage--\x3e/g,\x0a\x09\x09\x09\x09\x09\x27\x3cimg src=\x22\x27 + tinymce.Env.transparentSrc + \x27\x22 data-wp-more=\x22nextpage\x22 class=\x22wp-more-tag mce-wp-nextpage\x22 \x27 +\x0a\x09\x09\x09\x09\x09\x09\x27alt=\x22\x22 title=\x22\x27 + title + \x27\x22 data-mce-resize=\x22false\x22 data-mce-placeholder=\x221\x22 /\x3e\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( event.load && event.format !== \x27raw\x27 ) {\x0a\x09\x09\x09\x09if ( hasWpautop ) {\x0a\x09\x09\x09\x09\x09event.content = wp.editor.autop( event.content );\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09// Prevent creation of paragraphs out of multiple HTML comments.\x0a\x09\x09\x09\x09\x09event.content = event.content.replace( /--\x3e\x5cs+\x3c!--/g, \x27--\x3e\x3c!--\x27 );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( event.content.indexOf( \x27\x3cscript\x27 ) !== -1 || event.content.indexOf( \x27\x3cstyle\x27 ) !== -1 ) {\x0a\x09\x09\x09\x09event.content = event.content.replace( /\x3c(script|style)[^\x3e]*\x3e[\x5cs\x5cS]*?\x3c\x5c/\x5c1\x3e/g, function( match, tag ) {\x0a\x09\x09\x09\x09\x09return \x27\x3cimg \x27 +\x0a\x09\x09\x09\x09\x09\x09\x27src=\x22\x27 + tinymce.Env.transparentSrc + \x27\x22 \x27 +\x0a\x09\x09\x09\x09\x09\x09\x27data-wp-preserve=\x22\x27 + encodeURIComponent( match ) + \x27\x22 \x27 +\x0a\x09\x09\x09\x09\x09\x09\x27data-mce-resize=\x22false\x22 \x27 +\x0a\x09\x09\x09\x09\x09\x09\x27data-mce-placeholder=\x221\x22 \x27+\x0a\x09\x09\x09\x09\x09\x09\x27class=\x22mce-object\x22 \x27 +\x0a\x09\x09\x09\x09\x09\x09\x27width=\x2220\x22 height=\x2220\x22 \x27+\x0a\x09\x09\x09\x09\x09\x09\x27alt=\x22&lt;\x27 + tag + \x27&gt;\x22 \x27 +\x0a\x09\x09\x09\x09\x09\x09\x27title=\x22&lt;\x27 + tag + \x27&gt;\x22 \x27 +\x0a\x09\x09\x09\x09\x09\x27/\x3e\x27;\x0a\x09\x09\x09\x09} );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27setcontent\x27, function() {\x0a\x09\x09// Remove spaces from empty paragraphs.\x0a\x09\x09editor.$( \x27p\x27 ).each( function( i, node ) {\x0a\x09\x09\x09if ( node.innerHTML && node.innerHTML.length \x3c 10 ) {\x0a\x09\x09\x09\x09var html = tinymce.trim( node.innerHTML );\x0a\x0a\x09\x09\x09\x09if ( ! html || html === \x27&nbsp;\x27 ) {\x0a\x09\x09\x09\x09\x09node.innerHTML = ( tinymce.Env.ie && tinymce.Env.ie \x3c 11 ) ? \x27\x27 : \x27\x3cbr data-mce-bogus=\x221\x22\x3e\x27;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x09});\x0a\x0a\x09editor.on( \x27PostProcess\x27, function( event ) {\x0a\x09\x09if ( event.get ) {\x0a\x09\x09\x09event.content = event.content.replace(/\x3cimg[^\x3e]+\x3e/g, function( image ) {\x0a\x09\x09\x09\x09var match,\x0a\x09\x09\x09\x09\x09string,\x0a\x09\x09\x09\x09\x09moretext = \x27\x27;\x0a\x0a\x09\x09\x09\x09if ( image.indexOf( \x27data-wp-more=\x22more\x22\x27 ) !== -1 ) {\x0a\x09\x09\x09\x09\x09if ( match = image.match( /data-wp-more-text=\x22([^\x22]+)\x22/ ) ) {\x0a\x09\x09\x09\x09\x09\x09moretext = match[1];\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09string = \x27\x3c!--more\x27 + moretext + \x27--\x3e\x27;\x0a\x09\x09\x09\x09} else if ( image.indexOf( \x27data-wp-more=\x22nextpage\x22\x27 ) !== -1 ) {\x0a\x09\x09\x09\x09\x09string = \x27\x3c!--nextpage--\x3e\x27;\x0a\x09\x09\x09\x09} else if ( image.indexOf( \x27data-wp-preserve\x27 ) !== -1 ) {\x0a\x09\x09\x09\x09\x09if ( match = image.match( / data-wp-preserve=\x22([^\x22]+)\x22/ ) ) {\x0a\x09\x09\x09\x09\x09\x09string = decodeURIComponent( match[1] );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09return string || image;\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09// Display the tag name instead of img in element path\x0a\x09editor.on( \x27ResolveName\x27, function( event ) {\x0a\x09\x09var attr;\x0a\x0a\x09\x09if ( event.target.nodeName === \x27IMG\x27 && ( attr = editor.dom.getAttrib( event.target, \x27data-wp-more\x27 ) ) ) {\x0a\x09\x09\x09event.name = attr;\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09// Register commands\x0a\x09editor.addCommand( \x27WP_More\x27, function( tag ) {\x0a\x09\x09var parent, html, title,\x0a\x09\x09\x09classname = \x27wp-more-tag\x27,\x0a\x09\x09\x09dom = editor.dom,\x0a\x09\x09\x09node = editor.selection.getNode(),\x0a\x09\x09\x09rootNode = editor.getBody();\x0a\x0a\x09\x09tag = tag || \x27more\x27;\x0a\x09\x09classname += \x27 mce-wp-\x27 + tag;\x0a\x09\x09title = tag === \x27more\x27 ? \x27Read more...\x27 : \x27Next page\x27;\x0a\x09\x09title = __( title );\x0a\x09\x09html = \x27\x3cimg src=\x22\x27 + tinymce.Env.transparentSrc + \x27\x22 alt=\x22\x22 title=\x22\x27 + title + \x27\x22 class=\x22\x27 + classname + \x27\x22 \x27 +\x0a\x09\x09\x09\x27data-wp-more=\x22\x27 + tag + \x27\x22 data-mce-resize=\x22false\x22 data-mce-placeholder=\x221\x22 /\x3e\x27;\x0a\x0a\x09\x09// Most common case\x0a\x09\x09if ( node === rootNode || ( node.nodeName === \x27P\x27 && node.parentNode === rootNode ) ) {\x0a\x09\x09\x09editor.insertContent( html );\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Get the top level parent node\x0a\x09\x09parent = dom.getParent( node, function( found ) {\x0a\x09\x09\x09if ( found.parentNode && found.parentNode === rootNode ) {\x0a\x09\x09\x09\x09return true;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return false;\x0a\x09\x09}, editor.getBody() );\x0a\x0a\x09\x09if ( parent ) {\x0a\x09\x09\x09if ( parent.nodeName === \x27P\x27 ) {\x0a\x09\x09\x09\x09parent.appendChild( dom.create( \x27p\x27, null, html ).firstChild );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09dom.insertAfter( dom.create( \x27p\x27, null, html ), parent );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09editor.nodeChanged();\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.addCommand( \x27WP_Code\x27, function() {\x0a\x09\x09editor.formatter.toggle(\x27code\x27);\x0a\x09});\x0a\x0a\x09editor.addCommand( \x27WP_Page\x27, function() {\x0a\x09\x09editor.execCommand( \x27WP_More\x27, \x27nextpage\x27 );\x0a\x09});\x0a\x0a\x09editor.addCommand( \x27WP_Help\x27, function() {\x0a\x09\x09var access = tinymce.Env.mac ? __( \x27Ctrl + Alt + letter:\x27 ) : __( \x27Shift + Alt + letter:\x27 ),\x0a\x09\x09\x09meta = tinymce.Env.mac ? __( \x27Cmd + letter:\x27 ) : __( \x27Ctrl + letter:\x27 ),\x0a\x09\x09\x09table1 = [],\x0a\x09\x09\x09table2 = [],\x0a\x09\x09\x09row1 = {},\x0a\x09\x09\x09row2 = {},\x0a\x09\x09\x09i1 = 0,\x0a\x09\x09\x09i2 = 0,\x0a\x09\x09\x09labels = editor.settings.wp_shortcut_labels,\x0a\x09\x09\x09header, html, dialog, $wrap;\x0a\x0a\x09\x09if ( ! labels ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09function tr( row, columns ) {\x0a\x09\x09\x09var out = \x27\x3ctr\x3e\x27;\x0a\x09\x09\x09var i = 0;\x0a\x0a\x09\x09\x09columns = columns || 1;\x0a\x0a\x09\x09\x09each( row, function( text, key ) {\x0a\x09\x09\x09\x09out += \x27\x3ctd\x3e\x3ckbd\x3e\x27 + key + \x27\x3c/kbd\x3e\x3c/td\x3e\x3ctd\x3e\x27 + __( text ) + \x27\x3c/td\x3e\x27;\x0a\x09\x09\x09\x09i++;\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09while ( i \x3c columns ) {\x0a\x09\x09\x09\x09out += \x27\x3ctd\x3e\x3c/td\x3e\x3ctd\x3e\x3c/td\x3e\x27;\x0a\x09\x09\x09\x09i++;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return out + \x27\x3c/tr\x3e\x27;\x0a\x09\x09}\x0a\x0a\x09\x09each ( labels, function( label, name ) {\x0a\x09\x09\x09var letter;\x0a\x0a\x09\x09\x09if ( label.indexOf( \x27meta\x27 ) !== -1 ) {\x0a\x09\x09\x09\x09i1++;\x0a\x09\x09\x09\x09letter = label.replace( \x27meta\x27, \x27\x27 ).toLowerCase();\x0a\x0a\x09\x09\x09\x09if ( letter ) {\x0a\x09\x09\x09\x09\x09row1[ letter ] = name;\x0a\x0a\x09\x09\x09\x09\x09if ( i1 % 2 === 0 ) {\x0a\x09\x09\x09\x09\x09\x09table1.push( tr( row1, 2 ) );\x0a\x09\x09\x09\x09\x09\x09row1 = {};\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} else if ( label.indexOf( \x27access\x27 ) !== -1 ) {\x0a\x09\x09\x09\x09i2++;\x0a\x09\x09\x09\x09letter = label.replace( \x27access\x27, \x27\x27 ).toLowerCase();\x0a\x0a\x09\x09\x09\x09if ( letter ) {\x0a\x09\x09\x09\x09\x09row2[ letter ] = name;\x0a\x0a\x09\x09\x09\x09\x09if ( i2 % 2 === 0 ) {\x0a\x09\x09\x09\x09\x09\x09table2.push( tr( row2, 2 ) );\x0a\x09\x09\x09\x09\x09\x09row2 = {};\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09// Add remaining single entries.\x0a\x09\x09if ( i1 % 2 \x3e 0 ) {\x0a\x09\x09\x09table1.push( tr( row1, 2 ) );\x0a\x09\x09}\x0a\x0a\x09\x09if ( i2 % 2 \x3e 0 ) {\x0a\x09\x09\x09table2.push( tr( row2, 2 ) );\x0a\x09\x09}\x0a\x0a\x09\x09header = [ __( \x27Letter\x27 ), __( \x27Action\x27 ), __( \x27Letter\x27 ), __( \x27Action\x27 ) ];\x0a\x09\x09header = \x27\x3ctr\x3e\x3cth\x3e\x27 + header.join( \x27\x3c/th\x3e\x3cth\x3e\x27 ) + \x27\x3c/th\x3e\x3c/tr\x3e\x27;\x0a\x0a\x09\x09html = \x27\x3cdiv class=\x22wp-editor-help\x22\x3e\x27;\x0a\x0a\x09\x09// Main section, default and additional shortcuts\x0a\x09\x09html = html +\x0a\x09\x09\x09\x27\x3ch2\x3e\x27 + __( \x27Default shortcuts,\x27 ) + \x27 \x27 + meta + \x27\x3c/h2\x3e\x27 +\x0a\x09\x09\x09\x27\x3ctable class=\x22wp-help-th-center fixed\x22\x3e\x27 +\x0a\x09\x09\x09\x09header +\x0a\x09\x09\x09\x09table1.join(\x27\x27) +\x0a\x09\x09\x09\x27\x3c/table\x3e\x27 +\x0a\x09\x09\x09\x27\x3ch2\x3e\x27 + __( \x27Additional shortcuts,\x27 ) + \x27 \x27 + access + \x27\x3c/h2\x3e\x27 +\x0a\x09\x09\x09\x27\x3ctable class=\x22wp-help-th-center fixed\x22\x3e\x27 +\x0a\x09\x09\x09\x09header +\x0a\x09\x09\x09\x09table2.join(\x27\x27) +\x0a\x09\x09\x09\x27\x3c/table\x3e\x27;\x0a\x0a\x09\x09if ( editor.plugins.wptextpattern && ( ! tinymce.Env.ie || tinymce.Env.ie \x3e 8 ) ) {\x0a\x09\x09\x09// Text pattern section\x0a\x09\x09\x09html = html +\x0a\x09\x09\x09\x09\x27\x3ch2\x3e\x27 + __( \x27When starting a new paragraph with one of these formatting shortcuts followed by a space, the formatting will be applied automatically. Press Backspace or Escape to undo.\x27 ) + \x27\x3c/h2\x3e\x27 +\x0a\x09\x09\x09\x09\x27\x3ctable class=\x22wp-help-th-center fixed\x22\x3e\x27 +\x0a\x09\x09\x09\x09\x09tr({ \x27*\x27:  \x27Bullet list\x27, \x271.\x27:  \x27Numbered list\x27 }) +\x0a\x09\x09\x09\x09\x09tr({ \x27-\x27:  \x27Bullet list\x27, \x271)\x27:  \x27Numbered list\x27 }) +\x0a\x09\x09\x09\x09\x27\x3c/table\x3e\x27;\x0a\x0a\x09\x09\x09html = html +\x0a\x09\x09\x09\x09\x27\x3ch2\x3e\x27 + __( \x27The following formatting shortcuts are replaced when pressing Enter. Press Escape or the Undo button to undo.\x27 ) + \x27\x3c/h2\x3e\x27 +\x0a\x09\x09\x09\x09\x27\x3ctable class=\x22wp-help-single\x22\x3e\x27 +\x0a\x09\x09\x09\x09\x09tr({ \x27\x3e\x27: \x27Blockquote\x27 }) +\x0a\x09\x09\x09\x09\x09tr({ \x27##\x27: \x27Heading 2\x27 }) +\x0a\x09\x09\x09\x09\x09tr({ \x27###\x27: \x27Heading 3\x27 }) +\x0a\x09\x09\x09\x09\x09tr({ \x27####\x27: \x27Heading 4\x27 }) +\x0a\x09\x09\x09\x09\x09tr({ \x27#####\x27: \x27Heading 5\x27 }) +\x0a\x09\x09\x09\x09\x09tr({ \x27######\x27: \x27Heading 6\x27 }) +\x0a\x09\x09\x09\x09\x09tr({ \x27---\x27: \x27Horizontal line\x27 }) +\x0a\x09\x09\x09\x09\x27\x3c/table\x3e\x27;\x0a\x09\x09}\x0a\x0a\x09\x09// Focus management section\x0a\x09\x09html = html +\x0a\x09\x09\x09\x27\x3ch2\x3e\x27 + __( \x27Focus shortcuts:\x27 ) + \x27\x3c/h2\x3e\x27 +\x0a\x09\x09\x09\x27\x3ctable class=\x22wp-help-single\x22\x3e\x27 +\x0a\x09\x09\x09\x09tr({ \x27Alt + F8\x27:  \x27Inline toolbar (when an image, link or preview is selected)\x27 }) +\x0a\x09\x09\x09\x09tr({ \x27Alt + F9\x27:  \x27Editor menu (when enabled)\x27 }) +\x0a\x09\x09\x09\x09tr({ \x27Alt + F10\x27: \x27Editor toolbar\x27 }) +\x0a\x09\x09\x09\x09tr({ \x27Alt + F11\x27: \x27Elements path\x27 }) +\x0a\x09\x09\x09\x27\x3c/table\x3e\x27 +\x0a\x09\x09\x09\x27\x3cp\x3e\x27 + __( \x27To move focus to other buttons use Tab or the arrow keys. To return focus to the editor press Escape or use one of the buttons.\x27 ) + \x27\x3c/p\x3e\x27;\x0a\x0a\x09\x09html += \x27\x3c/div\x3e\x27;\x0a\x0a\x09\x09dialog = editor.windowManager.open( {\x0a\x09\x09\x09title: editor.settings.classic_block_editor ? \x27Classic Block Keyboard Shortcuts\x27 : \x27Keyboard Shortcuts\x27,\x0a\x09\x09\x09items: {\x0a\x09\x09\x09\x09type: \x27container\x27,\x0a\x09\x09\x09\x09classes: \x27wp-help\x27,\x0a\x09\x09\x09\x09html: html\x0a\x09\x09\x09},\x0a\x09\x09\x09buttons: {\x0a\x09\x09\x09\x09text: \x27Close\x27,\x0a\x09\x09\x09\x09onclick: \x27close\x27\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09if ( dialog.$el ) {\x0a\x09\x09\x09dialog.$el.find( \x27div[role=\x22application\x22]\x27 ).attr( \x27role\x27, \x27document\x27 );\x0a\x09\x09\x09$wrap = dialog.$el.find( \x27.mce-wp-help\x27 );\x0a\x0a\x09\x09\x09if ( $wrap[0] ) {\x0a\x09\x09\x09\x09$wrap.attr( \x27tabindex\x27, \x270\x27 );\x0a\x09\x09\x09\x09$wrap[0].focus();\x0a\x09\x09\x09\x09$wrap.on( \x27keydown\x27, function( event ) {\x0a\x09\x09\x09\x09\x09// Prevent use of: page up, page down, end, home, left arrow, up arrow, right arrow, down arrow\x0a\x09\x09\x09\x09\x09// in the dialog keydown handler.\x0a\x09\x09\x09\x09\x09if ( event.keyCode \x3e= 33 && event.keyCode \x3c= 40 ) {\x0a\x09\x09\x09\x09\x09\x09event.stopPropagation();\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09});\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09} );\x0a\x0a\x09editor.addCommand( \x27WP_Medialib\x27, function() {\x0a\x09\x09if ( wp && wp.media && wp.media.editor ) {\x0a\x09\x09\x09wp.media.editor.open( editor.id );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09// Register buttons\x0a\x09editor.addButton( \x27wp_more\x27, {\x0a\x09\x09tooltip: \x27Insert Read More tag\x27,\x0a\x09\x09onclick: function() {\x0a\x09\x09\x09editor.execCommand( \x27WP_More\x27, \x27more\x27 );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.addButton( \x27wp_page\x27, {\x0a\x09\x09tooltip: \x27Page break\x27,\x0a\x09\x09onclick: function() {\x0a\x09\x09\x09editor.execCommand( \x27WP_More\x27, \x27nextpage\x27 );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.addButton( \x27wp_help\x27, {\x0a\x09\x09tooltip: \x27Keyboard Shortcuts\x27,\x0a\x09\x09cmd: \x27WP_Help\x27\x0a\x09});\x0a\x0a\x09editor.addButton( \x27wp_code\x27, {\x0a\x09\x09tooltip: \x27Code\x27,\x0a\x09\x09cmd: \x27WP_Code\x27,\x0a\x09\x09stateSelector: \x27code\x27\x0a\x09});\x0a\x0a\x09// Insert-\x3eAdd Media\x0a\x09if ( wp && wp.media && wp.media.editor ) {\x0a\x09\x09editor.addButton( \x27wp_add_media\x27, {\x0a\x09\x09\x09tooltip: \x27Add Media\x27,\x0a\x09\x09\x09icon: \x27dashicon dashicons-admin-media\x27,\x0a\x09\x09\x09cmd: \x27WP_Medialib\x27\x0a\x09\x09} );\x0a\x0a\x09\x09editor.addMenuItem( \x27add_media\x27, {\x0a\x09\x09\x09text: \x27Add Media\x27,\x0a\x09\x09\x09icon: \x27wp-media-library\x27,\x0a\x09\x09\x09context: \x27insert\x27,\x0a\x09\x09\x09cmd: \x27WP_Medialib\x27\x0a\x09\x09});\x0a\x09}\x0a\x0a\x09// Insert \x22Read More...\x22\x0a\x09editor.addMenuItem( \x27wp_more\x27, {\x0a\x09\x09text: \x27Insert Read More tag\x27,\x0a\x09\x09icon: \x27wp_more\x27,\x0a\x09\x09context: \x27insert\x27,\x0a\x09\x09onclick: function() {\x0a\x09\x09\x09editor.execCommand( \x27WP_More\x27, \x27more\x27 );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09// Insert \x22Next Page\x22\x0a\x09editor.addMenuItem( \x27wp_page\x27, {\x0a\x09\x09text: \x27Page break\x27,\x0a\x09\x09icon: \x27wp_page\x27,\x0a\x09\x09context: \x27insert\x27,\x0a\x09\x09onclick: function() {\x0a\x09\x09\x09editor.execCommand( \x27WP_More\x27, \x27nextpage\x27 );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27BeforeExecCommand\x27, function(e) {\x0a\x09\x09if ( tinymce.Env.webkit && ( e.command === \x27InsertUnorderedList\x27 || e.command === \x27InsertOrderedList\x27 ) ) {\x0a\x09\x09\x09if ( ! style ) {\x0a\x09\x09\x09\x09style = editor.dom.create( \x27style\x27, {\x27type\x27: \x27text/css\x27},\x0a\x09\x09\x09\x09\x09\x27#tinymce,#tinymce span,#tinymce li,#tinymce li\x3espan,#tinymce p,#tinymce p\x3espan{font:medium sans-serif;color:#000;line-height:normal;}\x27);\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09editor.getDoc().head.appendChild( style );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27ExecCommand\x27, function( e ) {\x0a\x09\x09if ( tinymce.Env.webkit && style &&\x0a\x09\x09\x09( \x27InsertUnorderedList\x27 === e.command || \x27InsertOrderedList\x27 === e.command ) ) {\x0a\x0a\x09\x09\x09editor.dom.remove( style );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27init\x27, function() {\x0a\x09\x09var env = tinymce.Env,\x0a\x09\x09\x09bodyClass = [\x27mceContentBody\x27], // back-compat for themes that use this in editor-style.css...\x0a\x09\x09\x09doc = editor.getDoc(),\x0a\x09\x09\x09dom = editor.dom;\x0a\x0a\x09\x09if ( env.iOS ) {\x0a\x09\x09\x09dom.addClass( doc.documentElement, \x27ios\x27 );\x0a\x09\x09}\x0a\x0a\x09\x09if ( editor.getParam( \x27directionality\x27 ) === \x27rtl\x27 ) {\x0a\x09\x09\x09bodyClass.push(\x27rtl\x27);\x0a\x09\x09\x09dom.setAttrib( doc.documentElement, \x27dir\x27, \x27rtl\x27 );\x0a\x09\x09}\x0a\x0a\x09\x09dom.setAttrib( doc.documentElement, \x27lang\x27, editor.getParam( \x27wp_lang_attr\x27 ) );\x0a\x0a\x09\x09if ( env.ie ) {\x0a\x09\x09\x09if ( parseInt( env.ie, 10 ) === 9 ) {\x0a\x09\x09\x09\x09bodyClass.push(\x27ie9\x27);\x0a\x09\x09\x09} else if ( parseInt( env.ie, 10 ) === 8 ) {\x0a\x09\x09\x09\x09bodyClass.push(\x27ie8\x27);\x0a\x09\x09\x09} else if ( env.ie \x3c 8 ) {\x0a\x09\x09\x09\x09bodyClass.push(\x27ie7\x27);\x0a\x09\x09\x09}\x0a\x09\x09} else if ( env.webkit ) {\x0a\x09\x09\x09bodyClass.push(\x27webkit\x27);\x0a\x09\x09}\x0a\x0a\x09\x09bodyClass.push(\x27wp-editor\x27);\x0a\x0a\x09\x09each( bodyClass, function( cls ) {\x0a\x09\x09\x09if ( cls ) {\x0a\x09\x09\x09\x09dom.addClass( doc.body, cls );\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x0a\x09\x09// Remove invalid parent paragraphs when inserting HTML\x0a\x09\x09editor.on( \x27BeforeSetContent\x27, function( event ) {\x0a\x09\x09\x09if ( event.content ) {\x0a\x09\x09\x09\x09event.content = event.content.replace( /\x3cp\x3e\x5cs*\x3c(p|div|ul|ol|dl|table|blockquote|h[1-6]|fieldset|pre)( [^\x3e]*)?\x3e/gi, \x27\x3c$1$2\x3e\x27 )\x0a\x09\x09\x09\x09\x09.replace( /\x3c\x5c/(p|div|ul|ol|dl|table|blockquote|h[1-6]|fieldset|pre)\x3e\x5cs*\x3c\x5c/p\x3e/gi, \x27\x3c/$1\x3e\x27 );\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x0a\x09\x09if ( $ ) {\x0a\x09\x09\x09$( document ).triggerHandler( \x27tinymce-editor-init\x27, [editor] );\x0a\x09\x09}\x0a\x0a\x09\x09if ( window.tinyMCEPreInit && window.tinyMCEPreInit.dragDropUpload ) {\x0a\x09\x09\x09dom.bind( doc, \x27dragstart dragend dragover drop\x27, function( event ) {\x0a\x09\x09\x09\x09if ( $ ) {\x0a\x09\x09\x09\x09\x09// Trigger the jQuery handlers.\x0a\x09\x09\x09\x09\x09$( document ).trigger( new $.Event( event ) );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x0a\x09\x09if ( editor.getParam( \x27wp_paste_filters\x27, true ) ) {\x0a\x09\x09\x09editor.on( \x27PastePreProcess\x27, function( event ) {\x0a\x09\x09\x09\x09// Remove trailing \x3cbr\x3e added by WebKit browsers to the clipboard\x0a\x09\x09\x09\x09event.content = event.content.replace( /\x3cbr class=\x22?Apple-interchange-newline\x22?\x3e/gi, \x27\x27 );\x0a\x0a\x09\x09\x09\x09// In WebKit this is handled by removeWebKitStyles()\x0a\x09\x09\x09\x09if ( ! tinymce.Env.webkit ) {\x0a\x09\x09\x09\x09\x09// Remove all inline styles\x0a\x09\x09\x09\x09\x09event.content = event.content.replace( /(\x3c[^\x3e]+) style=\x22[^\x22]*\x22([^\x3e]*\x3e)/gi, \x27$1$2\x27 );\x0a\x0a\x09\x09\x09\x09\x09// Put back the internal styles\x0a\x09\x09\x09\x09\x09event.content = event.content.replace(/(\x3c[^\x3e]+) data-mce-style=([^\x3e]+\x3e)/gi, \x27$1 style=$2\x27 );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09editor.on( \x27PastePostProcess\x27, function( event ) {\x0a\x09\x09\x09\x09// Remove empty paragraphs\x0a\x09\x09\x09\x09editor.$( \x27p\x27, event.node ).each( function( i, node ) {\x0a\x09\x09\x09\x09\x09if ( dom.isEmpty( node ) ) {\x0a\x09\x09\x09\x09\x09\x09dom.remove( node );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09});\x0a\x0a\x09\x09\x09\x09if ( tinymce.isIE ) {\x0a\x09\x09\x09\x09\x09editor.$( \x27a\x27, event.node ).find( \x27font, u\x27 ).each( function( i, node ) {\x0a\x09\x09\x09\x09\x09\x09dom.remove( node, true );\x0a\x09\x09\x09\x09\x09});\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27SaveContent\x27, function( event ) {\x0a\x09\x09// If editor is hidden, we just want the textarea\x27s value to be saved\x0a\x09\x09if ( ! editor.inline && editor.isHidden() ) {\x0a\x09\x09\x09event.content = event.element.value;\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Keep empty paragraphs :(\x0a\x09\x09event.content = event.content.replace( /\x3cp\x3e(?:\x3cbr ?\x5c/?\x3e|\x5cu00a0|\x5cuFEFF| )*\x3c\x5c/p\x3e/g, \x27\x3cp\x3e&nbsp;\x3c/p\x3e\x27 );\x0a\x0a\x09\x09if ( hasWpautop ) {\x0a\x09\x09\x09event.content = wp.editor.removep( event.content );\x0a\x09\x09} else {\x0a\x09\x09\x09// Restore formatting of block boundaries.\x0a\x09\x09\x09event.content = event.content.replace( /--\x3e\x5cs*\x3c!-- wp:/g, \x27--\x3e\x5cn\x5cn\x3c!-- wp:\x27 );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27preInit\x27, function() {\x0a\x09\x09var validElementsSetting = \x27@[id|accesskey|class|dir|lang|style|tabindex|\x27 +\x0a\x09\x09\x09\x27title|contenteditable|draggable|dropzone|hidden|spellcheck|translate],\x27 + // Global attributes.\x0a\x09\x09\x09\x27i,\x27 + // Don\x27t replace \x3ci\x3e with \x3cem\x3e and \x3cb\x3e with \x3cstrong\x3e and don\x27t remove them when empty.\x0a\x09\x09\x09\x27b,\x27 +\x0a\x09\x09\x09\x27script[src|async|defer|type|charset|crossorigin|integrity]\x27; // Add support for \x3cscript\x3e.\x0a\x0a\x09\x09editor.schema.addValidElements( validElementsSetting );\x0a\x0a\x09\x09if ( tinymce.Env.iOS ) {\x0a\x09\x09\x09editor.settings.height = 300;\x0a\x09\x09}\x0a\x0a\x09\x09each( {\x0a\x09\x09\x09c: \x27JustifyCenter\x27,\x0a\x09\x09\x09r: \x27JustifyRight\x27,\x0a\x09\x09\x09l: \x27JustifyLeft\x27,\x0a\x09\x09\x09j: \x27JustifyFull\x27,\x0a\x09\x09\x09q: \x27mceBlockQuote\x27,\x0a\x09\x09\x09u: \x27InsertUnorderedList\x27,\x0a\x09\x09\x09o: \x27InsertOrderedList\x27,\x0a\x09\x09\x09m: \x27WP_Medialib\x27,\x0a\x09\x09\x09t: \x27WP_More\x27,\x0a\x09\x09\x09d: \x27Strikethrough\x27,\x0a\x09\x09\x09p: \x27WP_Page\x27,\x0a\x09\x09\x09x: \x27WP_Code\x27\x0a\x09\x09}, function( command, key ) {\x0a\x09\x09\x09editor.shortcuts.add( \x27access+\x27 + key, \x27\x27, command );\x0a\x09\x09} );\x0a\x0a\x09\x09editor.addShortcut( \x27meta+s\x27, \x27\x27, function() {\x0a\x09\x09\x09if ( wp && wp.autosave ) {\x0a\x09\x09\x09\x09wp.autosave.server.triggerSave();\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09// Alt+Shift+Z removes a block in the Block Editor, don\x27t add it to the Classic Block.\x0a\x09\x09if ( ! editor.settings.classic_block_editor ) {\x0a\x09\x09\x09editor.addShortcut( \x27access+z\x27, \x27\x27, \x27WP_Adv\x27 );\x0a\x09\x09}\x0a\x0a\x09\x09// Workaround for not triggering the global help modal in the Block Editor by the Classic Block shortcut.\x0a\x09\x09editor.on( \x27keydown\x27, function( event ) {\x0a\x09\x09\x09var match;\x0a\x0a\x09\x09\x09if ( tinymce.Env.mac ) {\x0a\x09\x09\x09\x09match = event.ctrlKey && event.altKey && event.code === \x27KeyH\x27;\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09match = event.shiftKey && event.altKey && event.code === \x27KeyH\x27;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( match ) {\x0a\x09\x09\x09\x09editor.execCommand( \x27WP_Help\x27 );\x0a\x09\x09\x09\x09event.stopPropagation();\x0a\x09\x09\x09\x09event.stopImmediatePropagation();\x0a\x09\x09\x09\x09return false;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return true;\x0a\x09\x09});\x0a\x0a\x09\x09if ( window.getUserSetting( \x27editor_plain_text_paste_warning\x27 ) \x3e 1 ) {\x0a\x09\x09\x09editor.settings.paste_plaintext_inform = false;\x0a\x09\x09}\x0a\x0a\x09\x09// Change the editor iframe title on MacOS, add the correct help shortcut.\x0a\x09\x09if ( tinymce.Env.mac ) {\x0a\x09\x09\x09tinymce.$( editor.iframeElement ).attr( \x27title\x27, __( \x27Rich Text Area. Press Control-Option-H for help.\x27 ) );\x0a\x09\x09}\x0a\x09} );\x0a\x0a\x09editor.on( \x27PastePlainTextToggle\x27, function( event ) {\x0a\x09\x09// Warn twice, then stop.\x0a\x09\x09if ( event.state === true ) {\x0a\x09\x09\x09var times = parseInt( window.getUserSetting( \x27editor_plain_text_paste_warning\x27 ), 10 ) || 0;\x0a\x0a\x09\x09\x09if ( times \x3c 2 ) {\x0a\x09\x09\x09\x09window.setUserSetting( \x27editor_plain_text_paste_warning\x27, ++times );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27beforerenderui\x27, function() {\x0a\x09\x09if ( editor.theme.panel ) {\x0a\x09\x09\x09each( [ \x27button\x27, \x27colorbutton\x27, \x27splitbutton\x27 ], function( buttonType ) {\x0a\x09\x09\x09\x09replaceButtonsTooltips( editor.theme.panel.find( buttonType ) );\x0a\x09\x09\x09} );\x0a\x0a\x09\x09\x09addShortcutsToListbox();\x0a\x09\x09}\x0a\x09} );\x0a\x0a\x09function prepareTooltips() {\x0a\x09\x09var access = \x27Shift+Alt+\x27;\x0a\x09\x09var meta = \x27Ctrl+\x27;\x0a\x0a\x09\x09wpTooltips = {};\x0a\x0a\x09\x09// For MacOS: ctrl = \x5cu2303, cmd = \x5cu2318, alt = \x5cu2325\x0a\x09\x09if ( tinymce.Env.mac ) {\x0a\x09\x09\x09access = \x27\x5cu2303\x5cu2325\x27;\x0a\x09\x09\x09meta = \x27\x5cu2318\x27;\x0a\x09\x09}\x0a\x0a\x09\x09// Some tooltips are translated, others are not...\x0a\x09\x09if ( editor.settings.wp_shortcut_labels ) {\x0a\x09\x09\x09each( editor.settings.wp_shortcut_labels, function( value, tooltip ) {\x0a\x09\x09\x09\x09var translated = editor.translate( tooltip );\x0a\x0a\x09\x09\x09\x09value = value.replace( \x27access\x27, access ).replace( \x27meta\x27, meta );\x0a\x09\x09\x09\x09wpTooltips[ tooltip ] = value;\x0a\x0a\x09\x09\x09\x09// Add the translated so we can match all of them.\x0a\x09\x09\x09\x09if ( tooltip !== translated ) {\x0a\x09\x09\x09\x09\x09wpTooltips[ translated ] = value;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} );\x0a\x09\x09}\x0a\x09}\x0a\x0a\x09function getTooltip( tooltip ) {\x0a\x09\x09var translated = editor.translate( tooltip );\x0a\x09\x09var label;\x0a\x0a\x09\x09if ( ! wpTooltips ) {\x0a\x09\x09\x09prepareTooltips();\x0a\x09\x09}\x0a\x0a\x09\x09if ( wpTooltips.hasOwnProperty( translated ) ) {\x0a\x09\x09\x09label = wpTooltips[ translated ];\x0a\x09\x09} else if ( wpTooltips.hasOwnProperty( tooltip ) ) {\x0a\x09\x09\x09label = wpTooltips[ tooltip ];\x0a\x09\x09}\x0a\x0a\x09\x09return label ? translated + \x27 (\x27 + label + \x27)\x27 : translated;\x0a\x09}\x0a\x0a\x09function replaceButtonsTooltips( buttons ) {\x0a\x0a\x09\x09if ( ! buttons ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09each( buttons, function( button ) {\x0a\x09\x09\x09var tooltip;\x0a\x0a\x09\x09\x09if ( button && button.settings.tooltip ) {\x0a\x09\x09\x09\x09tooltip = getTooltip( button.settings.tooltip );\x0a\x09\x09\x09\x09button.settings.tooltip = tooltip;\x0a\x0a\x09\x09\x09\x09// Override the aria label wiht the translated tooltip + shortcut.\x0a\x09\x09\x09\x09if ( button._aria && button._aria.label ) {\x0a\x09\x09\x09\x09\x09button._aria.label = tooltip;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x09}\x0a\x0a\x09function addShortcutsToListbox() {\x0a\x09\x09// listbox for the \x22blocks\x22 drop-down\x0a\x09\x09each( editor.theme.panel.find( \x27listbox\x27 ), function( listbox ) {\x0a\x09\x09\x09if ( listbox && listbox.settings.text === \x27Paragraph\x27 ) {\x0a\x09\x09\x09\x09each( listbox.settings.values, function( item ) {\x0a\x09\x09\x09\x09\x09if ( item.text && wpTooltips.hasOwnProperty( item.text ) ) {\x0a\x09\x09\x09\x09\x09\x09item.shortcut = \x27(\x27 + wpTooltips[ item.text ] + \x27)\x27;\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09} );\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Experimental: create a floating toolbar.\x0a\x09 * This functionality will change in the next releases. Not recommended for use by plugins.\x0a\x09 */\x0a\x09editor.on( \x27preinit\x27, function() {\x0a\x09\x09var Factory = tinymce.ui.Factory,\x0a\x09\x09\x09settings = editor.settings,\x0a\x09\x09\x09activeToolbar,\x0a\x09\x09\x09currentSelection,\x0a\x09\x09\x09timeout,\x0a\x09\x09\x09container = editor.getContainer(),\x0a\x09\x09\x09wpAdminbar = document.getElementById( \x27wpadminbar\x27 ),\x0a\x09\x09\x09mceIframe = document.getElementById( editor.id + \x27_ifr\x27 ),\x0a\x09\x09\x09mceToolbar,\x0a\x09\x09\x09mceStatusbar,\x0a\x09\x09\x09wpStatusbar,\x0a\x09\x09\x09isChromeRtl = ( editor.rtl && /Chrome/.test( navigator.userAgent ) );\x0a\x0a\x09\x09\x09if ( container ) {\x0a\x09\x09\x09\x09mceToolbar = tinymce.$( \x27.mce-toolbar-grp\x27, container )[0];\x0a\x09\x09\x09\x09mceStatusbar = tinymce.$( \x27.mce-statusbar\x27, container )[0];\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( editor.id === \x27content\x27 ) {\x0a\x09\x09\x09\x09wpStatusbar = document.getElementById( \x27post-status-info\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09function create( buttons, bottom ) {\x0a\x09\x09\x09var toolbar,\x0a\x09\x09\x09\x09toolbarItems = [],\x0a\x09\x09\x09\x09buttonGroup;\x0a\x0a\x09\x09\x09each( buttons, function( item ) {\x0a\x09\x09\x09\x09var itemName;\x0a\x09\x09\x09\x09var tooltip;\x0a\x0a\x09\x09\x09\x09function bindSelectorChanged() {\x0a\x09\x09\x09\x09\x09var selection = editor.selection;\x0a\x0a\x09\x09\x09\x09\x09if ( itemName === \x27bullist\x27 ) {\x0a\x09\x09\x09\x09\x09\x09selection.selectorChanged( \x27ul \x3e li\x27, function( state, args ) {\x0a\x09\x09\x09\x09\x09\x09\x09var i = args.parents.length,\x0a\x09\x09\x09\x09\x09\x09\x09\x09nodeName;\x0a\x0a\x09\x09\x09\x09\x09\x09\x09while ( i-- ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09nodeName = args.parents[ i ].nodeName;\x0a\x0a\x09\x09\x09\x09\x09\x09\x09\x09if ( nodeName === \x27OL\x27 || nodeName == \x27UL\x27 ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09\x09item.active( state && nodeName === \x27UL\x27 );\x0a\x09\x09\x09\x09\x09\x09} );\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09if ( itemName === \x27numlist\x27 ) {\x0a\x09\x09\x09\x09\x09\x09selection.selectorChanged( \x27ol \x3e li\x27, function( state, args ) {\x0a\x09\x09\x09\x09\x09\x09\x09var i = args.parents.length,\x0a\x09\x09\x09\x09\x09\x09\x09\x09nodeName;\x0a\x0a\x09\x09\x09\x09\x09\x09\x09while ( i-- ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09nodeName = args.parents[ i ].nodeName;\x0a\x0a\x09\x09\x09\x09\x09\x09\x09\x09if ( nodeName === \x27OL\x27 || nodeName === \x27UL\x27 ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09\x09item.active( state && nodeName === \x27OL\x27 );\x0a\x09\x09\x09\x09\x09\x09} );\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09if ( item.settings.stateSelector ) {\x0a\x09\x09\x09\x09\x09\x09selection.selectorChanged( item.settings.stateSelector, function( state ) {\x0a\x09\x09\x09\x09\x09\x09\x09item.active( state );\x0a\x09\x09\x09\x09\x09\x09}, true );\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09if ( item.settings.disabledStateSelector ) {\x0a\x09\x09\x09\x09\x09\x09selection.selectorChanged( item.settings.disabledStateSelector, function( state ) {\x0a\x09\x09\x09\x09\x09\x09\x09item.disabled( state );\x0a\x09\x09\x09\x09\x09\x09} );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09if ( item === \x27|\x27 ) {\x0a\x09\x09\x09\x09\x09buttonGroup = null;\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09if ( Factory.has( item ) ) {\x0a\x09\x09\x09\x09\x09\x09item = {\x0a\x09\x09\x09\x09\x09\x09\x09type: item\x0a\x09\x09\x09\x09\x09\x09};\x0a\x0a\x09\x09\x09\x09\x09\x09if ( settings.toolbar_items_size ) {\x0a\x09\x09\x09\x09\x09\x09\x09item.size = settings.toolbar_items_size;\x0a\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09toolbarItems.push( item );\x0a\x0a\x09\x09\x09\x09\x09\x09buttonGroup = null;\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09if ( ! buttonGroup ) {\x0a\x09\x09\x09\x09\x09\x09\x09buttonGroup = {\x0a\x09\x09\x09\x09\x09\x09\x09\x09type: \x27buttongroup\x27,\x0a\x09\x09\x09\x09\x09\x09\x09\x09items: []\x0a\x09\x09\x09\x09\x09\x09\x09};\x0a\x0a\x09\x09\x09\x09\x09\x09\x09toolbarItems.push( buttonGroup );\x0a\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09if ( editor.buttons[ item ] ) {\x0a\x09\x09\x09\x09\x09\x09\x09itemName = item;\x0a\x09\x09\x09\x09\x09\x09\x09item = editor.buttons[ itemName ];\x0a\x0a\x09\x09\x09\x09\x09\x09\x09if ( typeof item === \x27function\x27 ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09item = item();\x0a\x09\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09\x09item.type = item.type || \x27button\x27;\x0a\x0a\x09\x09\x09\x09\x09\x09\x09if ( settings.toolbar_items_size ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09item.size = settings.toolbar_items_size;\x0a\x09\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09\x09tooltip = item.tooltip || item.title;\x0a\x0a\x09\x09\x09\x09\x09\x09\x09if ( tooltip ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09item.tooltip = getTooltip( tooltip );\x0a\x09\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09\x09item = Factory.create( item );\x0a\x0a\x09\x09\x09\x09\x09\x09\x09buttonGroup.items.push( item );\x0a\x0a\x09\x09\x09\x09\x09\x09\x09if ( editor.initialized ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09bindSelectorChanged();\x0a\x09\x09\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09\x09\x09editor.on( \x27init\x27, bindSelectorChanged );\x0a\x09\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} );\x0a\x0a\x09\x09\x09toolbar = Factory.create( {\x0a\x09\x09\x09\x09type: \x27panel\x27,\x0a\x09\x09\x09\x09layout: \x27stack\x27,\x0a\x09\x09\x09\x09classes: \x27toolbar-grp inline-toolbar-grp\x27,\x0a\x09\x09\x09\x09ariaRoot: true,\x0a\x09\x09\x09\x09ariaRemember: true,\x0a\x09\x09\x09\x09items: [ {\x0a\x09\x09\x09\x09\x09type: \x27toolbar\x27,\x0a\x09\x09\x09\x09\x09layout: \x27flow\x27,\x0a\x09\x09\x09\x09\x09items: toolbarItems\x0a\x09\x09\x09\x09} ]\x0a\x09\x09\x09} );\x0a\x0a\x09\x09\x09toolbar.bottom = bottom;\x0a\x0a\x09\x09\x09function reposition() {\x0a\x09\x09\x09\x09if ( ! currentSelection ) {\x0a\x09\x09\x09\x09\x09return this;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09var scrollX = window.pageXOffset || document.documentElement.scrollLeft,\x0a\x09\x09\x09\x09\x09scrollY = window.pageYOffset || document.documentElement.scrollTop,\x0a\x09\x09\x09\x09\x09windowWidth = window.innerWidth,\x0a\x09\x09\x09\x09\x09windowHeight = window.innerHeight,\x0a\x09\x09\x09\x09\x09iframeRect = mceIframe ? mceIframe.getBoundingClientRect() : {\x0a\x09\x09\x09\x09\x09\x09top: 0,\x0a\x09\x09\x09\x09\x09\x09right: windowWidth,\x0a\x09\x09\x09\x09\x09\x09bottom: windowHeight,\x0a\x09\x09\x09\x09\x09\x09left: 0,\x0a\x09\x09\x09\x09\x09\x09width: windowWidth,\x0a\x09\x09\x09\x09\x09\x09height: windowHeight\x0a\x09\x09\x09\x09\x09},\x0a\x09\x09\x09\x09\x09toolbar = this.getEl(),\x0a\x09\x09\x09\x09\x09toolbarWidth = toolbar.offsetWidth,\x0a\x09\x09\x09\x09\x09toolbarHeight = toolbar.clientHeight,\x0a\x09\x09\x09\x09\x09selection = currentSelection.getBoundingClientRect(),\x0a\x09\x09\x09\x09\x09selectionMiddle = ( selection.left + selection.right ) / 2,\x0a\x09\x09\x09\x09\x09buffer = 5,\x0a\x09\x09\x09\x09\x09spaceNeeded = toolbarHeight + buffer,\x0a\x09\x09\x09\x09\x09wpAdminbarBottom = wpAdminbar ? wpAdminbar.getBoundingClientRect().bottom : 0,\x0a\x09\x09\x09\x09\x09mceToolbarBottom = mceToolbar ? mceToolbar.getBoundingClientRect().bottom : 0,\x0a\x09\x09\x09\x09\x09mceStatusbarTop = mceStatusbar ? windowHeight - mceStatusbar.getBoundingClientRect().top : 0,\x0a\x09\x09\x09\x09\x09wpStatusbarTop = wpStatusbar ? windowHeight - wpStatusbar.getBoundingClientRect().top : 0,\x0a\x09\x09\x09\x09\x09blockedTop = Math.max( 0, wpAdminbarBottom, mceToolbarBottom, iframeRect.top ),\x0a\x09\x09\x09\x09\x09blockedBottom = Math.max( 0, mceStatusbarTop, wpStatusbarTop, windowHeight - iframeRect.bottom ),\x0a\x09\x09\x09\x09\x09spaceTop = selection.top + iframeRect.top - blockedTop,\x0a\x09\x09\x09\x09\x09spaceBottom = windowHeight - iframeRect.top - selection.bottom - blockedBottom,\x0a\x09\x09\x09\x09\x09editorHeight = windowHeight - blockedTop - blockedBottom,\x0a\x09\x09\x09\x09\x09className = \x27\x27,\x0a\x09\x09\x09\x09\x09iosOffsetTop = 0,\x0a\x09\x09\x09\x09\x09iosOffsetBottom = 0,\x0a\x09\x09\x09\x09\x09top, left;\x0a\x0a\x09\x09\x09\x09if ( spaceTop \x3e= editorHeight || spaceBottom \x3e= editorHeight ) {\x0a\x09\x09\x09\x09\x09this.scrolling = true;\x0a\x09\x09\x09\x09\x09this.hide();\x0a\x09\x09\x09\x09\x09this.scrolling = false;\x0a\x09\x09\x09\x09\x09return this;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09// Add offset in iOS to move the menu over the image, out of the way of the default iOS menu.\x0a\x09\x09\x09\x09if ( tinymce.Env.iOS && currentSelection.nodeName === \x27IMG\x27 ) {\x0a\x09\x09\x09\x09\x09iosOffsetTop = 54;\x0a\x09\x09\x09\x09\x09iosOffsetBottom = 46;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09if ( this.bottom ) {\x0a\x09\x09\x09\x09\x09if ( spaceBottom \x3e= spaceNeeded ) {\x0a\x09\x09\x09\x09\x09\x09className = \x27 mce-arrow-up\x27;\x0a\x09\x09\x09\x09\x09\x09top = selection.bottom + iframeRect.top + scrollY - iosOffsetBottom;\x0a\x09\x09\x09\x09\x09} else if ( spaceTop \x3e= spaceNeeded ) {\x0a\x09\x09\x09\x09\x09\x09className = \x27 mce-arrow-down\x27;\x0a\x09\x09\x09\x09\x09\x09top = selection.top + iframeRect.top + scrollY - toolbarHeight + iosOffsetTop;\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09if ( spaceTop \x3e= spaceNeeded ) {\x0a\x09\x09\x09\x09\x09\x09className = \x27 mce-arrow-down\x27;\x0a\x09\x09\x09\x09\x09\x09top = selection.top + iframeRect.top + scrollY - toolbarHeight + iosOffsetTop;\x0a\x09\x09\x09\x09\x09} else if ( spaceBottom \x3e= spaceNeeded && editorHeight / 2 \x3e selection.bottom + iframeRect.top - blockedTop ) {\x0a\x09\x09\x09\x09\x09\x09className = \x27 mce-arrow-up\x27;\x0a\x09\x09\x09\x09\x09\x09top = selection.bottom + iframeRect.top + scrollY - iosOffsetBottom;\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09if ( typeof top === \x27undefined\x27 ) {\x0a\x09\x09\x09\x09\x09top = scrollY + blockedTop + buffer + iosOffsetBottom;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09left = selectionMiddle - toolbarWidth / 2 + iframeRect.left + scrollX;\x0a\x0a\x09\x09\x09\x09if ( selection.left \x3c 0 || selection.right \x3e iframeRect.width ) {\x0a\x09\x09\x09\x09\x09left = iframeRect.left + scrollX + ( iframeRect.width - toolbarWidth ) / 2;\x0a\x09\x09\x09\x09} else if ( toolbarWidth \x3e= windowWidth ) {\x0a\x09\x09\x09\x09\x09className += \x27 mce-arrow-full\x27;\x0a\x09\x09\x09\x09\x09left = 0;\x0a\x09\x09\x09\x09} else if ( ( left \x3c 0 && selection.left + toolbarWidth \x3e windowWidth ) || ( left + toolbarWidth \x3e windowWidth && selection.right - toolbarWidth \x3c 0 ) ) {\x0a\x09\x09\x09\x09\x09left = ( windowWidth - toolbarWidth ) / 2;\x0a\x09\x09\x09\x09} else if ( left \x3c iframeRect.left + scrollX ) {\x0a\x09\x09\x09\x09\x09className += \x27 mce-arrow-left\x27;\x0a\x09\x09\x09\x09\x09left = selection.left + iframeRect.left + scrollX;\x0a\x09\x09\x09\x09} else if ( left + toolbarWidth \x3e iframeRect.width + iframeRect.left + scrollX ) {\x0a\x09\x09\x09\x09\x09className += \x27 mce-arrow-right\x27;\x0a\x09\x09\x09\x09\x09left = selection.right - toolbarWidth + iframeRect.left + scrollX;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09// No up/down arrows on the menu over images in iOS.\x0a\x09\x09\x09\x09if ( tinymce.Env.iOS && currentSelection.nodeName === \x27IMG\x27 ) {\x0a\x09\x09\x09\x09\x09className = className.replace( / ?mce-arrow-(up|down)/g, \x27\x27 );\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09toolbar.className = toolbar.className.replace( / ?mce-arrow-[\x5cw]+/g, \x27\x27 ) + className;\x0a\x0a\x09\x09\x09\x09DOM.setStyles( toolbar, {\x0a\x09\x09\x09\x09\x09\x27left\x27: left,\x0a\x09\x09\x09\x09\x09\x27top\x27: top\x0a\x09\x09\x09\x09} );\x0a\x0a\x09\x09\x09\x09return this;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09toolbar.on( \x27show\x27, function() {\x0a\x09\x09\x09\x09this.reposition();\x0a\x0a\x09\x09\x09\x09if ( isChromeRtl ) {\x0a\x09\x09\x09\x09\x09tinymce.$( \x27.mce-widget.mce-tooltip\x27 ).addClass( \x27wp-hide-mce-tooltip\x27 );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} );\x0a\x0a\x09\x09\x09toolbar.on( \x27hide\x27, function() {\x0a\x09\x09\x09\x09if ( isChromeRtl ) {\x0a\x09\x09\x09\x09\x09tinymce.$( \x27.mce-widget.mce-tooltip\x27 ).removeClass( \x27wp-hide-mce-tooltip\x27 );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} );\x0a\x0a\x09\x09\x09toolbar.on( \x27keydown\x27, function( event ) {\x0a\x09\x09\x09\x09if ( event.keyCode === 27 ) {\x0a\x09\x09\x09\x09\x09this.hide();\x0a\x09\x09\x09\x09\x09editor.focus();\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} );\x0a\x0a\x09\x09\x09editor.on( \x27remove\x27, function() {\x0a\x09\x09\x09\x09toolbar.remove();\x0a\x09\x09\x09} );\x0a\x0a\x09\x09\x09toolbar.reposition = reposition;\x0a\x09\x09\x09toolbar.hide().renderTo( document.body );\x0a\x0a\x09\x09\x09return toolbar;\x0a\x09\x09}\x0a\x0a\x09\x09editor.shortcuts.add( \x27alt+119\x27, \x27\x27, function() {\x0a\x09\x09\x09var node;\x0a\x0a\x09\x09\x09if ( activeToolbar ) {\x0a\x09\x09\x09\x09node = activeToolbar.find( \x27toolbar\x27 )[0];\x0a\x09\x09\x09\x09node && node.focus( true );\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09editor.on( \x27nodechange\x27, function( event ) {\x0a\x09\x09\x09var collapsed = editor.selection.isCollapsed();\x0a\x0a\x09\x09\x09var args = {\x0a\x09\x09\x09\x09element: event.element,\x0a\x09\x09\x09\x09parents: event.parents,\x0a\x09\x09\x09\x09collapsed: collapsed\x0a\x09\x09\x09};\x0a\x0a\x09\x09\x09editor.fire( \x27wptoolbar\x27, args );\x0a\x0a\x09\x09\x09currentSelection = args.selection || args.element;\x0a\x0a\x09\x09\x09if ( activeToolbar && activeToolbar !== args.toolbar ) {\x0a\x09\x09\x09\x09activeToolbar.hide();\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( args.toolbar ) {\x0a\x09\x09\x09\x09activeToolbar = args.toolbar;\x0a\x0a\x09\x09\x09\x09if ( activeToolbar.visible() ) {\x0a\x09\x09\x09\x09\x09activeToolbar.reposition();\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09activeToolbar.show();\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09activeToolbar = false;\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09editor.on( \x27focus\x27, function() {\x0a\x09\x09\x09if ( activeToolbar ) {\x0a\x09\x09\x09\x09activeToolbar.show();\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09function hide( event ) {\x0a\x09\x09\x09if ( activeToolbar ) {\x0a\x09\x09\x09\x09if ( activeToolbar.tempHide || event.type === \x27hide\x27 || event.type === \x27blur\x27 ) {\x0a\x09\x09\x09\x09\x09activeToolbar.hide();\x0a\x09\x09\x09\x09\x09activeToolbar = false;\x0a\x09\x09\x09\x09} else if ( (\x0a\x09\x09\x09\x09\x09event.type === \x27resizewindow\x27 ||\x0a\x09\x09\x09\x09\x09event.type === \x27scrollwindow\x27 ||\x0a\x09\x09\x09\x09\x09event.type === \x27resize\x27 ||\x0a\x09\x09\x09\x09\x09event.type === \x27scroll\x27\x0a\x09\x09\x09\x09) && ! activeToolbar.blockHide ) {\x0a\x09\x09\x09\x09\x09clearTimeout( timeout );\x0a\x0a\x09\x09\x09\x09\x09timeout = setTimeout( function() {\x0a\x09\x09\x09\x09\x09\x09if ( activeToolbar && typeof activeToolbar.show === \x27function\x27 ) {\x0a\x09\x09\x09\x09\x09\x09\x09activeToolbar.scrolling = false;\x0a\x09\x09\x09\x09\x09\x09\x09activeToolbar.show();\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09}, 250 );\x0a\x0a\x09\x09\x09\x09\x09activeToolbar.scrolling = true;\x0a\x09\x09\x09\x09\x09activeToolbar.hide();\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09editor.dom.bind( editor.getWin(), \x27resize\x27, hide );\x0a\x0a\x09\x09if ( editor.inline ) {\x0a\x09\x09\x09// Enable `capture` for the event.\x0a\x09\x09\x09// This will hide/reposition the toolbar on any scrolling in the document.\x0a\x09\x09\x09document.addEventListener( \x27scroll\x27, hide, true );\x0a\x09\x09} else {\x0a\x09\x09\x09editor.dom.bind( editor.getWin(), \x27scroll\x27, hide );\x0a\x09\x09\x09// For full height iframe editor.\x0a\x09\x09\x09editor.on( \x27resizewindow scrollwindow\x27, hide );\x0a\x09\x09}\x0a\x0a\x09\x09editor.on( \x27remove\x27, function() {\x0a\x09\x09\x09document.removeEventListener( \x27scroll\x27, hide, true );\x0a\x09\x09\x09editor.off( \x27resizewindow scrollwindow\x27, hide );\x0a\x09\x09\x09editor.dom.unbind( editor.getWin(), \x27resize scroll\x27, hide );\x0a\x09\x09} );\x0a\x0a\x09\x09editor.on( \x27blur hide\x27, hide );\x0a\x0a\x09\x09editor.wp = editor.wp || {};\x0a\x09\x09editor.wp._createToolbar = create;\x0a\x09}, true );\x0a\x0a\x09function noop() {}\x0a\x0a\x09// Expose some functions (back-compat)\x0a\x09return {\x0a\x09\x09_showButtons: noop,\x0a\x09\x09_hideButtons: noop,\x0a\x09\x09_setEmbed: noop,\x0a\x09\x09_getEmbed: noop\x0a\x09};\x0a});\x0a\x0a}( window.tinymce ));\x0a'}