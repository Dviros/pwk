var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 15:12:02 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Thu, 28 Jun 2018 02:30:15 GMT\x0aETag: \x226456-56faa82e93bc0-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-7130/7131\x0aContent-Length: 7131\x0aKeep-Alive: timeout=5, max=52\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/**\x0a * @output wp-includes/js/customize-base.js\x0a */\x0a\x0a/** @namespace wp */\x0awindow.wp = window.wp || {};\x0a\x0a(function( exports, $ ){\x0a\x09var api = {}, ctor, inherits,\x0a\x09\x09slice = Array.prototype.slice;\x0a\x0a\x09// Shared empty constructor function to aid in prototype-chain creation.\x0a\x09ctor = function() {};\x0a\x0a\x09/**\x0a\x09 * Helper function to correctly set up the prototype chain, for subclasses.\x0a\x09 * Similar to `goog.inherits`, but uses a hash of prototype properties and\x0a\x09 * class properties to be extended.\x0a\x09 *\x0a\x09 * @param  object parent      Parent class constructor to inherit from.\x0a\x09 * @param  object protoProps  Properties to apply to the prototype for use as class instance properties.\x0a\x09 * @param  object staticProps Properties to apply directly to the class constructor.\x0a\x09 * @return child              The subclassed constructor.\x0a\x09 */\x0a\x09inherits = function( parent, protoProps, staticProps ) {\x0a\x09\x09var child;\x0a\x0a\x09\x09// The constructor function for the new subclass is either defined by you\x0a\x09\x09// (the \x22constructor\x22 property in your `extend` definition), or defaulted\x0a\x09\x09// by us to simply call `super()`.\x0a\x09\x09if ( protoProps && protoProps.hasOwnProperty( \x27constructor\x27 ) ) {\x0a\x09\x09\x09child = protoProps.constructor;\x0a\x09\x09} else {\x0a\x09\x09\x09child = function() {\x0a\x09\x09\x09\x09// Storing the result `super()` before returning the value\x0a\x09\x09\x09\x09// prevents a bug in Opera where, if the constructor returns\x0a\x09\x09\x09\x09// a function, Opera will reject the return value in favor of\x0a\x09\x09\x09\x09// the original object. This causes all sorts of trouble.\x0a\x09\x09\x09\x09var result = parent.apply( this, arguments );\x0a\x09\x09\x09\x09return result;\x0a\x09\x09\x09};\x0a\x09\x09}\x0a\x0a\x09\x09// Inherit class (static) properties from parent.\x0a\x09\x09$.extend( child, parent );\x0a\x0a\x09\x09// Set the prototype chain to inherit from `parent`, without calling\x0a\x09\x09// `parent`\x27s constructor function.\x0a\x09\x09ctor.prototype  = parent.prototype;\x0a\x09\x09child.prototype = new ctor();\x0a\x0a\x09\x09// Add prototype properties (instance properties) to the subclass,\x0a\x09\x09// if supplied.\x0a\x09\x09if ( protoProps )\x0a\x09\x09\x09$.extend( child.prototype, protoProps );\x0a\x0a\x09\x09// Add static properties to the constructor function, if supplied.\x0a\x09\x09if ( staticProps )\x0a\x09\x09\x09$.extend( child, staticProps );\x0a\x0a\x09\x09// Correctly set child\x27s `prototype.constructor`.\x0a\x09\x09child.prototype.constructor = child;\x0a\x0a\x09\x09// Set a convenience property in case the parent\x27s prototype is needed later.\x0a\x09\x09child.__super__ = parent.prototype;\x0a\x0a\x09\x09return child;\x0a\x09};\x0a\x0a\x09/**\x0a\x09 * Base class for object inheritance.\x0a\x09 */\x0a\x09api.Class = function( applicator, argsArray, options ) {\x0a\x09\x09var magic, args = arguments;\x0a\x0a\x09\x09if ( applicator && argsArray && api.Class.applicator === applicator ) {\x0a\x09\x09\x09args = argsArray;\x0a\x09\x09\x09$.extend( this, options || {} );\x0a\x09\x09}\x0a\x0a\x09\x09magic = this;\x0a\x0a\x09\x09/*\x0a\x09\x09 * If the class has a method called \x22instance\x22,\x0a\x09\x09 * the return value from the class\x27 constructor will be a function that\x0a\x09\x09 * calls the \x22instance\x22 method.\x0a\x09\x09 *\x0a\x09\x09 * It is also an object that has properties and methods inside it.\x0a\x09\x09 */\x0a\x09\x09if ( this.instance ) {\x0a\x09\x09\x09magic = function() {\x0a\x09\x09\x09\x09return magic.instance.apply( magic, arguments );\x0a\x09\x09\x09};\x0a\x0a\x09\x09\x09$.extend( magic, this );\x0a\x09\x09}\x0a\x0a\x09\x09magic.initialize.apply( magic, args );\x0a\x09\x09return magic;\x0a\x09};\x0a\x0a\x09/**\x0a\x09 * Creates a subclass of the class.\x0a\x09 *\x0a\x09 * @param  object protoProps  Properties to apply to the prototype.\x0a\x09 * @param  object staticProps Properties to apply directly to the class.\x0a\x09 * @return child              The subclass.\x0a\x09 */\x0a\x09api.Class.extend = function( protoProps, classProps ) {\x0a\x09\x09var child = inherits( this, protoProps, classProps );\x0a\x09\x09child.extend = this.extend;\x0a\x09\x09return child;\x0a\x09};\x0a\x0a\x09api.Class.applicator = {};\x0a\x0a\x09/**\x0a\x09 * Initialize a class instance.\x0a\x09 *\x0a\x09 * Override this function in a subclass as needed.\x0a\x09 */\x0a\x09api.Class.prototype.initialize = function() {};\x0a\x0a\x09/*\x0a\x09 * Checks whether a given instance extended a constructor.\x0a\x09 *\x0a\x09 * The magic surrounding the instance parameter causes the instanceof\x0a\x09 * keyword to return inaccurate results; it defaults to the function\x27s\x0a\x09 * prototype instead of the constructor chain. Hence this function.\x0a\x09 */\x0a\x09api.Class.prototype.extended = function( constructor ) {\x0a\x09\x09var proto = this;\x0a\x0a\x09\x09while ( typeof proto.constructor !== \x27undefined\x27 ) {\x0a\x09\x09\x09if ( proto.constructor === constructor )\x0a\x09\x09\x09\x09return true;\x0a\x09\x09\x09if ( typeof proto.constructor.__super__ === \x27undefined\x27 )\x0a\x09\x09\x09\x09return false;\x0a\x09\x09\x09proto = proto.constructor.__super__;\x0a\x09\x09}\x0a\x09\x09return false;\x0a\x09};\x0a\x0a\x09/**\x0a\x09 * An events manager object, offering the ability to bind to and trigger events.\x0a\x09 *\x0a\x09 * Used as a mixin.\x0a\x09 */\x0a\x09api.Events = {\x0a\x09\x09trigger: function( id ) {\x0a\x09\x09\x09if ( this.topics && this.topics[ id ] )\x0a\x09\x09\x09\x09this.topics[ id ].fireWith( this, slice.call( arguments, 1 ) );\x0a\x09\x09\x09return this;\x0a\x09\x09},\x0a\x0a\x09\x09bind: function( id ) {\x0a\x09\x09\x09this.topics = this.topics || {};\x0a\x09\x09\x09this.topics[ id ] = this.topics[ id ] || $.Callbacks();\x0a\x09\x09\x09this.topics[ id ].add.apply( this.topics[ id ], slice.call( arguments, 1 ) );\x0a\x09\x09\x09return this;\x0a\x09\x09},\x0a\x0a\x09\x09unbind: function( id ) {\x0a\x09\x09\x09if ( this.topics && this.topics[ id ] )\x0a\x09\x09\x09\x09this.topics[ id ].remove.apply( this.topics[ id ], slice.call( arguments, 1 ) );\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x09};\x0a\x0a\x09/**\x0a\x09 * Observable values that support two-way binding.\x0a\x09 *\x0a\x09 * @memberOf wp.customize\x0a\x09 * @alias wp.customize.Value\x0a\x09 *\x0a\x09 * @constructor\x0a\x09 */\x0a\x09api.Value = api.Class.extend(/** @lends wp.customize.Value.prototype */{\x0a\x09\x09/**\x0a\x09\x09 * @param {mixed}  initial The initial value.\x0a\x09\x09 * @param {object} options\x0a\x09\x09 */\x0a\x09\x09initialize: function( initial, options ) {\x0a\x09\x09\x09this._value = initial; // @todo: potentially change this to a this.set() call.\x0a\x09\x09\x09this.callbacks = $.Callbacks();\x0a\x09\x09\x09this._dirty = false;\x0a\x0a\x09\x09\x09$.extend( this, options || {} );\x0a\x0a\x09\x09\x09this.set = $.proxy( this.set, this );\x0a\x09\x09},\x0a\x0a\x09\x09/*\x0a\x09\x09 * Magic. Returns a function that will become the instance.\x0a\x09\x09 * Set to null to prevent the instance from extending a function.\x0a\x09\x09 */\x0a\x09\x09instance: function() {\x0a\x09\x09\x09return arguments.length ? this.set.apply( this, arguments ) : this.get();\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Get the value.\x0a\x09\x09 *\x0a\x09\x09 * @return {mixed}\x0a\x09\x09 */\x0a\x09\x09get: function() {\x0a\x09\x09\x09return this._value;\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Set the value and trigger all bound callbacks.\x0a\x09\x09 *\x0a\x09\x09 * @param {object} to New value.\x0a\x09\x09 */\x0a\x09\x09set: function( to ) {\x0a\x09\x09\x09var from = this._value;\x0a\x0a\x09\x09\x09to = this._setter.apply( this, arguments );\x0a\x09\x09\x09to = this.validate( to );\x0a\x0a\x09\x09\x09// Bail if the sanitized value is null or unchanged.\x0a\x09\x09\x09if ( null === to || _.isEqual( from, to ) ) {\x0a\x09\x09\x09\x09return this;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09this._value = to;\x0a\x09\x09\x09this._dirty = true;\x0a\x0a\x09\x09\x09this.callbacks.fireWith( this, [ to, from ] );\x0a\x0a\x09\x09\x09return this;\x0a\x09\x09},\x0a\x0a\x09\x09_setter: function( to ) {\x0a\x09\x09\x09return to;\x0a\x09\x09},\x0a\x0a\x09\x09setter: function( callback ) {\x0a\x09\x09\x09var from = this.get();\x0a\x09\x09\x09this._setter = callback;\x0a\x09\x09\x09// Temporarily clear value so setter can decide if it\x27s valid.\x0a\x09\x09\x09this._value = null;\x0a\x09\x09\x09this.set( from );\x0a\x09\x09\x09return this;\x0a\x09\x09},\x0a\x0a\x09\x09resetSetter: function() {\x0a\x09\x09\x09this._setter = this.constructor.prototype._setter;\x0a\x09\x09\x09this.set( this.get() );\x0a\x09\x09\x09return this;\x0a\x09\x09},\x0a\x0a\x09\x09validate: function( value ) {\x0a\x09\x09\x09return value;\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Bind a function to be invoked whenever the value changes.\x0a\x09\x09 *\x0a\x09\x09 * @param {...Function} A function, or multiple functions, to add to the callback stack.\x0a\x09\x09 */\x0a\x09\x09bind: function() {\x0a\x09\x09\x09this.callbacks.add.apply( this.callbacks, arguments );\x0a\x09\x09\x09return this;\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Unbind a previously bound function.\x0a\x09\x09 *\x0a\x09\x09 * @param {...Function} A function, or multiple functions, to remove from the callback stack.\x0a\x09\x09 */\x0a\x09\x09unbind: function() {\x0a\x09\x09\x09this.callbacks.remove.apply( this.callbacks, arguments );\x0a\x09\x09\x09return this;\x0a\x09\x09},\x0a\x0a\x09\x09link: function() { // values*\x0a\x09\x09\x09var set = this.set;\x0a\x09\x09\x09$.each( arguments, function() {\x0a\x09\x09\x09\x09this.bind( set );\x0a\x09\x09\x09});\x0a\x09\x09\x09return this;\x0a\x09\x09},\x0a\x0a\x09\x09unlink: function() { // values*\x0a\x09\x09\x09var set = this.set;\x0a\x09\x09\x09$.each( arguments, function() {\x0a\x09\x09\x09\x09this.unbind( set );\x0a\x09\x09\x09});\x0a\x09\x09\x09return this;\x0a\x09\x09},\x0a\x0a\x09\x09sync: function() { // values*\x0a\x09\x09\x09var that = this;\x0a\x09\x09\x09$.each( arguments, function() {\x0a\x09\x09\x09\x09that.link( this );\x0a\x09\x09\x09\x09this.link( that );\x0a\x09\x09\x09});\x0a\x09\x09\x09return this;\x0a\x09\x09},\x0a\x0a\x09\x09unsync: function() { // values*\x0a\x09\x09\x09var that = this;\x0a\x09\x09\x09$.each( arguments, function() {\x0a\x09\x09\x09\x09that.unlink( this );\x0a\x09\x09\x09\x09this.unlink( that );\x0a\x09\x09\x09});\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09/**\x0a\x09 * A collection of observable values.\x0a\x09 *\x0a\x09 * @memberOf wp.customize\x0a\x09 * @alias wp.customize.Values\x0a\x09 *\x0a\x09 * @constructor\x0a\x09 * @augments wp.customize.Class\x0a\x09 * @mixes wp.customize.Events\x0a\x09 */\x0a\x09api.Values = api.Class.extend(/** @lends wp.customize.Values.prototype */{\x0a\x0a\x09\x09/**\x0a\x09\x09 * The default constructor for items of the collection.\x0a\x09\x09 *\x0a\x09\x09 * @type {object}\x0a\x09\x09 */\x0a\x09\x09defaultConstructor: api.Value,\x0a\x0a\x09\x09initialize: function( options ) {\x0a\x09\x09\x09$.extend( this, options || {} );\x0a\x0a\x09\x09\x09this._value = {};\x0a\x09\x09\x09this._deferreds = {};\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Get the instance of an item from the collection if only ID is specified.\x0a\x09\x09 *\x0a\x09\x09 * If more than one argument is supplied, all are expected to be IDs and\x0a\x09\x09 * the last to be a function callback that will be invoked when the requested\x0a\x09\x09 * items are available.\x0a\x09\x09 *\x0a\x09\x09 * @see {api.Values.when}\x0a\x09\x09 *\x0a\x09\x09 * @param  {string}   id ID of the item.\x0a\x09\x09 * @param  {...}         Zero or more IDs of items to wait for and a callback\x0a\x09\x09 *                       function to invoke when they\x27re available. Optional.\x0a\x09\x09 * @return {mixed}    The item instance if only one ID was supplied.\x0a\x09\x09 *                    A Deferred Promise object if a callback function is supplied.\x0a\x09\x09 */\x0a\x09\x09instance: function( id ) {\x0a\x09\x09\x09if ( arguments.length === 1 )\x0a\x09\x09\x09\x09return this.value( id );\x0a\x0a\x09\x09\x09return this.when.apply( this, arguments );\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Get the instance of an item.\x0a\x09\x09 *\x0a\x09\x09 * @param  {string} id The ID of the item.\x0a\x09\x09 * @return {[type]}    [description]\x0a\x09\x09 */\x0a\x09\x09value: function( id ) {\x0a\x09\x09\x09return this._value[ id ];\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Whether the collection has an item with the given ID.\x0a\x09\x09 *\x0a\x09\x09 * @param  {string}  id The ID of the item to look for.\x0a\x09\x09 * @return {Boolean}\x0a\x09\x09 */\x0a\x09\x09has: function( id ) {\x0a\x09\x09\x09return typeof this._value[ id ] !== \x27undefined\x27;\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Add an item to the collection.\x0a\x09\x09 *\x0a\x09\x09 * @param {string|wp.customize.Class} item - The item instance to add, or the ID for the instance to add. When an ID string is supplied, then itemObject must be provided.\x0a\x09\x09 * @param {wp.customize.Class}        [itemObject] - The item instance when the first argument is a ID string.\x0a\x09\x09 * @return {wp.customize.Class} The new item\x27s instance, or an existing instance if already added.\x0a\x09\x09 */\x0a\x09\x09add: function( item, itemObject ) {\x0a\x09\x09\x09var collection = this, id, instance;\x0a\x09\x09\x09if ( \x27string\x27 === typeof item ) {\x0a\x09\x09\x09\x09id = item;\x0a\x09\x09\x09\x09instance = itemObject;\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09if ( \x27string\x27 !== typeof item.id ) {\x0a\x09\x09\x09\x09\x09throw new Error( \x27Unknown key\x27 );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09id = item.id;\x0a\x09\x09\x09\x09instance = item;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( collection.has( id ) ) {\x0a\x09\x09\x09\x09return collection.value( id );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09collection._value[ id ] = instance;\x0a\x09\x09\x09instance.parent = collection;\x0a\x0a\x09\x09\x09// Propagate a \x27change\x27 event on an item up to the collection.\x0a\x09\x09\x09if ( instance.extended( api.Value ) ) {\x0a\x09\x09\x09\x09instance.bind( collection._change );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09collection.trigger( \x27add\x27, instance );\x0a\x0a\x09\x09\x09// If a deferred object exists for this item,\x0a\x09\x09\x09// resolve it.\x0a\x09\x09\x09if ( collection._deferreds[ id ] ) {\x0a\x09\x09\x09\x09collection._deferreds[ id ].resolve();\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return collection._value[ id ];\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Create a new item of the collection using the collection\x27s default constructor\x0a\x09\x09 * and store it in the collection.\x0a\x09\x09 *\x0a\x09\x09 * @param  {string} id    The ID of the item.\x0a\x09\x09 * @param  {mixed}  value Any extra arguments are passed into the item\x27s initialize method.\x0a\x09\x09 * @return {mixed}  The new item\x27s instance.\x0a\x09\x09 */\x0a\x09\x09create: function( id ) {\x0a\x09\x09\x09return this.add( id, new this.defaultConstructor( api.Class.applicator, slice.call( arguments, 1 ) ) );\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Iterate over all items in the collection invoking the provided callback.\x0a\x09\x09 *\x0a\x09\x09 * @param  {Function} callback Function to invoke.\x0a\x09\x09 * @param  {object}   context  Object context to invoke the function with. Optional.\x0a\x09\x09 */\x0a\x09\x09each: function( callback, context ) {\x0a\x09\x09\x09context = typeof context === \x27undefined\x27 ? this : context;\x0a\x0a\x09\x09\x09$.each( this._value, function( key, obj ) {\x0a\x09\x09\x09\x09callback.call( context, obj, key );\x0a\x09\x09\x09});\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Remove an item from the collection.\x0a\x09\x09 *\x0a\x09\x09 * @param  {string} id The ID of the item to remove.\x0a\x09\x09 */\x0a\x09\x09remove: function( id ) {\x0a\x09\x09\x09var value = this.value( id );\x0a\x0a\x09\x09\x09if ( value ) {\x0a\x0a\x09\x09\x09\x09// Trigger event right before the element is removed from the collection.\x0a\x09\x09\x09\x09this.trigger( \x27remove\x27, value );\x0a\x0a\x09\x09\x09\x09if ( value.extended( api.Value ) ) {\x0a\x09\x09\x09\x09\x09value.unbind( this._change );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09delete value.parent;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09delete this._value[ id ];\x0a\x09\x09\x09delete this._deferreds[ id ];\x0a\x0a\x09\x09\x09// Trigger removed event after the item has been eliminated from the collection.\x0a\x09\x09\x09if ( value ) {\x0a\x09\x09\x09\x09this.trigger( \x27removed\x27, value );\x0a\x09\x09\x09}\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Runs a callback once all requested values exist.\x0a\x09\x09 *\x0a\x09\x09 * when( ids*, [callback] );\x0a\x09\x09 *\x0a\x09\x09 * For example:\x0a\x09\x09 *     when( id1, id2, id3, function( value1, value2, value3 ) {} );\x0a\x09\x09 *\x0a\x09\x09 * @returns $.Deferred.promise();\x0a\x09\x09 */\x0a\x09\x09when: function() {\x0a\x09\x09\x09var self = this,\x0a\x09\x09\x09\x09ids  = slice.call( arguments ),\x0a\x09\x09\x09\x09dfd  = $.Deferred();\x0a\x0a\x09\x09\x09// If the last argument is a callback, bind it to .done()\x0a\x09\x09\x09if ( $.isFunction( ids[ ids.length - 1 ] ) )\x0a\x09\x09\x09\x09dfd.done( ids.pop() );\x0a\x0a\x09\x09\x09/*\x0a\x09\x09\x09 * Create a stack of deferred objects for each item that is not\x0a\x09\x09\x09 * yet available, and invoke the supplied callback when they are.\x0a\x09\x09\x09 */\x0a\x09\x09\x09$.when.apply( $, $.map( ids, function( id ) {\x0a\x09\x09\x09\x09if ( self.has( id ) )\x0a\x09\x09\x09\x09\x09return;\x0a\x0a\x09\x09\x09\x09/*\x0a\x09\x09\x09\x09 * The requested item is not available yet, create a deferred\x0a\x09\x09\x09\x09 * object to resolve when it becomes available.\x0a\x09\x09\x09\x09 */\x0a\x09\x09\x09\x09return self._deferreds[ id ] = self._deferreds[ id ] || $.Deferred();\x0a\x09\x09\x09})).done( function() {\x0a\x09\x09\x09\x09var values = $.map( ids, function( id ) {\x0a\x09\x09\x09\x09\x09\x09return self( id );\x0a\x09\x09\x09\x09\x09});\x0a\x0a\x09\x09\x09\x09// If a value is missing, we\x27ve used at least one expired deferred.\x0a\x09\x09\x09\x09// Call Values.when again to generate a new deferred.\x0a\x09\x09\x09\x09if ( values.length !== ids.length ) {\x0a\x09\x09\x09\x09\x09// ids.push( callback );\x0a\x09\x09\x09\x09\x09self.when.apply( self, ids ).done( function() {\x0a\x09\x09\x09\x09\x09\x09dfd.resolveWith( self, values );\x0a\x09\x09\x09\x09\x09});\x0a\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09dfd.resolveWith( self, values );\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09return dfd.promise();\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * A helper function to propagate a \x27change\x27 event from an item\x0a\x09\x09 * to the collection itself.\x0a\x09\x09 */\x0a\x09\x09_change: function() {\x0a\x09\x09\x09this.parent.trigger( \x27change\x27, this );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09// Create a global events bus on the Customizer.\x0a\x09$.extend( api.Values.prototype, api.Events );\x0a\x0a\x0a\x09/**\x0a\x09 * Cast a string to a jQuery collection if it isn\x27t already.\x0a\x09 *\x0a\x09 * @param {string|jQuery collection} element\x0a\x09 */\x0a\x09api.ensure = function( element ) {\x0a\x09\x09return typeof element == \x27string\x27 ? $( element ) : element;\x0a\x09};\x0a\x0a\x09/**\x0a\x09 * An observable value that syncs with an element.\x0a\x09 *\x0a\x09 * Handles inputs, selects, and textareas by default.\x0a\x09 *\x0a\x09 * @memberOf wp.customize\x0a\x09 * @alias wp.customize.Element\x0a\x09 *\x0a\x09 * @constructor\x0a\x09 * @augments wp.customize.Value\x0a\x09 * @augments wp.customize.Class\x0a\x09 */\x0a\x09api.Element = api.Value.extend(/** @lends wp.customize.Element */{\x0a\x09\x09initialize: function( element, options ) {\x0a\x09\x09\x09var self = this,\x0a\x09\x09\x09\x09synchronizer = api.Element.synchronizer.html,\x0a\x09\x09\x09\x09type, update, refresh;\x0a\x0a\x09\x09\x09this.element = api.ensure( element );\x0a\x09\x09\x09this.events = \x27\x27;\x0a\x0a\x09\x09\x09if ( this.element.is( \x27input, select, textarea\x27 ) ) {\x0a\x09\x09\x09\x09type = this.element.prop( \x27type\x27 );\x0a\x09\x09\x09\x09this.events += \x27 change input\x27;\x0a\x09\x09\x09\x09synchronizer = api.Element.synchronizer.val;\x0a\x0a\x09\x09\x09\x09if ( this.element.is( \x27input\x27 ) && api.Element.synchronizer[ type ] ) {\x0a\x09\x09\x09\x09\x09synchronizer = api.Element.synchronizer[ type ];\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09api.Value.prototype.initialize.call( this, null, $.extend( options || {}, synchronizer ) );\x0a\x09\x09\x09this._value = this.get();\x0a\x0a\x09\x09\x09update = this.update;\x0a\x09\x09\x09refresh = this.refresh;\x0a\x0a\x09\x09\x09this.update = function( to ) {\x0a\x09\x09\x09\x09if ( to !== refresh.call( self ) ) {\x0a\x09\x09\x09\x09\x09update.apply( this, arguments );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09};\x0a\x09\x09\x09this.refresh = function() {\x0a\x09\x09\x09\x09self.set( refresh.call( self ) );\x0a\x09\x09\x09};\x0a\x0a\x09\x09\x09this.bind( this.update );\x0a\x09\x09\x09this.element.bind( this.events, this.refresh );\x0a\x09\x09},\x0a\x0a\x09\x09find: function( selector ) {\x0a\x09\x09\x09return $( selector, this.element );\x0a\x09\x09},\x0a\x0a\x09\x09refresh: function() {},\x0a\x0a\x09\x09update: function() {}\x0a\x09});\x0a\x0a\x09api.Element.synchronizer = {};\x0a\x0a\x09$.each( [ \x27html\x27, \x27val\x27 ], function( index, method ) {\x0a\x09\x09api.Element.synchronizer[ method ] = {\x0a\x09\x09\x09update: function( to ) {\x0a\x09\x09\x09\x09this.element[ method ]( to );\x0a\x09\x09\x09},\x0a\x09\x09\x09refresh: function() {\x0a\x09\x09\x09\x09return this.element[ method ]();\x0a\x09\x09\x09}\x0a\x09\x09};\x0a\x09});\x0a\x0a\x09api.Element.synchronizer.checkbox = {\x0a\x09\x09update: function( to ) {\x0a\x09\x09\x09this.element.prop( \x27checked\x27, to );\x0a\x09\x09},\x0a\x09\x09refresh: function() {\x0a\x09\x09\x09return this.element.prop( \x27checked\x27 );\x0a\x09\x09}\x0a\x09};\x0a\x0a\x09api.Element.synchronizer.radio = {\x0a\x09\x09update: function( to ) {\x0a\x09\x09\x09this.element.filter( function() {\x0a\x09\x09\x09\x09return this.value === to;\x0a\x09\x09\x09}).prop( \x27checked\x27, true );\x0a\x09\x09},\x0a\x09\x09refresh: function() {\x0a\x09\x09\x09return this.element.filter( \x27:checked\x27 ).val();\x0a\x09\x09}\x0a\x09};\x0a\x0a\x09$.support.postMessage = !! window.postMessage;\x0a\x0a\x09/**\x0a\x09 * A communicator for sending data from one window to another over postMessage.\x0a\x09 *\x0a\x09 * @memberOf wp.customize\x0a\x09 * @alias wp.customize.Messenger\x0a\x09 *\x0a\x09 * @constructor\x0a\x09 * @augments wp.customize.Class\x0a\x09 * @mixes wp.customize.Events\x0a\x09 */\x0a\x09api.Messenger = api.Class.extend(/** @lends wp.customize.Messenger.prototype */{\x0a\x09\x09/**\x0a\x09\x09 * Create a new Value.\x0a\x09\x09 *\x0a\x09\x09 * @param  {string} key     Unique identifier.\x0a\x09\x09 * @param  {mixed}  initial Initial value.\x0a\x09\x09 * @param  {mixed}  options Options hash. Optional.\x0a\x09\x09 * @return {Value}          Class instance of the Value.\x0a\x09\x09 */\x0a\x09\x09add: function( key, initial, options ) {\x0a\x09\x09\x09return this[ key ] = new api.Value( initial, options );\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Initialize Messenger.\x0a\x09\x09 *\x0a\x09\x09 * @param  {object} params - Parameters to configure the messenger.\x0a\x09\x09 *         {string} params.url - The URL to communicate with.\x0a\x09\x09 *         {window} params.targetWindow - The window instance to communicate with. Default window.parent.\x0a\x09\x09 *         {string} params.channel - If provided, will send the channel with each message and only accept messages a matching channel.\x0a\x09\x09 * @param  {object} options - Extend any instance parameter or method with this object.\x0a\x09\x09 */\x0a\x09\x09initialize: function( params, options ) {\x0a\x09\x09\x09// Target the parent frame by default, but only if a parent frame exists.\x0a\x09\x09\x09var defaultTarget = window.parent === window ? null : window.parent;\x0a\x0a\x09\x09\x09$.extend( this, options || {} );\x0a\x0a\x09\x09\x09this.add( \x27channel\x27, params.channel );\x0a\x09\x09\x09this.add( \x27url\x27, params.url || \x27\x27 );\x0a\x09\x09\x09this.add( \x27origin\x27, this.url() ).link( this.url ).setter( function( to ) {\x0a\x09\x09\x09\x09var urlParser = document.createElement( \x27a\x27 );\x0a\x09\x09\x09\x09urlParser.href = to;\x0a\x09\x09\x09\x09// Port stripping needed by IE since it adds to host but not to event.origin.\x0a\x09\x09\x09\x09return urlParser.protocol + \x27//\x27 + urlParser.host.replace( /:(80|443)$/, \x27\x27 );\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09// first add with no value\x0a\x09\x09\x09this.add( \x27targetWindow\x27, null );\x0a\x09\x09\x09// This avoids SecurityErrors when setting a window object in x-origin iframe\x27d scenarios.\x0a\x09\x09\x09this.targetWindow.set = function( to ) {\x0a\x09\x09\x09\x09var from = this._value;\x0a\x0a\x09\x09\x09\x09to = this._setter.apply( this, arguments );\x0a\x09\x09\x09\x09to = this.validate( to );\x0a\x0a\x09\x09\x09\x09if ( null === to || from === to ) {\x0a\x09\x09\x09\x09\x09return this;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09this._value = to;\x0a\x09\x09\x09\x09this._dirty = true;\x0a\x0a\x09\x09\x09\x09this.callbacks.fireWith( this, [ to, from ] );\x0a\x0a\x09\x09\x09\x09return this;\x0a\x09\x09\x09};\x0a\x09\x09\x09// now set it\x0a\x09\x09\x09this.targetWindow( params.targetWindow || defaultTarget );\x0a\x0a\x0a\x09\x09\x09// Since we want jQuery to treat the receive function as unique\x0a\x09\x09\x09// to this instance, we give the function a new guid.\x0a\x09\x09\x09//\x0a\x09\x09\x09// This will prevent every Messenger\x27s receive function from being\x0a\x09\x09\x09// unbound when calling $.off( \x27message\x27, this.receive );\x0a\x09\x09\x09this.receive = $.proxy( this.receive, this );\x0a\x09\x09\x09this.receive.guid = $.guid++;\x0a\x0a\x09\x09\x09$( window ).on( \x27message\x27, this.receive );\x0a\x09\x09},\x0a\x0a\x09\x09destroy: function() {\x0a\x09\x09\x09$( window ).off( \x27message\x27, this.receive );\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Receive data from the other window.\x0a\x09\x09 *\x0a\x09\x09 * @param  {jQuery.Event} event Event with embedded data.\x0a\x09\x09 */\x0a\x09\x09receive: function( event ) {\x0a\x09\x09\x09var message;\x0a\x0a\x09\x09\x09event = event.originalEvent;\x0a\x0a\x09\x09\x09if ( ! this.targetWindow || ! this.targetWindow() ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Check to make sure the origin is valid.\x0a\x09\x09\x09if ( this.origin() && event.origin !== this.origin() )\x0a\x09\x09\x09\x09return;\x0a\x0a\x09\x09\x09// Ensure we have a string that\x27s JSON.parse-able\x0a\x09\x09\x09if ( typeof event.data !== \x27string\x27 || event.data[0] !== \x27{\x27 ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09message = JSON.parse( event.data );\x0a\x0a\x09\x09\x09// Check required message properties.\x0a\x09\x09\x09if ( ! message || ! message.id || typeof message.data === \x27undefined\x27 )\x0a\x09\x09\x09\x09return;\x0a\x0a\x09\x09\x09// Check if channel names match.\x0a\x09\x09\x09if ( ( message.channel || this.channel() ) && this.channel() !== message.channel )\x0a\x09\x09\x09\x09return;\x0a\x0a\x09\x09\x09this.trigger( message.id, message.data );\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Send data to the other window.\x0a\x09\x09 *\x0a\x09\x09 * @param  {string} id   The event name.\x0a\x09\x09 * @param  {object} data Data.\x0a\x09\x09 */\x0a\x09\x09send: function( id, data ) {\x0a\x09\x09\x09var message;\x0a\x0a\x09\x09\x09data = typeof data === \x27undefined\x27 ? null : data;\x0a\x0a\x09\x09\x09if ( ! this.url() || ! this.targetWindow() )\x0a\x09\x09\x09\x09return;\x0a\x0a\x09\x09\x09message = { id: id, data: data };\x0a\x09\x09\x09if ( this.channel() )\x0a\x09\x09\x09\x09message.channel = this.channel();\x0a\x0a\x09\x09\x09this.targetWindow().postMessage( JSON.stringify( message ), this.origin() );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09// Add the Events mixin to api.Messenger.\x0a\x09$.extend( api.Messenger.prototype, api.Events );\x0a\x0a\x09/**\x0a\x09 * Notification.\x0a\x09 *\x0a\x09 * @class\x0a\x09 * @augments wp.customize.Class\x0a\x09 * @since 4.6.0\x0a\x09 *\x0a\x09 * @memberOf wp.customize\x0a\x09 * @alias wp.customize.Notification\x0a\x09 *\x0a\x09 * @param {string}  code - The error code.\x0a\x09 * @param {object}  params - Params.\x0a\x09 * @param {string}  params.message=null - The error message.\x0a\x09 * @param {string}  [params.type=error] - The notification type.\x0a\x09 * @param {boolean} [params.fromServer=false] - Whether the notification was server-sent.\x0a\x09 * @param {string}  [params.setting=null] - The setting ID that the notification is related to.\x0a\x09 * @param {*}       [params.data=null] - Any additional data.\x0a\x09 */\x0a\x09api.Notification = api.Class.extend(/** @lends wp.customize.Notification.prototype */{\x0a\x0a\x09\x09/**\x0a\x09\x09 * Template function for rendering the notification.\x0a\x09\x09 *\x0a\x09\x09 * This will be populated with template option or else it will be populated with template from the ID.\x0a\x09\x09 *\x0a\x09\x09 * @since 4.9.0\x0a\x09\x09 * @var {Function}\x0a\x09\x09 */\x0a\x09\x09template: null,\x0a\x0a\x09\x09/**\x0a\x09\x09 * ID for the template to render the notification.\x0a\x09\x09 *\x0a\x09\x09 * @since 4.9.0\x0a\x09\x09 * @var {string}\x0a\x09\x09 */\x0a\x09\x09templateId: \x27customize-notification\x27,\x0a\x0a\x09\x09/**\x0a\x09\x09 * Additional class names to add to the notification container.\x0a\x09\x09 *\x0a\x09\x09 * @since 4.9.0\x0a\x09\x09 * @var {string}\x0a\x09\x09 */\x0a\x09\x09containerClasses: \x27\x27,\x0a\x0a\x09\x09/**\x0a\x09\x09 * Initialize notification.\x0a\x09\x09 *\x0a\x09\x09 * @since 4.9.0\x0a\x09\x09 *\x0a\x09\x09 * @param {string}   code - Notification code.\x0a\x09\x09 * @param {object}   params - Notification parameters.\x0a\x09\x09 * @param {string}   params.message - Message.\x0a\x09\x09 * @param {string}   [params.type=error] - Type.\x0a\x09\x09 * @param {string}   [params.setting] - Related setting ID.\x0a\x09\x09 * @param {Function} [params.template] - Function for rendering template. If not provided, this will come from templateId.\x0a\x09\x09 * @param {string}   [params.templateId] - ID for template to render the notification.\x0a\x09\x09 * @param {string}   [params.containerClasses] - Additional class names to add to the notification container.\x0a\x09\x09 * @param {boolean}  [params.dismissible] - Whether the notification can be dismissed.\x0a\x09\x09 */\x0a\x09\x09initialize: function( code, params ) {\x0a\x09\x09\x09var _params;\x0a\x09\x09\x09this.code = code;\x0a\x09\x09\x09_params = _.extend(\x0a\x09\x09\x09\x09{\x0a\x09\x09\x09\x09\x09message: null,\x0a\x09\x09\x09\x09\x09type: \x27error\x27,\x0a\x09\x09\x09\x09\x09fromServer: false,\x0a\x09\x09\x09\x09\x09data: null,\x0a\x09\x09\x09\x09\x09setting: null,\x0a\x09\x09\x09\x09\x09template: null,\x0a\x09\x09\x09\x09\x09dismissible: false,\x0a\x09\x09\x09\x09\x09containerClasses: \x27\x27\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09params\x0a\x09\x09\x09);\x0a\x09\x09\x09delete _params.code;\x0a\x09\x09\x09_.extend( this, _params );\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Render the notification.\x0a\x09\x09 *\x0a\x09\x09 * @since 4.9.0\x0a\x09\x09 *\x0a\x09\x09 * @returns {jQuery} Notification container element.\x0a\x09\x09 */\x0a\x09\x09render: function() {\x0a\x09\x09\x09var notification = this, container, data;\x0a\x09\x09\x09if ( ! notification.template ) {\x0a\x09\x09\x09\x09notification.template = wp.template( notification.templateId );\x0a\x09\x09\x09}\x0a\x09\x09\x09data = _.extend( {}, notification, {\x0a\x09\x09\x09\x09alt: notification.parent && notification.parent.alt\x0a\x09\x09\x09} );\x0a\x09\x09\x09container = $( notification.template( data ) );\x0a\x0a\x09\x09\x09if ( notification.dismissible ) {\x0a\x09\x09\x09\x09container.find( \x27.notice-dismiss\x27 ).on( \x27click keydown\x27, function( event ) {\x0a\x09\x09\x09\x09\x09if ( \x27keydown\x27 === event.type && 13 !== event.which ) {\x0a\x09\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09if ( notification.parent ) {\x0a\x09\x09\x09\x09\x09\x09notification.parent.remove( notification.code );\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09container.remove();\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09});\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return container;\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09// The main API object is also a collection of all customizer settings.\x0a\x09api = $.extend( new api.Values(), api );\x0a\x0a\x09/**\x0a\x09 * Get all customize settings.\x0a\x09 *\x0a\x09 * @alias wp.customize.get\x0a\x09 *\x0a\x09 * @return {object}\x0a\x09 */\x0a\x09api.get = function() {\x0a\x09\x09var result = {};\x0a\x0a\x09\x09this.each( function( obj, key ) {\x0a\x09\x09\x09result[ key ] = obj.get();\x0a\x09\x09});\x0a\x0a\x09\x09return result;\x0a\x09};\x0a\x0a\x09/**\x0a\x09 * Utility function namespace\x0a\x09 *\x0a\x09 * @namespace wp.customize.utils\x0a\x09 */\x0a\x09api.utils = {};\x0a\x0a\x09/**\x0a\x09 * Parse query string.\x0a\x09 *\x0a\x09 * @since 4.7.0\x0a\x09 * @access public\x0a\x09 *\x0a\x09 * @alias wp.customize.utils.parseQueryString\x0a\x09 *\x0a\x09 * @param {string} queryString Query string.\x0a\x09 * @returns {object} Parsed query string.\x0a\x09 */\x0a\x09api.utils.parseQueryString = function parseQueryString( queryString ) {\x0a\x09\x09var queryParams = {};\x0a\x09\x09_.each( queryString.split( \x27&\x27 ), function( pair ) {\x0a\x09\x09\x09var parts, key, value;\x0a\x09\x09\x09parts = pair.split( \x27=\x27, 2 );\x0a\x09\x09\x09if ( ! parts[0] ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x09\x09\x09key = decodeURIComponent( parts[0].replace( /\x5c+/g, \x27 \x27 ) );\x0a\x09\x09\x09key = key.replace( / /g, \x27_\x27 ); // What PHP does.\x0a\x09\x09\x09if ( _.isUndefined( parts[1] ) ) {\x0a\x09\x09\x09\x09value = null;\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09value = decodeURIComponent( parts[1].replace( /\x5c+/g, \x27 \x27 ) );\x0a\x09\x09\x09}\x0a\x09\x09\x09queryParams[ key ] = value;\x0a\x09\x09} );\x0a\x09\x09return queryParams;\x0a\x09};\x0a\x0a\x09/**\x0a\x09 * Expose the API publicly on window.wp.customize\x0a\x09 *\x0a\x09 * @namespace wp.customize\x0a\x09 */\x0a\x09exports.customize = api;\x0a})( wp, jQuery );\x0a\x09\x09\x09\x09\x09\x09\x09\x09\x09} )q\x27'}