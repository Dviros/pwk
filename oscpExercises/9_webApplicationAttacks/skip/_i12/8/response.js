var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 17:44:58 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Fri, 14 Dec 2018 02:33:41 GMT\x0aETag: \x22684-57cf2425eeb40-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-599/600\x0aContent-Length: 600\x0aKeep-Alive: timeout=5, max=27\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/**\x0a * File customizer.js.\x0a *\x0a * Theme Customizer enhancements for a better user experience.\x0a *\x0a * Contains handlers to make Theme Customizer preview reload changes asynchronously.\x0a */\x0a\x0a(function( $ ) {\x0a\x0a\x09// Primary color.\x0a\x09wp.customize( \x27primary_color\x27, function( value ) {\x0a\x09\x09value.bind( function( to ) {\x0a\x09\x09\x09// Update custom color CSS.\x0a\x09\x09\x09var style = $( \x27#custom-theme-colors\x27 ),\x0a\x09\x09\x09\x09hue = style.data( \x27hue\x27 ),\x0a\x09\x09\x09\x09css = style.html(),\x0a\x09\x09\x09\x09color;\x0a\x0a\x09\x09\x09if( \x27custom\x27 === to ){\x0a\x09\x09\x09\x09// If a custom primary color is selected, use the currently set primary_color_hue\x0a\x09\x09\x09\x09color = wp.customize.get().primary_color_hue;\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09// If the \x22default\x22 option is selected, get the default primary_color_hue\x0a\x09\x09\x09\x09color = 199;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Equivalent to css.replaceAll, with hue followed by comma to prevent values with units from being changed.\x0a\x09\x09\x09css = css.split( hue + \x27,\x27 ).join( color + \x27,\x27 );\x0a\x09\x09\x09style.html( css ).data( \x27hue\x27, color );\x0a\x09\x09});\x0a\x09});\x0a\x0a\x09// Primary color hue.\x0a\x09wp.customize( \x27primary_color_hue\x27, function( value ) {\x0a\x09\x09value.bind( function( to ) {\x0a\x0a\x09\x09\x09// Update custom color CSS.\x0a\x09\x09\x09var style = $( \x27#custom-theme-colors\x27 ),\x0a\x09\x09\x09\x09hue = style.data( \x27hue\x27 ),\x0a\x09\x09\x09\x09css = style.html();\x0a\x0a\x09\x09\x09// Equivalent to css.replaceAll, with hue followed by comma to prevent values with units from being changed.\x0a\x09\x09\x09css = css.split( hue + \x27,\x27 ).join( to + \x27,\x27 );\x0a\x09\x09\x09style.html( css ).data( \x27hue\x27, to );\x0a\x09\x09});\x0a\x09});\x0a\x0a\x09// Image filter.\x0a\x09wp.customize( \x27image_filter\x27, function( value ) {\x0a\x09\x09value.bind( function( to ) {\x0a\x09\x09\x09if ( to ) {\x0a\x09\x09\x09\x09$( \x27body\x27 ).addClass( \x27image-filters-enabled\x27 );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09$( \x27body\x27 ).removeClass( \x27image-filters-enabled\x27 );\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x09} );\x0a\x0a})( jQuery );\x0a'}