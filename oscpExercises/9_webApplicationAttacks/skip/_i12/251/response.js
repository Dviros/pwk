var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 15:00:15 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Wed, 24 Jan 2018 01:51:30 GMT\x0aETag: \x2293e-5637be6ed6c80-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-994/995\x0aContent-Length: 995\x0aKeep-Alive: timeout=5, max=23\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/* global _wpmejsSettings, mejsL10n */\x0a(function( window, $ ) {\x0a\x0a\x09window.wp = window.wp || {};\x0a\x0a\x09function wpMediaElement() {\x0a\x09\x09var settings = {};\x0a\x0a\x09\x09/**\x0a\x09\x09 * Initialize media elements.\x0a\x09\x09 *\x0a\x09\x09 * Ensures media elements that have already been initialized won\x27t be\x0a\x09\x09 * processed again.\x0a\x09\x09 *\x0a\x09\x09 * @memberOf wp.mediaelement\x0a\x09\x09 *\x0a\x09\x09 * @since 4.4.0\x0a\x09\x09 *\x0a\x09\x09 * @returns {void}\x0a\x09\x09 */\x0a\x09\x09function initialize() {\x0a\x09\x09\x09if ( typeof _wpmejsSettings !== \x27undefined\x27 ) {\x0a\x09\x09\x09\x09settings = $.extend( true, {}, _wpmejsSettings );\x0a\x09\x09\x09}\x0a\x09\x09\x09settings.classPrefix = \x27mejs-\x27;\x0a\x09\x09\x09settings.success = settings.success || function ( mejs ) {\x0a\x09\x09\x09\x09var autoplay, loop;\x0a\x0a\x09\x09\x09\x09if ( mejs.rendererName && -1 !== mejs.rendererName.indexOf( \x27flash\x27 ) ) {\x0a\x09\x09\x09\x09\x09autoplay = mejs.attributes.autoplay && \x27false\x27 !== mejs.attributes.autoplay;\x0a\x09\x09\x09\x09\x09loop = mejs.attributes.loop && \x27false\x27 !== mejs.attributes.loop;\x0a\x0a\x09\x09\x09\x09\x09if ( autoplay ) {\x0a\x09\x09\x09\x09\x09\x09mejs.addEventListener( \x27canplay\x27, function() {\x0a\x09\x09\x09\x09\x09\x09\x09mejs.play();\x0a\x09\x09\x09\x09\x09\x09}, false );\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09if ( loop ) {\x0a\x09\x09\x09\x09\x09\x09mejs.addEventListener( \x27ended\x27, function() {\x0a\x09\x09\x09\x09\x09\x09\x09mejs.play();\x0a\x09\x09\x09\x09\x09\x09}, false );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09};\x0a\x0a\x09\x09\x09/**\x0a\x09\x09\x09 * Custom error handler.\x0a\x09\x09\x09 *\x0a\x09\x09\x09 * Sets up a custom error handler in case a video render fails, and provides a download\x0a\x09\x09\x09 * link as the fallback.\x0a\x09\x09\x09 *\x0a\x09\x09\x09 * @since 4.9.3\x0a\x09\x09\x09 *\x0a\x09\x09\x09 * @param {object} media The wrapper that mimics all the native events/properties/methods for all renderers.\x0a\x09\x09\x09 * @param {object} node  The original HTML video, audio, or iframe tag where the media was loaded.\x0a\x09\x09\x09 * @returns {string}\x0a\x09\x09\x09 */\x0a\x09\x09\x09settings.customError = function ( media, node ) {\x0a\x09\x09\x09\x09// Make sure we only fall back to a download link for flash files.\x0a\x09\x09\x09\x09if ( -1 !== media.rendererName.indexOf( \x27flash\x27 ) || -1 !== media.rendererName.indexOf( \x27flv\x27 ) ) {\x0a\x09\x09\x09\x09\x09return \x27\x3ca href=\x22\x27 + node.src + \x27\x22\x3e\x27 + mejsL10n.strings[\x27mejs.download-video\x27] + \x27\x3c/a\x3e\x27;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09};\x0a\x0a\x09\x09\x09// Only initialize new media elements.\x0a\x09\x09\x09$( \x27.wp-audio-shortcode, .wp-video-shortcode\x27 )\x0a\x09\x09\x09\x09.not( \x27.mejs-container\x27 )\x0a\x09\x09\x09\x09.filter(function () {\x0a\x09\x09\x09\x09\x09return ! $( this ).parent().hasClass( \x27mejs-mediaelement\x27 );\x0a\x09\x09\x09\x09})\x0a\x09\x09\x09\x09.mediaelementplayer( settings );\x0a\x09\x09}\x0a\x0a\x09\x09return {\x0a\x09\x09\x09initialize: initialize\x0a\x09\x09};\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * @namespace wp.mediaelement\x0a\x09 * @memberOf wp\x0a\x09 */\x0a\x09window.wp.mediaelement = new wpMediaElement();\x0a\x0a\x09$( window.wp.mediaelement.initialize );\x0a\x0a})( window, jQuery );\x0a'}