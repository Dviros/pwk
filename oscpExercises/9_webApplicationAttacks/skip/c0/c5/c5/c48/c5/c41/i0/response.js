var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 15:10:21 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Mon, 22 Apr 2019 12:40:04 GMT\x0aETag: \x223b844-5871dc47ed100-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-44438/44439\x0aContent-Length: 44439\x0aKeep-Alive: timeout=5, max=97\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0athis[\x22wp\x22] = this[\x22wp\x22] || {}; this[\x22wp\x22][\x22editPost\x22] =\x0a/******/ (function(modules) { // webpackBootstrap\x0a/******/ \x09// The module cache\x0a/******/ \x09var installedModules = {};\x0a/******/\x0a/******/ \x09// The require function\x0a/******/ \x09function __webpack_require__(moduleId) {\x0a/******/\x0a/******/ \x09\x09// Check if module is in cache\x0a/******/ \x09\x09if(installedModules[moduleId]) {\x0a/******/ \x09\x09\x09return installedModules[moduleId].exports;\x0a/******/ \x09\x09}\x0a/******/ \x09\x09// Create a new module (and put it into the cache)\x0a/******/ \x09\x09var module = installedModules[moduleId] = {\x0a/******/ \x09\x09\x09i: moduleId,\x0a/******/ \x09\x09\x09l: false,\x0a/******/ \x09\x09\x09exports: {}\x0a/******/ \x09\x09};\x0a/******/\x0a/******/ \x09\x09// Execute the module function\x0a/******/ \x09\x09modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\x0a/******/\x0a/******/ \x09\x09// Flag the module as loaded\x0a/******/ \x09\x09module.l = true;\x0a/******/\x0a/******/ \x09\x09// Return the exports of the module\x0a/******/ \x09\x09return module.exports;\x0a/******/ \x09}\x0a/******/\x0a/******/\x0a/******/ \x09// expose the modules object (__webpack_modules__)\x0a/******/ \x09__webpack_require__.m = modules;\x0a/******/\x0a/******/ \x09// expose the module cache\x0a/******/ \x09__webpack_require__.c = installedModules;\x0a/******/\x0a/******/ \x09// define getter function for harmony exports\x0a/******/ \x09__webpack_require__.d = function(exports, name, getter) {\x0a/******/ \x09\x09if(!__webpack_require__.o(exports, name)) {\x0a/******/ \x09\x09\x09Object.defineProperty(exports, name, { enumerable: true, get: getter });\x0a/******/ \x09\x09}\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// define __esModule on exports\x0a/******/ \x09__webpack_require__.r = function(exports) {\x0a/******/ \x09\x09if(typeof Symbol !== \x27undefined\x27 && Symbol.toStringTag) {\x0a/******/ \x09\x09\x09Object.defineProperty(exports, Symbol.toStringTag, { value: \x27Module\x27 });\x0a/******/ \x09\x09}\x0a/******/ \x09\x09Object.defineProperty(exports, \x27__esModule\x27, { value: true });\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// create a fake namespace object\x0a/******/ \x09// mode & 1: value is a module id, require it\x0a/******/ \x09// mode & 2: merge all properties of value into the ns\x0a/******/ \x09// mode & 4: return value when already ns object\x0a/******/ \x09// mode & 8|1: behave like require\x0a/******/ \x09__webpack_require__.t = function(value, mode) {\x0a/******/ \x09\x09if(mode & 1) value = __webpack_require__(value);\x0a/******/ \x09\x09if(mode & 8) return value;\x0a/******/ \x09\x09if((mode & 4) && typeof value === \x27object\x27 && value && value.__esModule) return value;\x0a/******/ \x09\x09var ns = Object.create(null);\x0a/******/ \x09\x09__webpack_require__.r(ns);\x0a/******/ \x09\x09Object.defineProperty(ns, \x27default\x27, { enumerable: true, value: value });\x0a/******/ \x09\x09if(mode & 2 && typeof value != \x27string\x27) for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\x0a/******/ \x09\x09return ns;\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// getDefaultExport function for compatibility with non-harmony modules\x0a/******/ \x09__webpack_require__.n = function(module) {\x0a/******/ \x09\x09var getter = module && module.__esModule ?\x0a/******/ \x09\x09\x09function getDefault() { return module[\x27default\x27]; } :\x0a/******/ \x09\x09\x09function getModuleExports() { return module; };\x0a/******/ \x09\x09__webpack_require__.d(getter, \x27a\x27, getter);\x0a/******/ \x09\x09return getter;\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// Object.prototype.hasOwnProperty.call\x0a/******/ \x09__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\x0a/******/\x0a/******/ \x09// __webpack_public_path__\x0a/******/ \x09__webpack_require__.p = \x22\x22;\x0a/******/\x0a/******/\x0a/******/ \x09// Load entry module and return exports\x0a/******/ \x09return __webpack_require__(__webpack_require__.s = 360);\x0a/******/ })\x0a/************************************************************************/\x0a/******/ ({\x0a\x0a/***/ 0:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22element\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 1:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22i18n\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 10:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _classCallCheck; });\x0afunction _classCallCheck(instance, Constructor) {\x0a  if (!(instance instanceof Constructor)) {\x0a    throw new TypeError(\x22Cannot call a class as a function\x22);\x0a  }\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 11:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _possibleConstructorReturn; });\x0a/* harmony import */ var _helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32);\x0a/* harmony import */ var _assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\x0a\x0a\x0afunction _possibleConstructorReturn(self, call) {\x0a  if (call && (Object(_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__[/* default */ \x22a\x22])(call) === \x22object\x22 || typeof call === \x22function\x22)) {\x0a    return call;\x0a  }\x0a\x0a  return Object(_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__[/* default */ \x22a\x22])(self);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 12:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _getPrototypeOf; });\x0afunction _getPrototypeOf(o) {\x0a  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\x0a    return o.__proto__ || Object.getPrototypeOf(o);\x0a  };\x0a  return _getPrototypeOf(o);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 13:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\x0afunction _setPrototypeOf(o, p) {\x0a  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\x0a    o.__proto__ = p;\x0a    return o;\x0a  };\x0a\x0a  return _setPrototypeOf(o, p);\x0a}\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _inherits; });\x0a\x0afunction _inherits(subClass, superClass) {\x0a  if (typeof superClass !== \x22function\x22 && superClass !== null) {\x0a    throw new TypeError(\x22Super expression must either be null or a function\x22);\x0a  }\x0a\x0a  subClass.prototype = Object.create(superClass && superClass.prototype, {\x0a    constructor: {\x0a      value: subClass,\x0a      writable: true,\x0a      configurable: true\x0a    }\x0a  });\x0a  if (superClass) _setPrototypeOf(subClass, superClass);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 133:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22notices\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 14:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22blocks\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 15:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _defineProperty; });\x0afunction _defineProperty(obj, key, value) {\x0a  if (key in obj) {\x0a    Object.defineProperty(obj, key, {\x0a      value: value,\x0a      enumerable: true,\x0a      configurable: true,\x0a      writable: true\x0a    });\x0a  } else {\x0a    obj[key] = value;\x0a  }\x0a\x0a  return obj;\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 16:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0avar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\x0a  Copyright (c) 2017 Jed Watson.\x0a  Licensed under the MIT License (MIT), see\x0a  http://jedwatson.github.io/classnames\x0a*/\x0a/* global define */\x0a\x0a(function () {\x0a\x09\x27use strict\x27;\x0a\x0a\x09var hasOwn = {}.hasOwnProperty;\x0a\x0a\x09function classNames () {\x0a\x09\x09var classes = [];\x0a\x0a\x09\x09for (var i = 0; i \x3c arguments.length; i++) {\x0a\x09\x09\x09var arg = arguments[i];\x0a\x09\x09\x09if (!arg) continue;\x0a\x0a\x09\x09\x09var argType = typeof arg;\x0a\x0a\x09\x09\x09if (argType === \x27string\x27 || argType === \x27number\x27) {\x0a\x09\x09\x09\x09classes.push(arg);\x0a\x09\x09\x09} else if (Array.isArray(arg) && arg.length) {\x0a\x09\x09\x09\x09var inner = classNames.apply(null, arg);\x0a\x09\x09\x09\x09if (inner) {\x0a\x09\x09\x09\x09\x09classes.push(inner);\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} else if (argType === \x27object\x27) {\x0a\x09\x09\x09\x09for (var key in arg) {\x0a\x09\x09\x09\x09\x09if (hasOwn.call(arg, key) && arg[key]) {\x0a\x09\x09\x09\x09\x09\x09classes.push(key);\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09return classes.join(\x27 \x27);\x0a\x09}\x0a\x0a\x09if ( true && module.exports) {\x0a\x09\x09classNames.default = classNames;\x0a\x09\x09module.exports = classNames;\x0a\x09} else if (true) {\x0a\x09\x09// register as \x27classnames\x27, consistent with npm package name\x0a\x09\x09!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\x0a\x09\x09\x09return classNames;\x0a\x09\x09}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\x0a\x09\x09\x09\x09__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\x0a\x09} else {}\x0a}());\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 17:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js\x0afunction _arrayWithoutHoles(arr) {\x0a  if (Array.isArray(arr)) {\x0a    for (var i = 0, arr2 = new Array(arr.length); i \x3c arr.length; i++) {\x0a      arr2[i] = arr[i];\x0a    }\x0a\x0a    return arr2;\x0a  }\x0a}\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js\x0avar iterableToArray = __webpack_require__(34);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js\x0afunction _nonIterableSpread() {\x0a  throw new TypeError(\x22Invalid attempt to spread non-iterable instance\x22);\x0a}\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _toConsumableArray; });\x0a\x0a\x0a\x0afunction _toConsumableArray(arr) {\x0a  return _arrayWithoutHoles(arr) || Object(iterableToArray[\x22a\x22 /* default */])(arr) || _nonIterableSpread();\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 18:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22keycodes\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 19:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _extends; });\x0afunction _extends() {\x0a  _extends = Object.assign || function (target) {\x0a    for (var i = 1; i \x3c arguments.length; i++) {\x0a      var source = arguments[i];\x0a\x0a      for (var key in source) {\x0a        if (Object.prototype.hasOwnProperty.call(source, key)) {\x0a          target[key] = source[key];\x0a        }\x0a      }\x0a    }\x0a\x0a    return target;\x0a  };\x0a\x0a  return _extends.apply(this, arguments);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 2:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22lodash\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 21:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\x0afunction _objectWithoutPropertiesLoose(source, excluded) {\x0a  if (source == null) return {};\x0a  var target = {};\x0a  var sourceKeys = Object.keys(source);\x0a  var key, i;\x0a\x0a  for (i = 0; i \x3c sourceKeys.length; i++) {\x0a    key = sourceKeys[i];\x0a    if (excluded.indexOf(key) \x3e= 0) continue;\x0a    target[key] = source[key];\x0a  }\x0a\x0a  return target;\x0a}\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _objectWithoutProperties; });\x0a\x0afunction _objectWithoutProperties(source, excluded) {\x0a  if (source == null) return {};\x0a  var target = _objectWithoutPropertiesLoose(source, excluded);\x0a  var key, i;\x0a\x0a  if (Object.getOwnPropertySymbols) {\x0a    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\x0a\x0a    for (i = 0; i \x3c sourceSymbolKeys.length; i++) {\x0a      key = sourceSymbolKeys[i];\x0a      if (excluded.indexOf(key) \x3e= 0) continue;\x0a      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\x0a      target[key] = source[key];\x0a    }\x0a  }\x0a\x0a  return target;\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 22:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22editor\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 226:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22blockLibrary\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 25:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22url\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 26:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22hooks\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 28:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\x0avar arrayWithHoles = __webpack_require__(37);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\x0afunction _iterableToArrayLimit(arr, i) {\x0a  var _arr = [];\x0a  var _n = true;\x0a  var _d = false;\x0a  var _e = undefined;\x0a\x0a  try {\x0a    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\x0a      _arr.push(_s.value);\x0a\x0a      if (i && _arr.length === i) break;\x0a    }\x0a  } catch (err) {\x0a    _d = true;\x0a    _e = err;\x0a  } finally {\x0a    try {\x0a      if (!_n && _i[\x22return\x22] != null) _i[\x22return\x22]();\x0a    } finally {\x0a      if (_d) throw _e;\x0a    }\x0a  }\x0a\x0a  return _arr;\x0a}\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\x0avar nonIterableRest = __webpack_require__(38);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _slicedToArray; });\x0a\x0a\x0a\x0afunction _slicedToArray(arr, i) {\x0a  return Object(arrayWithHoles[\x22a\x22 /* default */])(arr) || _iterableToArrayLimit(arr, i) || Object(nonIterableRest[\x22a\x22 /* default */])();\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 3:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _assertThisInitialized; });\x0afunction _assertThisInitialized(self) {\x0a  if (self === void 0) {\x0a    throw new ReferenceError(\x22this hasn\x27t been initialised - super() hasn\x27t been called\x22);\x0a  }\x0a\x0a  return self;\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 30:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a\x0avar LEAF_KEY, hasWeakMap;\x0a\x0a/**\x0a * Arbitrary value used as key for referencing cache object in WeakMap tree.\x0a *\x0a * @type {Object}\x0a */\x0aLEAF_KEY = {};\x0a\x0a/**\x0a * Whether environment supports WeakMap.\x0a *\x0a * @type {boolean}\x0a */\x0ahasWeakMap = typeof WeakMap !== \x27undefined\x27;\x0a\x0a/**\x0a * Returns the first argument as the sole entry in an array.\x0a *\x0a * @param {*} value Value to return.\x0a *\x0a * @return {Array} Value returned as entry in array.\x0a */\x0afunction arrayOf( value ) {\x0a\x09return [ value ];\x0a}\x0a\x0a/**\x0a * Returns true if the value passed is object-like, or false otherwise. A value\x0a * is object-like if it can support property assignment, e.g. object or array.\x0a *\x0a * @param {*} value Value to test.\x0a *\x0a * @return {boolean} Whether value is object-like.\x0a */\x0afunction isObjectLike( value ) {\x0a\x09return !! value && \x27object\x27 === typeof value;\x0a}\x0a\x0a/**\x0a * Creates and returns a new cache object.\x0a *\x0a * @return {Object} Cache object.\x0a */\x0afunction createCache() {\x0a\x09var cache = {\x0a\x09\x09clear: function() {\x0a\x09\x09\x09cache.head = null;\x0a\x09\x09},\x0a\x09};\x0a\x0a\x09return cache;\x0a}\x0a\x0a/**\x0a * Returns true if entries within the two arrays are strictly equal by\x0a * reference from a starting index.\x0a *\x0a * @param {Array}  a         First array.\x0a * @param {Array}  b         Second array.\x0a * @param {number} fromIndex Index from which to start comparison.\x0a *\x0a * @return {boolean} Whether arrays are shallowly equal.\x0a */\x0afunction isShallowEqual( a, b, fromIndex ) {\x0a\x09var i;\x0a\x0a\x09if ( a.length !== b.length ) {\x0a\x09\x09return false;\x0a\x09}\x0a\x0a\x09for ( i = fromIndex; i \x3c a.length; i++ ) {\x0a\x09\x09if ( a[ i ] !== b[ i ] ) {\x0a\x09\x09\x09return false;\x0a\x09\x09}\x0a\x09}\x0a\x0a\x09return true;\x0a}\x0a\x0a/**\x0a * Returns a memoized selector function. The getDependants function argument is\x0a * called before the memoized selector and is expected to return an immutable\x0a * reference or array of references on which the selector depends for computing\x0a * its own return value. The memoize cache is preserved only as long as those\x0a * dependant references remain the same. If getDependants returns a different\x0a * reference(s), the cache is cleared and the selector value regenerated.\x0a *\x0a * @param {Function} selector      Selector function.\x0a * @param {Function} getDependants Dependant getter returning an immutable\x0a *                                 reference or array of reference used in\x0a *                                 cache bust consideration.\x0a *\x0a * @return {Function} Memoized selector.\x0a */\x0a/* harmony default export */ __webpack_exports__[\x22a\x22] = (function( selector, getDependants ) {\x0a\x09var rootCache, getCache;\x0a\x0a\x09// Use object source as dependant if getter not provided\x0a\x09if ( ! getDependants ) {\x0a\x09\x09getDependants = arrayOf;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Returns the root cache. If WeakMap is supported, this is assigned to the\x0a\x09 * root WeakMap cache set, otherwise it is a shared instance of the default\x0a\x09 * cache object.\x0a\x09 *\x0a\x09 * @return {(WeakMap|Object)} Root cache object.\x0a\x09 */\x0a\x09function getRootCache() {\x0a\x09\x09return rootCache;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Returns the cache for a given dependants array. When possible, a WeakMap\x0a\x09 * will be used to create a unique cache for each set of dependants. This\x0a\x09 * is feasible due to the nature of WeakMap in allowing garbage collection\x0a\x09 * to occur on entries where the key object is no longer referenced. Since\x0a\x09 * WeakMap requires the key to be an object, this is only possible when the\x0a\x09 * dependant is object-like. The root cache is created as a hierarchy where\x0a\x09 * each top-level key is the first entry in a dependants set, the value a\x0a\x09 * WeakMap where each key is the next dependant, and so on. This continues\x0a\x09 * so long as the dependants are object-like. If no dependants are object-\x0a\x09 * like, then the cache is shared across all invocations.\x0a\x09 *\x0a\x09 * @see isObjectLike\x0a\x09 *\x0a\x09 * @param {Array} dependants Selector dependants.\x0a\x09 *\x0a\x09 * @return {Object} Cache object.\x0a\x09 */\x0a\x09function getWeakMapCache( dependants ) {\x0a\x09\x09var caches = rootCache,\x0a\x09\x09\x09isUniqueByDependants = true,\x0a\x09\x09\x09i, dependant, map, cache;\x0a\x0a\x09\x09for ( i = 0; i \x3c dependants.length; i++ ) {\x0a\x09\x09\x09dependant = dependants[ i ];\x0a\x0a\x09\x09\x09// Can only compose WeakMap from object-like key.\x0a\x09\x09\x09if ( ! isObjectLike( dependant ) ) {\x0a\x09\x09\x09\x09isUniqueByDependants = false;\x0a\x09\x09\x09\x09break;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Does current segment of cache already have a WeakMap?\x0a\x09\x09\x09if ( caches.has( dependant ) ) {\x0a\x09\x09\x09\x09// Traverse into nested WeakMap.\x0a\x09\x09\x09\x09caches = caches.get( dependant );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09// Create, set, and traverse into a new one.\x0a\x09\x09\x09\x09map = new WeakMap();\x0a\x09\x09\x09\x09caches.set( dependant, map );\x0a\x09\x09\x09\x09caches = map;\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09// We use an arbitrary (but consistent) object as key for the last item\x0a\x09\x09// in the WeakMap to serve as our running cache.\x0a\x09\x09if ( ! caches.has( LEAF_KEY ) ) {\x0a\x09\x09\x09cache = createCache();\x0a\x09\x09\x09cache.isUniqueByDependants = isUniqueByDependants;\x0a\x09\x09\x09caches.set( LEAF_KEY, cache );\x0a\x09\x09}\x0a\x0a\x09\x09return caches.get( LEAF_KEY );\x0a\x09}\x0a\x0a\x09// Assign cache handler by availability of WeakMap\x0a\x09getCache = hasWeakMap ? getWeakMapCache : getRootCache;\x0a\x0a\x09/**\x0a\x09 * Resets root memoization cache.\x0a\x09 */\x0a\x09function clear() {\x0a\x09\x09rootCache = hasWeakMap ? new WeakMap() : createCache();\x0a\x09}\x0a\x0a\x09// eslint-disable-next-line jsdoc/check-param-names\x0a\x09/**\x0a\x09 * The augmented selector call, considering first whether dependants have\x0a\x09 * changed before passing it to underlying memoize function.\x0a\x09 *\x0a\x09 * @param {Object} source    Source object for derivation.\x0a\x09 * @param {...*}   extraArgs Additional arguments to pass to selector.\x0a\x09 *\x0a\x09 * @return {*} Selector result.\x0a\x09 */\x0a\x09function callSelector( /* source, ...extraArgs */ ) {\x0a\x09\x09var len = arguments.length,\x0a\x09\x09\x09cache, node, i, args, dependants;\x0a\x0a\x09\x09// Create copy of arguments (avoid leaking deoptimization).\x0a\x09\x09args = new Array( len );\x0a\x09\x09for ( i = 0; i \x3c len; i++ ) {\x0a\x09\x09\x09args[ i ] = arguments[ i ];\x0a\x09\x09}\x0a\x0a\x09\x09dependants = getDependants.apply( null, args );\x0a\x09\x09cache = getCache( dependants );\x0a\x0a\x09\x09// If not guaranteed uniqueness by dependants (primitive type or lack\x0a\x09\x09// of WeakMap support), shallow compare against last dependants and, if\x0a\x09\x09// references have changed, destroy cache to recalculate result.\x0a\x09\x09if ( ! cache.isUniqueByDependants ) {\x0a\x09\x09\x09if ( cache.lastDependants && ! isShallowEqual( dependants, cache.lastDependants, 0 ) ) {\x0a\x09\x09\x09\x09cache.clear();\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09cache.lastDependants = dependants;\x0a\x09\x09}\x0a\x0a\x09\x09node = cache.head;\x0a\x09\x09while ( node ) {\x0a\x09\x09\x09// Check whether node arguments match arguments\x0a\x09\x09\x09if ( ! isShallowEqual( node.args, args, 1 ) ) {\x0a\x09\x09\x09\x09node = node.next;\x0a\x09\x09\x09\x09continue;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// At this point we can assume we\x27ve found a match\x0a\x0a\x09\x09\x09// Surface matched node to head if not already\x0a\x09\x09\x09if ( node !== cache.head ) {\x0a\x09\x09\x09\x09// Adjust siblings to point to each other.\x0a\x09\x09\x09\x09node.prev.next = node.next;\x0a\x09\x09\x09\x09if ( node.next ) {\x0a\x09\x09\x09\x09\x09node.next.prev = node.prev;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09node.next = cache.head;\x0a\x09\x09\x09\x09node.prev = null;\x0a\x09\x09\x09\x09cache.head.prev = node;\x0a\x09\x09\x09\x09cache.head = node;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Return immediately\x0a\x09\x09\x09return node.val;\x0a\x09\x09}\x0a\x0a\x09\x09// No cached value found. Continue to insertion phase:\x0a\x0a\x09\x09node = {\x0a\x09\x09\x09// Generate the result from original function\x0a\x09\x09\x09val: selector.apply( null, args ),\x0a\x09\x09};\x0a\x0a\x09\x09// Avoid including the source object in the cache.\x0a\x09\x09args[ 0 ] = null;\x0a\x09\x09node.args = args;\x0a\x0a\x09\x09// Don\x27t need to check whether node is already head, since it would\x0a\x09\x09// have been returned above already if it was\x0a\x0a\x09\x09// Shift existing head down list\x0a\x09\x09if ( cache.head ) {\x0a\x09\x09\x09cache.head.prev = node;\x0a\x09\x09\x09node.next = cache.head;\x0a\x09\x09}\x0a\x0a\x09\x09cache.head = node;\x0a\x0a\x09\x09return node.val;\x0a\x09}\x0a\x0a\x09callSelector.getDependants = getDependants;\x0a\x09callSelector.clear = clear;\x0a\x09clear();\x0a\x0a\x09return callSelector;\x0a});\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 32:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _typeof; });\x0afunction _typeof2(obj) { if (typeof Symbol === \x22function\x22 && typeof Symbol.iterator === \x22symbol\x22) { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \x22function\x22 && obj.constructor === Symbol && obj !== Symbol.prototype ? \x22symbol\x22 : typeof obj; }; } return _typeof2(obj); }\x0a\x0afunction _typeof(obj) {\x0a  if (typeof Symbol === \x22function\x22 && _typeof2(Symbol.iterator) === \x22symbol\x22) {\x0a    _typeof = function _typeof(obj) {\x0a      return _typeof2(obj);\x0a    };\x0a  } else {\x0a    _typeof = function _typeof(obj) {\x0a      return obj && typeof Symbol === \x22function\x22 && obj.constructor === Symbol && obj !== Symbol.prototype ? \x22symbol\x22 : _typeof2(obj);\x0a    };\x0a  }\x0a\x0a  return _typeof(obj);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 33:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22apiFetch\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 34:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _iterableToArray; });\x0afunction _iterableToArray(iter) {\x0a  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \x22[object Arguments]\x22) return Array.from(iter);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 360:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a__webpack_require__.r(__webpack_exports__);\x0avar actions_namespaceObject = {};\x0a__webpack_require__.r(actions_namespaceObject);\x0a__webpack_require__.d(actions_namespaceObject, \x22openGeneralSidebar\x22, function() { return actions_openGeneralSidebar; });\x0a__webpack_require__.d(actions_namespaceObject, \x22closeGeneralSidebar\x22, function() { return actions_closeGeneralSidebar; });\x0a__webpack_require__.d(actions_namespaceObject, \x22openModal\x22, function() { return actions_openModal; });\x0a__webpack_require__.d(actions_namespaceObject, \x22closeModal\x22, function() { return actions_closeModal; });\x0a__webpack_require__.d(actions_namespaceObject, \x22openPublishSidebar\x22, function() { return openPublishSidebar; });\x0a__webpack_require__.d(actions_namespaceObject, \x22closePublishSidebar\x22, function() { return actions_closePublishSidebar; });\x0a__webpack_require__.d(actions_namespaceObject, \x22togglePublishSidebar\x22, function() { return actions_togglePublishSidebar; });\x0a__webpack_require__.d(actions_namespaceObject, \x22toggleEditorPanelEnabled\x22, function() { return toggleEditorPanelEnabled; });\x0a__webpack_require__.d(actions_namespaceObject, \x22toggleEditorPanelOpened\x22, function() { return actions_toggleEditorPanelOpened; });\x0a__webpack_require__.d(actions_namespaceObject, \x22removeEditorPanel\x22, function() { return removeEditorPanel; });\x0a__webpack_require__.d(actions_namespaceObject, \x22toggleFeature\x22, function() { return toggleFeature; });\x0a__webpack_require__.d(actions_namespaceObject, \x22switchEditorMode\x22, function() { return switchEditorMode; });\x0a__webpack_require__.d(actions_namespaceObject, \x22togglePinnedPluginItem\x22, function() { return togglePinnedPluginItem; });\x0a__webpack_require__.d(actions_namespaceObject, \x22hideBlockTypes\x22, function() { return actions_hideBlockTypes; });\x0a__webpack_require__.d(actions_namespaceObject, \x22showBlockTypes\x22, function() { return actions_showBlockTypes; });\x0a__webpack_require__.d(actions_namespaceObject, \x22setAvailableMetaBoxesPerLocation\x22, function() { return setAvailableMetaBoxesPerLocation; });\x0a__webpack_require__.d(actions_namespaceObject, \x22requestMetaBoxUpdates\x22, function() { return requestMetaBoxUpdates; });\x0a__webpack_require__.d(actions_namespaceObject, \x22metaBoxUpdatesSuccess\x22, function() { return metaBoxUpdatesSuccess; });\x0avar selectors_namespaceObject = {};\x0a__webpack_require__.r(selectors_namespaceObject);\x0a__webpack_require__.d(selectors_namespaceObject, \x22getEditorMode\x22, function() { return getEditorMode; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditorSidebarOpened\x22, function() { return selectors_isEditorSidebarOpened; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isPluginSidebarOpened\x22, function() { return isPluginSidebarOpened; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getActiveGeneralSidebarName\x22, function() { return getActiveGeneralSidebarName; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getPreferences\x22, function() { return getPreferences; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getPreference\x22, function() { return getPreference; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isPublishSidebarOpened\x22, function() { return selectors_isPublishSidebarOpened; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditorPanelRemoved\x22, function() { return isEditorPanelRemoved; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditorPanelEnabled\x22, function() { return selectors_isEditorPanelEnabled; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditorPanelOpened\x22, function() { return selectors_isEditorPanelOpened; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isModalActive\x22, function() { return selectors_isModalActive; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isFeatureActive\x22, function() { return isFeatureActive; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isPluginItemPinned\x22, function() { return isPluginItemPinned; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getActiveMetaBoxLocations\x22, function() { return getActiveMetaBoxLocations; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isMetaBoxLocationVisible\x22, function() { return isMetaBoxLocationVisible; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isMetaBoxLocationActive\x22, function() { return isMetaBoxLocationActive; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getMetaBoxesPerLocation\x22, function() { return getMetaBoxesPerLocation; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getAllMetaBoxes\x22, function() { return getAllMetaBoxes; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22hasMetaBoxes\x22, function() { return hasMetaBoxes; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isSavingMetaBoxes\x22, function() { return selectors_isSavingMetaBoxes; });\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22element\x22]}\x0avar external_this_wp_element_ = __webpack_require__(0);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22coreData\x22]}\x0avar external_this_wp_coreData_ = __webpack_require__(72);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22blockEditor\x22]}\x0avar external_this_wp_blockEditor_ = __webpack_require__(8);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22editor\x22]}\x0avar external_this_wp_editor_ = __webpack_require__(22);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22nux\x22]}\x0avar external_this_wp_nux_ = __webpack_require__(60);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22viewport\x22]}\x0avar external_this_wp_viewport_ = __webpack_require__(40);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22notices\x22]}\x0avar external_this_wp_notices_ = __webpack_require__(133);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22blockLibrary\x22]}\x0avar external_this_wp_blockLibrary_ = __webpack_require__(226);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22data\x22]}\x0avar external_this_wp_data_ = __webpack_require__(5);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22hooks\x22]}\x0avar external_this_wp_hooks_ = __webpack_require__(26);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\x0avar classCallCheck = __webpack_require__(10);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\x0avar createClass = __webpack_require__(9);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\x0avar possibleConstructorReturn = __webpack_require__(11);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\x0avar getPrototypeOf = __webpack_require__(12);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules\x0avar inherits = __webpack_require__(13);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\x0avar assertThisInitialized = __webpack_require__(3);\x0a\x0a// EXTERNAL MODULE: external \x22lodash\x22\x0avar external_lodash_ = __webpack_require__(2);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22i18n\x22]}\x0avar external_this_wp_i18n_ = __webpack_require__(1);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/hooks/components/media-upload/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0avar _window = window,\x0a    wp = _window.wp; // Getter for the sake of unit tests.\x0a\x0avar media_upload_getGalleryDetailsMediaFrame = function getGalleryDetailsMediaFrame() {\x0a  /**\x0a   * Custom gallery details frame.\x0a   *\x0a   * @link https://github.com/xwp/wp-core-media-widgets/blob/905edbccfc2a623b73a93dac803c5335519d7837/wp-admin/js/widgets/media-gallery-widget.js\x0a   * @class GalleryDetailsMediaFrame\x0a   * @constructor\x0a   */\x0a  return wp.media.view.MediaFrame.Post.extend({\x0a    /**\x0a     * Create the default states.\x0a     *\x0a     * @return {void}\x0a     */\x0a    createStates: function createStates() {\x0a      this.states.add([new wp.media.controller.Library({\x0a        id: \x27gallery\x27,\x0a        title: wp.media.view.l10n.createGalleryTitle,\x0a        priority: 40,\x0a        toolbar: \x27main-gallery\x27,\x0a        filterable: \x27uploaded\x27,\x0a        multiple: \x27add\x27,\x0a        editable: false,\x0a        library: wp.media.query(Object(external_lodash_[\x22defaults\x22])({\x0a          type: \x27image\x27\x0a        }, this.options.library))\x0a      }), new wp.media.controller.GalleryEdit({\x0a        library: this.options.selection,\x0a        editing: this.options.editing,\x0a        menu: \x27gallery\x27,\x0a        displaySettings: false,\x0a        multiple: true\x0a      }), new wp.media.controller.GalleryAdd()]);\x0a    }\x0a  });\x0a}; // the media library image object contains numerous attributes\x0a// we only need this set to display the image in the library\x0a\x0a\x0avar media_upload_slimImageObject = function slimImageObject(img) {\x0a  var attrSet = [\x27sizes\x27, \x27mime\x27, \x27type\x27, \x27subtype\x27, \x27id\x27, \x27url\x27, \x27alt\x27, \x27link\x27, \x27caption\x27];\x0a  return Object(external_lodash_[\x22pick\x22])(img, attrSet);\x0a};\x0a\x0avar getAttachmentsCollection = function getAttachmentsCollection(ids) {\x0a  return wp.media.query({\x0a    order: \x27ASC\x27,\x0a    orderby: \x27post__in\x27,\x0a    post__in: ids,\x0a    posts_per_page: -1,\x0a    query: true,\x0a    type: \x27image\x27\x0a  });\x0a};\x0a\x0avar media_upload_MediaUpload =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(MediaUpload, _Component);\x0a\x0a  function MediaUpload(_ref) {\x0a    var _this;\x0a\x0a    var allowedTypes = _ref.allowedTypes,\x0a        _ref$multiple = _ref.multiple,\x0a        multiple = _ref$multiple === void 0 ? false : _ref$multiple,\x0a        _ref$gallery = _ref.gallery,\x0a        gallery = _ref$gallery === void 0 ? false : _ref$gallery,\x0a        _ref$title = _ref.title,\x0a        title = _ref$title === void 0 ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Select or Upload Media\x27) : _ref$title,\x0a        modalClass = _ref.modalClass;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, MediaUpload);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(MediaUpload).apply(this, arguments));\x0a    _this.openModal = _this.openModal.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.onOpen = _this.onOpen.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.onSelect = _this.onSelect.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.onUpdate = _this.onUpdate.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.onClose = _this.onClose.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a\x0a    if (gallery) {\x0a      _this.buildAndSetGalleryFrame();\x0a    } else {\x0a      var frameConfig = {\x0a        title: title,\x0a        button: {\x0a          text: Object(external_this_wp_i18n_[\x22__\x22])(\x27Select\x27)\x0a        },\x0a        multiple: multiple\x0a      };\x0a\x0a      if (!!allowedTypes) {\x0a        frameConfig.library = {\x0a          type: allowedTypes\x0a        };\x0a      }\x0a\x0a      _this.frame = wp.media(frameConfig);\x0a    }\x0a\x0a    if (modalClass) {\x0a      _this.frame.$el.addClass(modalClass);\x0a    }\x0a\x0a    _this.initializeListeners();\x0a\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(MediaUpload, [{\x0a    key: \x22initializeListeners\x22,\x0a    value: function initializeListeners() {\x0a      // When an image is selected in the media frame...\x0a      this.frame.on(\x27select\x27, this.onSelect);\x0a      this.frame.on(\x27update\x27, this.onUpdate);\x0a      this.frame.on(\x27open\x27, this.onOpen);\x0a      this.frame.on(\x27close\x27, this.onClose);\x0a    }\x0a  }, {\x0a    key: \x22buildAndSetGalleryFrame\x22,\x0a    value: function buildAndSetGalleryFrame() {\x0a      var _this$props = this.props,\x0a          allowedTypes = _this$props.allowedTypes,\x0a          _this$props$multiple = _this$props.multiple,\x0a          multiple = _this$props$multiple === void 0 ? false : _this$props$multiple,\x0a          _this$props$value = _this$props.value,\x0a          value = _this$props$value === void 0 ? null : _this$props$value; // If the value did not changed there is no need to rebuild the frame,\x0a      // we can continue to use the existing one.\x0a\x0a      if (value === this.lastGalleryValue) {\x0a        return;\x0a      }\x0a\x0a      this.lastGalleryValue = value; // If a frame already existed remove it.\x0a\x0a      if (this.frame) {\x0a        this.frame.remove();\x0a      }\x0a\x0a      var currentState = value ? \x27gallery-edit\x27 : \x27gallery\x27;\x0a\x0a      if (!this.GalleryDetailsMediaFrame) {\x0a        this.GalleryDetailsMediaFrame = media_upload_getGalleryDetailsMediaFrame();\x0a      }\x0a\x0a      var attachments = getAttachmentsCollection(value);\x0a      var selection = new wp.media.model.Selection(attachments.models, {\x0a        props: attachments.props.toJSON(),\x0a        multiple: multiple\x0a      });\x0a      this.frame = new this.GalleryDetailsMediaFrame({\x0a        mimeType: allowedTypes,\x0a        state: currentState,\x0a        multiple: multiple,\x0a        selection: selection,\x0a        editing: value ? true : false\x0a      });\x0a      wp.media.frame = this.frame;\x0a      this.initializeListeners();\x0a    }\x0a  }, {\x0a    key: \x22componentWillUnmount\x22,\x0a    value: function componentWillUnmount() {\x0a      this.frame.remove();\x0a    }\x0a  }, {\x0a    key: \x22onUpdate\x22,\x0a    value: function onUpdate(selections) {\x0a      var _this$props2 = this.props,\x0a          onSelect = _this$props2.onSelect,\x0a          _this$props2$multiple = _this$props2.multiple,\x0a          multiple = _this$props2$multiple === void 0 ? false : _this$props2$multiple;\x0a      var state = this.frame.state();\x0a      var selectedImages = selections || state.get(\x27selection\x27);\x0a\x0a      if (!selectedImages || !selectedImages.models.length) {\x0a        return;\x0a      }\x0a\x0a      if (multiple) {\x0a        onSelect(selectedImages.models.map(function (model) {\x0a          return media_upload_slimImageObject(model.toJSON());\x0a        }));\x0a      } else {\x0a        onSelect(media_upload_slimImageObject(selectedImages.models[0].toJSON()));\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22onSelect\x22,\x0a    value: function onSelect() {\x0a      var _this$props3 = this.props,\x0a          onSelect = _this$props3.onSelect,\x0a          _this$props3$multiple = _this$props3.multiple,\x0a          multiple = _this$props3$multiple === void 0 ? false : _this$props3$multiple; // Get media attachment details from the frame state\x0a\x0a      var attachment = this.frame.state().get(\x27selection\x27).toJSON();\x0a      onSelect(multiple ? attachment : attachment[0]);\x0a    }\x0a  }, {\x0a    key: \x22onOpen\x22,\x0a    value: function onOpen() {\x0a      this.updateCollection();\x0a\x0a      if (!this.props.value) {\x0a        return;\x0a      }\x0a\x0a      if (!this.props.gallery) {\x0a        var selection = this.frame.state().get(\x27selection\x27);\x0a        Object(external_lodash_[\x22castArray\x22])(this.props.value).forEach(function (id) {\x0a          selection.add(wp.media.attachment(id));\x0a        });\x0a      } // load the images so they are available in the media modal.\x0a\x0a\x0a      getAttachmentsCollection(Object(external_lodash_[\x22castArray\x22])(this.props.value)).more();\x0a    }\x0a  }, {\x0a    key: \x22onClose\x22,\x0a    value: function onClose() {\x0a      var onClose = this.props.onClose;\x0a\x0a      if (onClose) {\x0a        onClose();\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22updateCollection\x22,\x0a    value: function updateCollection() {\x0a      var frameContent = this.frame.content.get();\x0a\x0a      if (frameContent && frameContent.collection) {\x0a        var collection = frameContent.collection; // clean all attachments we have in memory.\x0a\x0a        collection.toArray().forEach(function (model) {\x0a          return model.trigger(\x27destroy\x27, model);\x0a        }); // reset has more flag, if library had small amount of items all items may have been loaded before.\x0a\x0a        collection.mirroring._hasMore = true; // request items\x0a\x0a        collection.more();\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22openModal\x22,\x0a    value: function openModal() {\x0a      if (this.props.gallery && this.props.value && this.props.value.length \x3e 0) {\x0a        this.buildAndSetGalleryFrame();\x0a      }\x0a\x0a      this.frame.open();\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      return this.props.render({\x0a        open: this.openModal\x0a      });\x0a    }\x0a  }]);\x0a\x0a  return MediaUpload;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var media_upload = (media_upload_MediaUpload);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/hooks/components/index.js\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar components_replaceMediaUpload = function replaceMediaUpload() {\x0a  return media_upload;\x0a};\x0a\x0aObject(external_this_wp_hooks_[\x22addFilter\x22])(\x27editor.MediaUpload\x27, \x27core/edit-post/components/media-upload/replace-media-upload\x27, components_replaceMediaUpload);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\x0avar esm_extends = __webpack_require__(19);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules\x0avar objectWithoutProperties = __webpack_require__(21);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22blocks\x22]}\x0avar external_this_wp_blocks_ = __webpack_require__(14);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22components\x22]}\x0avar external_this_wp_components_ = __webpack_require__(4);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22compose\x22]}\x0avar external_this_wp_compose_ = __webpack_require__(6);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/hooks/validate-multiple-use/index.js\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0avar enhance = Object(external_this_wp_compose_[\x22compose\x22])(\x0a/**\x0a * For blocks whose block type doesn\x27t support `multiple`, provides the\x0a * wrapped component with `originalBlockClientId` -- a reference to the\x0a * first block of the same type in the content -- if and only if that\x0a * \x22original\x22 block is not the current one. Thus, an inexisting\x0a * `originalBlockClientId` prop signals that the block is valid.\x0a *\x0a * @param {Component} WrappedBlockEdit A filtered BlockEdit instance.\x0a *\x0a * @return {Component} Enhanced component with merged state data props.\x0a */\x0aObject(external_this_wp_data_[\x22withSelect\x22])(function (select, block) {\x0a  var multiple = Object(external_this_wp_blocks_[\x22hasBlockSupport\x22])(block.name, \x27multiple\x27, true); // For block types with `multiple` support, there is no \x22original\x0a  // block\x22 to be found in the content, as the block itself is valid.\x0a\x0a  if (multiple) {\x0a    return {};\x0a  } // Otherwise, only pass `originalBlockClientId` if it refers to a different\x0a  // block from the current one.\x0a\x0a\x0a  var blocks = select(\x27core/block-editor\x27).getBlocks();\x0a  var firstOfSameType = Object(external_lodash_[\x22find\x22])(blocks, function (_ref) {\x0a    var name = _ref.name;\x0a    return block.name === name;\x0a  });\x0a  var isInvalid = firstOfSameType && firstOfSameType.clientId !== block.clientId;\x0a  return {\x0a    originalBlockClientId: isInvalid && firstOfSameType.clientId\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, _ref2) {\x0a  var originalBlockClientId = _ref2.originalBlockClientId;\x0a  return {\x0a    selectFirst: function selectFirst() {\x0a      return dispatch(\x27core/block-editor\x27).selectBlock(originalBlockClientId);\x0a    }\x0a  };\x0a}));\x0avar withMultipleValidation = Object(external_this_wp_compose_[\x22createHigherOrderComponent\x22])(function (BlockEdit) {\x0a  return enhance(function (_ref3) {\x0a    var originalBlockClientId = _ref3.originalBlockClientId,\x0a        selectFirst = _ref3.selectFirst,\x0a        props = Object(objectWithoutProperties[\x22a\x22 /* default */])(_ref3, [\x22originalBlockClientId\x22, \x22selectFirst\x22]);\x0a\x0a    if (!originalBlockClientId) {\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(BlockEdit, props);\x0a    }\x0a\x0a    var blockType = Object(external_this_wp_blocks_[\x22getBlockType\x22])(props.name);\x0a    var outboundType = getOutboundType(props.name);\x0a    return [Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a      key: \x22invalid-preview\x22,\x0a      style: {\x0a        minHeight: \x2760px\x27\x0a      }\x0a    }, Object(external_this_wp_element_[\x22createElement\x22])(BlockEdit, Object(esm_extends[\x22a\x22 /* default */])({\x0a      key: \x22block-edit\x22\x0a    }, props))), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22Warning\x22], {\x0a      key: \x22multiple-use-warning\x22,\x0a      actions: [Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        key: \x22find-original\x22,\x0a        isLarge: true,\x0a        onClick: selectFirst\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Find original\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        key: \x22remove\x22,\x0a        isLarge: true,\x0a        onClick: function onClick() {\x0a          return props.onReplace([]);\x0a        }\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Remove\x27)), outboundType && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        key: \x22transform\x22,\x0a        isLarge: true,\x0a        onClick: function onClick() {\x0a          return props.onReplace(Object(external_this_wp_blocks_[\x22createBlock\x22])(outboundType.name, props.attributes));\x0a        }\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Transform into:\x27), \x27 \x27, outboundType.title)]\x0a    }, Object(external_this_wp_element_[\x22createElement\x22])(\x22strong\x22, null, blockType.title, \x22: \x22), Object(external_this_wp_i18n_[\x22__\x22])(\x27This block can only be used once.\x27))];\x0a  });\x0a}, \x27withMultipleValidation\x27);\x0a/**\x0a * Given a base block name, returns the default block type to which to offer\x0a * transforms.\x0a *\x0a * @param {string} blockName Base block name.\x0a *\x0a * @return {?Object} The chosen default block type.\x0a */\x0a\x0afunction getOutboundType(blockName) {\x0a  // Grab the first outbound transform\x0a  var transform = Object(external_this_wp_blocks_[\x22findTransform\x22])(Object(external_this_wp_blocks_[\x22getBlockTransforms\x22])(\x27to\x27, blockName), function (_ref4) {\x0a    var type = _ref4.type,\x0a        blocks = _ref4.blocks;\x0a    return type === \x27block\x27 && blocks.length === 1;\x0a  } // What about when .length \x3e 1?\x0a  );\x0a\x0a  if (!transform) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_blocks_[\x22getBlockType\x22])(transform.blocks[0]);\x0a}\x0a\x0aObject(external_this_wp_hooks_[\x22addFilter\x22])(\x27editor.BlockEdit\x27, \x27core/edit-post/validate-multiple-use/with-multiple-validation\x27, withMultipleValidation);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/hooks/index.js\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22plugins\x22]}\x0avar external_this_wp_plugins_ = __webpack_require__(63);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22url\x22]}\x0avar external_this_wp_url_ = __webpack_require__(25);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/plugins/copy-content-menu-item/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction CopyContentMenuItem(_ref) {\x0a  var editedPostContent = _ref.editedPostContent,\x0a      hasCopied = _ref.hasCopied,\x0a      setState = _ref.setState;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22ClipboardButton\x22], {\x0a    text: editedPostContent,\x0a    className: \x22components-menu-item__button\x22,\x0a    onCopy: function onCopy() {\x0a      return setState({\x0a        hasCopied: true\x0a      });\x0a    },\x0a    onFinishCopy: function onFinishCopy() {\x0a      return setState({\x0a        hasCopied: false\x0a      });\x0a    }\x0a  }, hasCopied ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Copied!\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Copy All Content\x27));\x0a}\x0a\x0a/* harmony default export */ var copy_content_menu_item = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    editedPostContent: select(\x27core/editor\x27).getEditedPostAttribute(\x27content\x27)\x0a  };\x0a}), Object(external_this_wp_compose_[\x22withState\x22])({\x0a  hasCopied: false\x0a}))(CopyContentMenuItem));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/plugins/manage-blocks-menu-item/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0afunction ManageBlocksMenuItem(_ref) {\x0a  var onSelect = _ref.onSelect,\x0a      openModal = _ref.openModal;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuItem\x22], {\x0a    onClick: Object(external_lodash_[\x22flow\x22])([onSelect, function () {\x0a      return openModal(\x27edit-post/manage-blocks\x27);\x0a    }])\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Block Manager\x27));\x0a}\x0a/* harmony default export */ var manage_blocks_menu_item = (Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      openModal = _dispatch.openModal;\x0a\x0a  return {\x0a    openModal: openModal\x0a  };\x0a})(ManageBlocksMenuItem));\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22keycodes\x22]}\x0avar external_this_wp_keycodes_ = __webpack_require__(18);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/plugins/keyboard-shortcuts-help-menu-item/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0afunction KeyboardShortcutsHelpMenuItem(_ref) {\x0a  var openModal = _ref.openModal,\x0a      onSelect = _ref.onSelect;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuItem\x22], {\x0a    onClick: function onClick() {\x0a      onSelect();\x0a      openModal(\x27edit-post/keyboard-shortcut-help\x27);\x0a    },\x0a    shortcut: external_this_wp_keycodes_[\x22displayShortcut\x22].access(\x27h\x27)\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Keyboard Shortcuts\x27));\x0a}\x0a/* harmony default export */ var keyboard_shortcuts_help_menu_item = (Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      openModal = _dispatch.openModal;\x0a\x0a  return {\x0a    openModal: openModal\x0a  };\x0a})(KeyboardShortcutsHelpMenuItem));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/tools-more-menu-group/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0avar _createSlotFill = Object(external_this_wp_components_[\x22createSlotFill\x22])(\x27ToolsMoreMenuGroup\x27),\x0a    ToolsMoreMenuGroup = _createSlotFill.Fill,\x0a    Slot = _createSlotFill.Slot;\x0a\x0aToolsMoreMenuGroup.Slot = function (_ref) {\x0a  var fillProps = _ref.fillProps;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(Slot, {\x0a    fillProps: fillProps\x0a  }, function (fills) {\x0a    return !Object(external_lodash_[\x22isEmpty\x22])(fills) && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuGroup\x22], {\x0a      label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Tools\x27)\x0a    }, fills);\x0a  });\x0a};\x0a\x0a/* harmony default export */ var tools_more_menu_group = (ToolsMoreMenuGroup);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/plugins/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0aObject(external_this_wp_plugins_[\x22registerPlugin\x22])(\x27edit-post\x27, {\x0a  render: function render() {\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(tools_more_menu_group, null, function (_ref) {\x0a      var onClose = _ref.onClose;\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(manage_blocks_menu_item, {\x0a        onSelect: onClose\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuItem\x22], {\x0a        role: \x22menuitem\x22,\x0a        href: Object(external_this_wp_url_[\x22addQueryArgs\x22])(\x27edit.php\x27, {\x0a          post_type: \x27wp_block\x27\x0a        })\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Manage All Reusable Blocks\x27)), Object(external_this_wp_element_[\x22createElement\x22])(keyboard_shortcuts_help_menu_item, {\x0a        onSelect: onClose\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(copy_content_menu_item, null));\x0a    }));\x0a  }\x0a});\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules\x0avar toConsumableArray = __webpack_require__(17);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\x0avar defineProperty = __webpack_require__(15);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread.js\x0avar objectSpread = __webpack_require__(7);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/store/defaults.js\x0avar PREFERENCES_DEFAULTS = {\x0a  editorMode: \x27visual\x27,\x0a  isGeneralSidebarDismissed: false,\x0a  panels: {\x0a    \x27post-status\x27: {\x0a      opened: true\x0a    }\x0a  },\x0a  features: {\x0a    fixedToolbar: false\x0a  },\x0a  pinnedPluginItems: {},\x0a  hiddenBlockTypes: []\x0a};\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/store/reducer.js\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/**\x0a * The default active general sidebar: The \x22Document\x22 tab.\x0a *\x0a * @type {string}\x0a */\x0a\x0avar DEFAULT_ACTIVE_GENERAL_SIDEBAR = \x27edit-post/document\x27;\x0a/**\x0a * Higher-order reducer creator which provides the given initial state for the\x0a * original reducer.\x0a *\x0a * @param {*} initialState Initial state to provide to reducer.\x0a *\x0a * @return {Function} Higher-order reducer.\x0a */\x0a\x0avar createWithInitialState = function createWithInitialState(initialState) {\x0a  return function (reducer) {\x0a    return function () {\x0a      var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : initialState;\x0a      var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a      return reducer(state, action);\x0a    };\x0a  };\x0a};\x0a/**\x0a * Reducer returning the user preferences.\x0a *\x0a * @param {Object}  state                           Current state.\x0a * @param {string}  state.mode                      Current editor mode, either\x0a *                                                  \x22visual\x22 or \x22text\x22.\x0a * @param {boolean} state.isGeneralSidebarDismissed Whether general sidebar is\x0a *                                                  dismissed. False by default\x0a *                                                  or when closing general\x0a *                                                  sidebar, true when opening\x0a *                                                  sidebar.\x0a * @param {boolean} state.isSidebarOpened           Whether the sidebar is\x0a *                                                  opened or closed.\x0a * @param {Object}  state.panels                    The state of the different\x0a *                                                  sidebar panels.\x0a * @param {Object}  action                          Dispatched action.\x0a *\x0a * @return {Object} Updated state.\x0a */\x0a\x0a\x0avar preferences = Object(external_lodash_[\x22flow\x22])([external_this_wp_data_[\x22combineReducers\x22], createWithInitialState(PREFERENCES_DEFAULTS)])({\x0a  isGeneralSidebarDismissed: function isGeneralSidebarDismissed(state, action) {\x0a    switch (action.type) {\x0a      case \x27OPEN_GENERAL_SIDEBAR\x27:\x0a      case \x27CLOSE_GENERAL_SIDEBAR\x27:\x0a        return action.type === \x27CLOSE_GENERAL_SIDEBAR\x27;\x0a    }\x0a\x0a    return state;\x0a  },\x0a  panels: function panels(state, action) {\x0a    switch (action.type) {\x0a      case \x27TOGGLE_PANEL_ENABLED\x27:\x0a        {\x0a          var panelName = action.panelName;\x0a          return Object(objectSpread[\x22a\x22 /* default */])({}, state, Object(defineProperty[\x22a\x22 /* default */])({}, panelName, Object(objectSpread[\x22a\x22 /* default */])({}, state[panelName], {\x0a            enabled: !Object(external_lodash_[\x22get\x22])(state, [panelName, \x27enabled\x27], true)\x0a          })));\x0a        }\x0a\x0a      case \x27TOGGLE_PANEL_OPENED\x27:\x0a        {\x0a          var _panelName = action.panelName;\x0a          var isOpen = state[_panelName] === true || Object(external_lodash_[\x22get\x22])(state, [_panelName, \x27opened\x27], false);\x0a          return Object(objectSpread[\x22a\x22 /* default */])({}, state, Object(defineProperty[\x22a\x22 /* default */])({}, _panelName, Object(objectSpread[\x22a\x22 /* default */])({}, state[_panelName], {\x0a            opened: !isOpen\x0a          })));\x0a        }\x0a    }\x0a\x0a    return state;\x0a  },\x0a  features: function features(state, action) {\x0a    if (action.type === \x27TOGGLE_FEATURE\x27) {\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, Object(defineProperty[\x22a\x22 /* default */])({}, action.feature, !state[action.feature]));\x0a    }\x0a\x0a    return state;\x0a  },\x0a  editorMode: function editorMode(state, action) {\x0a    if (action.type === \x27SWITCH_MODE\x27) {\x0a      return action.mode;\x0a    }\x0a\x0a    return state;\x0a  },\x0a  pinnedPluginItems: function pinnedPluginItems(state, action) {\x0a    if (action.type === \x27TOGGLE_PINNED_PLUGIN_ITEM\x27) {\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, Object(defineProperty[\x22a\x22 /* default */])({}, action.pluginName, !Object(external_lodash_[\x22get\x22])(state, [action.pluginName], true)));\x0a    }\x0a\x0a    return state;\x0a  },\x0a  hiddenBlockTypes: function hiddenBlockTypes(state, action) {\x0a    switch (action.type) {\x0a      case \x27SHOW_BLOCK_TYPES\x27:\x0a        return external_lodash_[\x22without\x22].apply(void 0, [state].concat(Object(toConsumableArray[\x22a\x22 /* default */])(action.blockNames)));\x0a\x0a      case \x27HIDE_BLOCK_TYPES\x27:\x0a        return Object(external_lodash_[\x22union\x22])(state, action.blockNames);\x0a    }\x0a\x0a    return state;\x0a  }\x0a});\x0a/**\x0a * Reducer storing the list of all programmatically removed panels.\x0a *\x0a * @param {Array}  state  Current state.\x0a * @param {Object} action Action object.\x0a *\x0a * @return {Array} Updated state.\x0a */\x0a\x0afunction removedPanels() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : [];\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27REMOVE_PANEL\x27:\x0a      if (!Object(external_lodash_[\x22includes\x22])(state, action.panelName)) {\x0a        return [].concat(Object(toConsumableArray[\x22a\x22 /* default */])(state), [action.panelName]);\x0a      }\x0a\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning the next active general sidebar state. The active general\x0a * sidebar is a unique name to identify either an editor or plugin sidebar.\x0a *\x0a * @param {?string} state  Current state.\x0a * @param {Object}  action Action object.\x0a *\x0a * @return {?string} Updated state.\x0a */\x0a\x0afunction reducer_activeGeneralSidebar() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ACTIVE_GENERAL_SIDEBAR;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27OPEN_GENERAL_SIDEBAR\x27:\x0a      return action.name;\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer for storing the name of the open modal, or null if no modal is open.\x0a *\x0a * @param {Object} state  Previous state.\x0a * @param {Object} action Action object containing the `name` of the modal\x0a *\x0a * @return {Object} Updated state\x0a */\x0a\x0afunction activeModal() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : null;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27OPEN_MODAL\x27:\x0a      return action.name;\x0a\x0a    case \x27CLOSE_MODAL\x27:\x0a      return null;\x0a  }\x0a\x0a  return state;\x0a}\x0afunction publishSidebarActive() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : false;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27OPEN_PUBLISH_SIDEBAR\x27:\x0a      return true;\x0a\x0a    case \x27CLOSE_PUBLISH_SIDEBAR\x27:\x0a      return false;\x0a\x0a    case \x27TOGGLE_PUBLISH_SIDEBAR\x27:\x0a      return !state;\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer keeping track of the meta boxes isSaving state.\x0a * A \x22true\x22 value means the meta boxes saving request is in-flight.\x0a *\x0a *\x0a * @param {boolean}  state   Previous state.\x0a * @param {Object}   action  Action Object.\x0a *\x0a * @return {Object} Updated state.\x0a */\x0a\x0afunction isSavingMetaBoxes() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : false;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27REQUEST_META_BOX_UPDATES\x27:\x0a      return true;\x0a\x0a    case \x27META_BOX_UPDATES_SUCCESS\x27:\x0a      return false;\x0a\x0a    default:\x0a      return state;\x0a  }\x0a}\x0a/**\x0a * Reducer keeping track of the meta boxes per location.\x0a *\x0a * @param {boolean}  state   Previous state.\x0a * @param {Object}   action  Action Object.\x0a *\x0a * @return {Object} Updated state.\x0a */\x0a\x0afunction metaBoxLocations() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27SET_META_BOXES_PER_LOCATIONS\x27:\x0a      return action.metaBoxesPerLocation;\x0a  }\x0a\x0a  return state;\x0a}\x0avar reducer_metaBoxes = Object(external_this_wp_data_[\x22combineReducers\x22])({\x0a  isSaving: isSavingMetaBoxes,\x0a  locations: metaBoxLocations\x0a});\x0a/* harmony default export */ var reducer = (Object(external_this_wp_data_[\x22combineReducers\x22])({\x0a  activeGeneralSidebar: reducer_activeGeneralSidebar,\x0a  activeModal: activeModal,\x0a  metaBoxes: reducer_metaBoxes,\x0a  preferences: preferences,\x0a  publishSidebarActive: publishSidebarActive,\x0a  removedPanels: removedPanels\x0a}));\x0a\x0a// EXTERNAL MODULE: ./node_modules/refx/refx.js\x0avar refx = __webpack_require__(70);\x0avar refx_default = /*#__PURE__*/__webpack_require__.n(refx);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\x0avar slicedToArray = __webpack_require__(28);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22a11y\x22]}\x0avar external_this_wp_a11y_ = __webpack_require__(48);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22apiFetch\x22]}\x0avar external_this_wp_apiFetch_ = __webpack_require__(33);\x0avar external_this_wp_apiFetch_default = /*#__PURE__*/__webpack_require__.n(external_this_wp_apiFetch_);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/store/actions.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * Returns an action object used in signalling that the user opened an editor sidebar.\x0a *\x0a * @param {string} name Sidebar name to be opened.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction actions_openGeneralSidebar(name) {\x0a  return {\x0a    type: \x27OPEN_GENERAL_SIDEBAR\x27,\x0a    name: name\x0a  };\x0a}\x0a/**\x0a * Returns an action object signalling that the user closed the sidebar.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction actions_closeGeneralSidebar() {\x0a  return {\x0a    type: \x27CLOSE_GENERAL_SIDEBAR\x27\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that the user opened a modal.\x0a *\x0a * @param {string} name A string that uniquely identifies the modal.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction actions_openModal(name) {\x0a  return {\x0a    type: \x27OPEN_MODAL\x27,\x0a    name: name\x0a  };\x0a}\x0a/**\x0a * Returns an action object signalling that the user closed a modal.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction actions_closeModal() {\x0a  return {\x0a    type: \x27CLOSE_MODAL\x27\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that the user opened the publish\x0a * sidebar.\x0a *\x0a * @return {Object} Action object\x0a */\x0a\x0afunction openPublishSidebar() {\x0a  return {\x0a    type: \x27OPEN_PUBLISH_SIDEBAR\x27\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that the user closed the\x0a * publish sidebar.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction actions_closePublishSidebar() {\x0a  return {\x0a    type: \x27CLOSE_PUBLISH_SIDEBAR\x27\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that the user toggles the publish sidebar.\x0a *\x0a * @return {Object} Action object\x0a */\x0a\x0afunction actions_togglePublishSidebar() {\x0a  return {\x0a    type: \x27TOGGLE_PUBLISH_SIDEBAR\x27\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to enable or disable a panel in the editor.\x0a *\x0a * @param {string} panelName A string that identifies the panel to enable or disable.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction toggleEditorPanelEnabled(panelName) {\x0a  return {\x0a    type: \x27TOGGLE_PANEL_ENABLED\x27,\x0a    panelName: panelName\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to open or close a panel in the editor.\x0a *\x0a * @param {string} panelName A string that identifies the panel to open or close.\x0a *\x0a * @return {Object} Action object.\x0a*/\x0a\x0afunction actions_toggleEditorPanelOpened(panelName) {\x0a  return {\x0a    type: \x27TOGGLE_PANEL_OPENED\x27,\x0a    panelName: panelName\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to remove a panel from the editor.\x0a *\x0a * @param {string} panelName A string that identifies the panel to remove.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction removeEditorPanel(panelName) {\x0a  return {\x0a    type: \x27REMOVE_PANEL\x27,\x0a    panelName: panelName\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to toggle a feature flag.\x0a *\x0a * @param {string} feature Feature name.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction toggleFeature(feature) {\x0a  return {\x0a    type: \x27TOGGLE_FEATURE\x27,\x0a    feature: feature\x0a  };\x0a}\x0afunction switchEditorMode(mode) {\x0a  return {\x0a    type: \x27SWITCH_MODE\x27,\x0a    mode: mode\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to toggle a plugin name flag.\x0a *\x0a * @param {string} pluginName Plugin name.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction togglePinnedPluginItem(pluginName) {\x0a  return {\x0a    type: \x27TOGGLE_PINNED_PLUGIN_ITEM\x27,\x0a    pluginName: pluginName\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that block types by the given\x0a * name(s) should be hidden.\x0a *\x0a * @param {string[]} blockNames Names of block types to hide.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction actions_hideBlockTypes(blockNames) {\x0a  return {\x0a    type: \x27HIDE_BLOCK_TYPES\x27,\x0a    blockNames: Object(external_lodash_[\x22castArray\x22])(blockNames)\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that block types by the given\x0a * name(s) should be shown.\x0a *\x0a * @param {string[]} blockNames Names of block types to show.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction actions_showBlockTypes(blockNames) {\x0a  return {\x0a    type: \x27SHOW_BLOCK_TYPES\x27,\x0a    blockNames: Object(external_lodash_[\x22castArray\x22])(blockNames)\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signaling\x0a * what Meta boxes are available in which location.\x0a *\x0a * @param {Object} metaBoxesPerLocation Meta boxes per location.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction setAvailableMetaBoxesPerLocation(metaBoxesPerLocation) {\x0a  return {\x0a    type: \x27SET_META_BOXES_PER_LOCATIONS\x27,\x0a    metaBoxesPerLocation: metaBoxesPerLocation\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to request meta box update.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction requestMetaBoxUpdates() {\x0a  return {\x0a    type: \x27REQUEST_META_BOX_UPDATES\x27\x0a  };\x0a}\x0a/**\x0a * Returns an action object used signal a successful meta box update.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction metaBoxUpdatesSuccess() {\x0a  return {\x0a    type: \x27META_BOX_UPDATES_SUCCESS\x27\x0a  };\x0a}\x0a\x0a// EXTERNAL MODULE: ./node_modules/rememo/es/rememo.js\x0avar rememo = __webpack_require__(30);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/store/selectors.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a\x0a/**\x0a * Returns the current editing mode.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {string} Editing mode.\x0a */\x0a\x0afunction getEditorMode(state) {\x0a  return getPreference(state, \x27editorMode\x27, \x27visual\x27);\x0a}\x0a/**\x0a * Returns true if the editor sidebar is opened.\x0a *\x0a * @param {Object} state Global application state\x0a *\x0a * @return {boolean} Whether the editor sidebar is opened.\x0a */\x0a\x0afunction selectors_isEditorSidebarOpened(state) {\x0a  var activeGeneralSidebar = getActiveGeneralSidebarName(state);\x0a  return Object(external_lodash_[\x22includes\x22])([\x27edit-post/document\x27, \x27edit-post/block\x27], activeGeneralSidebar);\x0a}\x0a/**\x0a * Returns true if the plugin sidebar is opened.\x0a *\x0a * @param {Object} state Global application state\x0a * @return {boolean}     Whether the plugin sidebar is opened.\x0a */\x0a\x0afunction isPluginSidebarOpened(state) {\x0a  var activeGeneralSidebar = getActiveGeneralSidebarName(state);\x0a  return !!activeGeneralSidebar && !selectors_isEditorSidebarOpened(state);\x0a}\x0a/**\x0a * Returns the current active general sidebar name, or null if there is no\x0a * general sidebar active. The active general sidebar is a unique name to\x0a * identify either an editor or plugin sidebar.\x0a *\x0a * Examples:\x0a *\x0a *  - `edit-post/document`\x0a *  - `my-plugin/insert-image-sidebar`\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {?string} Active general sidebar name.\x0a */\x0a\x0afunction getActiveGeneralSidebarName(state) {\x0a  // Dismissal takes precedent.\x0a  var isDismissed = getPreference(state, \x27isGeneralSidebarDismissed\x27, false);\x0a\x0a  if (isDismissed) {\x0a    return null;\x0a  }\x0a\x0a  return state.activeGeneralSidebar;\x0a}\x0a/**\x0a * Returns the preferences (these preferences are persisted locally).\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {Object} Preferences Object.\x0a */\x0a\x0afunction getPreferences(state) {\x0a  return state.preferences;\x0a}\x0a/**\x0a *\x0a * @param {Object} state         Global application state.\x0a * @param {string} preferenceKey Preference Key.\x0a * @param {Mixed}  defaultValue  Default Value.\x0a *\x0a * @return {Mixed} Preference Value.\x0a */\x0a\x0afunction getPreference(state, preferenceKey, defaultValue) {\x0a  var preferences = getPreferences(state);\x0a  var value = preferences[preferenceKey];\x0a  return value === undefined ? defaultValue : value;\x0a}\x0a/**\x0a * Returns true if the publish sidebar is opened.\x0a *\x0a * @param {Object} state Global application state\x0a *\x0a * @return {boolean} Whether the publish sidebar is open.\x0a */\x0a\x0afunction selectors_isPublishSidebarOpened(state) {\x0a  return state.publishSidebarActive;\x0a}\x0a/**\x0a * Returns true if the given panel was programmatically removed, or false otherwise.\x0a * All panels are not removed by default.\x0a *\x0a * @param {Object} state     Global application state.\x0a * @param {string} panelName A string that identifies the panel.\x0a *\x0a * @return {boolean} Whether or not the panel is removed.\x0a */\x0a\x0afunction isEditorPanelRemoved(state, panelName) {\x0a  return Object(external_lodash_[\x22includes\x22])(state.removedPanels, panelName);\x0a}\x0a/**\x0a * Returns true if the given panel is enabled, or false otherwise. Panels are\x0a * enabled by default.\x0a *\x0a * @param {Object} state     Global application state.\x0a * @param {string} panelName A string that identifies the panel.\x0a *\x0a * @return {boolean} Whether or not the panel is enabled.\x0a */\x0a\x0afunction selectors_isEditorPanelEnabled(state, panelName) {\x0a  var panels = getPreference(state, \x27panels\x27);\x0a  return !isEditorPanelRemoved(state, panelName) && Object(external_lodash_[\x22get\x22])(panels, [panelName, \x27enabled\x27], true);\x0a}\x0a/**\x0a * Returns true if the given panel is open, or false otherwise. Panels are\x0a * closed by default.\x0a *\x0a * @param  {Object}  state     Global application state.\x0a * @param  {string}  panelName A string that identifies the panel.\x0a *\x0a * @return {boolean} Whether or not the panel is open.\x0a */\x0a\x0afunction selectors_isEditorPanelOpened(state, panelName) {\x0a  var panels = getPreference(state, \x27panels\x27);\x0a  return panels[panelName] === true || Object(external_lodash_[\x22get\x22])(panels, [panelName, \x27opened\x27], false);\x0a}\x0a/**\x0a * Returns true if a modal is active, or false otherwise.\x0a *\x0a * @param  {Object}  state \x09   Global application state.\x0a * @param  {string}  modalName A string that uniquely identifies the modal.\x0a *\x0a * @return {boolean} Whether the modal is active.\x0a */\x0a\x0afunction selectors_isModalActive(state, modalName) {\x0a  return state.activeModal === modalName;\x0a}\x0a/**\x0a * Returns whether the given feature is enabled or not.\x0a *\x0a * @param {Object} state   Global application state.\x0a * @param {string} feature Feature slug.\x0a *\x0a * @return {boolean} Is active.\x0a */\x0a\x0afunction isFeatureActive(state, feature) {\x0a  return !!state.preferences.features[feature];\x0a}\x0a/**\x0a * Returns true if the plugin item is pinned to the header.\x0a * When the value is not set it defaults to true.\x0a *\x0a * @param  {Object}  state      Global application state.\x0a * @param  {string}  pluginName Plugin item name.\x0a *\x0a * @return {boolean} Whether the plugin item is pinned.\x0a */\x0a\x0afunction isPluginItemPinned(state, pluginName) {\x0a  var pinnedPluginItems = getPreference(state, \x27pinnedPluginItems\x27, {});\x0a  return Object(external_lodash_[\x22get\x22])(pinnedPluginItems, [pluginName], true);\x0a}\x0a/**\x0a * Returns an array of active meta box locations.\x0a *\x0a * @param {Object} state Post editor state.\x0a *\x0a * @return {string[]} Active meta box locations.\x0a */\x0a\x0avar getActiveMetaBoxLocations = Object(rememo[\x22a\x22 /* default */])(function (state) {\x0a  return Object.keys(state.metaBoxes.locations).filter(function (location) {\x0a    return isMetaBoxLocationActive(state, location);\x0a  });\x0a}, function (state) {\x0a  return [state.metaBoxes.locations];\x0a});\x0a/**\x0a * Returns true if a metabox location is active and visible\x0a *\x0a * @param {Object} state    Post editor state.\x0a * @param {string} location Meta box location to test.\x0a *\x0a * @return {boolean} Whether the meta box location is active and visible.\x0a */\x0a\x0afunction isMetaBoxLocationVisible(state, location) {\x0a  return isMetaBoxLocationActive(state, location) && Object(external_lodash_[\x22some\x22])(getMetaBoxesPerLocation(state, location), function (_ref) {\x0a    var id = _ref.id;\x0a    return selectors_isEditorPanelEnabled(state, \x22meta-box-\x22.concat(id));\x0a  });\x0a}\x0a/**\x0a * Returns true if there is an active meta box in the given location, or false\x0a * otherwise.\x0a *\x0a * @param {Object} state    Post editor state.\x0a * @param {string} location Meta box location to test.\x0a *\x0a * @return {boolean} Whether the meta box location is active.\x0a */\x0a\x0afunction isMetaBoxLocationActive(state, location) {\x0a  var metaBoxes = getMetaBoxesPerLocation(state, location);\x0a  return !!metaBoxes && metaBoxes.length !== 0;\x0a}\x0a/**\x0a * Returns the list of all the available meta boxes for a given location.\x0a *\x0a * @param {Object} state    Global application state.\x0a * @param {string} location Meta box location to test.\x0a *\x0a * @return {?Array} List of meta boxes.\x0a */\x0a\x0afunction getMetaBoxesPerLocation(state, location) {\x0a  return state.metaBoxes.locations[location];\x0a}\x0a/**\x0a * Returns the list of all the available meta boxes.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {Array} List of meta boxes.\x0a */\x0a\x0avar getAllMetaBoxes = Object(rememo[\x22a\x22 /* default */])(function (state) {\x0a  return Object(external_lodash_[\x22flatten\x22])(Object(external_lodash_[\x22values\x22])(state.metaBoxes.locations));\x0a}, function (state) {\x0a  return [state.metaBoxes.locations];\x0a});\x0a/**\x0a * Returns true if the post is using Meta Boxes\x0a *\x0a * @param  {Object} state Global application state\x0a *\x0a * @return {boolean} Whether there are metaboxes or not.\x0a */\x0a\x0afunction hasMetaBoxes(state) {\x0a  return getActiveMetaBoxLocations(state).length \x3e 0;\x0a}\x0a/**\x0a * Returns true if the Meta Boxes are being saved.\x0a *\x0a * @param   {Object}  state Global application state.\x0a *\x0a * @return {boolean} Whether the metaboxes are being saved.\x0a */\x0a\x0afunction selectors_isSavingMetaBoxes(state) {\x0a  return state.metaBoxes.isSaving;\x0a}\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/utils/meta-boxes.js\x0a/**\x0a * Function returning the current Meta Boxes DOM Node in the editor\x0a * whether the meta box area is opened or not.\x0a * If the MetaBox Area is visible returns it, and returns the original container instead.\x0a *\x0a * @param   {string} location Meta Box location.\x0a * @return {string}          HTML content.\x0a */\x0avar getMetaBoxContainer = function getMetaBoxContainer(location) {\x0a  var area = document.querySelector(\x22.edit-post-meta-boxes-area.is-\x22.concat(location, \x22 .metabox-location-\x22).concat(location));\x0a\x0a  if (area) {\x0a    return area;\x0a  }\x0a\x0a  return document.querySelector(\x27#metaboxes .metabox-location-\x27 + location);\x0a};\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/store/utils.js\x0a/**\x0a * Given a selector returns a functions that returns the listener only\x0a * if the returned value from the selector changes.\x0a *\x0a * @param  {function} selector Selector.\x0a * @param  {function} listener Listener.\x0a * @return {function}          Listener creator.\x0a */\x0avar onChangeListener = function onChangeListener(selector, listener) {\x0a  var previousValue = selector();\x0a  return function () {\x0a    var selectedValue = selector();\x0a\x0a    if (selectedValue !== previousValue) {\x0a      previousValue = selectedValue;\x0a      listener(selectedValue);\x0a    }\x0a  };\x0a};\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/store/effects.js\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0avar VIEW_AS_LINK_SELECTOR = \x27#wp-admin-bar-view a\x27;\x0avar effects = {\x0a  SET_META_BOXES_PER_LOCATIONS: function SET_META_BOXES_PER_LOCATIONS(action, store) {\x0a    // Allow toggling metaboxes panels\x0a    // We need to wait for all scripts to load\x0a    // If the meta box loads the post script, it will already trigger this.\x0a    // After merge in Core, make sure to drop the timeout and update the postboxes script\x0a    // to avoid the double binding.\x0a    setTimeout(function () {\x0a      var postType = Object(external_this_wp_data_[\x22select\x22])(\x27core/editor\x27).getCurrentPostType();\x0a\x0a      if (window.postboxes.page !== postType) {\x0a        window.postboxes.add_postbox_toggles(postType);\x0a      }\x0a    });\x0a    var wasSavingPost = Object(external_this_wp_data_[\x22select\x22])(\x27core/editor\x27).isSavingPost();\x0a    var wasAutosavingPost = Object(external_this_wp_data_[\x22select\x22])(\x27core/editor\x27).isAutosavingPost(); // Save metaboxes when performing a full save on the post.\x0a\x0a    Object(external_this_wp_data_[\x22subscribe\x22])(function () {\x0a      var isSavingPost = Object(external_this_wp_data_[\x22select\x22])(\x27core/editor\x27).isSavingPost();\x0a      var isAutosavingPost = Object(external_this_wp_data_[\x22select\x22])(\x27core/editor\x27).isAutosavingPost();\x0a      var hasActiveMetaBoxes = Object(external_this_wp_data_[\x22select\x22])(\x27core/edit-post\x27).hasMetaBoxes(); // Save metaboxes on save completion, except for autosaves that are not a post preview.\x0a\x0a      var shouldTriggerMetaboxesSave = hasActiveMetaBoxes && wasSavingPost && !isSavingPost && !wasAutosavingPost; // Save current state for next inspection.\x0a\x0a      wasSavingPost = isSavingPost;\x0a      wasAutosavingPost = isAutosavingPost;\x0a\x0a      if (shouldTriggerMetaboxesSave) {\x0a        store.dispatch(requestMetaBoxUpdates());\x0a      }\x0a    });\x0a  },\x0a  REQUEST_META_BOX_UPDATES: function REQUEST_META_BOX_UPDATES(action, store) {\x0a    // Saves the wp_editor fields\x0a    if (window.tinyMCE) {\x0a      window.tinyMCE.triggerSave();\x0a    }\x0a\x0a    var state = store.getState(); // Additional data needed for backward compatibility.\x0a    // If we do not provide this data, the post will be overridden with the default values.\x0a\x0a    var post = Object(external_this_wp_data_[\x22select\x22])(\x27core/editor\x27).getCurrentPost(state);\x0a    var additionalData = [post.comment_status ? [\x27comment_status\x27, post.comment_status] : false, post.ping_status ? [\x27ping_status\x27, post.ping_status] : false, post.sticky ? [\x27sticky\x27, post.sticky] : false, [\x27post_author\x27, post.author]].filter(Boolean); // We gather all the metaboxes locations data and the base form data\x0a\x0a    var baseFormData = new window.FormData(document.querySelector(\x27.metabox-base-form\x27));\x0a    var formDataToMerge = [baseFormData].concat(Object(toConsumableArray[\x22a\x22 /* default */])(getActiveMetaBoxLocations(state).map(function (location) {\x0a      return new window.FormData(getMetaBoxContainer(location));\x0a    }))); // Merge all form data objects into a single one.\x0a\x0a    var formData = Object(external_lodash_[\x22reduce\x22])(formDataToMerge, function (memo, currentFormData) {\x0a      var _iteratorNormalCompletion = true;\x0a      var _didIteratorError = false;\x0a      var _iteratorError = undefined;\x0a\x0a      try {\x0a        for (var _iterator = currentFormData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\x0a          var _step$value = Object(slicedToArray[\x22a\x22 /* default */])(_step.value, 2),\x0a              key = _step$value[0],\x0a              value = _step$value[1];\x0a\x0a          memo.append(key, value);\x0a        }\x0a      } catch (err) {\x0a        _didIteratorError = true;\x0a        _iteratorError = err;\x0a      } finally {\x0a        try {\x0a          if (!_iteratorNormalCompletion && _iterator.return != null) {\x0a            _iterator.return();\x0a          }\x0a        } finally {\x0a          if (_didIteratorError) {\x0a            throw _iteratorError;\x0a          }\x0a        }\x0a      }\x0a\x0a      return memo;\x0a    }, new window.FormData());\x0a    additionalData.forEach(function (_ref) {\x0a      var _ref2 = Object(slicedToArray[\x22a\x22 /* default */])(_ref, 2),\x0a          key = _ref2[0],\x0a          value = _ref2[1];\x0a\x0a      return formData.append(key, value);\x0a    }); // Save the metaboxes\x0a\x0a    external_this_wp_apiFetch_default()({\x0a      url: window._wpMetaBoxUrl,\x0a      method: \x27POST\x27,\x0a      body: formData,\x0a      parse: false\x0a    }).then(function () {\x0a      return store.dispatch(metaBoxUpdatesSuccess());\x0a    });\x0a  },\x0a  SWITCH_MODE: function SWITCH_MODE(action) {\x0a    // Unselect blocks when we switch to the code editor.\x0a    if (action.mode !== \x27visual\x27) {\x0a      Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/block-editor\x27).clearSelectedBlock();\x0a    }\x0a\x0a    var message = action.mode === \x27visual\x27 ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Visual editor selected\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Code editor selected\x27);\x0a    Object(external_this_wp_a11y_[\x22speak\x22])(message, \x27assertive\x27);\x0a  },\x0a  INIT: function INIT(_, store) {\x0a    // Select the block settings tab when the selected block changes\x0a    Object(external_this_wp_data_[\x22subscribe\x22])(onChangeListener(function () {\x0a      return !!Object(external_this_wp_data_[\x22select\x22])(\x27core/block-editor\x27).getBlockSelectionStart();\x0a    }, function (hasBlockSelection) {\x0a      if (!Object(external_this_wp_data_[\x22select\x22])(\x27core/edit-post\x27).isEditorSidebarOpened()) {\x0a        return;\x0a      }\x0a\x0a      if (hasBlockSelection) {\x0a        store.dispatch(actions_openGeneralSidebar(\x27edit-post/block\x27));\x0a      } else {\x0a        store.dispatch(actions_openGeneralSidebar(\x27edit-post/document\x27));\x0a      }\x0a    }));\x0a\x0a    var isMobileViewPort = function isMobileViewPort() {\x0a      return Object(external_this_wp_data_[\x22select\x22])(\x27core/viewport\x27).isViewportMatch(\x27\x3c medium\x27);\x0a    };\x0a\x0a    var adjustSidebar = function () {\x0a      // contains the sidebar we close when going to viewport sizes lower than medium.\x0a      // This allows to reopen it when going again to viewport sizes greater than medium.\x0a      var sidebarToReOpenOnExpand = null;\x0a      return function (isSmall) {\x0a        if (isSmall) {\x0a          sidebarToReOpenOnExpand = getActiveGeneralSidebarName(store.getState());\x0a\x0a          if (sidebarToReOpenOnExpand) {\x0a            store.dispatch(actions_closeGeneralSidebar());\x0a          }\x0a        } else if (sidebarToReOpenOnExpand && !getActiveGeneralSidebarName(store.getState())) {\x0a          store.dispatch(actions_openGeneralSidebar(sidebarToReOpenOnExpand));\x0a        }\x0a      };\x0a    }();\x0a\x0a    adjustSidebar(isMobileViewPort()); // Collapse sidebar when viewport shrinks.\x0a    // Reopen sidebar it if viewport expands and it was closed because of a previous shrink.\x0a\x0a    Object(external_this_wp_data_[\x22subscribe\x22])(onChangeListener(isMobileViewPort, adjustSidebar)); // Update View as link when currentPost link changes\x0a\x0a    var updateViewAsLink = function updateViewAsLink(newPermalink) {\x0a      if (!newPermalink) {\x0a        return;\x0a      }\x0a\x0a      var nodeToUpdate = document.querySelector(VIEW_AS_LINK_SELECTOR);\x0a\x0a      if (!nodeToUpdate) {\x0a        return;\x0a      }\x0a\x0a      nodeToUpdate.setAttribute(\x27href\x27, newPermalink);\x0a    };\x0a\x0a    Object(external_this_wp_data_[\x22subscribe\x22])(onChangeListener(function () {\x0a      return Object(external_this_wp_data_[\x22select\x22])(\x27core/editor\x27).getCurrentPost().link;\x0a    }, updateViewAsLink));\x0a  }\x0a};\x0a/* harmony default export */ var store_effects = (effects);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/store/middlewares.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/**\x0a * Applies the custom middlewares used specifically in the editor module.\x0a *\x0a * @param {Object} store Store Object.\x0a *\x0a * @return {Object} Update Store Object.\x0a */\x0a\x0afunction applyMiddlewares(store) {\x0a  var middlewares = [refx_default()(store_effects)];\x0a\x0a  var enhancedDispatch = function enhancedDispatch() {\x0a    throw new Error(\x27Dispatching while constructing your middleware is not allowed. \x27 + \x27Other middleware would not be applied to this dispatch.\x27);\x0a  };\x0a\x0a  var chain = [];\x0a  var middlewareAPI = {\x0a    getState: store.getState,\x0a    dispatch: function dispatch() {\x0a      return enhancedDispatch.apply(void 0, arguments);\x0a    }\x0a  };\x0a  chain = middlewares.map(function (middleware) {\x0a    return middleware(middlewareAPI);\x0a  });\x0a  enhancedDispatch = external_lodash_[\x22flowRight\x22].apply(void 0, Object(toConsumableArray[\x22a\x22 /* default */])(chain))(store.dispatch);\x0a  store.dispatch = enhancedDispatch;\x0a  return store;\x0a}\x0a\x0a/* harmony default export */ var store_middlewares = (applyMiddlewares);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/store/index.js\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0avar store_store = Object(external_this_wp_data_[\x22registerStore\x22])(\x27core/edit-post\x27, {\x0a  reducer: reducer,\x0a  actions: actions_namespaceObject,\x0a  selectors: selectors_namespaceObject,\x0a  persist: [\x27preferences\x27]\x0a});\x0astore_middlewares(store_store);\x0astore_store.dispatch({\x0a  type: \x27INIT\x27\x0a});\x0a/* harmony default export */ var build_module_store = (store_store);\x0a\x0a// EXTERNAL MODULE: ./node_modules/memize/index.js\x0avar memize = __webpack_require__(41);\x0avar memize_default = /*#__PURE__*/__webpack_require__.n(memize);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/prevent-event-discovery.js\x0a/* harmony default export */ var prevent_event_discovery = ({\x0a  \x27t a l e s o f g u t e n b e r g\x27: function tALESOFGUTENBERG(event) {\x0a    if (!document.activeElement.classList.contains(\x27edit-post-visual-editor\x27) && document.activeElement !== document.body) {\x0a      return;\x0a    }\x0a\x0a    event.preventDefault();\x0a    window.wp.data.dispatch(\x27core/block-editor\x27).insertBlock(window.wp.blocks.createBlock(\x27core/paragraph\x27, {\x0a      content: \x27\xf0\x9f\x90\xa1\xf0\x9f\x90\xa2\xf0\x9f\xa6\x80\xf0\x9f\x90\xa4\xf0\x9f\xa6\x8b\xf0\x9f\x90\x98\xf0\x9f\x90\xa7\xf0\x9f\x90\xb9\xf0\x9f\xa6\x81\xf0\x9f\xa6\x84\xf0\x9f\xa6\x8d\xf0\x9f\x90\xbc\xf0\x9f\x90\xbf\xf0\x9f\x8e\x83\xf0\x9f\x90\xb4\xf0\x9f\x90\x9d\xf0\x9f\x90\x86\xf0\x9f\xa6\x95\xf0\x9f\xa6\x94\xf0\x9f\x8c\xb1\xf0\x9f\x8d\x87\xcf\x80\xf0\x9f\x8d\x8c\xf0\x9f\x90\x89\xf0\x9f\x92\xa7\xf0\x9f\xa5\xa8\xf0\x9f\x8c\x8c\xf0\x9f\x8d\x82\xf0\x9f\x8d\xa0\xf0\x9f\xa5\xa6\xf0\x9f\xa5\x9a\xf0\x9f\xa5\x9d\xf0\x9f\x8e\x9f\xf0\x9f\xa5\xa5\xf0\x9f\xa5\x92\xf0\x9f\x9b\xb5\xf0\x9f\xa5\x96\xf0\x9f\x8d\x92\xf0\x9f\x8d\xaf\xf0\x9f\x8e\xbe\xf0\x9f\x8e\xb2\xf0\x9f\x90\xba\xf0\x9f\x90\x9a\xf0\x9f\x90\xae\xe2\x8c\x9b\xef\xb8\x8f\x27\x0a    }));\x0a  }\x0a});\x0a\x0a// EXTERNAL MODULE: ./node_modules/classnames/index.js\x0avar classnames = __webpack_require__(16);\x0avar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/browser-url/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Returns the Post\x27s Edit URL.\x0a *\x0a * @param {number} postId Post ID.\x0a *\x0a * @return {string} Post edit URL.\x0a */\x0a\x0afunction getPostEditURL(postId) {\x0a  return Object(external_this_wp_url_[\x22addQueryArgs\x22])(\x27post.php\x27, {\x0a    post: postId,\x0a    action: \x27edit\x27\x0a  });\x0a}\x0a/**\x0a * Returns the Post\x27s Trashed URL.\x0a *\x0a * @param {number} postId    Post ID.\x0a * @param {string} postType Post Type.\x0a *\x0a * @return {string} Post trashed URL.\x0a */\x0a\x0afunction getPostTrashedURL(postId, postType) {\x0a  return Object(external_this_wp_url_[\x22addQueryArgs\x22])(\x27edit.php\x27, {\x0a    trashed: 1,\x0a    post_type: postType,\x0a    ids: postId\x0a  });\x0a}\x0avar browser_url_BrowserURL =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(BrowserURL, _Component);\x0a\x0a  function BrowserURL() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, BrowserURL);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(BrowserURL).apply(this, arguments));\x0a    _this.state = {\x0a      historyId: null\x0a    };\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(BrowserURL, [{\x0a    key: \x22componentDidUpdate\x22,\x0a    value: function componentDidUpdate(prevProps) {\x0a      var _this$props = this.props,\x0a          postId = _this$props.postId,\x0a          postStatus = _this$props.postStatus,\x0a          postType = _this$props.postType;\x0a      var historyId = this.state.historyId;\x0a\x0a      if (postStatus === \x27trash\x27) {\x0a        this.setTrashURL(postId, postType);\x0a        return;\x0a      }\x0a\x0a      if ((postId !== prevProps.postId || postId !== historyId) && postStatus !== \x27auto-draft\x27) {\x0a        this.setBrowserURL(postId);\x0a      }\x0a    }\x0a    /**\x0a     * Navigates the browser to the post trashed URL to show a notice about the trashed post.\x0a     *\x0a     * @param {number} postId    Post ID.\x0a     * @param {string} postType  Post Type.\x0a     */\x0a\x0a  }, {\x0a    key: \x22setTrashURL\x22,\x0a    value: function setTrashURL(postId, postType) {\x0a      window.location.href = getPostTrashedURL(postId, postType);\x0a    }\x0a    /**\x0a     * Replaces the browser URL with a post editor link for the given post ID.\x0a     *\x0a     * Note it is important that, since this function may be called when the\x0a     * editor first loads, the result generated `getPostEditURL` matches that\x0a     * produced by the server. Otherwise, the URL will change unexpectedly.\x0a     *\x0a     * @param {number} postId Post ID for which to generate post editor URL.\x0a     */\x0a\x0a  }, {\x0a    key: \x22setBrowserURL\x22,\x0a    value: function setBrowserURL(postId) {\x0a      window.history.replaceState({\x0a        id: postId\x0a      }, \x27Post \x27 + postId, getPostEditURL(postId));\x0a      this.setState(function () {\x0a        return {\x0a          historyId: postId\x0a        };\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      return null;\x0a    }\x0a  }]);\x0a\x0a  return BrowserURL;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a/* harmony default export */ var browser_url = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getCurrentPost = _select.getCurrentPost;\x0a\x0a  var _getCurrentPost = getCurrentPost(),\x0a      id = _getCurrentPost.id,\x0a      status = _getCurrentPost.status,\x0a      type = _getCurrentPost.type;\x0a\x0a  return {\x0a    postId: id,\x0a    postStatus: status,\x0a    postType: type\x0a  };\x0a})(browser_url_BrowserURL));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/keyboard-shortcuts.js\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a/* harmony default export */ var keyboard_shortcuts = ({\x0a  toggleEditorMode: {\x0a    raw: external_this_wp_keycodes_[\x22rawShortcut\x22].secondary(\x27m\x27),\x0a    display: external_this_wp_keycodes_[\x22displayShortcut\x22].secondary(\x27m\x27)\x0a  },\x0a  toggleSidebar: {\x0a    raw: external_this_wp_keycodes_[\x22rawShortcut\x22].primaryShift(\x27,\x27),\x0a    display: external_this_wp_keycodes_[\x22displayShortcut\x22].primaryShift(\x27,\x27),\x0a    ariaLabel: external_this_wp_keycodes_[\x22shortcutAriaLabel\x22].primaryShift(\x27,\x27)\x0a  }\x0a});\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/mode-switcher/index.js\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/**\x0a * Set of available mode options.\x0a *\x0a * @type {Array}\x0a */\x0a\x0avar MODES = [{\x0a  value: \x27visual\x27,\x0a  label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Visual Editor\x27)\x0a}, {\x0a  value: \x27text\x27,\x0a  label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Code Editor\x27)\x0a}];\x0a\x0afunction ModeSwitcher(_ref) {\x0a  var onSwitch = _ref.onSwitch,\x0a      mode = _ref.mode;\x0a  var choices = MODES.map(function (choice) {\x0a    if (choice.value !== mode) {\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, choice, {\x0a        shortcut: keyboard_shortcuts.toggleEditorMode.display\x0a      });\x0a    }\x0a\x0a    return choice;\x0a  });\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuGroup\x22], {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Editor\x27)\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuItemsChoice\x22], {\x0a    choices: choices,\x0a    value: mode,\x0a    onSelect: onSwitch\x0a  }));\x0a}\x0a\x0a/* harmony default export */ var mode_switcher = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isRichEditingEnabled: select(\x27core/editor\x27).getEditorSettings().richEditingEnabled,\x0a    mode: select(\x27core/edit-post\x27).getEditorMode()\x0a  };\x0a}), Object(external_this_wp_compose_[\x22ifCondition\x22])(function (_ref2) {\x0a  var isRichEditingEnabled = _ref2.isRichEditingEnabled;\x0a  return isRichEditingEnabled;\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, ownProps) {\x0a  return {\x0a    onSwitch: function onSwitch(mode) {\x0a      dispatch(\x27core/edit-post\x27).switchEditorMode(mode);\x0a      ownProps.onSelect(mode);\x0a    }\x0a  };\x0a})])(ModeSwitcher));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/plugins-more-menu-group/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0avar plugins_more_menu_group_createSlotFill = Object(external_this_wp_components_[\x22createSlotFill\x22])(\x27PluginsMoreMenuGroup\x27),\x0a    PluginsMoreMenuGroup = plugins_more_menu_group_createSlotFill.Fill,\x0a    plugins_more_menu_group_Slot = plugins_more_menu_group_createSlotFill.Slot;\x0a\x0aPluginsMoreMenuGroup.Slot = function (_ref) {\x0a  var fillProps = _ref.fillProps;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(plugins_more_menu_group_Slot, {\x0a    fillProps: fillProps\x0a  }, function (fills) {\x0a    return !Object(external_lodash_[\x22isEmpty\x22])(fills) && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuGroup\x22], {\x0a      label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Plugins\x27)\x0a    }, fills);\x0a  });\x0a};\x0a\x0a/* harmony default export */ var plugins_more_menu_group = (PluginsMoreMenuGroup);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/options-menu-item/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0afunction OptionsMenuItem(_ref) {\x0a  var openModal = _ref.openModal,\x0a      onSelect = _ref.onSelect;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuItem\x22], {\x0a    onClick: function onClick() {\x0a      onSelect();\x0a      openModal(\x27edit-post/options\x27);\x0a    }\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Options\x27));\x0a}\x0a/* harmony default export */ var options_menu_item = (Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      openModal = _dispatch.openModal;\x0a\x0a  return {\x0a    openModal: openModal\x0a  };\x0a})(OptionsMenuItem));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/feature-toggle/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0afunction FeatureToggle(_ref) {\x0a  var onToggle = _ref.onToggle,\x0a      isActive = _ref.isActive,\x0a      label = _ref.label,\x0a      info = _ref.info,\x0a      messageActivated = _ref.messageActivated,\x0a      messageDeactivated = _ref.messageDeactivated,\x0a      speak = _ref.speak;\x0a\x0a  var speakMessage = function speakMessage() {\x0a    if (isActive) {\x0a      speak(messageDeactivated || Object(external_this_wp_i18n_[\x22__\x22])(\x27Feature deactivated\x27));\x0a    } else {\x0a      speak(messageActivated || Object(external_this_wp_i18n_[\x22__\x22])(\x27Feature activated\x27));\x0a    }\x0a  };\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuItem\x22], {\x0a    icon: isActive && \x27yes\x27,\x0a    isSelected: isActive,\x0a    onClick: Object(external_lodash_[\x22flow\x22])(onToggle, speakMessage),\x0a    role: \x22menuitemcheckbox\x22,\x0a    info: info\x0a  }, label);\x0a}\x0a\x0a/* harmony default export */ var feature_toggle = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref2) {\x0a  var feature = _ref2.feature;\x0a  return {\x0a    isActive: select(\x27core/edit-post\x27).isFeatureActive(feature)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, ownProps) {\x0a  return {\x0a    onToggle: function onToggle() {\x0a      dispatch(\x27core/edit-post\x27).toggleFeature(ownProps.feature);\x0a      ownProps.onToggle();\x0a    }\x0a  };\x0a}), external_this_wp_components_[\x22withSpokenMessages\x22]])(FeatureToggle));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/writing-menu/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0afunction WritingMenu(_ref) {\x0a  var onClose = _ref.onClose;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuGroup\x22], {\x0a    label: Object(external_this_wp_i18n_[\x22_x\x22])(\x27View\x27, \x27noun\x27)\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(feature_toggle, {\x0a    feature: \x22fixedToolbar\x22,\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Top Toolbar\x27),\x0a    info: Object(external_this_wp_i18n_[\x22__\x22])(\x27Access all block and document tools in a single place\x27),\x0a    onToggle: onClose,\x0a    messageActivated: Object(external_this_wp_i18n_[\x22__\x22])(\x27Top toolbar activated\x27),\x0a    messageDeactivated: Object(external_this_wp_i18n_[\x22__\x22])(\x27Top toolbar deactivated\x27)\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(feature_toggle, {\x0a    feature: \x22focusMode\x22,\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Spotlight Mode\x27),\x0a    info: Object(external_this_wp_i18n_[\x22__\x22])(\x27Focus on one block at a time\x27),\x0a    onToggle: onClose,\x0a    messageActivated: Object(external_this_wp_i18n_[\x22__\x22])(\x27Spotlight mode activated\x27),\x0a    messageDeactivated: Object(external_this_wp_i18n_[\x22__\x22])(\x27Spotlight mode deactivated\x27)\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(feature_toggle, {\x0a    feature: \x22fullscreenMode\x22,\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Fullscreen Mode\x27),\x0a    info: Object(external_this_wp_i18n_[\x22__\x22])(\x27Work without distraction\x27),\x0a    onToggle: onClose,\x0a    messageActivated: Object(external_this_wp_i18n_[\x22__\x22])(\x27Fullscreen mode activated\x27),\x0a    messageDeactivated: Object(external_this_wp_i18n_[\x22__\x22])(\x27Fullscreen mode deactivated\x27)\x0a  }));\x0a}\x0a\x0a/* harmony default export */ var writing_menu = (Object(external_this_wp_viewport_[\x22ifViewportMatches\x22])(\x27medium\x27)(WritingMenu));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/more-menu/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0avar ariaClosed = Object(external_this_wp_i18n_[\x22__\x22])(\x27Show more tools & options\x27);\x0a\x0avar ariaOpen = Object(external_this_wp_i18n_[\x22__\x22])(\x27Hide more tools & options\x27);\x0a\x0avar more_menu_MoreMenu = function MoreMenu() {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Dropdown\x22], {\x0a    className: \x22edit-post-more-menu\x22,\x0a    contentClassName: \x22edit-post-more-menu__content\x22,\x0a    position: \x22bottom left\x22,\x0a    renderToggle: function renderToggle(_ref) {\x0a      var isOpen = _ref.isOpen,\x0a          onToggle = _ref.onToggle;\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a        icon: \x22ellipsis\x22,\x0a        label: isOpen ? ariaOpen : ariaClosed,\x0a        labelPosition: \x22bottom\x22,\x0a        onClick: onToggle,\x0a        \x22aria-expanded\x22: isOpen\x0a      });\x0a    },\x0a    renderContent: function renderContent(_ref2) {\x0a      var onClose = _ref2.onClose;\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(writing_menu, {\x0a        onClose: onClose\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(mode_switcher, {\x0a        onSelect: onClose\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(plugins_more_menu_group.Slot, {\x0a        fillProps: {\x0a          onClose: onClose\x0a        }\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(tools_more_menu_group.Slot, {\x0a        fillProps: {\x0a          onClose: onClose\x0a        }\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuGroup\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(options_menu_item, {\x0a        onSelect: onClose\x0a      })));\x0a    }\x0a  });\x0a};\x0a\x0a/* harmony default export */ var more_menu = (more_menu_MoreMenu);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/fullscreen-mode-close/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0afunction FullscreenModeClose(_ref) {\x0a  var isActive = _ref.isActive,\x0a      postType = _ref.postType;\x0a\x0a  if (!isActive || !postType) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Toolbar\x22], {\x0a    className: \x22edit-post-fullscreen-mode-close__toolbar\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a    icon: \x22arrow-left-alt2\x22,\x0a    href: Object(external_this_wp_url_[\x22addQueryArgs\x22])(\x27edit.php\x27, {\x0a      post_type: postType.slug\x0a    }),\x0a    label: Object(external_lodash_[\x22get\x22])(postType, [\x27labels\x27, \x27view_items\x27], Object(external_this_wp_i18n_[\x22__\x22])(\x27Back\x27))\x0a  }));\x0a}\x0a\x0a/* harmony default export */ var fullscreen_mode_close = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getCurrentPostType = _select.getCurrentPostType;\x0a\x0a  var _select2 = select(\x27core/edit-post\x27),\x0a      isFeatureActive = _select2.isFeatureActive;\x0a\x0a  var _select3 = select(\x27core\x27),\x0a      getPostType = _select3.getPostType;\x0a\x0a  return {\x0a    isActive: isFeatureActive(\x27fullscreenMode\x27),\x0a    postType: getPostType(getCurrentPostType())\x0a  };\x0a})(FullscreenModeClose));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/header-toolbar/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0afunction HeaderToolbar(_ref) {\x0a  var hasFixedToolbar = _ref.hasFixedToolbar,\x0a      isLargeViewport = _ref.isLargeViewport,\x0a      showInserter = _ref.showInserter,\x0a      isTextModeEnabled = _ref.isTextModeEnabled;\x0a  var toolbarAriaLabel = hasFixedToolbar ?\x0a  /* translators: accessibility text for the editor toolbar when Top Toolbar is on */\x0a  Object(external_this_wp_i18n_[\x22__\x22])(\x27Document and block tools\x27) :\x0a  /* translators: accessibility text for the editor toolbar when Top Toolbar is off */\x0a  Object(external_this_wp_i18n_[\x22__\x22])(\x27Document tools\x27);\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22NavigableToolbar\x22], {\x0a    className: \x22edit-post-header-toolbar\x22,\x0a    \x22aria-label\x22: toolbarAriaLabel\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(fullscreen_mode_close, null), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22Inserter\x22], {\x0a    disabled: !showInserter,\x0a    position: \x22bottom right\x22\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_nux_[\x22DotTip\x22], {\x0a    tipId: \x22core/editor.inserter\x22\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Welcome to the wonderful world of blocks! Click the \xe2\x80\x9c+\xe2\x80\x9d (\xe2\x80\x9cAdd block\xe2\x80\x9d) button to add a new block. There are blocks available for all kinds of content: you can insert text, headings, images, lists, and lots more!\x27))), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22EditorHistoryUndo\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22EditorHistoryRedo\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22TableOfContents\x22], {\x0a    hasOutlineItemsDisabled: isTextModeEnabled\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22BlockNavigationDropdown\x22], {\x0a    isDisabled: isTextModeEnabled\x0a  }), hasFixedToolbar && isLargeViewport && Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22edit-post-header-toolbar__block-toolbar\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22BlockToolbar\x22], null)));\x0a}\x0a\x0a/* harmony default export */ var header_toolbar = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    hasFixedToolbar: select(\x27core/edit-post\x27).isFeatureActive(\x27fixedToolbar\x27),\x0a    // This setting (richEditingEnabled) should not live in the block editor\x27s setting.\x0a    showInserter: select(\x27core/edit-post\x27).getEditorMode() === \x27visual\x27 && select(\x27core/editor\x27).getEditorSettings().richEditingEnabled,\x0a    isTextModeEnabled: select(\x27core/edit-post\x27).getEditorMode() === \x27text\x27\x0a  };\x0a}), Object(external_this_wp_viewport_[\x22withViewportMatch\x22])({\x0a  isLargeViewport: \x27medium\x27\x0a})])(HeaderToolbar));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/pinned-plugins/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0avar pinned_plugins_createSlotFill = Object(external_this_wp_components_[\x22createSlotFill\x22])(\x27PinnedPlugins\x27),\x0a    PinnedPlugins = pinned_plugins_createSlotFill.Fill,\x0a    pinned_plugins_Slot = pinned_plugins_createSlotFill.Slot;\x0a\x0aPinnedPlugins.Slot = function (props) {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(pinned_plugins_Slot, props, function (fills) {\x0a    return !Object(external_lodash_[\x22isEmpty\x22])(fills) && Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a      className: \x22edit-post-pinned-plugins\x22\x0a    }, fills);\x0a  });\x0a};\x0a\x0a/* harmony default export */ var pinned_plugins = (PinnedPlugins);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/post-publish-button-or-toggle.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction PostPublishButtonOrToggle(_ref) {\x0a  var forceIsDirty = _ref.forceIsDirty,\x0a      forceIsSaving = _ref.forceIsSaving,\x0a      hasPublishAction = _ref.hasPublishAction,\x0a      isBeingScheduled = _ref.isBeingScheduled,\x0a      isLessThanMediumViewport = _ref.isLessThanMediumViewport,\x0a      isPending = _ref.isPending,\x0a      isPublished = _ref.isPublished,\x0a      isPublishSidebarEnabled = _ref.isPublishSidebarEnabled,\x0a      isPublishSidebarOpened = _ref.isPublishSidebarOpened,\x0a      isScheduled = _ref.isScheduled,\x0a      togglePublishSidebar = _ref.togglePublishSidebar;\x0a  var IS_TOGGLE = \x27toggle\x27;\x0a  var IS_BUTTON = \x27button\x27;\x0a  var component;\x0a  /**\x0a   * Conditions to show a BUTTON (publish directly) or a TOGGLE (open publish sidebar):\x0a   *\x0a   * 1) We want to show a BUTTON when the post status is at the _final stage_\x0a   * for a particular role (see https://codex.wordpress.org/Post_Status):\x0a   *\x0a   * - is published\x0a   * - is scheduled to be published\x0a   * - is pending and can\x27t be published (but only for viewports \x3e= medium).\x0a   * \x09 Originally, we considered showing a button for pending posts that couldn\x27t be published\x0a   * \x09 (for example, for an author with the contributor role). Some languages can have\x0a   * \x09 long translations for \x22Submit for review\x22, so given the lack of UI real estate available\x0a   * \x09 we decided to take into account the viewport in that case.\x0a   *  \x09 See: https://github.com/WordPress/gutenberg/issues/10475\x0a   *\x0a   * 2) Then, in small viewports, we\x27ll show a TOGGLE.\x0a   *\x0a   * 3) Finally, we\x27ll use the publish sidebar status to decide:\x0a   *\x0a   * - if it is enabled, we show a TOGGLE\x0a   * - if it is disabled, we show a BUTTON\x0a   */\x0a\x0a  if (isPublished || isScheduled && isBeingScheduled || isPending && !hasPublishAction && !isLessThanMediumViewport) {\x0a    component = IS_BUTTON;\x0a  } else if (isLessThanMediumViewport) {\x0a    component = IS_TOGGLE;\x0a  } else if (isPublishSidebarEnabled) {\x0a    component = IS_TOGGLE;\x0a  } else {\x0a    component = IS_BUTTON;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostPublishButton\x22], {\x0a    forceIsDirty: forceIsDirty,\x0a    forceIsSaving: forceIsSaving,\x0a    isOpen: isPublishSidebarOpened,\x0a    isToggle: component === IS_TOGGLE,\x0a    onToggle: togglePublishSidebar\x0a  });\x0a}\x0a/* harmony default export */ var post_publish_button_or_toggle = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    hasPublishAction: Object(external_lodash_[\x22get\x22])(select(\x27core/editor\x27).getCurrentPost(), [\x27_links\x27, \x27wp:action-publish\x27], false),\x0a    isBeingScheduled: select(\x27core/editor\x27).isEditedPostBeingScheduled(),\x0a    isPending: select(\x27core/editor\x27).isCurrentPostPending(),\x0a    isPublished: select(\x27core/editor\x27).isCurrentPostPublished(),\x0a    isPublishSidebarEnabled: select(\x27core/editor\x27).isPublishSidebarEnabled(),\x0a    isPublishSidebarOpened: select(\x27core/edit-post\x27).isPublishSidebarOpened(),\x0a    isScheduled: select(\x27core/editor\x27).isCurrentPostScheduled()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      togglePublishSidebar = _dispatch.togglePublishSidebar;\x0a\x0a  return {\x0a    togglePublishSidebar: togglePublishSidebar\x0a  };\x0a}), Object(external_this_wp_viewport_[\x22withViewportMatch\x22])({\x0a  isLessThanMediumViewport: \x27\x3c medium\x27\x0a}))(PostPublishButtonOrToggle));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0afunction Header(_ref) {\x0a  var closeGeneralSidebar = _ref.closeGeneralSidebar,\x0a      hasActiveMetaboxes = _ref.hasActiveMetaboxes,\x0a      isEditorSidebarOpened = _ref.isEditorSidebarOpened,\x0a      isPublishSidebarOpened = _ref.isPublishSidebarOpened,\x0a      isSaving = _ref.isSaving,\x0a      openGeneralSidebar = _ref.openGeneralSidebar;\x0a  var toggleGeneralSidebar = isEditorSidebarOpened ? closeGeneralSidebar : openGeneralSidebar;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    role: \x22region\x22\x0a    /* translators: accessibility text for the top bar landmark region. */\x0a    ,\x0a    \x22aria-label\x22: Object(external_this_wp_i18n_[\x22__\x22])(\x27Editor top bar\x27),\x0a    className: \x22edit-post-header\x22,\x0a    tabIndex: \x22-1\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(header_toolbar, null), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22edit-post-header__settings\x22\x0a  }, !isPublishSidebarOpened && // This button isn\x27t completely hidden by the publish sidebar.\x0a  // We can\x27t hide the whole toolbar when the publish sidebar is open because\x0a  // we want to prevent mounting/unmounting the PostPublishButtonOrToggle DOM node.\x0a  // We track that DOM node to return focus to the PostPublishButtonOrToggle\x0a  // when the publish sidebar has been closed.\x0a  Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostSavedState\x22], {\x0a    forceIsDirty: hasActiveMetaboxes,\x0a    forceIsSaving: isSaving\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostPreviewButton\x22], {\x0a    forceIsAutosaveable: hasActiveMetaboxes,\x0a    forcePreviewLink: isSaving ? null : undefined\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(post_publish_button_or_toggle, {\x0a    forceIsDirty: hasActiveMetaboxes,\x0a    forceIsSaving: isSaving\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a    icon: \x22admin-generic\x22,\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Settings\x27),\x0a    onClick: toggleGeneralSidebar,\x0a    isToggled: isEditorSidebarOpened,\x0a    \x22aria-expanded\x22: isEditorSidebarOpened,\x0a    shortcut: keyboard_shortcuts.toggleSidebar\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_nux_[\x22DotTip\x22], {\x0a    tipId: \x22core/editor.settings\x22\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27You\xe2\x80\x99ll find more settings for your page and blocks in the sidebar. Click the cog icon to toggle the sidebar open and closed.\x27))), Object(external_this_wp_element_[\x22createElement\x22])(pinned_plugins.Slot, null), Object(external_this_wp_element_[\x22createElement\x22])(more_menu, null)));\x0a}\x0a\x0a/* harmony default export */ var header = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    hasActiveMetaboxes: select(\x27core/edit-post\x27).hasMetaBoxes(),\x0a    isEditorSidebarOpened: select(\x27core/edit-post\x27).isEditorSidebarOpened(),\x0a    isPublishSidebarOpened: select(\x27core/edit-post\x27).isPublishSidebarOpened(),\x0a    isSaving: select(\x27core/edit-post\x27).isSavingMetaBoxes()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, ownProps, _ref2) {\x0a  var select = _ref2.select;\x0a\x0a  var _select = select(\x27core/block-editor\x27),\x0a      getBlockSelectionStart = _select.getBlockSelectionStart;\x0a\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      _openGeneralSidebar = _dispatch.openGeneralSidebar,\x0a      closeGeneralSidebar = _dispatch.closeGeneralSidebar;\x0a\x0a  return {\x0a    openGeneralSidebar: function openGeneralSidebar() {\x0a      return _openGeneralSidebar(getBlockSelectionStart() ? \x27edit-post/block\x27 : \x27edit-post/document\x27);\x0a    },\x0a    closeGeneralSidebar: closeGeneralSidebar\x0a  };\x0a}))(Header));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/text-editor/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0afunction TextEditor(_ref) {\x0a  var onExit = _ref.onExit,\x0a      isRichEditingEnabled = _ref.isRichEditingEnabled;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22edit-post-text-editor\x22\x0a  }, isRichEditingEnabled && Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22edit-post-text-editor__toolbar\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22h2\x22, null, Object(external_this_wp_i18n_[\x22__\x22])(\x27Editing Code\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a    onClick: onExit,\x0a    icon: \x22no-alt\x22,\x0a    shortcut: external_this_wp_keycodes_[\x22displayShortcut\x22].secondary(\x27m\x27)\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Exit Code Editor\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22TextEditorGlobalKeyboardShortcuts\x22], null)), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22edit-post-text-editor__body\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTitle\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTextEditor\x22], null)));\x0a}\x0a\x0a/* harmony default export */ var text_editor = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isRichEditingEnabled: select(\x27core/editor\x27).getEditorSettings().richEditingEnabled\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onExit: function onExit() {\x0a      dispatch(\x27core/edit-post\x27).switchEditorMode(\x27visual\x27);\x0a    }\x0a  };\x0a}))(TextEditor));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/visual-editor/block-inspector-button.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0afunction BlockInspectorButton(_ref) {\x0a  var areAdvancedSettingsOpened = _ref.areAdvancedSettingsOpened,\x0a      closeSidebar = _ref.closeSidebar,\x0a      openEditorSidebar = _ref.openEditorSidebar,\x0a      _ref$onClick = _ref.onClick,\x0a      onClick = _ref$onClick === void 0 ? external_lodash_[\x22noop\x22] : _ref$onClick,\x0a      _ref$small = _ref.small,\x0a      small = _ref$small === void 0 ? false : _ref$small,\x0a      speak = _ref.speak;\x0a\x0a  var speakMessage = function speakMessage() {\x0a    if (areAdvancedSettingsOpened) {\x0a      speak(Object(external_this_wp_i18n_[\x22__\x22])(\x27Block settings closed\x27));\x0a    } else {\x0a      speak(Object(external_this_wp_i18n_[\x22__\x22])(\x27Additional settings are now available in the Editor block settings sidebar\x27));\x0a    }\x0a  };\x0a\x0a  var label = areAdvancedSettingsOpened ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Hide Block Settings\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Show Block Settings\x27);\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuItem\x22], {\x0a    className: \x22editor-block-settings-menu__control block-editor-block-settings-menu__control\x22,\x0a    onClick: Object(external_lodash_[\x22flow\x22])(areAdvancedSettingsOpened ? closeSidebar : openEditorSidebar, speakMessage, onClick),\x0a    icon: \x22admin-generic\x22,\x0a    shortcut: keyboard_shortcuts.toggleSidebar\x0a  }, !small && label);\x0a}\x0a/* harmony default export */ var block_inspector_button = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    areAdvancedSettingsOpened: select(\x27core/edit-post\x27).getActiveGeneralSidebarName() === \x27edit-post/block\x27\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    openEditorSidebar: function openEditorSidebar() {\x0a      return dispatch(\x27core/edit-post\x27).openGeneralSidebar(\x27edit-post/block\x27);\x0a    },\x0a    closeSidebar: dispatch(\x27core/edit-post\x27).closeGeneralSidebar\x0a  };\x0a}), external_this_wp_components_[\x22withSpokenMessages\x22])(BlockInspectorButton));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/block-settings-menu/plugin-block-settings-menu-group.js\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0avar plugin_block_settings_menu_group_createSlotFill = Object(external_this_wp_components_[\x22createSlotFill\x22])(\x27PluginBlockSettingsMenuGroup\x27),\x0a    PluginBlockSettingsMenuGroup = plugin_block_settings_menu_group_createSlotFill.Fill,\x0a    plugin_block_settings_menu_group_Slot = plugin_block_settings_menu_group_createSlotFill.Slot;\x0a\x0avar plugin_block_settings_menu_group_PluginBlockSettingsMenuGroupSlot = function PluginBlockSettingsMenuGroupSlot(_ref) {\x0a  var fillProps = _ref.fillProps,\x0a      selectedBlocks = _ref.selectedBlocks;\x0a  selectedBlocks = Object(external_lodash_[\x22map\x22])(selectedBlocks, function (block) {\x0a    return block.name;\x0a  });\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(plugin_block_settings_menu_group_Slot, {\x0a    fillProps: Object(objectSpread[\x22a\x22 /* default */])({}, fillProps, {\x0a      selectedBlocks: selectedBlocks\x0a    })\x0a  }, function (fills) {\x0a    return !Object(external_lodash_[\x22isEmpty\x22])(fills) && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a      className: \x22editor-block-settings-menu__separator\x22\x0a    }), fills);\x0a  });\x0a};\x0a\x0aPluginBlockSettingsMenuGroup.Slot = Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref2) {\x0a  var clientIds = _ref2.fillProps.clientIds;\x0a  return {\x0a    selectedBlocks: select(\x27core/block-editor\x27).getBlocksByClientId(clientIds)\x0a  };\x0a})(plugin_block_settings_menu_group_PluginBlockSettingsMenuGroupSlot);\x0a/* harmony default export */ var plugin_block_settings_menu_group = (PluginBlockSettingsMenuGroup);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/visual-editor/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0afunction VisualEditor() {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22BlockSelectionClearer\x22], {\x0a    className: \x22edit-post-visual-editor editor-styles-wrapper\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22VisualEditorGlobalKeyboardShortcuts\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22MultiSelectScrollIntoView\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22WritingFlow\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22ObserveTyping\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22CopyHandler\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTitle\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22BlockList\x22], null)))), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22_BlockSettingsMenuFirstItem\x22], null, function (_ref) {\x0a    var onClose = _ref.onClose;\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(block_inspector_button, {\x0a      onClick: onClose\x0a    });\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22_BlockSettingsMenuPluginsExtension\x22], null, function (_ref2) {\x0a    var clientIds = _ref2.clientIds,\x0a        onClose = _ref2.onClose;\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(plugin_block_settings_menu_group.Slot, {\x0a      fillProps: {\x0a        clientIds: clientIds,\x0a        onClose: onClose\x0a      }\x0a    });\x0a  }));\x0a}\x0a\x0a/* harmony default export */ var visual_editor = (VisualEditor);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/keyboard-shortcuts/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar keyboard_shortcuts_EditorModeKeyboardShortcuts =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(EditorModeKeyboardShortcuts, _Component);\x0a\x0a  function EditorModeKeyboardShortcuts() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, EditorModeKeyboardShortcuts);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(EditorModeKeyboardShortcuts).apply(this, arguments));\x0a    _this.toggleMode = _this.toggleMode.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.toggleSidebar = _this.toggleSidebar.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(EditorModeKeyboardShortcuts, [{\x0a    key: \x22toggleMode\x22,\x0a    value: function toggleMode() {\x0a      var _this$props = this.props,\x0a          mode = _this$props.mode,\x0a          switchMode = _this$props.switchMode,\x0a          isRichEditingEnabled = _this$props.isRichEditingEnabled;\x0a\x0a      if (!isRichEditingEnabled) {\x0a        return;\x0a      }\x0a\x0a      switchMode(mode === \x27visual\x27 ? \x27text\x27 : \x27visual\x27);\x0a    }\x0a  }, {\x0a    key: \x22toggleSidebar\x22,\x0a    value: function toggleSidebar(event) {\x0a      // This shortcut has no known clashes, but use preventDefault to prevent any\x0a      // obscure shortcuts from triggering.\x0a      event.preventDefault();\x0a      var _this$props2 = this.props,\x0a          isEditorSidebarOpen = _this$props2.isEditorSidebarOpen,\x0a          closeSidebar = _this$props2.closeSidebar,\x0a          openSidebar = _this$props2.openSidebar;\x0a\x0a      if (isEditorSidebarOpen) {\x0a        closeSidebar();\x0a      } else {\x0a        openSidebar();\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _ref;\x0a\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22KeyboardShortcuts\x22], {\x0a        bindGlobal: true,\x0a        shortcuts: (_ref = {}, Object(defineProperty[\x22a\x22 /* default */])(_ref, keyboard_shortcuts.toggleEditorMode.raw, this.toggleMode), Object(defineProperty[\x22a\x22 /* default */])(_ref, keyboard_shortcuts.toggleSidebar.raw, this.toggleSidebar), _ref)\x0a      });\x0a    }\x0a  }]);\x0a\x0a  return EditorModeKeyboardShortcuts;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var components_keyboard_shortcuts = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isRichEditingEnabled: select(\x27core/editor\x27).getEditorSettings().richEditingEnabled,\x0a    mode: select(\x27core/edit-post\x27).getEditorMode(),\x0a    isEditorSidebarOpen: select(\x27core/edit-post\x27).isEditorSidebarOpened()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, ownProps, _ref2) {\x0a  var select = _ref2.select;\x0a  return {\x0a    switchMode: function switchMode(mode) {\x0a      dispatch(\x27core/edit-post\x27).switchEditorMode(mode);\x0a    },\x0a    openSidebar: function openSidebar() {\x0a      var _select = select(\x27core/block-editor\x27),\x0a          getBlockSelectionStart = _select.getBlockSelectionStart;\x0a\x0a      var sidebarToOpen = getBlockSelectionStart() ? \x27edit-post/block\x27 : \x27edit-post/document\x27;\x0a      dispatch(\x27core/edit-post\x27).openGeneralSidebar(sidebarToOpen);\x0a    },\x0a    closeSidebar: dispatch(\x27core/edit-post\x27).closeGeneralSidebar\x0a  };\x0a})])(keyboard_shortcuts_EditorModeKeyboardShortcuts));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/keyboard-shortcut-help-modal/config.js\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0avar primary = external_this_wp_keycodes_[\x22displayShortcutList\x22].primary,\x0a    primaryShift = external_this_wp_keycodes_[\x22displayShortcutList\x22].primaryShift,\x0a    primaryAlt = external_this_wp_keycodes_[\x22displayShortcutList\x22].primaryAlt,\x0a    secondary = external_this_wp_keycodes_[\x22displayShortcutList\x22].secondary,\x0a    access = external_this_wp_keycodes_[\x22displayShortcutList\x22].access,\x0a    ctrl = external_this_wp_keycodes_[\x22displayShortcutList\x22].ctrl,\x0a    alt = external_this_wp_keycodes_[\x22displayShortcutList\x22].alt,\x0a    ctrlShift = external_this_wp_keycodes_[\x22displayShortcutList\x22].ctrlShift;\x0avar globalShortcuts = {\x0a  title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Global shortcuts\x27),\x0a  shortcuts: [{\x0a    keyCombination: access(\x27h\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Display this help.\x27)\x0a  }, {\x0a    keyCombination: primary(\x27s\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Save your changes.\x27)\x0a  }, {\x0a    keyCombination: primary(\x27z\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Undo your last changes.\x27)\x0a  }, {\x0a    keyCombination: primaryShift(\x27z\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Redo your last undo.\x27)\x0a  }, {\x0a    keyCombination: primaryShift(\x27,\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Show or hide the settings sidebar.\x27),\x0a    ariaLabel: external_this_wp_keycodes_[\x22shortcutAriaLabel\x22].primaryShift(\x27,\x27)\x0a  }, {\x0a    keyCombination: access(\x27o\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Open the block navigation menu.\x27)\x0a  }, {\x0a    keyCombination: ctrl(\x27`\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Navigate to the next part of the editor.\x27),\x0a    ariaLabel: external_this_wp_keycodes_[\x22shortcutAriaLabel\x22].ctrl(\x27`\x27)\x0a  }, {\x0a    keyCombination: ctrlShift(\x27`\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Navigate to the previous part of the editor.\x27),\x0a    ariaLabel: external_this_wp_keycodes_[\x22shortcutAriaLabel\x22].ctrlShift(\x27`\x27)\x0a  }, {\x0a    keyCombination: access(\x27n\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Navigate to the next part of the editor (alternative).\x27)\x0a  }, {\x0a    keyCombination: access(\x27p\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Navigate to the previous part of the editor (alternative).\x27)\x0a  }, {\x0a    keyCombination: alt(\x27F10\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Navigate to the nearest toolbar.\x27)\x0a  }, {\x0a    keyCombination: secondary(\x27m\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Switch between Visual Editor and Code Editor.\x27)\x0a  }]\x0a};\x0avar selectionShortcuts = {\x0a  title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Selection shortcuts\x27),\x0a  shortcuts: [{\x0a    keyCombination: primary(\x27a\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Select all text when typing. Press again to select all blocks.\x27)\x0a  }, {\x0a    keyCombination: \x27Esc\x27,\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Clear selection.\x27),\x0a\x0a    /* translators: The \x27escape\x27 key on a keyboard. */\x0a    ariaLabel: Object(external_this_wp_i18n_[\x22__\x22])(\x27Escape\x27)\x0a  }]\x0a};\x0avar blockShortcuts = {\x0a  title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Block shortcuts\x27),\x0a  shortcuts: [{\x0a    keyCombination: primaryShift(\x27d\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Duplicate the selected block(s).\x27)\x0a  }, {\x0a    keyCombination: access(\x27z\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Remove the selected block(s).\x27)\x0a  }, {\x0a    keyCombination: primaryAlt(\x27t\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Insert a new block before the selected block(s).\x27)\x0a  }, {\x0a    keyCombination: primaryAlt(\x27y\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Insert a new block after the selected block(s).\x27)\x0a  }, {\x0a    keyCombination: \x27/\x27,\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Change the block type after adding a new paragraph.\x27),\x0a\x0a    /* translators: The forward-slash character. e.g. \x27/\x27. */\x0a    ariaLabel: Object(external_this_wp_i18n_[\x22__\x22])(\x27Forward-slash\x27)\x0a  }]\x0a};\x0avar textFormattingShortcuts = {\x0a  title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Text formatting\x27),\x0a  shortcuts: [{\x0a    keyCombination: primary(\x27b\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Make the selected text bold.\x27)\x0a  }, {\x0a    keyCombination: primary(\x27i\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Make the selected text italic.\x27)\x0a  }, {\x0a    keyCombination: primary(\x27u\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Underline the selected text.\x27)\x0a  }, {\x0a    keyCombination: primary(\x27k\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Convert the selected text into a link.\x27)\x0a  }, {\x0a    keyCombination: primaryShift(\x27k\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Remove a link.\x27)\x0a  }, {\x0a    keyCombination: access(\x27d\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Add a strikethrough to the selected text.\x27)\x0a  }, {\x0a    keyCombination: access(\x27x\x27),\x0a    description: Object(external_this_wp_i18n_[\x22__\x22])(\x27Display the selected text in a monospaced font.\x27)\x0a  }]\x0a};\x0a/* harmony default export */ var keyboard_shortcut_help_modal_config = ([globalShortcuts, selectionShortcuts, blockShortcuts, textFormattingShortcuts]);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/keyboard-shortcut-help-modal/index.js\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0avar MODAL_NAME = \x27edit-post/keyboard-shortcut-help\x27;\x0a\x0avar keyboard_shortcut_help_modal_mapKeyCombination = function mapKeyCombination(keyCombination) {\x0a  return keyCombination.map(function (character, index) {\x0a    if (character === \x27+\x27) {\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], {\x0a        key: index\x0a      }, character);\x0a    }\x0a\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(\x22kbd\x22, {\x0a      key: index,\x0a      className: \x22edit-post-keyboard-shortcut-help__shortcut-key\x22\x0a    }, character);\x0a  });\x0a};\x0a\x0avar keyboard_shortcut_help_modal_ShortcutList = function ShortcutList(_ref) {\x0a  var shortcuts = _ref.shortcuts;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22dl\x22, {\x0a    className: \x22edit-post-keyboard-shortcut-help__shortcut-list\x22\x0a  }, shortcuts.map(function (_ref2, index) {\x0a    var keyCombination = _ref2.keyCombination,\x0a        description = _ref2.description,\x0a        ariaLabel = _ref2.ariaLabel;\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a      className: \x22edit-post-keyboard-shortcut-help__shortcut\x22,\x0a      key: index\x0a    }, Object(external_this_wp_element_[\x22createElement\x22])(\x22dt\x22, {\x0a      className: \x22edit-post-keyboard-shortcut-help__shortcut-term\x22\x0a    }, Object(external_this_wp_element_[\x22createElement\x22])(\x22kbd\x22, {\x0a      className: \x22edit-post-keyboard-shortcut-help__shortcut-key-combination\x22,\x0a      \x22aria-label\x22: ariaLabel\x0a    }, keyboard_shortcut_help_modal_mapKeyCombination(Object(external_lodash_[\x22castArray\x22])(keyCombination)))), Object(external_this_wp_element_[\x22createElement\x22])(\x22dd\x22, {\x0a      className: \x22edit-post-keyboard-shortcut-help__shortcut-description\x22\x0a    }, description));\x0a  }));\x0a};\x0a\x0avar keyboard_shortcut_help_modal_ShortcutSection = function ShortcutSection(_ref3) {\x0a  var title = _ref3.title,\x0a      shortcuts = _ref3.shortcuts;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22section\x22, {\x0a    className: \x22edit-post-keyboard-shortcut-help__section\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22h2\x22, {\x0a    className: \x22edit-post-keyboard-shortcut-help__section-title\x22\x0a  }, title), Object(external_this_wp_element_[\x22createElement\x22])(keyboard_shortcut_help_modal_ShortcutList, {\x0a    shortcuts: shortcuts\x0a  }));\x0a};\x0a\x0afunction KeyboardShortcutHelpModal(_ref4) {\x0a  var isModalActive = _ref4.isModalActive,\x0a      toggleModal = _ref4.toggleModal;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22KeyboardShortcuts\x22], {\x0a    bindGlobal: true,\x0a    shortcuts: Object(defineProperty[\x22a\x22 /* default */])({}, external_this_wp_keycodes_[\x22rawShortcut\x22].access(\x27h\x27), toggleModal)\x0a  }), isModalActive && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Modal\x22], {\x0a    className: \x22edit-post-keyboard-shortcut-help\x22,\x0a    title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Keyboard Shortcuts\x27),\x0a    closeLabel: Object(external_this_wp_i18n_[\x22__\x22])(\x27Close\x27),\x0a    onRequestClose: toggleModal\x0a  }, keyboard_shortcut_help_modal_config.map(function (config, index) {\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(keyboard_shortcut_help_modal_ShortcutSection, Object(esm_extends[\x22a\x22 /* default */])({\x0a      key: index\x0a    }, config));\x0a  })));\x0a}\x0a/* harmony default export */ var keyboard_shortcut_help_modal = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isModalActive: select(\x27core/edit-post\x27).isModalActive(MODAL_NAME)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, _ref6) {\x0a  var isModalActive = _ref6.isModalActive;\x0a\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      openModal = _dispatch.openModal,\x0a      closeModal = _dispatch.closeModal;\x0a\x0a  return {\x0a    toggleModal: function toggleModal() {\x0a      return isModalActive ? closeModal() : openModal(MODAL_NAME);\x0a    }\x0a  };\x0a})])(KeyboardShortcutHelpModal));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/manage-blocks-modal/checklist.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction BlockTypesChecklist(_ref) {\x0a  var blockTypes = _ref.blockTypes,\x0a      value = _ref.value,\x0a      onItemChange = _ref.onItemChange;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22ul\x22, {\x0a    className: \x22edit-post-manage-blocks-modal__checklist\x22\x0a  }, blockTypes.map(function (blockType) {\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(\x22li\x22, {\x0a      key: blockType.name,\x0a      className: \x22edit-post-manage-blocks-modal__checklist-item\x22\x0a    }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22CheckboxControl\x22], {\x0a      label: Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, blockType.title, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22BlockIcon\x22], {\x0a        icon: blockType.icon\x0a      })),\x0a      checked: value.includes(blockType.name),\x0a      onChange: Object(external_lodash_[\x22partial\x22])(onItemChange, blockType.name)\x0a    }));\x0a  }));\x0a}\x0a\x0a/* harmony default export */ var checklist = (BlockTypesChecklist);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/manage-blocks-modal/category.js\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0afunction BlockManagerCategory(_ref) {\x0a  var instanceId = _ref.instanceId,\x0a      category = _ref.category,\x0a      blockTypes = _ref.blockTypes,\x0a      hiddenBlockTypes = _ref.hiddenBlockTypes,\x0a      toggleVisible = _ref.toggleVisible,\x0a      toggleAllVisible = _ref.toggleAllVisible;\x0a\x0a  if (!blockTypes.length) {\x0a    return null;\x0a  }\x0a\x0a  var checkedBlockNames = external_lodash_[\x22without\x22].apply(void 0, [Object(external_lodash_[\x22map\x22])(blockTypes, \x27name\x27)].concat(Object(toConsumableArray[\x22a\x22 /* default */])(hiddenBlockTypes)));\x0a  var titleId = \x27edit-post-manage-blocks-modal__category-title-\x27 + instanceId;\x0a  var isAllChecked = checkedBlockNames.length === blockTypes.length;\x0a  var ariaChecked;\x0a\x0a  if (isAllChecked) {\x0a    ariaChecked = \x27true\x27;\x0a  } else if (checkedBlockNames.length \x3e 0) {\x0a    ariaChecked = \x27mixed\x27;\x0a  } else {\x0a    ariaChecked = \x27false\x27;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    role: \x22group\x22,\x0a    \x22aria-labelledby\x22: titleId,\x0a    className: \x22edit-post-manage-blocks-modal__category\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22CheckboxControl\x22], {\x0a    checked: isAllChecked,\x0a    onChange: toggleAllVisible,\x0a    className: \x22edit-post-manage-blocks-modal__category-title\x22,\x0a    \x22aria-checked\x22: ariaChecked,\x0a    label: Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a      id: titleId\x0a    }, category.title)\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(checklist, {\x0a    blockTypes: blockTypes,\x0a    value: checkedBlockNames,\x0a    onItemChange: toggleVisible\x0a  }));\x0a}\x0a\x0a/* harmony default export */ var manage_blocks_modal_category = (Object(external_this_wp_compose_[\x22compose\x22])([external_this_wp_compose_[\x22withInstanceId\x22], Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/edit-post\x27),\x0a      getPreference = _select.getPreference;\x0a\x0a  return {\x0a    hiddenBlockTypes: getPreference(\x27hiddenBlockTypes\x27)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, ownProps) {\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      showBlockTypes = _dispatch.showBlockTypes,\x0a      hideBlockTypes = _dispatch.hideBlockTypes;\x0a\x0a  return {\x0a    toggleVisible: function toggleVisible(blockName, nextIsChecked) {\x0a      if (nextIsChecked) {\x0a        showBlockTypes(blockName);\x0a      } else {\x0a        hideBlockTypes(blockName);\x0a      }\x0a    },\x0a    toggleAllVisible: function toggleAllVisible(nextIsChecked) {\x0a      var blockNames = Object(external_lodash_[\x22map\x22])(ownProps.blockTypes, \x27name\x27);\x0a\x0a      if (nextIsChecked) {\x0a        showBlockTypes(blockNames);\x0a      } else {\x0a        hideBlockTypes(blockNames);\x0a      }\x0a    }\x0a  };\x0a})])(BlockManagerCategory));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/manage-blocks-modal/manager.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0afunction BlockManager(_ref) {\x0a  var search = _ref.search,\x0a      setState = _ref.setState,\x0a      blockTypes = _ref.blockTypes,\x0a      categories = _ref.categories,\x0a      hasBlockSupport = _ref.hasBlockSupport,\x0a      isMatchingSearchTerm = _ref.isMatchingSearchTerm;\x0a  // Filtering occurs here (as opposed to `withSelect`) to avoid wasted\x0a  // wasted renders by consequence of `Array#filter` producing a new\x0a  // value reference on each call.\x0a  blockTypes = blockTypes.filter(function (blockType) {\x0a    return hasBlockSupport(blockType, \x27inserter\x27, true) && (!search || isMatchingSearchTerm(blockType, search));\x0a  });\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22edit-post-manage-blocks-modal__content\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22TextControl\x22], {\x0a    type: \x22search\x22,\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Search for a block\x27),\x0a    value: search,\x0a    onChange: function onChange(nextSearch) {\x0a      return setState({\x0a        search: nextSearch\x0a      });\x0a    },\x0a    className: \x22edit-post-manage-blocks-modal__search\x22\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    tabIndex: \x220\x22,\x0a    role: \x22region\x22,\x0a    \x22aria-label\x22: Object(external_this_wp_i18n_[\x22__\x22])(\x27Available block types\x27),\x0a    className: \x22edit-post-manage-blocks-modal__results\x22\x0a  }, blockTypes.length === 0 && Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, {\x0a    className: \x22edit-post-manage-blocks-modal__no-results\x22\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27No blocks found.\x27)), categories.map(function (category) {\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(manage_blocks_modal_category, {\x0a      key: category.slug,\x0a      category: category,\x0a      blockTypes: Object(external_lodash_[\x22filter\x22])(blockTypes, {\x0a        category: category.slug\x0a      })\x0a    });\x0a  })));\x0a}\x0a\x0a/* harmony default export */ var manager = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_compose_[\x22withState\x22])({\x0a  search: \x27\x27\x0a}), Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/blocks\x27),\x0a      getBlockTypes = _select.getBlockTypes,\x0a      getCategories = _select.getCategories,\x0a      hasBlockSupport = _select.hasBlockSupport,\x0a      isMatchingSearchTerm = _select.isMatchingSearchTerm;\x0a\x0a  return {\x0a    blockTypes: getBlockTypes(),\x0a    categories: getCategories(),\x0a    hasBlockSupport: hasBlockSupport,\x0a    isMatchingSearchTerm: isMatchingSearchTerm\x0a  };\x0a})])(BlockManager));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/manage-blocks-modal/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/**\x0a * Unique identifier for Manage Blocks modal.\x0a *\x0a * @type {string}\x0a */\x0a\x0avar manage_blocks_modal_MODAL_NAME = \x27edit-post/manage-blocks\x27;\x0afunction ManageBlocksModal(_ref) {\x0a  var isActive = _ref.isActive,\x0a      closeModal = _ref.closeModal;\x0a\x0a  if (!isActive) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Modal\x22], {\x0a    className: \x22edit-post-manage-blocks-modal\x22,\x0a    title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Block Manager\x27),\x0a    closeLabel: Object(external_this_wp_i18n_[\x22__\x22])(\x27Close\x27),\x0a    onRequestClose: closeModal\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(manager, null));\x0a}\x0a/* harmony default export */ var manage_blocks_modal = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/edit-post\x27),\x0a      isModalActive = _select.isModalActive;\x0a\x0a  return {\x0a    isActive: isModalActive(manage_blocks_modal_MODAL_NAME)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      closeModal = _dispatch.closeModal;\x0a\x0a  return {\x0a    closeModal: closeModal\x0a  };\x0a})])(ManageBlocksModal));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/options-modal/section.js\x0a\x0a\x0avar section_Section = function Section(_ref) {\x0a  var title = _ref.title,\x0a      children = _ref.children;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22section\x22, {\x0a    className: \x22edit-post-options-modal__section\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22h2\x22, {\x0a    className: \x22edit-post-options-modal__section-title\x22\x0a  }, title), children);\x0a};\x0a\x0a/* harmony default export */ var section = (section_Section);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/options-modal/options/base.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0afunction BaseOption(_ref) {\x0a  var label = _ref.label,\x0a      isChecked = _ref.isChecked,\x0a      onChange = _ref.onChange;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22CheckboxControl\x22], {\x0a    className: \x22edit-post-options-modal__option\x22,\x0a    label: label,\x0a    checked: isChecked,\x0a    onChange: onChange\x0a  });\x0a}\x0a\x0a/* harmony default export */ var base = (BaseOption);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/options-modal/options/enable-custom-fields.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0avar enable_custom_fields_EnableCustomFieldsOption =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(EnableCustomFieldsOption, _Component);\x0a\x0a  function EnableCustomFieldsOption(_ref) {\x0a    var _this;\x0a\x0a    var isChecked = _ref.isChecked;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, EnableCustomFieldsOption);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(EnableCustomFieldsOption).apply(this, arguments));\x0a    _this.toggleCustomFields = _this.toggleCustomFields.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.state = {\x0a      isChecked: isChecked\x0a    };\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(EnableCustomFieldsOption, [{\x0a    key: \x22toggleCustomFields\x22,\x0a    value: function toggleCustomFields() {\x0a      // Submit a hidden form which triggers the toggle_custom_fields admin action.\x0a      // This action will toggle the setting and reload the editor with the meta box\x0a      // assets included on the page.\x0a      document.getElementById(\x27toggle-custom-fields-form\x27).submit(); // Make it look like something happened while the page reloads.\x0a\x0a      this.setState({\x0a        isChecked: !this.props.isChecked\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var label = this.props.label;\x0a      var isChecked = this.state.isChecked;\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(base, {\x0a        label: label,\x0a        isChecked: isChecked,\x0a        onChange: this.toggleCustomFields\x0a      });\x0a    }\x0a  }]);\x0a\x0a  return EnableCustomFieldsOption;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a/* harmony default export */ var enable_custom_fields = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isChecked: !!select(\x27core/editor\x27).getEditorSettings().enableCustomFields\x0a  };\x0a})(enable_custom_fields_EnableCustomFieldsOption));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/options-modal/options/enable-panel.js\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/* harmony default export */ var enable_panel = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref) {\x0a  var panelName = _ref.panelName;\x0a\x0a  var _select = select(\x27core/edit-post\x27),\x0a      isEditorPanelEnabled = _select.isEditorPanelEnabled,\x0a      isEditorPanelRemoved = _select.isEditorPanelRemoved;\x0a\x0a  return {\x0a    isRemoved: isEditorPanelRemoved(panelName),\x0a    isChecked: isEditorPanelEnabled(panelName)\x0a  };\x0a}), Object(external_this_wp_compose_[\x22ifCondition\x22])(function (_ref2) {\x0a  var isRemoved = _ref2.isRemoved;\x0a  return !isRemoved;\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, _ref3) {\x0a  var panelName = _ref3.panelName;\x0a  return {\x0a    onChange: function onChange() {\x0a      return dispatch(\x27core/edit-post\x27).toggleEditorPanelEnabled(panelName);\x0a    }\x0a  };\x0a}))(base));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/options-modal/options/enable-publish-sidebar.js\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/* harmony default export */ var enable_publish_sidebar = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isChecked: select(\x27core/editor\x27).isPublishSidebarEnabled()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/editor\x27),\x0a      enablePublishSidebar = _dispatch.enablePublishSidebar,\x0a      disablePublishSidebar = _dispatch.disablePublishSidebar;\x0a\x0a  return {\x0a    onChange: function onChange(isEnabled) {\x0a      return isEnabled ? enablePublishSidebar() : disablePublishSidebar();\x0a    }\x0a  };\x0a}), // In \x3c medium viewports we override this option and always show the publish sidebar.\x0a// See the edit-post\x27s header component for the specific logic.\x0aObject(external_this_wp_viewport_[\x22ifViewportMatches\x22])(\x27medium\x27))(base));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/options-modal/options/deferred.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar deferred_DeferredOption =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(DeferredOption, _Component);\x0a\x0a  function DeferredOption(_ref) {\x0a    var _this;\x0a\x0a    var isChecked = _ref.isChecked;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, DeferredOption);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(DeferredOption).apply(this, arguments));\x0a    _this.state = {\x0a      isChecked: isChecked\x0a    };\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(DeferredOption, [{\x0a    key: \x22componentWillUnmount\x22,\x0a    value: function componentWillUnmount() {\x0a      if (this.state.isChecked !== this.props.isChecked) {\x0a        this.props.onChange(this.state.isChecked);\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this2 = this;\x0a\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(base, {\x0a        label: this.props.label,\x0a        isChecked: this.state.isChecked,\x0a        onChange: function onChange(isChecked) {\x0a          return _this2.setState({\x0a            isChecked: isChecked\x0a          });\x0a        }\x0a      });\x0a    }\x0a  }]);\x0a\x0a  return DeferredOption;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var deferred = (deferred_DeferredOption);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/options-modal/options/enable-tips.js\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/* harmony default export */ var enable_tips = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isChecked: select(\x27core/nux\x27).areTipsEnabled()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/nux\x27),\x0a      enableTips = _dispatch.enableTips,\x0a      disableTips = _dispatch.disableTips;\x0a\x0a  return {\x0a    onChange: function onChange(isEnabled) {\x0a      return isEnabled ? enableTips() : disableTips();\x0a    }\x0a  };\x0a}))( // Using DeferredOption here means enableTips() is called when the Options\x0a// modal is dismissed. This stops the NUX guide from appearing above the\x0a// Options modal, which looks totally weird.\x0adeferred));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/options-modal/options/index.js\x0a\x0a\x0a\x0a\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/options-modal/meta-boxes-section.js\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0afunction MetaBoxesSection(_ref) {\x0a  var areCustomFieldsRegistered = _ref.areCustomFieldsRegistered,\x0a      metaBoxes = _ref.metaBoxes,\x0a      sectionProps = Object(objectWithoutProperties[\x22a\x22 /* default */])(_ref, [\x22areCustomFieldsRegistered\x22, \x22metaBoxes\x22]);\x0a\x0a  // The \x27Custom Fields\x27 meta box is a special case that we handle separately.\x0a  var thirdPartyMetaBoxes = Object(external_lodash_[\x22filter\x22])(metaBoxes, function (_ref2) {\x0a    var id = _ref2.id;\x0a    return id !== \x27postcustom\x27;\x0a  });\x0a\x0a  if (!areCustomFieldsRegistered && thirdPartyMetaBoxes.length === 0) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(section, sectionProps, areCustomFieldsRegistered && Object(external_this_wp_element_[\x22createElement\x22])(enable_custom_fields, {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Custom Fields\x27)\x0a  }), Object(external_lodash_[\x22map\x22])(thirdPartyMetaBoxes, function (_ref3) {\x0a    var id = _ref3.id,\x0a        title = _ref3.title;\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(enable_panel, {\x0a      key: id,\x0a      label: title,\x0a      panelName: \x22meta-box-\x22.concat(id)\x0a    });\x0a  }));\x0a}\x0a/* harmony default export */ var meta_boxes_section = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getEditorSettings = _select.getEditorSettings;\x0a\x0a  var _select2 = select(\x27core/edit-post\x27),\x0a      getAllMetaBoxes = _select2.getAllMetaBoxes;\x0a\x0a  return {\x0a    // This setting should not live in the block editor\x27s store.\x0a    areCustomFieldsRegistered: getEditorSettings().enableCustomFields !== undefined,\x0a    metaBoxes: getAllMetaBoxes()\x0a  };\x0a})(MetaBoxesSection));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/options-modal/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0avar options_modal_MODAL_NAME = \x27edit-post/options\x27;\x0afunction OptionsModal(_ref) {\x0a  var isModalActive = _ref.isModalActive,\x0a      isViewable = _ref.isViewable,\x0a      closeModal = _ref.closeModal;\x0a\x0a  if (!isModalActive) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Modal\x22], {\x0a    className: \x22edit-post-options-modal\x22,\x0a    title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Options\x27),\x0a    closeLabel: Object(external_this_wp_i18n_[\x22__\x22])(\x27Close\x27),\x0a    onRequestClose: closeModal\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(section, {\x0a    title: Object(external_this_wp_i18n_[\x22__\x22])(\x27General\x27)\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(enable_publish_sidebar, {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Enable Pre-publish Checks\x27)\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(enable_tips, {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Enable Tips\x27)\x0a  })), Object(external_this_wp_element_[\x22createElement\x22])(section, {\x0a    title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Document Panels\x27)\x0a  }, isViewable && Object(external_this_wp_element_[\x22createElement\x22])(enable_panel, {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Permalink\x27),\x0a    panelName: \x22post-link\x22\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTaxonomies\x22], {\x0a    taxonomyWrapper: function taxonomyWrapper(content, taxonomy) {\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(enable_panel, {\x0a        label: Object(external_lodash_[\x22get\x22])(taxonomy, [\x27labels\x27, \x27menu_name\x27]),\x0a        panelName: \x22taxonomy-panel-\x22.concat(taxonomy.slug)\x0a      });\x0a    }\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostFeaturedImageCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(enable_panel, {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Featured Image\x27),\x0a    panelName: \x22featured-image\x22\x0a  })), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostExcerptCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(enable_panel, {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Excerpt\x27),\x0a    panelName: \x22post-excerpt\x22\x0a  })), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTypeSupportCheck\x22], {\x0a    supportKeys: [\x27comments\x27, \x27trackbacks\x27]\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(enable_panel, {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Discussion\x27),\x0a    panelName: \x22discussion-panel\x22\x0a  })), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PageAttributesCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(enable_panel, {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Page Attributes\x27),\x0a    panelName: \x22page-attributes\x22\x0a  }))), Object(external_this_wp_element_[\x22createElement\x22])(meta_boxes_section, {\x0a    title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Advanced Panels\x27)\x0a  }));\x0a}\x0a/* harmony default export */ var options_modal = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select.getEditedPostAttribute;\x0a\x0a  var _select2 = select(\x27core\x27),\x0a      getPostType = _select2.getPostType;\x0a\x0a  var postType = getPostType(getEditedPostAttribute(\x27type\x27));\x0a  return {\x0a    isModalActive: select(\x27core/edit-post\x27).isModalActive(options_modal_MODAL_NAME),\x0a    isViewable: Object(external_lodash_[\x22get\x22])(postType, [\x27viewable\x27], false)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    closeModal: function closeModal() {\x0a      return dispatch(\x27core/edit-post\x27).closeModal();\x0a    }\x0a  };\x0a}))(OptionsModal));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/meta-boxes/meta-boxes-area/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0avar meta_boxes_area_MetaBoxesArea =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(MetaBoxesArea, _Component);\x0a\x0a  /**\x0a   * @inheritdoc\x0a   */\x0a  function MetaBoxesArea() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, MetaBoxesArea);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(MetaBoxesArea).apply(this, arguments));\x0a    _this.bindContainerNode = _this.bindContainerNode.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    return _this;\x0a  }\x0a  /**\x0a   * @inheritdoc\x0a   */\x0a\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(MetaBoxesArea, [{\x0a    key: \x22componentDidMount\x22,\x0a    value: function componentDidMount() {\x0a      this.form = document.querySelector(\x27.metabox-location-\x27 + this.props.location);\x0a\x0a      if (this.form) {\x0a        this.container.appendChild(this.form);\x0a      }\x0a    }\x0a    /**\x0a     * Get the meta box location form from the original location.\x0a     */\x0a\x0a  }, {\x0a    key: \x22componentWillUnmount\x22,\x0a    value: function componentWillUnmount() {\x0a      if (this.form) {\x0a        document.querySelector(\x27#metaboxes\x27).appendChild(this.form);\x0a      }\x0a    }\x0a    /**\x0a     * Binds the metabox area container node.\x0a     *\x0a     * @param {Element} node DOM Node.\x0a     */\x0a\x0a  }, {\x0a    key: \x22bindContainerNode\x22,\x0a    value: function bindContainerNode(node) {\x0a      this.container = node;\x0a    }\x0a    /**\x0a     * @inheritdoc\x0a     */\x0a\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props = this.props,\x0a          location = _this$props.location,\x0a          isSaving = _this$props.isSaving;\x0a      var classes = classnames_default()(\x27edit-post-meta-boxes-area\x27, \x22is-\x22.concat(location), {\x0a        \x27is-loading\x27: isSaving\x0a      });\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: classes\x0a      }, isSaving && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Spinner\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22edit-post-meta-boxes-area__container\x22,\x0a        ref: this.bindContainerNode\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22edit-post-meta-boxes-area__clear\x22\x0a      }));\x0a    }\x0a  }]);\x0a\x0a  return MetaBoxesArea;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var meta_boxes_area = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isSaving: select(\x27core/edit-post\x27).isSavingMetaBoxes()\x0a  };\x0a})(meta_boxes_area_MetaBoxesArea));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/meta-boxes/meta-box-visibility.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0avar meta_box_visibility_MetaBoxVisibility =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(MetaBoxVisibility, _Component);\x0a\x0a  function MetaBoxVisibility() {\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, MetaBoxVisibility);\x0a\x0a    return Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(MetaBoxVisibility).apply(this, arguments));\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(MetaBoxVisibility, [{\x0a    key: \x22componentDidMount\x22,\x0a    value: function componentDidMount() {\x0a      this.updateDOM();\x0a    }\x0a  }, {\x0a    key: \x22componentDidUpdate\x22,\x0a    value: function componentDidUpdate(prevProps) {\x0a      if (this.props.isVisible !== prevProps.isVisible) {\x0a        this.updateDOM();\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22updateDOM\x22,\x0a    value: function updateDOM() {\x0a      var _this$props = this.props,\x0a          id = _this$props.id,\x0a          isVisible = _this$props.isVisible;\x0a      var element = document.getElementById(id);\x0a\x0a      if (!element) {\x0a        return;\x0a      }\x0a\x0a      if (isVisible) {\x0a        element.classList.remove(\x27is-hidden\x27);\x0a      } else {\x0a        element.classList.add(\x27is-hidden\x27);\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      return null;\x0a    }\x0a  }]);\x0a\x0a  return MetaBoxVisibility;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var meta_box_visibility = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref) {\x0a  var id = _ref.id;\x0a  return {\x0a    isVisible: select(\x27core/edit-post\x27).isEditorPanelEnabled(\x22meta-box-\x22.concat(id))\x0a  };\x0a})(meta_box_visibility_MetaBoxVisibility));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/meta-boxes/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0afunction MetaBoxes(_ref) {\x0a  var location = _ref.location,\x0a      isVisible = _ref.isVisible,\x0a      metaBoxes = _ref.metaBoxes;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_lodash_[\x22map\x22])(metaBoxes, function (_ref2) {\x0a    var id = _ref2.id;\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(meta_box_visibility, {\x0a      key: id,\x0a      id: id\x0a    });\x0a  }), isVisible && Object(external_this_wp_element_[\x22createElement\x22])(meta_boxes_area, {\x0a    location: location\x0a  }));\x0a}\x0a\x0a/* harmony default export */ var meta_boxes = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref3) {\x0a  var location = _ref3.location;\x0a\x0a  var _select = select(\x27core/edit-post\x27),\x0a      isMetaBoxLocationVisible = _select.isMetaBoxLocationVisible,\x0a      getMetaBoxesPerLocation = _select.getMetaBoxesPerLocation;\x0a\x0a  return {\x0a    metaBoxes: getMetaBoxesPerLocation(location),\x0a    isVisible: isMetaBoxLocationVisible(location)\x0a  };\x0a})(MetaBoxes));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0avar sidebar_createSlotFill = Object(external_this_wp_components_[\x22createSlotFill\x22])(\x27Sidebar\x27),\x0a    Fill = sidebar_createSlotFill.Fill,\x0a    sidebar_Slot = sidebar_createSlotFill.Slot;\x0a/**\x0a * Renders a sidebar with its content.\x0a *\x0a * @return {Object} The rendered sidebar.\x0a */\x0a\x0a\x0afunction Sidebar(_ref) {\x0a  var children = _ref.children,\x0a      label = _ref.label,\x0a      className = _ref.className;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: classnames_default()(\x27edit-post-sidebar\x27, className),\x0a    role: \x22region\x22,\x0a    \x22aria-label\x22: label,\x0a    tabIndex: \x22-1\x22\x0a  }, children);\x0a}\x0a\x0aSidebar = Object(external_this_wp_components_[\x22withFocusReturn\x22])({\x0a  onFocusReturn: function onFocusReturn() {\x0a    var button = document.querySelector(\x27.edit-post-header__settings [aria-label=\x22Settings\x22]\x27);\x0a\x0a    if (button) {\x0a      button.focus();\x0a      return false;\x0a    }\x0a  }\x0a})(Sidebar);\x0a\x0afunction AnimatedSidebarFill(props) {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(Fill, null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Animate\x22], {\x0a    type: \x22slide-in\x22,\x0a    options: {\x0a      origin: \x27left\x27\x0a    }\x0a  }, function () {\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(Sidebar, props);\x0a  }));\x0a}\x0a\x0avar WrappedSidebar = Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref2) {\x0a  var name = _ref2.name;\x0a  return {\x0a    isActive: select(\x27core/edit-post\x27).getActiveGeneralSidebarName() === name\x0a  };\x0a}), Object(external_this_wp_compose_[\x22ifCondition\x22])(function (_ref3) {\x0a  var isActive = _ref3.isActive;\x0a  return isActive;\x0a}))(AnimatedSidebarFill);\x0aWrappedSidebar.Slot = sidebar_Slot;\x0a/* harmony default export */ var sidebar = (WrappedSidebar);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/sidebar-header/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar sidebar_header_SidebarHeader = function SidebarHeader(_ref) {\x0a  var children = _ref.children,\x0a      className = _ref.className,\x0a      closeLabel = _ref.closeLabel,\x0a      closeSidebar = _ref.closeSidebar,\x0a      title = _ref.title;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22components-panel__header edit-post-sidebar-header__small\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a    className: \x22edit-post-sidebar-header__title\x22\x0a  }, title || Object(external_this_wp_i18n_[\x22__\x22])(\x27(no title)\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a    onClick: closeSidebar,\x0a    icon: \x22no-alt\x22,\x0a    label: closeLabel\x0a  })), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: classnames_default()(\x27components-panel__header edit-post-sidebar-header\x27, className)\x0a  }, children, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a    onClick: closeSidebar,\x0a    icon: \x22no-alt\x22,\x0a    label: closeLabel,\x0a    shortcut: keyboard_shortcuts.toggleSidebar\x0a  })));\x0a};\x0a\x0a/* harmony default export */ var sidebar_header = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    title: select(\x27core/editor\x27).getEditedPostAttribute(\x27title\x27)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    closeSidebar: dispatch(\x27core/edit-post\x27).closeGeneralSidebar\x0a  };\x0a}))(sidebar_header_SidebarHeader));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/settings-header/index.js\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar settings_header_SettingsHeader = function SettingsHeader(_ref) {\x0a  var openDocumentSettings = _ref.openDocumentSettings,\x0a      openBlockSettings = _ref.openBlockSettings,\x0a      sidebarName = _ref.sidebarName;\x0a\x0a  var blockLabel = Object(external_this_wp_i18n_[\x22__\x22])(\x27Block\x27);\x0a\x0a  var _ref2 = sidebarName === \x27edit-post/document\x27 ? // translators: ARIA label for the Document sidebar tab, selected.\x0a  [Object(external_this_wp_i18n_[\x22__\x22])(\x27Document (selected)\x27), \x27is-active\x27] : // translators: ARIA label for the Document sidebar tab, not selected.\x0a  [Object(external_this_wp_i18n_[\x22__\x22])(\x27Document\x27), \x27\x27],\x0a      _ref3 = Object(slicedToArray[\x22a\x22 /* default */])(_ref2, 2),\x0a      documentAriaLabel = _ref3[0],\x0a      documentActiveClass = _ref3[1];\x0a\x0a  var _ref4 = sidebarName === \x27edit-post/block\x27 ? // translators: ARIA label for the Block sidebar tab, selected.\x0a  [Object(external_this_wp_i18n_[\x22__\x22])(\x27Block (selected)\x27), \x27is-active\x27] : // translators: ARIA label for the Block sidebar tab, not selected.\x0a  [Object(external_this_wp_i18n_[\x22__\x22])(\x27Block\x27), \x27\x27],\x0a      _ref5 = Object(slicedToArray[\x22a\x22 /* default */])(_ref4, 2),\x0a      blockAriaLabel = _ref5[0],\x0a      blockActiveClass = _ref5[1];\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(sidebar_header, {\x0a    className: \x22edit-post-sidebar__panel-tabs\x22,\x0a    closeLabel: Object(external_this_wp_i18n_[\x22__\x22])(\x27Close settings\x27)\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22ul\x22, null, Object(external_this_wp_element_[\x22createElement\x22])(\x22li\x22, null, Object(external_this_wp_element_[\x22createElement\x22])(\x22button\x22, {\x0a    onClick: openDocumentSettings,\x0a    className: \x22edit-post-sidebar__panel-tab \x22.concat(documentActiveClass),\x0a    \x22aria-label\x22: documentAriaLabel,\x0a    \x22data-label\x22: Object(external_this_wp_i18n_[\x22__\x22])(\x27Document\x27)\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Document\x27))), Object(external_this_wp_element_[\x22createElement\x22])(\x22li\x22, null, Object(external_this_wp_element_[\x22createElement\x22])(\x22button\x22, {\x0a    onClick: openBlockSettings,\x0a    className: \x22edit-post-sidebar__panel-tab \x22.concat(blockActiveClass),\x0a    \x22aria-label\x22: blockAriaLabel,\x0a    \x22data-label\x22: blockLabel\x0a  }, blockLabel))));\x0a};\x0a\x0a/* harmony default export */ var settings_header = (Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      openGeneralSidebar = _dispatch.openGeneralSidebar;\x0a\x0a  var _dispatch2 = dispatch(\x27core/block-editor\x27),\x0a      clearSelectedBlock = _dispatch2.clearSelectedBlock;\x0a\x0a  return {\x0a    openDocumentSettings: function openDocumentSettings() {\x0a      openGeneralSidebar(\x27edit-post/document\x27);\x0a      clearSelectedBlock();\x0a    },\x0a    openBlockSettings: function openBlockSettings() {\x0a      openGeneralSidebar(\x27edit-post/block\x27);\x0a    }\x0a  };\x0a})(settings_header_SettingsHeader));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-visibility/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0afunction PostVisibility() {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostVisibilityCheck\x22], {\x0a    render: function render(_ref) {\x0a      var canEdit = _ref.canEdit;\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelRow\x22], {\x0a        className: \x22edit-post-post-visibility\x22\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, null, Object(external_this_wp_i18n_[\x22__\x22])(\x27Visibility\x27)), !canEdit && Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostVisibilityLabel\x22], null)), canEdit && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Dropdown\x22], {\x0a        position: \x22bottom left\x22,\x0a        contentClassName: \x22edit-post-post-visibility__dialog\x22,\x0a        renderToggle: function renderToggle(_ref2) {\x0a          var isOpen = _ref2.isOpen,\x0a              onToggle = _ref2.onToggle;\x0a          return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a            type: \x22button\x22,\x0a            \x22aria-expanded\x22: isOpen,\x0a            className: \x22edit-post-post-visibility__toggle\x22,\x0a            onClick: onToggle,\x0a            isLink: true\x0a          }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostVisibilityLabel\x22], null));\x0a        },\x0a        renderContent: function renderContent() {\x0a          return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostVisibility\x22], null);\x0a        }\x0a      }));\x0a    }\x0a  });\x0a}\x0a/* harmony default export */ var post_visibility = (PostVisibility);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-trash/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0afunction PostTrash() {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTrashCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelRow\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTrash\x22], null)));\x0a}\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-schedule/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction PostSchedule(_ref) {\x0a  var instanceId = _ref.instanceId;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostScheduleCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelRow\x22], {\x0a    className: \x22edit-post-post-schedule\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22label\x22, {\x0a    htmlFor: \x22edit-post-post-schedule__toggle-\x22.concat(instanceId),\x0a    id: \x22edit-post-post-schedule__heading-\x22.concat(instanceId)\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Publish\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Dropdown\x22], {\x0a    position: \x22bottom left\x22,\x0a    contentClassName: \x22edit-post-post-schedule__dialog\x22,\x0a    renderToggle: function renderToggle(_ref2) {\x0a      var onToggle = _ref2.onToggle,\x0a          isOpen = _ref2.isOpen;\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(\x22label\x22, {\x0a        className: \x22edit-post-post-schedule__label\x22,\x0a        htmlFor: \x22edit-post-post-schedule__toggle-\x22.concat(instanceId)\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostScheduleLabel\x22], null), \x22 \x22, Object(external_this_wp_i18n_[\x22__\x22])(\x27Click to change\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        id: \x22edit-post-post-schedule__toggle-\x22.concat(instanceId),\x0a        type: \x22button\x22,\x0a        className: \x22edit-post-post-schedule__toggle\x22,\x0a        onClick: onToggle,\x0a        \x22aria-expanded\x22: isOpen,\x0a        \x22aria-live\x22: \x22polite\x22,\x0a        isLink: true\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostScheduleLabel\x22], null)));\x0a    },\x0a    renderContent: function renderContent() {\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostSchedule\x22], null);\x0a    }\x0a  })));\x0a}\x0a/* harmony default export */ var post_schedule = (Object(external_this_wp_compose_[\x22withInstanceId\x22])(PostSchedule));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-sticky/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0afunction PostSticky() {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostStickyCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelRow\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostSticky\x22], null)));\x0a}\x0a/* harmony default export */ var post_sticky = (PostSticky);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-author/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0afunction PostAuthor() {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostAuthorCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelRow\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostAuthor\x22], null)));\x0a}\x0a/* harmony default export */ var post_author = (PostAuthor);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-format/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0afunction PostFormat() {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostFormatCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelRow\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostFormat\x22], null)));\x0a}\x0a/* harmony default export */ var post_format = (PostFormat);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-pending-status/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0afunction PostPendingStatus() {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostPendingStatusCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelRow\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostPendingStatus\x22], null)));\x0a}\x0a/* harmony default export */ var post_pending_status = (PostPendingStatus);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/plugin-post-status-info/index.js\x0a\x0a\x0a/**\x0a * Defines as extensibility slot for the Status & Visibility panel.\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0avar plugin_post_status_info_createSlotFill = Object(external_this_wp_components_[\x22createSlotFill\x22])(\x27PluginPostStatusInfo\x27),\x0a    plugin_post_status_info_Fill = plugin_post_status_info_createSlotFill.Fill,\x0a    plugin_post_status_info_Slot = plugin_post_status_info_createSlotFill.Slot;\x0a/**\x0a * Renders a row in the Status & Visibility panel of the Document sidebar.\x0a * It should be noted that this is named and implemented around the function it serves\x0a * and not its location, which may change in future iterations.\x0a *\x0a * @param {Object} props Component properties.\x0a * @param {string} [props.className] An optional class name added to the row.\x0a *\x0a * @example \x3ccaption\x3eES5\x3c/caption\x3e\x0a * ```js\x0a * // Using ES5 syntax\x0a * var __ = wp.i18n.__;\x0a * var PluginPostStatusInfo = wp.editPost.PluginPostStatusInfo;\x0a *\x0a * function MyPluginPostStatusInfo() {\x0a * \x09return wp.element.createElement(\x0a * \x09\x09PluginPostStatusInfo,\x0a * \x09\x09{\x0a * \x09\x09\x09className: \x27my-plugin-post-status-info\x27,\x0a * \x09\x09},\x0a * \x09\x09__( \x27My post status info\x27 )\x0a * \x09)\x0a * }\x0a * ```\x0a *\x0a * @example \x3ccaption\x3eESNext\x3c/caption\x3e\x0a * ```jsx\x0a * // Using ESNext syntax\x0a * const { __ } = wp.i18n;\x0a * const { PluginPostStatusInfo } = wp.editPost;\x0a *\x0a * const MyPluginPostStatusInfo = () =\x3e (\x0a * \x09\x3cPluginPostStatusInfo\x0a * \x09\x09className=\x22my-plugin-post-status-info\x22\x0a * \x09\x3e\x0a * \x09\x09{ __( \x27My post status info\x27 ) }\x0a * \x09\x3c/PluginPostStatusInfo\x3e\x0a * );\x0a * ```\x0a *\x0a * @return {WPElement} The WPElement to be rendered.\x0a */\x0a\x0a\x0a\x0a\x0avar plugin_post_status_info_PluginPostStatusInfo = function PluginPostStatusInfo(_ref) {\x0a  var children = _ref.children,\x0a      className = _ref.className;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(plugin_post_status_info_Fill, null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelRow\x22], {\x0a    className: className\x0a  }, children));\x0a};\x0a\x0aplugin_post_status_info_PluginPostStatusInfo.Slot = plugin_post_status_info_Slot;\x0a/* harmony default export */ var plugin_post_status_info = (plugin_post_status_info_PluginPostStatusInfo);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-status/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Module Constants\x0a */\x0a\x0avar PANEL_NAME = \x27post-status\x27;\x0a\x0afunction PostStatus(_ref) {\x0a  var isOpened = _ref.isOpened,\x0a      onTogglePanel = _ref.onTogglePanel;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    className: \x22edit-post-post-status\x22,\x0a    title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Status & Visibility\x27),\x0a    opened: isOpened,\x0a    onToggle: onTogglePanel\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(plugin_post_status_info.Slot, null, function (fills) {\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(post_visibility, null), Object(external_this_wp_element_[\x22createElement\x22])(post_schedule, null), Object(external_this_wp_element_[\x22createElement\x22])(post_format, null), Object(external_this_wp_element_[\x22createElement\x22])(post_sticky, null), Object(external_this_wp_element_[\x22createElement\x22])(post_pending_status, null), Object(external_this_wp_element_[\x22createElement\x22])(post_author, null), fills, Object(external_this_wp_element_[\x22createElement\x22])(PostTrash, null));\x0a  }));\x0a}\x0a\x0a/* harmony default export */ var post_status = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isOpened: select(\x27core/edit-post\x27).isEditorPanelOpened(PANEL_NAME)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onTogglePanel: function onTogglePanel() {\x0a      return dispatch(\x27core/edit-post\x27).toggleEditorPanelOpened(PANEL_NAME);\x0a    }\x0a  };\x0a})])(PostStatus));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/last-revision/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0afunction LastRevision() {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostLastRevisionCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    className: \x22edit-post-last-revision__panel\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostLastRevision\x22], null)));\x0a}\x0a\x0a/* harmony default export */ var last_revision = (LastRevision);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-taxonomies/taxonomy-panel.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction TaxonomyPanel(_ref) {\x0a  var isEnabled = _ref.isEnabled,\x0a      taxonomy = _ref.taxonomy,\x0a      isOpened = _ref.isOpened,\x0a      onTogglePanel = _ref.onTogglePanel,\x0a      children = _ref.children;\x0a\x0a  if (!isEnabled) {\x0a    return null;\x0a  }\x0a\x0a  var taxonomyMenuName = Object(external_lodash_[\x22get\x22])(taxonomy, [\x27labels\x27, \x27menu_name\x27]);\x0a\x0a  if (!taxonomyMenuName) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    title: taxonomyMenuName,\x0a    opened: isOpened,\x0a    onToggle: onTogglePanel\x0a  }, children);\x0a}\x0a\x0a/* harmony default export */ var taxonomy_panel = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select, ownProps) {\x0a  var slug = Object(external_lodash_[\x22get\x22])(ownProps.taxonomy, [\x27slug\x27]);\x0a  var panelName = slug ? \x22taxonomy-panel-\x22.concat(slug) : \x27\x27;\x0a  return {\x0a    panelName: panelName,\x0a    isEnabled: slug ? select(\x27core/edit-post\x27).isEditorPanelEnabled(panelName) : false,\x0a    isOpened: slug ? select(\x27core/edit-post\x27).isEditorPanelOpened(panelName) : false\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, ownProps) {\x0a  return {\x0a    onTogglePanel: function onTogglePanel() {\x0a      dispatch(\x27core/edit-post\x27).toggleEditorPanelOpened(ownProps.panelName);\x0a    }\x0a  };\x0a}))(TaxonomyPanel));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-taxonomies/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0afunction PostTaxonomies() {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTaxonomiesCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTaxonomies\x22], {\x0a    taxonomyWrapper: function taxonomyWrapper(content, taxonomy) {\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(taxonomy_panel, {\x0a        taxonomy: taxonomy\x0a      }, content);\x0a    }\x0a  }));\x0a}\x0a\x0a/* harmony default export */ var post_taxonomies = (PostTaxonomies);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/featured-image/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Module Constants\x0a */\x0a\x0avar featured_image_PANEL_NAME = \x27featured-image\x27;\x0a\x0afunction FeaturedImage(_ref) {\x0a  var isEnabled = _ref.isEnabled,\x0a      isOpened = _ref.isOpened,\x0a      postType = _ref.postType,\x0a      onTogglePanel = _ref.onTogglePanel;\x0a\x0a  if (!isEnabled) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostFeaturedImageCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    title: Object(external_lodash_[\x22get\x22])(postType, [\x27labels\x27, \x27featured_image\x27], Object(external_this_wp_i18n_[\x22__\x22])(\x27Featured Image\x27)),\x0a    opened: isOpened,\x0a    onToggle: onTogglePanel\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostFeaturedImage\x22], null)));\x0a}\x0a\x0avar applyWithSelect = Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select.getEditedPostAttribute;\x0a\x0a  var _select2 = select(\x27core\x27),\x0a      getPostType = _select2.getPostType;\x0a\x0a  var _select3 = select(\x27core/edit-post\x27),\x0a      isEditorPanelEnabled = _select3.isEditorPanelEnabled,\x0a      isEditorPanelOpened = _select3.isEditorPanelOpened;\x0a\x0a  return {\x0a    postType: getPostType(getEditedPostAttribute(\x27type\x27)),\x0a    isEnabled: isEditorPanelEnabled(featured_image_PANEL_NAME),\x0a    isOpened: isEditorPanelOpened(featured_image_PANEL_NAME)\x0a  };\x0a});\x0avar applyWithDispatch = Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      toggleEditorPanelOpened = _dispatch.toggleEditorPanelOpened;\x0a\x0a  return {\x0a    onTogglePanel: Object(external_lodash_[\x22partial\x22])(toggleEditorPanelOpened, featured_image_PANEL_NAME)\x0a  };\x0a});\x0a/* harmony default export */ var featured_image = (Object(external_this_wp_compose_[\x22compose\x22])(applyWithSelect, applyWithDispatch)(FeaturedImage));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-excerpt/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Module Constants\x0a */\x0a\x0avar post_excerpt_PANEL_NAME = \x27post-excerpt\x27;\x0a\x0afunction PostExcerpt(_ref) {\x0a  var isEnabled = _ref.isEnabled,\x0a      isOpened = _ref.isOpened,\x0a      onTogglePanel = _ref.onTogglePanel;\x0a\x0a  if (!isEnabled) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostExcerptCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Excerpt\x27),\x0a    opened: isOpened,\x0a    onToggle: onTogglePanel\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostExcerpt\x22], null)));\x0a}\x0a\x0a/* harmony default export */ var post_excerpt = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isEnabled: select(\x27core/edit-post\x27).isEditorPanelEnabled(post_excerpt_PANEL_NAME),\x0a    isOpened: select(\x27core/edit-post\x27).isEditorPanelOpened(post_excerpt_PANEL_NAME)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onTogglePanel: function onTogglePanel() {\x0a      return dispatch(\x27core/edit-post\x27).toggleEditorPanelOpened(post_excerpt_PANEL_NAME);\x0a    }\x0a  };\x0a})])(PostExcerpt));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/post-link/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Module Constants\x0a */\x0a\x0avar post_link_PANEL_NAME = \x27post-link\x27;\x0a\x0afunction PostLink(_ref) {\x0a  var isOpened = _ref.isOpened,\x0a      onTogglePanel = _ref.onTogglePanel,\x0a      isEditable = _ref.isEditable,\x0a      postLink = _ref.postLink,\x0a      permalinkParts = _ref.permalinkParts,\x0a      editPermalink = _ref.editPermalink,\x0a      forceEmptyField = _ref.forceEmptyField,\x0a      setState = _ref.setState,\x0a      postTitle = _ref.postTitle,\x0a      postSlug = _ref.postSlug,\x0a      postID = _ref.postID;\x0a  var prefix = permalinkParts.prefix,\x0a      suffix = permalinkParts.suffix;\x0a  var prefixElement, postNameElement, suffixElement;\x0a  var currentSlug = Object(external_this_wp_url_[\x22safeDecodeURIComponent\x22])(postSlug) || Object(external_this_wp_editor_[\x22cleanForSlug\x22])(postTitle) || postID;\x0a\x0a  if (isEditable) {\x0a    prefixElement = prefix && Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a      className: \x22edit-post-post-link__link-prefix\x22\x0a    }, prefix);\x0a    postNameElement = currentSlug && Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a      className: \x22edit-post-post-link__link-post-name\x22\x0a    }, currentSlug);\x0a    suffixElement = suffix && Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a      className: \x22edit-post-post-link__link-suffix\x22\x0a    }, suffix);\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Permalink\x27),\x0a    opened: isOpened,\x0a    onToggle: onTogglePanel\x0a  }, isEditable && Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22editor-post-link\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22TextControl\x22], {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27URL Slug\x27),\x0a    value: forceEmptyField ? \x27\x27 : currentSlug,\x0a    onChange: function onChange(newValue) {\x0a      editPermalink(newValue); // When we delete the field the permalink gets\x0a      // reverted to the original value.\x0a      // The forceEmptyField logic allows the user to have\x0a      // the field temporarily empty while typing.\x0a\x0a      if (!newValue) {\x0a        if (!forceEmptyField) {\x0a          setState({\x0a            forceEmptyField: true\x0a          });\x0a        }\x0a\x0a        return;\x0a      }\x0a\x0a      if (forceEmptyField) {\x0a        setState({\x0a          forceEmptyField: false\x0a        });\x0a      }\x0a    },\x0a    onBlur: function onBlur(event) {\x0a      editPermalink(Object(external_this_wp_editor_[\x22cleanForSlug\x22])(event.target.value));\x0a\x0a      if (forceEmptyField) {\x0a        setState({\x0a          forceEmptyField: false\x0a        });\x0a      }\x0a    }\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, null, Object(external_this_wp_i18n_[\x22__\x22])(\x27The last part of the URL. \x27), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22ExternalLink\x22], {\x0a    href: \x22https://codex.wordpress.org/Posts_Add_New_Screen\x22\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Read about permalinks\x27)))), Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, {\x0a    className: \x22edit-post-post-link__preview-label\x22\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Preview\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22ExternalLink\x22], {\x0a    className: \x22edit-post-post-link__link\x22,\x0a    href: postLink,\x0a    target: \x22_blank\x22\x0a  }, isEditable ? Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, prefixElement, postNameElement, suffixElement) : postLink));\x0a}\x0a\x0a/* harmony default export */ var post_link = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      isEditedPostNew = _select.isEditedPostNew,\x0a      isPermalinkEditable = _select.isPermalinkEditable,\x0a      getCurrentPost = _select.getCurrentPost,\x0a      isCurrentPostPublished = _select.isCurrentPostPublished,\x0a      getPermalinkParts = _select.getPermalinkParts,\x0a      getEditedPostAttribute = _select.getEditedPostAttribute;\x0a\x0a  var _select2 = select(\x27core/edit-post\x27),\x0a      isEditorPanelEnabled = _select2.isEditorPanelEnabled,\x0a      isEditorPanelOpened = _select2.isEditorPanelOpened;\x0a\x0a  var _select3 = select(\x27core\x27),\x0a      getPostType = _select3.getPostType;\x0a\x0a  var _getCurrentPost = getCurrentPost(),\x0a      link = _getCurrentPost.link,\x0a      id = _getCurrentPost.id;\x0a\x0a  var postTypeName = getEditedPostAttribute(\x27type\x27);\x0a  var postType = getPostType(postTypeName);\x0a  return {\x0a    isNew: isEditedPostNew(),\x0a    postLink: link,\x0a    isEditable: isPermalinkEditable(),\x0a    isPublished: isCurrentPostPublished(),\x0a    isOpened: isEditorPanelOpened(post_link_PANEL_NAME),\x0a    permalinkParts: getPermalinkParts(),\x0a    isEnabled: isEditorPanelEnabled(post_link_PANEL_NAME),\x0a    isViewable: Object(external_lodash_[\x22get\x22])(postType, [\x27viewable\x27], false),\x0a    postTitle: getEditedPostAttribute(\x27title\x27),\x0a    postSlug: getEditedPostAttribute(\x27slug\x27),\x0a    postID: id\x0a  };\x0a}), Object(external_this_wp_compose_[\x22ifCondition\x22])(function (_ref2) {\x0a  var isEnabled = _ref2.isEnabled,\x0a      isNew = _ref2.isNew,\x0a      postLink = _ref2.postLink,\x0a      isViewable = _ref2.isViewable,\x0a      permalinkParts = _ref2.permalinkParts;\x0a  return isEnabled && !isNew && postLink && isViewable && permalinkParts;\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      toggleEditorPanelOpened = _dispatch.toggleEditorPanelOpened;\x0a\x0a  var _dispatch2 = dispatch(\x27core/editor\x27),\x0a      editPost = _dispatch2.editPost;\x0a\x0a  return {\x0a    onTogglePanel: function onTogglePanel() {\x0a      return toggleEditorPanelOpened(post_link_PANEL_NAME);\x0a    },\x0a    editPermalink: function editPermalink(newSlug) {\x0a      editPost({\x0a        slug: newSlug\x0a      });\x0a    }\x0a  };\x0a}), Object(external_this_wp_compose_[\x22withState\x22])({\x0a  forceEmptyField: false\x0a})])(PostLink));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/discussion-panel/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Module Constants\x0a */\x0a\x0avar discussion_panel_PANEL_NAME = \x27discussion-panel\x27;\x0a\x0afunction DiscussionPanel(_ref) {\x0a  var isEnabled = _ref.isEnabled,\x0a      isOpened = _ref.isOpened,\x0a      onTogglePanel = _ref.onTogglePanel;\x0a\x0a  if (!isEnabled) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTypeSupportCheck\x22], {\x0a    supportKeys: [\x27comments\x27, \x27trackbacks\x27]\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Discussion\x27),\x0a    opened: isOpened,\x0a    onToggle: onTogglePanel\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTypeSupportCheck\x22], {\x0a    supportKeys: \x22comments\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelRow\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostComments\x22], null))), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostTypeSupportCheck\x22], {\x0a    supportKeys: \x22trackbacks\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelRow\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostPingbacks\x22], null)))));\x0a}\x0a\x0a/* harmony default export */ var discussion_panel = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isEnabled: select(\x27core/edit-post\x27).isEditorPanelEnabled(discussion_panel_PANEL_NAME),\x0a    isOpened: select(\x27core/edit-post\x27).isEditorPanelOpened(discussion_panel_PANEL_NAME)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onTogglePanel: function onTogglePanel() {\x0a      return dispatch(\x27core/edit-post\x27).toggleEditorPanelOpened(discussion_panel_PANEL_NAME);\x0a    }\x0a  };\x0a})])(DiscussionPanel));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/page-attributes/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Module Constants\x0a */\x0a\x0avar page_attributes_PANEL_NAME = \x27page-attributes\x27;\x0afunction PageAttributes(_ref) {\x0a  var isEnabled = _ref.isEnabled,\x0a      isOpened = _ref.isOpened,\x0a      onTogglePanel = _ref.onTogglePanel,\x0a      postType = _ref.postType;\x0a\x0a  if (!isEnabled || !postType) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PageAttributesCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    title: Object(external_lodash_[\x22get\x22])(postType, [\x27labels\x27, \x27attributes\x27], Object(external_this_wp_i18n_[\x22__\x22])(\x27Page Attributes\x27)),\x0a    opened: isOpened,\x0a    onToggle: onTogglePanel\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PageTemplate\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PageAttributesParent\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelRow\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PageAttributesOrder\x22], null))));\x0a}\x0avar page_attributes_applyWithSelect = Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select.getEditedPostAttribute;\x0a\x0a  var _select2 = select(\x27core/edit-post\x27),\x0a      isEditorPanelEnabled = _select2.isEditorPanelEnabled,\x0a      isEditorPanelOpened = _select2.isEditorPanelOpened;\x0a\x0a  var _select3 = select(\x27core\x27),\x0a      getPostType = _select3.getPostType;\x0a\x0a  return {\x0a    isEnabled: isEditorPanelEnabled(page_attributes_PANEL_NAME),\x0a    isOpened: isEditorPanelOpened(page_attributes_PANEL_NAME),\x0a    postType: getPostType(getEditedPostAttribute(\x27type\x27))\x0a  };\x0a});\x0avar page_attributes_applyWithDispatch = Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      toggleEditorPanelOpened = _dispatch.toggleEditorPanelOpened;\x0a\x0a  return {\x0a    onTogglePanel: Object(external_lodash_[\x22partial\x22])(toggleEditorPanelOpened, page_attributes_PANEL_NAME)\x0a  };\x0a});\x0a/* harmony default export */ var page_attributes = (Object(external_this_wp_compose_[\x22compose\x22])(page_attributes_applyWithSelect, page_attributes_applyWithDispatch)(PageAttributes));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/settings-sidebar/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0avar settings_sidebar_SettingsSidebar = function SettingsSidebar(_ref) {\x0a  var sidebarName = _ref.sidebarName;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(sidebar, {\x0a    name: sidebarName,\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Editor settings\x27)\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(settings_header, {\x0a    sidebarName: sidebarName\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Panel\x22], null, sidebarName === \x27edit-post/document\x27 && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(post_status, null), Object(external_this_wp_element_[\x22createElement\x22])(last_revision, null), Object(external_this_wp_element_[\x22createElement\x22])(post_link, null), Object(external_this_wp_element_[\x22createElement\x22])(post_taxonomies, null), Object(external_this_wp_element_[\x22createElement\x22])(featured_image, null), Object(external_this_wp_element_[\x22createElement\x22])(post_excerpt, null), Object(external_this_wp_element_[\x22createElement\x22])(discussion_panel, null), Object(external_this_wp_element_[\x22createElement\x22])(page_attributes, null), Object(external_this_wp_element_[\x22createElement\x22])(meta_boxes, {\x0a    location: \x22side\x22\x0a  })), sidebarName === \x27edit-post/block\x27 && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    className: \x22edit-post-settings-sidebar__panel-block\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22BlockInspector\x22], null))));\x0a};\x0a\x0a/* harmony default export */ var settings_sidebar = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/edit-post\x27),\x0a      getActiveGeneralSidebarName = _select.getActiveGeneralSidebarName,\x0a      isEditorSidebarOpened = _select.isEditorSidebarOpened;\x0a\x0a  return {\x0a    isEditorSidebarOpened: isEditorSidebarOpened(),\x0a    sidebarName: getActiveGeneralSidebarName()\x0a  };\x0a}), Object(external_this_wp_compose_[\x22ifCondition\x22])(function (_ref2) {\x0a  var isEditorSidebarOpened = _ref2.isEditorSidebarOpened;\x0a  return isEditorSidebarOpened;\x0a}))(settings_sidebar_SettingsSidebar));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/plugin-post-publish-panel/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0avar plugin_post_publish_panel_createSlotFill = Object(external_this_wp_components_[\x22createSlotFill\x22])(\x27PluginPostPublishPanel\x27),\x0a    plugin_post_publish_panel_Fill = plugin_post_publish_panel_createSlotFill.Fill,\x0a    plugin_post_publish_panel_Slot = plugin_post_publish_panel_createSlotFill.Slot;\x0a/**\x0a * Renders provided content to the post-publish panel in the publish flow\x0a * (side panel that opens after a user publishes the post).\x0a *\x0a * @param {Object} props Component properties.\x0a * @param {string} [props.className] An optional class name added to the panel.\x0a * @param {string} [props.title] Title displayed at the top of the panel.\x0a * @param {boolean} [props.initialOpen=false] Whether to have the panel initially opened. When no title is provided it is always opened.\x0a *\x0a * @example \x3ccaption\x3eES5\x3c/caption\x3e\x0a * ```js\x0a * // Using ES5 syntax\x0a * var __ = wp.i18n.__;\x0a * var PluginPostPublishPanel = wp.editPost.PluginPostPublishPanel;\x0a *\x0a * function MyPluginPostPublishPanel() {\x0a * \x09return wp.element.createElement(\x0a * \x09\x09PluginPostPublishPanel,\x0a * \x09\x09{\x0a * \x09\x09\x09className: \x27my-plugin-post-publish-panel\x27,\x0a * \x09\x09\x09title: __( \x27My panel title\x27 ),\x0a * \x09\x09\x09initialOpen: true,\x0a * \x09\x09},\x0a * \x09\x09__( \x27My panel content\x27 )\x0a * \x09);\x0a * }\x0a * ```\x0a *\x0a * @example \x3ccaption\x3eESNext\x3c/caption\x3e\x0a * ```jsx\x0a * // Using ESNext syntax\x0a * const { __ } = wp.i18n;\x0a * const { PluginPostPublishPanel } = wp.editPost;\x0a *\x0a * const MyPluginPostPublishPanel = () =\x3e (\x0a * \x09\x3cPluginPostPublishPanel\x0a * \x09\x09className=\x22my-plugin-post-publish-panel\x22\x0a * \x09\x09title={ __( \x27My panel title\x27 ) }\x0a * \x09\x09initialOpen={ true }\x0a * \x09\x3e\x0a *         { __( \x27My panel content\x27 ) }\x0a * \x09\x3c/PluginPostPublishPanel\x3e\x0a * );\x0a * ```\x0a *\x0a * @return {WPElement} The WPElement to be rendered.\x0a */\x0a\x0a\x0avar plugin_post_publish_panel_PluginPostPublishPanel = function PluginPostPublishPanel(_ref) {\x0a  var children = _ref.children,\x0a      className = _ref.className,\x0a      title = _ref.title,\x0a      _ref$initialOpen = _ref.initialOpen,\x0a      initialOpen = _ref$initialOpen === void 0 ? false : _ref$initialOpen;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(plugin_post_publish_panel_Fill, null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    className: className,\x0a    initialOpen: initialOpen || !title,\x0a    title: title\x0a  }, children));\x0a};\x0a\x0aplugin_post_publish_panel_PluginPostPublishPanel.Slot = plugin_post_publish_panel_Slot;\x0a/* harmony default export */ var plugin_post_publish_panel = (plugin_post_publish_panel_PluginPostPublishPanel);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/plugin-pre-publish-panel/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0avar plugin_pre_publish_panel_createSlotFill = Object(external_this_wp_components_[\x22createSlotFill\x22])(\x27PluginPrePublishPanel\x27),\x0a    plugin_pre_publish_panel_Fill = plugin_pre_publish_panel_createSlotFill.Fill,\x0a    plugin_pre_publish_panel_Slot = plugin_pre_publish_panel_createSlotFill.Slot;\x0a/**\x0a * Renders provided content to the pre-publish side panel in the publish flow\x0a * (side panel that opens when a user first pushes \x22Publish\x22 from the main editor).\x0a *\x0a * @param {Object} props Component props.\x0a * @param {string} [props.className] An optional class name added to the panel.\x0a * @param {string} [props.title] Title displayed at the top of the panel.\x0a * @param {boolean} [props.initialOpen=false] Whether to have the panel initially opened. When no title is provided it is always opened.\x0a *\x0a * @example \x3ccaption\x3eES5\x3c/caption\x3e\x0a * ```js\x0a * // Using ES5 syntax\x0a * var __ = wp.i18n.__;\x0a * var PluginPrePublishPanel = wp.editPost.PluginPrePublishPanel;\x0a *\x0a * function MyPluginPrePublishPanel() {\x0a * \x09return wp.element.createElement(\x0a * \x09\x09PluginPrePublishPanel,\x0a * \x09\x09{\x0a * \x09\x09\x09className: \x27my-plugin-pre-publish-panel\x27,\x0a * \x09\x09\x09title: __( \x27My panel title\x27 ),\x0a * \x09\x09\x09initialOpen: true,\x0a * \x09\x09},\x0a * \x09\x09__( \x27My panel content\x27 )\x0a * \x09);\x0a * }\x0a * ```\x0a *\x0a * @example \x3ccaption\x3eESNext\x3c/caption\x3e\x0a * ```jsx\x0a * // Using ESNext syntax\x0a * const { __ } = wp.i18n;\x0a * const { PluginPrePublishPanel } = wp.editPost;\x0a *\x0a * const MyPluginPrePublishPanel = () =\x3e (\x0a * \x09\x3cPluginPrePublishPanel\x0a * \x09\x09className=\x22my-plugin-pre-publish-panel\x22\x0a * \x09\x09title={ __( \x27My panel title\x27 ) }\x0a * \x09\x09initialOpen={ true }\x0a * \x09\x3e\x0a * \x09    { __( \x27My panel content\x27 ) }\x0a * \x09\x3c/PluginPrePublishPanel\x3e\x0a * );\x0a * ```\x0a *\x0a * @return {WPElement} The WPElement to be rendered.\x0a */\x0a\x0a\x0avar plugin_pre_publish_panel_PluginPrePublishPanel = function PluginPrePublishPanel(_ref) {\x0a  var children = _ref.children,\x0a      className = _ref.className,\x0a      title = _ref.title,\x0a      _ref$initialOpen = _ref.initialOpen,\x0a      initialOpen = _ref$initialOpen === void 0 ? false : _ref$initialOpen;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(plugin_pre_publish_panel_Fill, null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    className: className,\x0a    initialOpen: initialOpen || !title,\x0a    title: title\x0a  }, children));\x0a};\x0a\x0aplugin_pre_publish_panel_PluginPrePublishPanel.Slot = plugin_pre_publish_panel_Slot;\x0a/* harmony default export */ var plugin_pre_publish_panel = (plugin_pre_publish_panel_PluginPrePublishPanel);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/fullscreen-mode/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0avar fullscreen_mode_FullscreenMode =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(FullscreenMode, _Component);\x0a\x0a  function FullscreenMode() {\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, FullscreenMode);\x0a\x0a    return Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(FullscreenMode).apply(this, arguments));\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(FullscreenMode, [{\x0a    key: \x22componentDidMount\x22,\x0a    value: function componentDidMount() {\x0a      this.isSticky = false;\x0a      this.sync(); // `is-fullscreen-mode` is set in PHP as a body class by Gutenberg, and this causes\x0a      // `sticky-menu` to be applied by WordPress and prevents the admin menu being scrolled\x0a      // even if `is-fullscreen-mode` is then removed. Let\x27s remove `sticky-menu` here as\x0a      // a consequence of the FullscreenMode setup\x0a\x0a      if (document.body.classList.contains(\x27sticky-menu\x27)) {\x0a        this.isSticky = true;\x0a        document.body.classList.remove(\x27sticky-menu\x27);\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22componentWillUnmount\x22,\x0a    value: function componentWillUnmount() {\x0a      if (this.isSticky) {\x0a        document.body.classList.add(\x27sticky-menu\x27);\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22componentDidUpdate\x22,\x0a    value: function componentDidUpdate(prevProps) {\x0a      if (this.props.isActive !== prevProps.isActive) {\x0a        this.sync();\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22sync\x22,\x0a    value: function sync() {\x0a      var isActive = this.props.isActive;\x0a\x0a      if (isActive) {\x0a        document.body.classList.add(\x27is-fullscreen-mode\x27);\x0a      } else {\x0a        document.body.classList.remove(\x27is-fullscreen-mode\x27);\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      return null;\x0a    }\x0a  }]);\x0a\x0a  return FullscreenMode;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a/* harmony default export */ var fullscreen_mode = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isActive: select(\x27core/edit-post\x27).isFeatureActive(\x27fullscreenMode\x27)\x0a  };\x0a})(fullscreen_mode_FullscreenMode));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/layout/index.js\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0afunction Layout(_ref) {\x0a  var mode = _ref.mode,\x0a      editorSidebarOpened = _ref.editorSidebarOpened,\x0a      pluginSidebarOpened = _ref.pluginSidebarOpened,\x0a      publishSidebarOpened = _ref.publishSidebarOpened,\x0a      hasFixedToolbar = _ref.hasFixedToolbar,\x0a      closePublishSidebar = _ref.closePublishSidebar,\x0a      togglePublishSidebar = _ref.togglePublishSidebar,\x0a      hasActiveMetaboxes = _ref.hasActiveMetaboxes,\x0a      isSaving = _ref.isSaving,\x0a      isMobileViewport = _ref.isMobileViewport,\x0a      isRichEditingEnabled = _ref.isRichEditingEnabled;\x0a  var sidebarIsOpened = editorSidebarOpened || pluginSidebarOpened || publishSidebarOpened;\x0a  var className = classnames_default()(\x27edit-post-layout\x27, {\x0a    \x27is-sidebar-opened\x27: sidebarIsOpened,\x0a    \x27has-fixed-toolbar\x27: hasFixedToolbar\x0a  });\x0a  var publishLandmarkProps = {\x0a    role: \x27region\x27,\x0a\x0a    /* translators: accessibility text for the publish landmark region. */\x0a    \x27aria-label\x27: Object(external_this_wp_i18n_[\x22__\x22])(\x27Editor publish\x27),\x0a    tabIndex: -1\x0a  };\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22FocusReturnProvider\x22], {\x0a    className: className\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(fullscreen_mode, null), Object(external_this_wp_element_[\x22createElement\x22])(browser_url, null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22UnsavedChangesWarning\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22AutosaveMonitor\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(header, null), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22edit-post-layout__content\x22,\x0a    role: \x22region\x22\x0a    /* translators: accessibility text for the content landmark region. */\x0a    ,\x0a    \x22aria-label\x22: Object(external_this_wp_i18n_[\x22__\x22])(\x27Editor content\x27),\x0a    tabIndex: \x22-1\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22EditorNotices\x22], {\x0a    dismissible: false,\x0a    className: \x22is-pinned\x22\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22EditorNotices\x22], {\x0a    dismissible: true\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22PreserveScrollInReorder\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(components_keyboard_shortcuts, null), Object(external_this_wp_element_[\x22createElement\x22])(keyboard_shortcut_help_modal, null), Object(external_this_wp_element_[\x22createElement\x22])(manage_blocks_modal, null), Object(external_this_wp_element_[\x22createElement\x22])(options_modal, null), (mode === \x27text\x27 || !isRichEditingEnabled) && Object(external_this_wp_element_[\x22createElement\x22])(text_editor, null), isRichEditingEnabled && mode === \x27visual\x27 && Object(external_this_wp_element_[\x22createElement\x22])(visual_editor, null), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22edit-post-layout__metaboxes\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(meta_boxes, {\x0a    location: \x22normal\x22\x0a  })), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22edit-post-layout__metaboxes\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(meta_boxes, {\x0a    location: \x22advanced\x22\x0a  }))), publishSidebarOpened ? Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostPublishPanel\x22], Object(esm_extends[\x22a\x22 /* default */])({}, publishLandmarkProps, {\x0a    onClose: closePublishSidebar,\x0a    forceIsDirty: hasActiveMetaboxes,\x0a    forceIsSaving: isSaving,\x0a    PrePublishExtension: plugin_pre_publish_panel.Slot,\x0a    PostPublishExtension: plugin_post_publish_panel.Slot\x0a  })) : Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, Object(esm_extends[\x22a\x22 /* default */])({\x0a    className: \x22edit-post-toggle-publish-panel\x22\x0a  }, publishLandmarkProps), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a    isDefault: true,\x0a    type: \x22button\x22,\x0a    className: \x22edit-post-toggle-publish-panel__button\x22,\x0a    onClick: togglePublishSidebar,\x0a    \x22aria-expanded\x22: false\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Open publish panel\x27))), Object(external_this_wp_element_[\x22createElement\x22])(settings_sidebar, null), Object(external_this_wp_element_[\x22createElement\x22])(sidebar.Slot, null), isMobileViewport && sidebarIsOpened && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22ScrollLock\x22], null)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Popover\x22].Slot, null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_plugins_[\x22PluginArea\x22], null));\x0a}\x0a\x0a/* harmony default export */ var layout = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    mode: select(\x27core/edit-post\x27).getEditorMode(),\x0a    editorSidebarOpened: select(\x27core/edit-post\x27).isEditorSidebarOpened(),\x0a    pluginSidebarOpened: select(\x27core/edit-post\x27).isPluginSidebarOpened(),\x0a    publishSidebarOpened: select(\x27core/edit-post\x27).isPublishSidebarOpened(),\x0a    hasFixedToolbar: select(\x27core/edit-post\x27).isFeatureActive(\x27fixedToolbar\x27),\x0a    hasActiveMetaboxes: select(\x27core/edit-post\x27).hasMetaBoxes(),\x0a    isSaving: select(\x27core/edit-post\x27).isSavingMetaBoxes(),\x0a    isRichEditingEnabled: select(\x27core/editor\x27).getEditorSettings().richEditingEnabled\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      closePublishSidebar = _dispatch.closePublishSidebar,\x0a      togglePublishSidebar = _dispatch.togglePublishSidebar;\x0a\x0a  return {\x0a    closePublishSidebar: closePublishSidebar,\x0a    togglePublishSidebar: togglePublishSidebar\x0a  };\x0a}), external_this_wp_components_[\x22navigateRegions\x22], Object(external_this_wp_viewport_[\x22withViewportMatch\x22])({\x0a  isMobileViewport: \x27\x3c small\x27\x0a}))(Layout));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/editor.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0avar editor_Editor =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(Editor, _Component);\x0a\x0a  function Editor() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, Editor);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(Editor).apply(this, arguments));\x0a    _this.getEditorSettings = memize_default()(_this.getEditorSettings, {\x0a      maxSize: 1\x0a    });\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(Editor, [{\x0a    key: \x22getEditorSettings\x22,\x0a    value: function getEditorSettings(settings, hasFixedToolbar, focusMode, hiddenBlockTypes, blockTypes) {\x0a      settings = Object(objectSpread[\x22a\x22 /* default */])({}, settings, {\x0a        hasFixedToolbar: hasFixedToolbar,\x0a        focusMode: focusMode\x0a      }); // Omit hidden block types if exists and non-empty.\x0a\x0a      if (Object(external_lodash_[\x22size\x22])(hiddenBlockTypes) \x3e 0) {\x0a        // Defer to passed setting for `allowedBlockTypes` if provided as\x0a        // anything other than `true` (where `true` is equivalent to allow\x0a        // all block types).\x0a        var defaultAllowedBlockTypes = true === settings.allowedBlockTypes ? Object(external_lodash_[\x22map\x22])(blockTypes, \x27name\x27) : settings.allowedBlockTypes || [];\x0a        settings.allowedBlockTypes = external_lodash_[\x22without\x22].apply(void 0, [defaultAllowedBlockTypes].concat(Object(toConsumableArray[\x22a\x22 /* default */])(hiddenBlockTypes)));\x0a      }\x0a\x0a      return settings;\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props = this.props,\x0a          settings = _this$props.settings,\x0a          hasFixedToolbar = _this$props.hasFixedToolbar,\x0a          focusMode = _this$props.focusMode,\x0a          post = _this$props.post,\x0a          initialEdits = _this$props.initialEdits,\x0a          onError = _this$props.onError,\x0a          hiddenBlockTypes = _this$props.hiddenBlockTypes,\x0a          blockTypes = _this$props.blockTypes,\x0a          props = Object(objectWithoutProperties[\x22a\x22 /* default */])(_this$props, [\x22settings\x22, \x22hasFixedToolbar\x22, \x22focusMode\x22, \x22post\x22, \x22initialEdits\x22, \x22onError\x22, \x22hiddenBlockTypes\x22, \x22blockTypes\x22]);\x0a\x0a      if (!post) {\x0a        return null;\x0a      }\x0a\x0a      var editorSettings = this.getEditorSettings(settings, hasFixedToolbar, focusMode, hiddenBlockTypes, blockTypes);\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22StrictMode\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22EditorProvider\x22], Object(esm_extends[\x22a\x22 /* default */])({\x0a        settings: editorSettings,\x0a        post: post,\x0a        initialEdits: initialEdits\x0a      }, props), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22ErrorBoundary\x22], {\x0a        onError: onError\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(layout, null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22KeyboardShortcuts\x22], {\x0a        shortcuts: prevent_event_discovery\x0a      })), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_editor_[\x22PostLockedModal\x22], null)));\x0a    }\x0a  }]);\x0a\x0a  return Editor;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var editor = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref) {\x0a  var postId = _ref.postId,\x0a      postType = _ref.postType;\x0a\x0a  var _select = select(\x27core/edit-post\x27),\x0a      isFeatureActive = _select.isFeatureActive,\x0a      getPreference = _select.getPreference;\x0a\x0a  var _select2 = select(\x27core\x27),\x0a      getEntityRecord = _select2.getEntityRecord;\x0a\x0a  var _select3 = select(\x27core/blocks\x27),\x0a      getBlockTypes = _select3.getBlockTypes;\x0a\x0a  return {\x0a    hasFixedToolbar: isFeatureActive(\x27fixedToolbar\x27),\x0a    focusMode: isFeatureActive(\x27focusMode\x27),\x0a    post: getEntityRecord(\x27postType\x27, postType, postId),\x0a    hiddenBlockTypes: getPreference(\x27hiddenBlockTypes\x27),\x0a    blockTypes: getBlockTypes()\x0a  };\x0a})(editor_Editor));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/block-settings-menu/plugin-block-settings-menu-item.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar plugin_block_settings_menu_item_isEverySelectedBlockAllowed = function isEverySelectedBlockAllowed(selected, allowed) {\x0a  return Object(external_lodash_[\x22difference\x22])(selected, allowed).length === 0;\x0a};\x0a/**\x0a * Plugins may want to add an item to the menu either for every block\x0a * or only for the specific ones provided in the `allowedBlocks` component property.\x0a *\x0a * If there are multiple blocks selected the item will be rendered if every block\x0a * is of one allowed type (not necessarily the same).\x0a *\x0a * @param {string[]} selectedBlockNames Array containing the names of the blocks selected\x0a * @param {string[]} allowedBlockNames Array containing the names of the blocks allowed\x0a * @return {boolean} Whether the item will be rendered or not.\x0a */\x0a\x0a\x0avar shouldRenderItem = function shouldRenderItem(selectedBlockNames, allowedBlockNames) {\x0a  return !Array.isArray(allowedBlockNames) || plugin_block_settings_menu_item_isEverySelectedBlockAllowed(selectedBlockNames, allowedBlockNames);\x0a};\x0a/**\x0a * Renders a new item in the block settings menu.\x0a *\x0a * @param {Object} props Component props.\x0a * @param {Array} [props.allowedBlockNames] An array containing a list of block names for which the item should be shown. If not present, it\x27ll be rendered for any block. If multiple blocks are selected, it\x27ll be shown if and only if all of them are in the whitelist.\x0a * @param {string|Element} [props.icon] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element.\x0a * @param {string} props.label The menu item text.\x0a * @param {Function} props.onClick Callback function to be executed when the user click the menu item.\x0a *\x0a * @example \x3ccaption\x3eES5\x3c/caption\x3e\x0a * ```js\x0a * // Using ES5 syntax\x0a * var __ = wp.i18n.__;\x0a * var PluginBlockSettingsMenuItem = wp.editPost.PluginBlockSettingsMenuItem;\x0a *\x0a * function doOnClick(){\x0a * \x09// To be called when the user clicks the menu item.\x0a * }\x0a *\x0a * function MyPluginBlockSettingsMenuItem() {\x0a * \x09return wp.element.createElement(\x0a * \x09\x09PluginBlockSettingsMenuItem,\x0a * \x09\x09{\x0a * \x09\x09\x09allowedBlockNames: [ \x27core/paragraph\x27 ],\x0a * \x09\x09\x09icon: \x27dashicon-name\x27,\x0a * \x09\x09\x09label: __( \x27Menu item text\x27 ),\x0a * \x09\x09\x09onClick: doOnClick,\x0a * \x09\x09}\x0a * \x09);\x0a * }\x0a * ```\x0a *\x0a * @example \x3ccaption\x3eESNext\x3c/caption\x3e\x0a * ```jsx\x0a * // Using ESNext syntax\x0a * import { __ } from wp.i18n;\x0a * import { PluginBlockSettingsMenuItem } from wp.editPost;\x0a *\x0a * const doOnClick = ( ) =\x3e {\x0a *     // To be called when the user clicks the menu item.\x0a * };\x0a *\x0a * const MyPluginBlockSettingsMenuItem = () =\x3e (\x0a *     \x3cPluginBlockSettingsMenuItem\x0a * \x09\x09allowedBlockNames=[ \x27core/paragraph\x27 ]\x0a * \x09\x09icon=\x27dashicon-name\x27\x0a * \x09\x09label=__( \x27Menu item text\x27 )\x0a * \x09\x09onClick={ doOnClick } /\x3e\x0a * );\x0a * ```\x0a *\x0a * @return {WPElement} The WPElement to be rendered.\x0a */\x0a\x0a\x0avar plugin_block_settings_menu_item_PluginBlockSettingsMenuItem = function PluginBlockSettingsMenuItem(_ref) {\x0a  var allowedBlocks = _ref.allowedBlocks,\x0a      icon = _ref.icon,\x0a      label = _ref.label,\x0a      onClick = _ref.onClick,\x0a      small = _ref.small,\x0a      role = _ref.role;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(plugin_block_settings_menu_group, null, function (_ref2) {\x0a    var selectedBlocks = _ref2.selectedBlocks,\x0a        onClose = _ref2.onClose;\x0a\x0a    if (!shouldRenderItem(selectedBlocks, allowedBlocks)) {\x0a      return null;\x0a    }\x0a\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuItem\x22], {\x0a      className: \x22editor-block-settings-menu__control\x22,\x0a      onClick: Object(external_this_wp_compose_[\x22compose\x22])(onClick, onClose),\x0a      icon: icon || \x27admin-plugins\x27,\x0a      label: small ? label : undefined,\x0a      role: role\x0a    }, !small && label);\x0a  });\x0a};\x0a\x0a/* harmony default export */ var plugin_block_settings_menu_item = (plugin_block_settings_menu_item_PluginBlockSettingsMenuItem);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/plugin-more-menu-item/index.js\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar plugin_more_menu_item_PluginMoreMenuItem = function PluginMoreMenuItem(_ref) {\x0a  var _ref$onClick = _ref.onClick,\x0a      onClick = _ref$onClick === void 0 ? external_lodash_[\x22noop\x22] : _ref$onClick,\x0a      props = Object(objectWithoutProperties[\x22a\x22 /* default */])(_ref, [\x22onClick\x22]);\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(plugins_more_menu_group, null, function (fillProps) {\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22MenuItem\x22], Object(esm_extends[\x22a\x22 /* default */])({}, props, {\x0a      onClick: Object(external_this_wp_compose_[\x22compose\x22])(onClick, fillProps.onClose)\x0a    }));\x0a  });\x0a};\x0a/**\x0a * Renders a menu item in `Plugins` group in `More Menu` drop down, and can be used to as a button or link depending on the props provided.\x0a * The text within the component appears as the menu item label.\x0a *\x0a * @param {Object} props Component properties.\x0a * @param {string} [props.href] When `href` is provided then the menu item is represented as an anchor rather than button. It corresponds to the `href` attribute of the anchor.\x0a * @param {string|Element} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered to the left of the menu item label.\x0a * @param {Function} [props.onClick=noop] The callback function to be executed when the user clicks the menu item.\x0a * @param {...*} [props.other] Any additional props are passed through to the underlying [MenuItem](/packages/components/src/menu-item/README.md) component.\x0a *\x0a * @example \x3ccaption\x3eES5\x3c/caption\x3e\x0a * ```js\x0a * // Using ES5 syntax\x0a * var __ = wp.i18n.__;\x0a * var PluginMoreMenuItem = wp.editPost.PluginMoreMenuItem;\x0a *\x0a * function onButtonClick() {\x0a * \x09alert( \x27Button clicked.\x27 );\x0a * }\x0a *\x0a * function MyButtonMoreMenuItem() {\x0a * \x09return wp.element.createElement(\x0a * \x09\x09PluginMoreMenuItem,\x0a * \x09\x09{\x0a * \x09\x09\x09icon: \x27smiley\x27,\x0a * \x09\x09\x09onClick: onButtonClick\x0a * \x09\x09},\x0a * \x09\x09__( \x27My button title\x27 )\x0a * \x09)\x0a * }\x0a * ```\x0a *\x0a * @example \x3ccaption\x3eESNext\x3c/caption\x3e\x0a * ```jsx\x0a * // Using ESNext syntax\x0a * const { __ } = wp.i18n;\x0a * const { PluginMoreMenuItem } = wp.editPost;\x0a *\x0a * function onButtonClick() {\x0a * \x09alert( \x27Button clicked.\x27 );\x0a * }\x0a *\x0a * const MyButtonMoreMenuItem = () =\x3e (\x0a * \x09\x3cPluginMoreMenuItem\x0a * \x09\x09icon=\x22smiley\x22\x0a * \x09\x09onClick={ onButtonClick }\x0a * \x09\x3e\x0a * \x09\x09{ __( \x27My button title\x27 ) }\x0a * \x09\x3c/PluginMoreMenuItem\x3e\x0a * );\x0a * ```\x0a *\x0a * @return {WPElement} The element to be rendered.\x0a */\x0a\x0a\x0a/* harmony default export */ var plugin_more_menu_item = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_plugins_[\x22withPluginContext\x22])(function (context, ownProps) {\x0a  return {\x0a    icon: ownProps.icon || context.icon\x0a  };\x0a}))(plugin_more_menu_item_PluginMoreMenuItem));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/sidebar/plugin-sidebar/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction PluginSidebar(props) {\x0a  var children = props.children,\x0a      className = props.className,\x0a      icon = props.icon,\x0a      isActive = props.isActive,\x0a      _props$isPinnable = props.isPinnable,\x0a      isPinnable = _props$isPinnable === void 0 ? true : _props$isPinnable,\x0a      isPinned = props.isPinned,\x0a      sidebarName = props.sidebarName,\x0a      title = props.title,\x0a      togglePin = props.togglePin,\x0a      toggleSidebar = props.toggleSidebar;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, isPinnable && Object(external_this_wp_element_[\x22createElement\x22])(pinned_plugins, null, isPinned && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a    icon: icon,\x0a    label: title,\x0a    onClick: toggleSidebar,\x0a    isToggled: isActive,\x0a    \x22aria-expanded\x22: isActive\x0a  })), Object(external_this_wp_element_[\x22createElement\x22])(sidebar, {\x0a    name: sidebarName,\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Editor plugins\x27)\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(sidebar_header, {\x0a    closeLabel: Object(external_this_wp_i18n_[\x22__\x22])(\x27Close plugin\x27)\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22strong\x22, null, title), isPinnable && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a    icon: isPinned ? \x27star-filled\x27 : \x27star-empty\x27,\x0a    label: isPinned ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Unpin from toolbar\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Pin to toolbar\x27),\x0a    onClick: togglePin,\x0a    isToggled: isPinned,\x0a    \x22aria-expanded\x22: isPinned\x0a  })), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Panel\x22], {\x0a    className: className\x0a  }, children)));\x0a}\x0a/**\x0a * Renders a sidebar when activated. The contents within the `PluginSidebar` will appear as content within the sidebar.\x0a * If you wish to display the sidebar, you can with use the `PluginSidebarMoreMenuItem` component or the `wp.data.dispatch` API:\x0a *\x0a * ```js\x0a * wp.data.dispatch( \x27core/edit-post\x27 ).openGeneralSidebar( \x27plugin-name/sidebar-name\x27 );\x0a * ```\x0a *\x0a * @see PluginSidebarMoreMenuItem\x0a *\x0a * @param {Object} props Element props.\x0a * @param {string} props.name A string identifying the sidebar. Must be unique for every sidebar registered within the scope of your plugin.\x0a * @param {string} [props.className] An optional class name added to the sidebar body.\x0a * @param {string} props.title Title displayed at the top of the sidebar.\x0a * @param {boolean} [props.isPinnable=true] Whether to allow to pin sidebar to toolbar.\x0a * @param {string|Element} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered when the sidebar is pinned to toolbar.\x0a *\x0a * @example \x3ccaption\x3eES5\x3c/caption\x3e\x0a * ```js\x0a * // Using ES5 syntax\x0a * var __ = wp.i18n.__;\x0a * var el = wp.element.createElement;\x0a * var PanelBody = wp.components.PanelBody;\x0a * var PluginSidebar = wp.editPost.PluginSidebar;\x0a *\x0a * function MyPluginSidebar() {\x0a * \x09return el(\x0a * \x09\x09\x09PluginSidebar,\x0a * \x09\x09\x09{\x0a * \x09\x09\x09\x09name: \x27my-sidebar\x27,\x0a * \x09\x09\x09\x09title: \x27My sidebar title\x27,\x0a * \x09\x09\x09\x09icon: \x27smiley\x27,\x0a * \x09\x09\x09},\x0a * \x09\x09\x09el(\x0a * \x09\x09\x09\x09PanelBody,\x0a * \x09\x09\x09\x09{},\x0a * \x09\x09\x09\x09__( \x27My sidebar content\x27 )\x0a * \x09\x09\x09)\x0a * \x09);\x0a * }\x0a * ```\x0a *\x0a * @example \x3ccaption\x3eESNext\x3c/caption\x3e\x0a * ```jsx\x0a * // Using ESNext syntax\x0a * const { __ } = wp.i18n;\x0a * const { PanelBody } = wp.components;\x0a * const { PluginSidebar } = wp.editPost;\x0a *\x0a * const MyPluginSidebar = () =\x3e (\x0a * \x09\x3cPluginSidebar\x0a * \x09\x09name=\x22my-sidebar\x22\x0a * \x09\x09title=\x22My sidebar title\x22\x0a * \x09\x09icon=\x22smiley\x22\x0a * \x09\x3e\x0a * \x09\x09\x3cPanelBody\x3e\x0a * \x09\x09\x09{ __( \x27My sidebar content\x27 ) }\x0a * \x09\x09\x3c/PanelBody\x3e\x0a * \x09\x3c/PluginSidebar\x3e\x0a * );\x0a * ```\x0a *\x0a * @return {WPElement} Plugin sidebar component.\x0a */\x0a\x0a\x0a/* harmony default export */ var plugin_sidebar = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_plugins_[\x22withPluginContext\x22])(function (context, ownProps) {\x0a  return {\x0a    icon: ownProps.icon || context.icon,\x0a    sidebarName: \x22\x22.concat(context.name, \x22/\x22).concat(ownProps.name)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref) {\x0a  var sidebarName = _ref.sidebarName;\x0a\x0a  var _select = select(\x27core/edit-post\x27),\x0a      getActiveGeneralSidebarName = _select.getActiveGeneralSidebarName,\x0a      isPluginItemPinned = _select.isPluginItemPinned;\x0a\x0a  return {\x0a    isActive: getActiveGeneralSidebarName() === sidebarName,\x0a    isPinned: isPluginItemPinned(sidebarName)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, _ref2) {\x0a  var isActive = _ref2.isActive,\x0a      sidebarName = _ref2.sidebarName;\x0a\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      closeGeneralSidebar = _dispatch.closeGeneralSidebar,\x0a      openGeneralSidebar = _dispatch.openGeneralSidebar,\x0a      togglePinnedPluginItem = _dispatch.togglePinnedPluginItem;\x0a\x0a  return {\x0a    togglePin: function togglePin() {\x0a      togglePinnedPluginItem(sidebarName);\x0a    },\x0a    toggleSidebar: function toggleSidebar() {\x0a      if (isActive) {\x0a        closeGeneralSidebar();\x0a      } else {\x0a        openGeneralSidebar(sidebarName);\x0a      }\x0a    }\x0a  };\x0a}))(PluginSidebar));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/components/header/plugin-sidebar-more-menu-item/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar plugin_sidebar_more_menu_item_PluginSidebarMoreMenuItem = function PluginSidebarMoreMenuItem(_ref) {\x0a  var children = _ref.children,\x0a      icon = _ref.icon,\x0a      isSelected = _ref.isSelected,\x0a      onClick = _ref.onClick;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(plugin_more_menu_item, {\x0a    icon: isSelected ? \x27yes\x27 : icon,\x0a    isSelected: isSelected,\x0a    role: \x22menuitemcheckbox\x22,\x0a    onClick: onClick\x0a  }, children);\x0a};\x0a/**\x0a * Renders a menu item in `Plugins` group in `More Menu` drop down,\x0a * and can be used to activate the corresponding `PluginSidebar` component.\x0a * The text within the component appears as the menu item label.\x0a *\x0a * @param {Object} props Component props.\x0a * @param {string} props.target A string identifying the target sidebar you wish to be activated by this menu item. Must be the same as the `name` prop you have given to that sidebar.\x0a * @param {string|Element} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered to the left of the menu item label.\x0a *\x0a * @example \x3ccaption\x3eES5\x3c/caption\x3e\x0a * ```js\x0a * // Using ES5 syntax\x0a * var __ = wp.i18n.__;\x0a * var PluginSidebarMoreMenuItem = wp.editPost.PluginSidebarMoreMenuItem;\x0a *\x0a * function MySidebarMoreMenuItem() {\x0a * \x09return wp.element.createElement(\x0a * \x09\x09PluginSidebarMoreMenuItem,\x0a * \x09\x09{\x0a * \x09\x09\x09target: \x27my-sidebar\x27,\x0a * \x09\x09\x09icon: \x27smiley\x27,\x0a * \x09\x09},\x0a * \x09\x09__( \x27My sidebar title\x27 )\x0a * \x09)\x0a * }\x0a * ```\x0a *\x0a * @example \x3ccaption\x3eESNext\x3c/caption\x3e\x0a * ```jsx\x0a * // Using ESNext syntax\x0a * const { __ } = wp.i18n;\x0a * const { PluginSidebarMoreMenuItem } = wp.editPost;\x0a *\x0a * const MySidebarMoreMenuItem = () =\x3e (\x0a * \x09\x3cPluginSidebarMoreMenuItem\x0a * \x09\x09target=\x22my-sidebar\x22\x0a * \x09\x09icon=\x22smiley\x22\x0a * \x09\x3e\x0a * \x09\x09{ __( \x27My sidebar title\x27 ) }\x0a * \x09\x3c/PluginSidebarMoreMenuItem\x3e\x0a * );\x0a * ```\x0a *\x0a * @return {WPElement} The element to be rendered.\x0a */\x0a\x0a\x0a/* harmony default export */ var plugin_sidebar_more_menu_item = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_plugins_[\x22withPluginContext\x22])(function (context, ownProps) {\x0a  return {\x0a    icon: ownProps.icon || context.icon,\x0a    sidebarName: \x22\x22.concat(context.name, \x22/\x22).concat(ownProps.target)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref2) {\x0a  var sidebarName = _ref2.sidebarName;\x0a\x0a  var _select = select(\x27core/edit-post\x27),\x0a      getActiveGeneralSidebarName = _select.getActiveGeneralSidebarName;\x0a\x0a  return {\x0a    isSelected: getActiveGeneralSidebarName() === sidebarName\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, _ref3) {\x0a  var isSelected = _ref3.isSelected,\x0a      sidebarName = _ref3.sidebarName;\x0a\x0a  var _dispatch = dispatch(\x27core/edit-post\x27),\x0a      closeGeneralSidebar = _dispatch.closeGeneralSidebar,\x0a      openGeneralSidebar = _dispatch.openGeneralSidebar;\x0a\x0a  var onClick = isSelected ? closeGeneralSidebar : function () {\x0a    return openGeneralSidebar(sidebarName);\x0a  };\x0a  return {\x0a    onClick: onClick\x0a  };\x0a}))(plugin_sidebar_more_menu_item_PluginSidebarMoreMenuItem));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/edit-post/build-module/index.js\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22reinitializeEditor\x22, function() { return reinitializeEditor; });\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22initializeEditor\x22, function() { return initializeEditor; });\x0a/* concated harmony reexport PluginBlockSettingsMenuItem */__webpack_require__.d(__webpack_exports__, \x22PluginBlockSettingsMenuItem\x22, function() { return plugin_block_settings_menu_item; });\x0a/* concated harmony reexport PluginMoreMenuItem */__webpack_require__.d(__webpack_exports__, \x22PluginMoreMenuItem\x22, function() { return plugin_more_menu_item; });\x0a/* concated harmony reexport PluginPostPublishPanel */__webpack_require__.d(__webpack_exports__, \x22PluginPostPublishPanel\x22, function() { return plugin_post_publish_panel; });\x0a/* concated harmony reexport PluginPostStatusInfo */__webpack_require__.d(__webpack_exports__, \x22PluginPostStatusInfo\x22, function() { return plugin_post_status_info; });\x0a/* concated harmony reexport PluginPrePublishPanel */__webpack_require__.d(__webpack_exports__, \x22PluginPrePublishPanel\x22, function() { return plugin_pre_publish_panel; });\x0a/* concated harmony reexport PluginSidebar */__webpack_require__.d(__webpack_exports__, \x22PluginSidebar\x22, function() { return plugin_sidebar; });\x0a/* concated harmony reexport PluginSidebarMoreMenuItem */__webpack_require__.d(__webpack_exports__, \x22PluginSidebarMoreMenuItem\x22, function() { return plugin_sidebar_more_menu_item; });\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Reinitializes the editor after the user chooses to reboot the editor after\x0a * an unhandled error occurs, replacing previously mounted editor element using\x0a * an initial state from prior to the crash.\x0a *\x0a * @param {Object}  postType     Post type of the post to edit.\x0a * @param {Object}  postId       ID of the post to edit.\x0a * @param {Element} target       DOM node in which editor is rendered.\x0a * @param {?Object} settings     Editor settings object.\x0a * @param {Object}  initialEdits Programmatic edits to apply initially, to be\x0a *                               considered as non-user-initiated (bypass for\x0a *                               unsaved changes prompt).\x0a */\x0a\x0afunction reinitializeEditor(postType, postId, target, settings, initialEdits) {\x0a  Object(external_this_wp_element_[\x22unmountComponentAtNode\x22])(target);\x0a  var reboot = reinitializeEditor.bind(null, postType, postId, target, settings, initialEdits);\x0a  Object(external_this_wp_element_[\x22render\x22])(Object(external_this_wp_element_[\x22createElement\x22])(editor, {\x0a    settings: settings,\x0a    onError: reboot,\x0a    postId: postId,\x0a    postType: postType,\x0a    initialEdits: initialEdits,\x0a    recovery: true\x0a  }), target);\x0a}\x0a/**\x0a * Initializes and returns an instance of Editor.\x0a *\x0a * The return value of this function is not necessary if we change where we\x0a * call initializeEditor(). This is due to metaBox timing.\x0a *\x0a * @param {string}  id           Unique identifier for editor instance.\x0a * @param {Object}  postType     Post type of the post to edit.\x0a * @param {Object}  postId       ID of the post to edit.\x0a * @param {?Object} settings     Editor settings object.\x0a * @param {Object}  initialEdits Programmatic edits to apply initially, to be\x0a *                               considered as non-user-initiated (bypass for\x0a *                               unsaved changes prompt).\x0a */\x0a\x0afunction initializeEditor(id, postType, postId, settings, initialEdits) {\x0a  var target = document.getElementById(id);\x0a  var reboot = reinitializeEditor.bind(null, postType, postId, target, settings, initialEdits);\x0a  Object(external_this_wp_blockLibrary_[\x22registerCoreBlocks\x22])(); // Show a console log warning if the browser is not in Standards rendering mode.\x0a\x0a  var documentMode = document.compatMode === \x27CSS1Compat\x27 ? \x27Standards\x27 : \x27Quirks\x27;\x0a\x0a  if (documentMode !== \x27Standards\x27) {\x0a    // eslint-disable-next-line no-console\x0a    console.warn(\x22Your browser is using Quirks Mode. \x5cnThis can cause rendering issues such as blocks overlaying meta boxes in the editor. Quirks Mode can be triggered by PHP errors or HTML code appearing before the opening \x3c!DOCTYPE html\x3e. Try checking the raw page source or your site\x27s PHP error log and resolving errors there, removing any HTML before the doctype, or disabling plugins.\x22);\x0a  }\x0a\x0a  Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/nux\x27).triggerGuide([\x27core/editor.inserter\x27, \x27core/editor.settings\x27, \x27core/editor.preview\x27, \x27core/editor.publish\x27]);\x0a  Object(external_this_wp_element_[\x22render\x22])(Object(external_this_wp_element_[\x22createElement\x22])(editor, {\x0a    settings: settings,\x0a    onError: reboot,\x0a    postId: postId,\x0a    postType: postType,\x0a    initialEdits: initialEdits\x0a  }), target);\x0a}\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 37:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _arrayWithHoles; });\x0afunction _arrayWithHoles(arr) {\x0a  if (Array.isArray(arr)) return arr;\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 38:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _nonIterableRest; });\x0afunction _nonIterableRest() {\x0a  throw new TypeError(\x22Invalid attempt to destructure non-iterable instance\x22);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 4:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22components\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 40:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22viewport\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 41:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0amodule.exports = function memize( fn, options ) {\x0a\x09var size = 0,\x0a\x09\x09maxSize, head, tail;\x0a\x0a\x09if ( options && options.maxSize ) {\x0a\x09\x09maxSize = options.maxSize;\x0a\x09}\x0a\x0a\x09function memoized( /* ...args */ ) {\x0a\x09\x09var node = head,\x0a\x09\x09\x09len = arguments.length,\x0a\x09\x09\x09args, i;\x0a\x0a\x09\x09searchCache: while ( node ) {\x0a\x09\x09\x09// Perform a shallow equality test to confirm that whether the node\x0a\x09\x09\x09// under test is a candidate for the arguments passed. Two arrays\x0a\x09\x09\x09// are shallowly equal if their length matches and each entry is\x0a\x09\x09\x09// strictly equal between the two sets. Avoid abstracting to a\x0a\x09\x09\x09// function which could incur an arguments leaking deoptimization.\x0a\x0a\x09\x09\x09// Check whether node arguments match arguments length\x0a\x09\x09\x09if ( node.args.length !== arguments.length ) {\x0a\x09\x09\x09\x09node = node.next;\x0a\x09\x09\x09\x09continue;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Check whether node arguments match arguments values\x0a\x09\x09\x09for ( i = 0; i \x3c len; i++ ) {\x0a\x09\x09\x09\x09if ( node.args[ i ] !== arguments[ i ] ) {\x0a\x09\x09\x09\x09\x09node = node.next;\x0a\x09\x09\x09\x09\x09continue searchCache;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// At this point we can assume we\x27ve found a match\x0a\x0a\x09\x09\x09// Surface matched node to head if not already\x0a\x09\x09\x09if ( node !== head ) {\x0a\x09\x09\x09\x09// As tail, shift to previous. Must only shift if not also\x0a\x09\x09\x09\x09// head, since if both head and tail, there is no previous.\x0a\x09\x09\x09\x09if ( node === tail ) {\x0a\x09\x09\x09\x09\x09tail = node.prev;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09// Adjust siblings to point to each other. If node was tail,\x0a\x09\x09\x09\x09// this also handles new tail\x27s empty `next` assignment.\x0a\x09\x09\x09\x09node.prev.next = node.next;\x0a\x09\x09\x09\x09if ( node.next ) {\x0a\x09\x09\x09\x09\x09node.next.prev = node.prev;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09node.next = head;\x0a\x09\x09\x09\x09node.prev = null;\x0a\x09\x09\x09\x09head.prev = node;\x0a\x09\x09\x09\x09head = node;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Return immediately\x0a\x09\x09\x09return node.val;\x0a\x09\x09}\x0a\x0a\x09\x09// No cached value found. Continue to insertion phase:\x0a\x0a\x09\x09// Create a copy of arguments (avoid leaking deoptimization)\x0a\x09\x09args = new Array( len );\x0a\x09\x09for ( i = 0; i \x3c len; i++ ) {\x0a\x09\x09\x09args[ i ] = arguments[ i ];\x0a\x09\x09}\x0a\x0a\x09\x09node = {\x0a\x09\x09\x09args: args,\x0a\x0a\x09\x09\x09// Generate the result from original function\x0a\x09\x09\x09val: fn.apply( null, args )\x0a\x09\x09};\x0a\x0a\x09\x09// Don\x27t need to check whether node is already head, since it would\x0a\x09\x09// have been returned above already if it was\x0a\x0a\x09\x09// Shift existing head down list\x0a\x09\x09if ( head ) {\x0a\x09\x09\x09head.prev = node;\x0a\x09\x09\x09node.next = head;\x0a\x09\x09} else {\x0a\x09\x09\x09// If no head, follows that there\x27s no tail (at initial or reset)\x0a\x09\x09\x09tail = node;\x0a\x09\x09}\x0a\x0a\x09\x09// Trim tail if we\x27re reached max size and are pending cache insertion\x0a\x09\x09if ( size === maxSize ) {\x0a\x09\x09\x09tail = tail.prev;\x0a\x09\x09\x09tail.next = null;\x0a\x09\x09} else {\x0a\x09\x09\x09size++;\x0a\x09\x09}\x0a\x0a\x09\x09head = node;\x0a\x0a\x09\x09return node.val;\x0a\x09}\x0a\x0a\x09memoized.clear = function() {\x0a\x09\x09head = null;\x0a\x09\x09tail = null;\x0a\x09\x09size = 0;\x0a\x09};\x0a\x0a\x09if ( false ) {}\x0a\x0a\x09return memoized;\x0a};\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 48:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22a11y\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 5:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22data\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 6:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22compose\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 60:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22nux\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 63:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22plugins\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 7:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _objectSpread; });\x0a/* harmony import */ var _defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\x0a\x0afunction _objectSpread(target) {\x0a  for (var i = 1; i \x3c arguments.length; i++) {\x0a    var source = arguments[i] != null ? arguments[i] : {};\x0a    var ownKeys = Object.keys(source);\x0a\x0a    if (typeof Object.getOwnPropertySymbols === \x27function\x27) {\x0a      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\x0a        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\x0a      }));\x0a    }\x0a\x0a    ownKeys.forEach(function (key) {\x0a      Object(_defineProperty__WEBPACK_IMPORTED_MODULE_0__[/* default */ \x22a\x22])(target, key, source[key]);\x0a    });\x0a  }\x0a\x0a  return target;\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 70:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a\x0afunction flattenIntoMap( map, effects ) {\x0a\x09var i;\x0a\x09if ( Array.isArray( effects ) ) {\x0a\x09\x09for ( i = 0; i \x3c effects.length; i++ ) {\x0a\x09\x09\x09flattenIntoMap( map, effects[ i ] );\x0a\x09\x09}\x0a\x09} else {\x0a\x09\x09for ( i in effects ) {\x0a\x09\x09\x09map[ i ] = ( map[ i ] || [] ).concat( effects[ i ] );\x0a\x09\x09}\x0a\x09}\x0a}\x0a\x0afunction refx( effects ) {\x0a\x09var map = {},\x0a\x09\x09middleware;\x0a\x0a\x09flattenIntoMap( map, effects );\x0a\x0a\x09middleware = function( store ) {\x0a\x09\x09return function( next ) {\x0a\x09\x09\x09return function( action ) {\x0a\x09\x09\x09\x09var handlers = map[ action.type ],\x0a\x09\x09\x09\x09\x09result = next( action ),\x0a\x09\x09\x09\x09\x09i, handlerAction;\x0a\x0a\x09\x09\x09\x09if ( handlers ) {\x0a\x09\x09\x09\x09\x09for ( i = 0; i \x3c handlers.length; i++ ) {\x0a\x09\x09\x09\x09\x09\x09handlerAction = handlers[ i ]( action, store );\x0a\x09\x09\x09\x09\x09\x09if ( handlerAction ) {\x0a\x09\x09\x09\x09\x09\x09\x09store.dispatch( handlerAction );\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09return result;\x0a\x09\x09\x09};\x0a\x09\x09};\x0a\x09};\x0a\x0a\x09middleware.effects = map;\x0a\x0a\x09return middleware;\x0a}\x0a\x0amodule.exports = refx;\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 72:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22coreData\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 8:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22blockEditor\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 9:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _createClass; });\x0afunction _defineProperties(target, props) {\x0a  for (var i = 0; i \x3c props.length; i++) {\x0a    var descriptor = props[i];\x0a    descriptor.enumerable = descriptor.enumerable || false;\x0a    descriptor.configurable = true;\x0a    if (\x22value\x22 in descriptor) descriptor.writable = true;\x0a    Object.defineProperty(target, descriptor.key, descriptor);\x0a  }\x0a}\x0a\x0afunction _createClass(Constructor, protoProps, staticProps) {\x0a  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\x0a  if (staticProps) _defineProperties(Constructor, staticProps);\x0a  return Constructor;\x0a}\x0a\x0a/***/ })\x0a\x0a/******/ });\x22a\x22 /* default!'}