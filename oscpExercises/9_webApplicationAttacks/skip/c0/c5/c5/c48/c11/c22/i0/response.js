var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 15:00:14 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Mon, 29 Jan 2018 23:56:29 GMT\x0aETag: \x2214ee-563f2fea4c540-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-1663/1664\x0aContent-Length: 1664\x0aKeep-Alive: timeout=5, max=8\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/* global _wpmejsSettings, MediaElementPlayer */\x0a\x0a(function ($, _, Backbone) {\x0a\x09\x27use strict\x27;\x0a\x0a\x09/** @namespace wp */\x0a\x09window.wp = window.wp || {};\x0a\x0a\x09var WPPlaylistView = Backbone.View.extend(/** @lends WPPlaylistView.prototype */{\x0a\x09\x09/**\x0a\x09\x09 * @constructs\x0a\x09\x09 *\x0a\x09\x09 * @param {Object} options          The options to create this playlist view with.\x0a\x09\x09 * @param {Object} options.metadata The metadata\x0a\x09\x09 */\x0a\x09\x09initialize : function (options) {\x0a\x09\x09\x09this.index = 0;\x0a\x09\x09\x09this.settings = {};\x0a\x09\x09\x09this.data = options.metadata || $.parseJSON( this.$(\x27script.wp-playlist-script\x27).html() );\x0a\x09\x09\x09this.playerNode = this.$( this.data.type );\x0a\x0a\x09\x09\x09this.tracks = new Backbone.Collection( this.data.tracks );\x0a\x09\x09\x09this.current = this.tracks.first();\x0a\x0a\x09\x09\x09if ( \x27audio\x27 === this.data.type ) {\x0a\x09\x09\x09\x09this.currentTemplate = wp.template( \x27wp-playlist-current-item\x27 );\x0a\x09\x09\x09\x09this.currentNode = this.$( \x27.wp-playlist-current-item\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09this.renderCurrent();\x0a\x0a\x09\x09\x09if ( this.data.tracklist ) {\x0a\x09\x09\x09\x09this.itemTemplate = wp.template( \x27wp-playlist-item\x27 );\x0a\x09\x09\x09\x09this.playingClass = \x27wp-playlist-playing\x27;\x0a\x09\x09\x09\x09this.renderTracks();\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09this.playerNode.attr( \x27src\x27, this.current.get( \x27src\x27 ) );\x0a\x0a\x09\x09\x09_.bindAll( this, \x27bindPlayer\x27, \x27bindResetPlayer\x27, \x27setPlayer\x27, \x27ended\x27, \x27clickTrack\x27 );\x0a\x0a\x09\x09\x09if ( ! _.isUndefined( window._wpmejsSettings ) ) {\x0a\x09\x09\x09\x09this.settings = _.clone( _wpmejsSettings );\x0a\x09\x09\x09}\x0a\x09\x09\x09this.settings.success = this.bindPlayer;\x0a\x09\x09\x09this.setPlayer();\x0a\x09\x09},\x0a\x0a\x09\x09bindPlayer : function (mejs) {\x0a\x09\x09\x09this.mejs = mejs;\x0a\x09\x09\x09this.mejs.addEventListener( \x27ended\x27, this.ended );\x0a\x09\x09},\x0a\x0a\x09\x09bindResetPlayer : function (mejs) {\x0a\x09\x09\x09this.bindPlayer( mejs );\x0a\x09\x09\x09this.playCurrentSrc();\x0a\x09\x09},\x0a\x0a\x09\x09setPlayer: function (force) {\x0a\x09\x09\x09if ( this.player ) {\x0a\x09\x09\x09\x09this.player.pause();\x0a\x09\x09\x09\x09this.player.remove();\x0a\x09\x09\x09\x09this.playerNode = this.$( this.data.type );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if (force) {\x0a\x09\x09\x09\x09this.playerNode.attr( \x27src\x27, this.current.get( \x27src\x27 ) );\x0a\x09\x09\x09\x09this.settings.success = this.bindResetPlayer;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// This is also our bridge to the outside world.\x0a\x09\x09\x09this.player = new MediaElementPlayer( this.playerNode.get(0), this.settings );\x0a\x09\x09},\x0a\x0a\x09\x09playCurrentSrc : function () {\x0a\x09\x09\x09this.renderCurrent();\x0a\x09\x09\x09this.mejs.setSrc( this.playerNode.attr( \x27src\x27 ) );\x0a\x09\x09\x09this.mejs.load();\x0a\x09\x09\x09this.mejs.play();\x0a\x09\x09},\x0a\x0a\x09\x09renderCurrent : function () {\x0a\x09\x09\x09var dimensions, defaultImage = \x27wp-includes/images/media/video.png\x27;\x0a\x09\x09\x09if ( \x27video\x27 === this.data.type ) {\x0a\x09\x09\x09\x09if ( this.data.images && this.current.get( \x27image\x27 ) && -1 === this.current.get( \x27image\x27 ).src.indexOf( defaultImage ) ) {\x0a\x09\x09\x09\x09\x09this.playerNode.attr( \x27poster\x27, this.current.get( \x27image\x27 ).src );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09dimensions = this.current.get( \x27dimensions\x27 ).resized;\x0a\x09\x09\x09\x09this.playerNode.attr( dimensions );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09if ( ! this.data.images ) {\x0a\x09\x09\x09\x09\x09this.current.set( \x27image\x27, false );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09this.currentNode.html( this.currentTemplate( this.current.toJSON() ) );\x0a\x09\x09\x09}\x0a\x09\x09},\x0a\x0a\x09\x09renderTracks : function () {\x0a\x09\x09\x09var self = this, i = 1, tracklist = $( \x27\x3cdiv class=\x22wp-playlist-tracks\x22\x3e\x3c/div\x3e\x27 );\x0a\x09\x09\x09this.tracks.each(function (model) {\x0a\x09\x09\x09\x09if ( ! self.data.images ) {\x0a\x09\x09\x09\x09\x09model.set( \x27image\x27, false );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09model.set( \x27artists\x27, self.data.artists );\x0a\x09\x09\x09\x09model.set( \x27index\x27, self.data.tracknumbers ? i : false );\x0a\x09\x09\x09\x09tracklist.append( self.itemTemplate( model.toJSON() ) );\x0a\x09\x09\x09\x09i += 1;\x0a\x09\x09\x09});\x0a\x09\x09\x09this.$el.append( tracklist );\x0a\x0a\x09\x09\x09this.$( \x27.wp-playlist-item\x27 ).eq(0).addClass( this.playingClass );\x0a\x09\x09},\x0a\x0a\x09\x09events : {\x0a\x09\x09\x09\x27click .wp-playlist-item\x27 : \x27clickTrack\x27,\x0a\x09\x09\x09\x27click .wp-playlist-next\x27 : \x27next\x27,\x0a\x09\x09\x09\x27click .wp-playlist-prev\x27 : \x27prev\x27\x0a\x09\x09},\x0a\x0a\x09\x09clickTrack : function (e) {\x0a\x09\x09\x09e.preventDefault();\x0a\x0a\x09\x09\x09this.index = this.$( \x27.wp-playlist-item\x27 ).index( e.currentTarget );\x0a\x09\x09\x09this.setCurrent();\x0a\x09\x09},\x0a\x0a\x09\x09ended : function () {\x0a\x09\x09\x09if ( this.index + 1 \x3c this.tracks.length ) {\x0a\x09\x09\x09\x09this.next();\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09this.index = 0;\x0a\x09\x09\x09\x09this.setCurrent();\x0a\x09\x09\x09}\x0a\x09\x09},\x0a\x0a\x09\x09next : function () {\x0a\x09\x09\x09this.index = this.index + 1 \x3e= this.tracks.length ? 0 : this.index + 1;\x0a\x09\x09\x09this.setCurrent();\x0a\x09\x09},\x0a\x0a\x09\x09prev : function () {\x0a\x09\x09\x09this.index = this.index - 1 \x3c 0 ? this.tracks.length - 1 : this.index - 1;\x0a\x09\x09\x09this.setCurrent();\x0a\x09\x09},\x0a\x0a\x09\x09loadCurrent : function () {\x0a\x09\x09\x09var last = this.playerNode.attr( \x27src\x27 ) && this.playerNode.attr( \x27src\x27 ).split(\x27.\x27).pop(),\x0a\x09\x09\x09\x09current = this.current.get( \x27src\x27 ).split(\x27.\x27).pop();\x0a\x0a\x09\x09\x09this.mejs && this.mejs.pause();\x0a\x0a\x09\x09\x09if ( last !== current ) {\x0a\x09\x09\x09\x09this.setPlayer( true );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09this.playerNode.attr( \x27src\x27, this.current.get( \x27src\x27 ) );\x0a\x09\x09\x09\x09this.playCurrentSrc();\x0a\x09\x09\x09}\x0a\x09\x09},\x0a\x0a\x09\x09setCurrent : function () {\x0a\x09\x09\x09this.current = this.tracks.at( this.index );\x0a\x0a\x09\x09\x09if ( this.data.tracklist ) {\x0a\x09\x09\x09\x09this.$( \x27.wp-playlist-item\x27 )\x0a\x09\x09\x09\x09\x09.removeClass( this.playingClass )\x0a\x09\x09\x09\x09\x09.eq( this.index )\x0a\x09\x09\x09\x09\x09\x09.addClass( this.playingClass );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09this.loadCurrent();\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09/**\x0a\x09 * Initialize media playlists in the document.\x0a\x09 *\x0a\x09 * Only initializes new playlists not previously-initialized.\x0a\x09 *\x0a\x09 * @since 4.9.3\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09function initialize() {\x0a\x09\x09$( \x27.wp-playlist:not(:has(.mejs-container))\x27 ).each( function() {\x0a\x09\x09\x09new WPPlaylistView( { el: this } );\x0a\x09\x09} );\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Expose the API publicly on window.wp.playlist.\x0a\x09 *\x0a\x09 * @namespace wp.playlist\x0a\x09 * @since 4.9.3\x0a\x09 * @type {object}\x0a\x09 */\x0a\x09window.wp.playlist = {\x0a\x09\x09initialize: initialize\x0a\x09};\x0a\x0a\x09$( document ).ready( initialize );\x0a\x0a\x09window.WPPlaylistView = WPPlaylistView;\x0a\x0a}(jQuery, _, Backbone));\x0a'}