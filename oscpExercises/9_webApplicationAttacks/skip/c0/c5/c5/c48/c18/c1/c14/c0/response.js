var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 14:55:32 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Thu, 09 Apr 2015 00:11:27 GMT\x0aETag: \x22174e-5133f7d2509c0-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-2007/2008\x0aContent-Length: 2008\x0aKeep-Alive: timeout=5, max=56\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/**\x0a * plugin.js\x0a *\x0a * Copyright, Moxiecode Systems AB\x0a * Released under LGPL License.\x0a *\x0a * License: http://www.tinymce.com/license\x0a * Contributing: http://www.tinymce.com/contributing\x0a */\x0a\x0a// Forked for WordPress so it can be turned on/off after loading.\x0a\x0a/*global tinymce:true */\x0a/*eslint no-nested-ternary:0 */\x0a\x0a/**\x0a * Auto Resize\x0a *\x0a * This plugin automatically resizes the content area to fit its content height.\x0a * It will retain a minimum height, which is the height of the content area when\x0a * it\x27s initialized.\x0a */\x0atinymce.PluginManager.add( \x27wpautoresize\x27, function( editor ) {\x0a\x09var settings = editor.settings,\x0a\x09\x09oldSize = 300,\x0a\x09\x09isActive = false;\x0a\x0a\x09if ( editor.settings.inline || tinymce.Env.iOS ) {\x0a\x09\x09return;\x0a\x09}\x0a\x0a\x09function isFullscreen() {\x0a\x09\x09return editor.plugins.fullscreen && editor.plugins.fullscreen.isFullscreen();\x0a\x09}\x0a\x0a\x09function getInt( n ) {\x0a\x09\x09return parseInt( n, 10 ) || 0;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * This method gets executed each time the editor needs to resize.\x0a\x09 */\x0a\x09function resize( e ) {\x0a\x09\x09var deltaSize, doc, body, docElm, DOM = tinymce.DOM, resizeHeight, myHeight,\x0a\x09\x09\x09marginTop, marginBottom, paddingTop, paddingBottom, borderTop, borderBottom;\x0a\x0a\x09\x09if ( ! isActive ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09doc = editor.getDoc();\x0a\x09\x09if ( ! doc ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09e = e || {};\x0a\x09\x09body = doc.body;\x0a\x09\x09docElm = doc.documentElement;\x0a\x09\x09resizeHeight = settings.autoresize_min_height;\x0a\x0a\x09\x09if ( ! body || ( e && e.type === \x27setcontent\x27 && e.initial ) || isFullscreen() ) {\x0a\x09\x09\x09if ( body && docElm ) {\x0a\x09\x09\x09\x09body.style.overflowY = \x27auto\x27;\x0a\x09\x09\x09\x09docElm.style.overflowY = \x27auto\x27; // Old IE\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Calculate outer height of the body element using CSS styles\x0a\x09\x09marginTop = editor.dom.getStyle( body, \x27margin-top\x27, true );\x0a\x09\x09marginBottom = editor.dom.getStyle( body, \x27margin-bottom\x27, true );\x0a\x09\x09paddingTop = editor.dom.getStyle( body, \x27padding-top\x27, true );\x0a\x09\x09paddingBottom = editor.dom.getStyle( body, \x27padding-bottom\x27, true );\x0a\x09\x09borderTop = editor.dom.getStyle( body, \x27border-top-width\x27, true );\x0a\x09\x09borderBottom = editor.dom.getStyle( body, \x27border-bottom-width\x27, true );\x0a\x09\x09myHeight = body.offsetHeight + getInt( marginTop ) + getInt( marginBottom ) +\x0a\x09\x09\x09getInt( paddingTop ) + getInt( paddingBottom ) +\x0a\x09\x09\x09getInt( borderTop ) + getInt( borderBottom );\x0a\x0a\x09\x09// IE \x3c 11, other?\x0a\x09\x09if ( myHeight && myHeight \x3c docElm.offsetHeight ) {\x0a\x09\x09\x09myHeight = docElm.offsetHeight;\x0a\x09\x09}\x0a\x0a\x09\x09// Make sure we have a valid height\x0a\x09\x09if ( isNaN( myHeight ) || myHeight \x3c= 0 ) {\x0a\x09\x09\x09// Get height differently depending on the browser used\x0a\x09\x09\x09myHeight = tinymce.Env.ie ? body.scrollHeight : ( tinymce.Env.webkit && body.clientHeight === 0 ? 0 : body.offsetHeight );\x0a\x09\x09}\x0a\x0a\x09\x09// Don\x27t make it smaller than the minimum height\x0a\x09\x09if ( myHeight \x3e settings.autoresize_min_height ) {\x0a\x09\x09\x09resizeHeight = myHeight;\x0a\x09\x09}\x0a\x0a\x09\x09// If a maximum height has been defined don\x27t exceed this height\x0a\x09\x09if ( settings.autoresize_max_height && myHeight \x3e settings.autoresize_max_height ) {\x0a\x09\x09\x09resizeHeight = settings.autoresize_max_height;\x0a\x09\x09\x09body.style.overflowY = \x27auto\x27;\x0a\x09\x09\x09docElm.style.overflowY = \x27auto\x27; // Old IE\x0a\x09\x09} else {\x0a\x09\x09\x09body.style.overflowY = \x27hidden\x27;\x0a\x09\x09\x09docElm.style.overflowY = \x27hidden\x27; // Old IE\x0a\x09\x09\x09body.scrollTop = 0;\x0a\x09\x09}\x0a\x0a\x09\x09// Resize content element\x0a\x09\x09if (resizeHeight !== oldSize) {\x0a\x09\x09\x09deltaSize = resizeHeight - oldSize;\x0a\x09\x09\x09DOM.setStyle( editor.iframeElement, \x27height\x27, resizeHeight + \x27px\x27 );\x0a\x09\x09\x09oldSize = resizeHeight;\x0a\x0a\x09\x09\x09// WebKit doesn\x27t decrease the size of the body element until the iframe gets resized\x0a\x09\x09\x09// So we need to continue to resize the iframe down until the size gets fixed\x0a\x09\x09\x09if ( tinymce.isWebKit && deltaSize \x3c 0 ) {\x0a\x09\x09\x09\x09resize( e );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09editor.fire( \x27wp-autoresize\x27, { height: resizeHeight, deltaHeight: e.type === \x27nodechange\x27 ? deltaSize : null } );\x0a\x09\x09}\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Calls the resize x times in 100ms intervals. We can\x27t wait for load events since\x0a\x09 * the CSS files might load async.\x0a\x09 */\x0a\x09function wait( times, interval, callback ) {\x0a\x09\x09setTimeout( function() {\x0a\x09\x09\x09resize();\x0a\x0a\x09\x09\x09if ( times-- ) {\x0a\x09\x09\x09\x09wait( times, interval, callback );\x0a\x09\x09\x09} else if ( callback ) {\x0a\x09\x09\x09\x09callback();\x0a\x09\x09\x09}\x0a\x09\x09}, interval );\x0a\x09}\x0a\x0a\x09// Define minimum height\x0a\x09settings.autoresize_min_height = parseInt(editor.getParam( \x27autoresize_min_height\x27, editor.getElement().offsetHeight), 10 );\x0a\x0a\x09// Define maximum height\x0a\x09settings.autoresize_max_height = parseInt(editor.getParam( \x27autoresize_max_height\x27, 0), 10 );\x0a\x0a\x09function on() {\x0a\x09\x09if ( ! editor.dom.hasClass( editor.getBody(), \x27wp-autoresize\x27 ) ) {\x0a\x09\x09\x09isActive = true;\x0a\x09\x09\x09editor.dom.addClass( editor.getBody(), \x27wp-autoresize\x27 );\x0a\x09\x09\x09// Add appropriate listeners for resizing the content area\x0a\x09\x09\x09editor.on( \x27nodechange setcontent keyup FullscreenStateChanged\x27, resize );\x0a\x09\x09\x09resize();\x0a\x09\x09}\x0a\x09}\x0a\x0a\x09function off() {\x0a\x09\x09var doc;\x0a\x0a\x09\x09// Don\x27t turn off if the setting is \x27on\x27\x0a\x09\x09if ( ! settings.wp_autoresize_on ) {\x0a\x09\x09\x09isActive = false;\x0a\x09\x09\x09doc = editor.getDoc();\x0a\x09\x09\x09editor.dom.removeClass( editor.getBody(), \x27wp-autoresize\x27 );\x0a\x09\x09\x09editor.off( \x27nodechange setcontent keyup FullscreenStateChanged\x27, resize );\x0a\x09\x09\x09doc.body.style.overflowY = \x27auto\x27;\x0a\x09\x09\x09doc.documentElement.style.overflowY = \x27auto\x27; // Old IE\x0a\x09\x09\x09oldSize = 0;\x0a\x09\x09}\x0a\x09}\x0a\x0a\x09if ( settings.wp_autoresize_on ) {\x0a\x09\x09// Turn resizing on when the editor loads\x0a\x09\x09isActive = true;\x0a\x0a\x09\x09editor.on( \x27init\x27, function() {\x0a\x09\x09\x09editor.dom.addClass( editor.getBody(), \x27wp-autoresize\x27 );\x0a\x09\x09});\x0a\x0a\x09\x09editor.on( \x27nodechange keyup FullscreenStateChanged\x27, resize );\x0a\x0a\x09\x09editor.on( \x27setcontent\x27, function() {\x0a\x09\x09\x09wait( 3, 100 );\x0a\x09\x09});\x0a\x0a\x09\x09if ( editor.getParam( \x27autoresize_on_init\x27, true ) ) {\x0a\x09\x09\x09editor.on( \x27init\x27, function() {\x0a\x09\x09\x09\x09// Hit it 10 times in 200 ms intervals\x0a\x09\x09\x09\x09wait( 10, 200, function() {\x0a\x09\x09\x09\x09\x09// Hit it 5 times in 1 sec intervals\x0a\x09\x09\x09\x09\x09wait( 5, 1000 );\x0a\x09\x09\x09\x09});\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x09}\x0a\x0a\x09// Reset the stored size\x0a\x09editor.on( \x27show\x27, function() {\x0a\x09\x09oldSize = 0;\x0a\x09});\x0a\x0a\x09// Register the command\x0a\x09editor.addCommand( \x27wpAutoResize\x27, resize );\x0a\x0a\x09// On/off\x0a\x09editor.addCommand( \x27wpAutoResizeOn\x27, on );\x0a\x09editor.addCommand( \x27wpAutoResizeOff\x27, off );\x0a});\x0a'}