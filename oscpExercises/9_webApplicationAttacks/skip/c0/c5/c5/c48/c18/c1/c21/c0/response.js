var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 14:56:01 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Wed, 30 Jan 2019 14:12:52 GMT\x0aETag: \x22157f-580ad81630100-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-1897/1898\x0aContent-Length: 1898\x0aKeep-Alive: timeout=5, max=42\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/**\x0a * WordPress View plugin.\x0a */\x0a( function( tinymce ) {\x0a\x09tinymce.PluginManager.add( \x27wpview\x27, function( editor ) {\x0a\x09\x09function noop () {}\x0a\x0a\x09\x09// Set this here as wp-tinymce.js may be loaded too early.\x0a\x09\x09var wp = window.wp;\x0a\x0a\x09\x09if ( ! wp || ! wp.mce || ! wp.mce.views ) {\x0a\x09\x09\x09return {\x0a\x09\x09\x09\x09getView: noop\x0a\x09\x09\x09};\x0a\x09\x09}\x0a\x0a\x09\x09// Check if a node is a view or not.\x0a\x09\x09function isView( node ) {\x0a\x09\x09\x09return editor.dom.hasClass( node, \x27wpview\x27 );\x0a\x09\x09}\x0a\x0a\x09\x09// Replace view tags with their text.\x0a\x09\x09function resetViews( content ) {\x0a\x09\x09\x09function callback( match, $1 ) {\x0a\x09\x09\x09\x09return \x27\x3cp\x3e\x27 + window.decodeURIComponent( $1 ) + \x27\x3c/p\x3e\x27;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( ! content ) {\x0a\x09\x09\x09\x09return content;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return content\x0a\x09\x09\x09\x09.replace( /\x3cdiv[^\x3e]+data-wpview-text=\x22([^\x22]+)\x22[^\x3e]*\x3e(?:\x5c.|[\x5cs\x5cS]+?wpview-end[^\x3e]+\x3e\x5cs*\x3c\x5c/span\x3e\x5cs*)?\x3c\x5c/div\x3e/g, callback )\x0a\x09\x09\x09\x09.replace( /\x3cp[^\x3e]+data-wpview-marker=\x22([^\x22]+)\x22[^\x3e]*\x3e[\x5cs\x5cS]*?\x3c\x5c/p\x3e/g, callback );\x0a\x09\x09}\x0a\x0a\x09\x09editor.on( \x27init\x27, function() {\x0a\x09\x09\x09var MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\x0a\x0a\x09\x09\x09if ( MutationObserver ) {\x0a\x09\x09\x09\x09new MutationObserver( function() {\x0a\x09\x09\x09\x09\x09editor.fire( \x27wp-body-class-change\x27 );\x0a\x09\x09\x09\x09} )\x0a\x09\x09\x09\x09.observe( editor.getBody(), {\x0a\x09\x09\x09\x09\x09attributes: true,\x0a\x09\x09\x09\x09\x09attributeFilter: [\x27class\x27]\x0a\x09\x09\x09\x09} );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Pass on body class name changes from the editor to the wpView iframes.\x0a\x09\x09\x09editor.on( \x27wp-body-class-change\x27, function() {\x0a\x09\x09\x09\x09var className = editor.getBody().className;\x0a\x0a\x09\x09\x09\x09editor.$( \x27iframe[class=\x22wpview-sandbox\x22]\x27 ).each( function( i, iframe ) {\x0a\x09\x09\x09\x09\x09// Make sure it is a local iframe\x0a\x09\x09\x09\x09\x09// jshint scripturl: true\x0a\x09\x09\x09\x09\x09if ( ! iframe.src || iframe.src === \x27javascript:\x22\x22\x27 ) {\x0a\x09\x09\x09\x09\x09\x09try {\x0a\x09\x09\x09\x09\x09\x09\x09iframe.contentWindow.document.body.className = className;\x0a\x09\x09\x09\x09\x09\x09} catch( er ) {}\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09});\x0a\x09\x09\x09} );\x0a\x09\x09});\x0a\x0a\x09\x09// Scan new content for matching view patterns and replace them with markers.\x0a\x09\x09editor.on( \x27beforesetcontent\x27, function( event ) {\x0a\x09\x09\x09var node;\x0a\x0a\x09\x09\x09if ( ! event.selection ) {\x0a\x09\x09\x09\x09wp.mce.views.unbind();\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( ! event.content ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( ! event.load ) {\x0a\x09\x09\x09\x09node = editor.selection.getNode();\x0a\x0a\x09\x09\x09\x09if ( node && node !== editor.getBody() && /^\x5cs*https?:\x5c/\x5c/\x5cS+\x5cs*$/i.test( event.content ) ) {\x0a\x09\x09\x09\x09\x09// When a url is pasted or inserted, only try to embed it when it is in an empty paragrapgh.\x0a\x09\x09\x09\x09\x09node = editor.dom.getParent( node, \x27p\x27 );\x0a\x0a\x09\x09\x09\x09\x09if ( node && /^[\x5cs\x5cuFEFF\x5cu00A0]*$/.test( editor.$( node ).text() || \x27\x27 ) ) {\x0a\x09\x09\x09\x09\x09\x09// Make sure there are no empty inline elements in the \x3cp\x3e\x0a\x09\x09\x09\x09\x09\x09node.innerHTML = \x27\x27;\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09event.content = wp.mce.views.setMarkers( event.content, editor );\x0a\x09\x09} );\x0a\x0a\x09\x09// Replace any new markers nodes with views.\x0a\x09\x09editor.on( \x27setcontent\x27, function() {\x0a\x09\x09\x09wp.mce.views.render();\x0a\x09\x09} );\x0a\x0a\x09\x09// Empty view nodes for easier processing.\x0a\x09\x09editor.on( \x27preprocess hide\x27, function( event ) {\x0a\x09\x09\x09editor.$( \x27div[data-wpview-text], p[data-wpview-marker]\x27, event.node ).each( function( i, node ) {\x0a\x09\x09\x09\x09node.innerHTML = \x27.\x27;\x0a\x09\x09\x09} );\x0a\x09\x09}, true );\x0a\x0a\x09\x09// Replace views with their text.\x0a\x09\x09editor.on( \x27postprocess\x27, function( event ) {\x0a\x09\x09\x09event.content = resetViews( event.content );\x0a\x09\x09} );\x0a\x0a\x09\x09// Replace views with their text inside undo levels.\x0a\x09\x09// This also prevents that new levels are added when there are changes inside the views.\x0a\x09\x09editor.on( \x27beforeaddundo\x27, function( event ) {\x0a\x09\x09\x09event.level.content = resetViews( event.level.content );\x0a\x09\x09} );\x0a\x0a\x09\x09// Make sure views are copied as their text.\x0a\x09\x09editor.on( \x27drop objectselected\x27, function( event ) {\x0a\x09\x09\x09if ( isView( event.targetClone ) ) {\x0a\x09\x09\x09\x09event.targetClone = editor.getDoc().createTextNode(\x0a\x09\x09\x09\x09\x09window.decodeURIComponent( editor.dom.getAttrib( event.targetClone, \x27data-wpview-text\x27 ) )\x0a\x09\x09\x09\x09);\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09// Clean up URLs for easier processing.\x0a\x09\x09editor.on( \x27pastepreprocess\x27, function( event ) {\x0a\x09\x09\x09var content = event.content;\x0a\x0a\x09\x09\x09if ( content ) {\x0a\x09\x09\x09\x09content = tinymce.trim( content.replace( /\x3c[^\x3e]+\x3e/g, \x27\x27 ) );\x0a\x0a\x09\x09\x09\x09if ( /^https?:\x5c/\x5c/\x5cS+$/i.test( content ) ) {\x0a\x09\x09\x09\x09\x09event.content = content;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09// Show the view type in the element path.\x0a\x09\x09editor.on( \x27resolvename\x27, function( event ) {\x0a\x09\x09\x09if ( isView( event.target ) ) {\x0a\x09\x09\x09\x09event.name = editor.dom.getAttrib( event.target, \x27data-wpview-type\x27 ) || \x27object\x27;\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09// See `media` plugin.\x0a\x09\x09editor.on( \x27click keyup\x27, function() {\x0a\x09\x09\x09var node = editor.selection.getNode();\x0a\x0a\x09\x09\x09if ( isView( node ) ) {\x0a\x09\x09\x09\x09if ( editor.dom.getAttrib( node, \x27data-mce-selected\x27 ) ) {\x0a\x09\x09\x09\x09\x09node.setAttribute( \x27data-mce-selected\x27, \x272\x27 );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09editor.addButton( \x27wp_view_edit\x27, {\x0a\x09\x09\x09tooltip: \x27Edit|button\x27, // \x27|button\x27 is not displayed, only used for context\x0a\x09\x09\x09icon: \x27dashicon dashicons-edit\x27,\x0a\x09\x09\x09onclick: function() {\x0a\x09\x09\x09\x09var node = editor.selection.getNode();\x0a\x0a\x09\x09\x09\x09if ( isView( node ) ) {\x0a\x09\x09\x09\x09\x09wp.mce.views.edit( editor, node );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09editor.addButton( \x27wp_view_remove\x27, {\x0a\x09\x09\x09tooltip: \x27Remove\x27,\x0a\x09\x09\x09icon: \x27dashicon dashicons-no\x27,\x0a\x09\x09\x09onclick: function() {\x0a\x09\x09\x09\x09editor.fire( \x27cut\x27 );\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09editor.once( \x27preinit\x27, function() {\x0a\x09\x09\x09var toolbar;\x0a\x0a\x09\x09\x09if ( editor.wp && editor.wp._createToolbar ) {\x0a\x09\x09\x09\x09toolbar = editor.wp._createToolbar( [\x0a\x09\x09\x09\x09\x09\x27wp_view_edit\x27,\x0a\x09\x09\x09\x09\x09\x27wp_view_remove\x27\x0a\x09\x09\x09\x09] );\x0a\x0a\x09\x09\x09\x09editor.on( \x27wptoolbar\x27, function( event ) {\x0a\x09\x09\x09\x09\x09if ( ! event.collapsed && isView( event.element ) ) {\x0a\x09\x09\x09\x09\x09\x09event.toolbar = toolbar;\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09} );\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09editor.wp = editor.wp || {};\x0a\x09\x09editor.wp.getView = noop;\x0a\x09\x09editor.wp.setViewCursor = noop;\x0a\x0a\x09\x09return {\x0a\x09\x09\x09getView: noop\x0a\x09\x09};\x0a\x09} );\x0a} )( window.tinymce );\x0a'}