var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 14:55:39 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Thu, 24 Jan 2019 11:11:51 GMT\x0aETag: \x2263ed-5803246f90bc0-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-7195/7196\x0aContent-Length: 7196\x0aKeep-Alive: timeout=5, max=6\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/* global tinymce */\x0atinymce.PluginManager.add( \x27wpeditimage\x27, function( editor ) {\x0a\x09var toolbar, serializer, touchOnImage, pasteInCaption,\x0a\x09\x09each = tinymce.each,\x0a\x09\x09trim = tinymce.trim,\x0a\x09\x09iOS = tinymce.Env.iOS;\x0a\x0a\x09function isPlaceholder( node ) {\x0a\x09\x09return !! ( editor.dom.getAttrib( node, \x27data-mce-placeholder\x27 ) || editor.dom.getAttrib( node, \x27data-mce-object\x27 ) );\x0a\x09}\x0a\x0a\x09editor.addButton( \x27wp_img_remove\x27, {\x0a\x09\x09tooltip: \x27Remove\x27,\x0a\x09\x09icon: \x27dashicon dashicons-no\x27,\x0a\x09\x09onclick: function() {\x0a\x09\x09\x09removeImage( editor.selection.getNode() );\x0a\x09\x09}\x0a\x09} );\x0a\x0a\x09editor.addButton( \x27wp_img_edit\x27, {\x0a\x09\x09tooltip: \x27Edit|button\x27, // \x27|button\x27 is not displayed, only used for context\x0a\x09\x09icon: \x27dashicon dashicons-edit\x27,\x0a\x09\x09onclick: function() {\x0a\x09\x09\x09editImage( editor.selection.getNode() );\x0a\x09\x09}\x0a\x09} );\x0a\x0a\x09each( {\x0a\x09\x09alignleft: \x27Align left\x27,\x0a\x09\x09aligncenter: \x27Align center\x27,\x0a\x09\x09alignright: \x27Align right\x27,\x0a\x09\x09alignnone: \x27No alignment\x27\x0a\x09}, function( tooltip, name ) {\x0a\x09\x09var direction = name.slice( 5 );\x0a\x0a\x09\x09editor.addButton( \x27wp_img_\x27 + name, {\x0a\x09\x09\x09tooltip: tooltip,\x0a\x09\x09\x09icon: \x27dashicon dashicons-align-\x27 + direction,\x0a\x09\x09\x09cmd: \x27alignnone\x27 === name ? \x27wpAlignNone\x27 : \x27Justify\x27 + direction.slice( 0, 1 ).toUpperCase() + direction.slice( 1 ),\x0a\x09\x09\x09onPostRender: function() {\x0a\x09\x09\x09\x09var self = this;\x0a\x0a\x09\x09\x09\x09editor.on( \x27NodeChange\x27, function( event ) {\x0a\x09\x09\x09\x09\x09var node;\x0a\x0a\x09\x09\x09\x09\x09// Don\x27t bother.\x0a\x09\x09\x09\x09\x09if ( event.element.nodeName !== \x27IMG\x27 ) {\x0a\x09\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09node = editor.dom.getParent( event.element, \x27.wp-caption\x27 ) || event.element;\x0a\x0a\x09\x09\x09\x09\x09if ( \x27alignnone\x27 === name ) {\x0a\x09\x09\x09\x09\x09\x09self.active( ! /\x5cbalign(left|center|right)\x5cb/.test( node.className ) );\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09self.active( editor.dom.hasClass( node, name ) );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09} );\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x09} );\x0a\x0a\x09editor.once( \x27preinit\x27, function() {\x0a\x09\x09if ( editor.wp && editor.wp._createToolbar ) {\x0a\x09\x09\x09toolbar = editor.wp._createToolbar( [\x0a\x09\x09\x09\x09\x27wp_img_alignleft\x27,\x0a\x09\x09\x09\x09\x27wp_img_aligncenter\x27,\x0a\x09\x09\x09\x09\x27wp_img_alignright\x27,\x0a\x09\x09\x09\x09\x27wp_img_alignnone\x27,\x0a\x09\x09\x09\x09\x27wp_img_edit\x27,\x0a\x09\x09\x09\x09\x27wp_img_remove\x27\x0a\x09\x09\x09] );\x0a\x09\x09}\x0a\x09} );\x0a\x0a\x09editor.on( \x27wptoolbar\x27, function( event ) {\x0a\x09\x09if ( event.element.nodeName === \x27IMG\x27 && ! isPlaceholder( event.element ) ) {\x0a\x09\x09\x09event.toolbar = toolbar;\x0a\x09\x09}\x0a\x09} );\x0a\x0a\x09function isNonEditable( node ) {\x0a\x09\x09var parent = editor.$( node ).parents( \x27[contenteditable]\x27 );\x0a\x09\x09return parent && parent.attr( \x27contenteditable\x27 ) === \x27false\x27;\x0a\x09}\x0a\x0a\x09// Safari on iOS fails to select images in contentEditoble mode on touch.\x0a\x09// Select them again.\x0a\x09if ( iOS ) {\x0a\x09\x09editor.on( \x27init\x27, function() {\x0a\x09\x09\x09editor.on( \x27touchstart\x27, function( event ) {\x0a\x09\x09\x09\x09if ( event.target.nodeName === \x27IMG\x27 && ! isNonEditable( event.target ) ) {\x0a\x09\x09\x09\x09\x09touchOnImage = true;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09editor.dom.bind( editor.getDoc(), \x27touchmove\x27, function() {\x0a\x09\x09\x09\x09touchOnImage = false;\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09editor.on( \x27touchend\x27, function( event ) {\x0a\x09\x09\x09\x09if ( touchOnImage && event.target.nodeName === \x27IMG\x27 && ! isNonEditable( event.target ) ) {\x0a\x09\x09\x09\x09\x09var node = event.target;\x0a\x0a\x09\x09\x09\x09\x09touchOnImage = false;\x0a\x0a\x09\x09\x09\x09\x09window.setTimeout( function() {\x0a\x09\x09\x09\x09\x09\x09editor.selection.select( node );\x0a\x09\x09\x09\x09\x09\x09editor.nodeChanged();\x0a\x09\x09\x09\x09\x09}, 100 );\x0a\x09\x09\x09\x09} else if ( toolbar ) {\x0a\x09\x09\x09\x09\x09toolbar.hide();\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x09\x09});\x0a\x09}\x0a\x0a\x09function parseShortcode( content ) {\x0a\x09\x09return content.replace( /(?:\x3cp\x3e)?\x5c[(?:wp_)?caption([^\x5c]]+)\x5c]([\x5cs\x5cS]+?)\x5c[\x5c/(?:wp_)?caption\x5c](?:\x3c\x5c/p\x3e)?/g, function( a, b, c ) {\x0a\x09\x09\x09var id, align, classes, caption, img, width;\x0a\x0a\x09\x09\x09id = b.match( /id=[\x27\x22]([^\x27\x22]*)[\x27\x22] ?/ );\x0a\x09\x09\x09if ( id ) {\x0a\x09\x09\x09\x09b = b.replace( id[0], \x27\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09align = b.match( /align=[\x27\x22]([^\x27\x22]*)[\x27\x22] ?/ );\x0a\x09\x09\x09if ( align ) {\x0a\x09\x09\x09\x09b = b.replace( align[0], \x27\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09classes = b.match( /class=[\x27\x22]([^\x27\x22]*)[\x27\x22] ?/ );\x0a\x09\x09\x09if ( classes ) {\x0a\x09\x09\x09\x09b = b.replace( classes[0], \x27\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09width = b.match( /width=[\x27\x22]([0-9]*)[\x27\x22] ?/ );\x0a\x09\x09\x09if ( width ) {\x0a\x09\x09\x09\x09b = b.replace( width[0], \x27\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09c = trim( c );\x0a\x09\x09\x09img = c.match( /((?:\x3ca [^\x3e]+\x3e)?\x3cimg [^\x3e]+\x3e(?:\x3c\x5c/a\x3e)?)([\x5cs\x5cS]*)/i );\x0a\x0a\x09\x09\x09if ( img && img[2] ) {\x0a\x09\x09\x09\x09caption = trim( img[2] );\x0a\x09\x09\x09\x09img = trim( img[1] );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09// old captions shortcode style\x0a\x09\x09\x09\x09caption = trim( b ).replace( /caption=[\x27\x22]/, \x27\x27 ).replace( /[\x27\x22]$/, \x27\x27 );\x0a\x09\x09\x09\x09img = c;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09id = ( id && id[1] ) ? id[1].replace( /[\x3c\x3e&]+/g,  \x27\x27 ) : \x27\x27;\x0a\x09\x09\x09align = ( align && align[1] ) ? align[1] : \x27alignnone\x27;\x0a\x09\x09\x09classes = ( classes && classes[1] ) ? \x27 \x27 + classes[1].replace( /[\x3c\x3e&]+/g,  \x27\x27 ) : \x27\x27;\x0a\x0a\x09\x09\x09if ( ! width && img ) {\x0a\x09\x09\x09\x09width = img.match( /width=[\x27\x22]([0-9]*)[\x27\x22]/ );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( width && width[1] ) {\x0a\x09\x09\x09\x09width = width[1];\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( ! width || ! caption ) {\x0a\x09\x09\x09\x09return c;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09width = parseInt( width, 10 );\x0a\x09\x09\x09if ( ! editor.getParam( \x27wpeditimage_html5_captions\x27 ) ) {\x0a\x09\x09\x09\x09width += 10;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return \x27\x3cdiv class=\x22mceTemp\x22\x3e\x3cdl id=\x22\x27 + id + \x27\x22 class=\x22wp-caption \x27 + align + classes + \x27\x22 style=\x22width: \x27 + width + \x27px\x22\x3e\x27 +\x0a\x09\x09\x09\x09\x27\x3cdt class=\x22wp-caption-dt\x22\x3e\x27+ img +\x27\x3c/dt\x3e\x3cdd class=\x22wp-caption-dd\x22\x3e\x27+ caption +\x27\x3c/dd\x3e\x3c/dl\x3e\x3c/div\x3e\x27;\x0a\x09\x09});\x0a\x09}\x0a\x0a\x09function getShortcode( content ) {\x0a\x09\x09return content.replace( /(?:\x3cdiv [^\x3e]+mceTemp[^\x3e]+\x3e)?\x5cs*(\x3cdl [^\x3e]+wp-caption[^\x3e]+\x3e[\x5cs\x5cS]+?\x3c\x5c/dl\x3e)\x5cs*(?:\x3c\x5c/div\x3e)?/g, function( all, dl ) {\x0a\x09\x09\x09var out = \x27\x27;\x0a\x0a\x09\x09\x09if ( dl.indexOf(\x27\x3cimg \x27) === -1 || dl.indexOf(\x27\x3c/p\x3e\x27) !== -1 ) {\x0a\x09\x09\x09\x09// Broken caption. The user managed to drag the image out or type in the wrapper div?\x0a\x09\x09\x09\x09// Remove the \x3cdl\x3e, \x3cdd\x3e and \x3cdt\x3e and return the remaining text.\x0a\x09\x09\x09\x09return dl.replace( /\x3cd[ldt]( [^\x3e]+)?\x3e/g, \x27\x27 ).replace( /\x3c\x5c/d[ldt]\x3e/g, \x27\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09out = dl.replace( /\x5cs*\x3cdl ([^\x3e]+)\x3e\x5cs*\x3cdt [^\x3e]+\x3e([\x5cs\x5cS]+?)\x3c\x5c/dt\x3e\x5cs*\x3cdd [^\x3e]+\x3e([\x5cs\x5cS]*?)\x3c\x5c/dd\x3e\x5cs*\x3c\x5c/dl\x3e\x5cs*/gi, function( a, b, c, caption ) {\x0a\x09\x09\x09\x09var id, classes, align, width;\x0a\x0a\x09\x09\x09\x09width = c.match( /width=\x22([0-9]*)\x22/ );\x0a\x09\x09\x09\x09width = ( width && width[1] ) ? width[1] : \x27\x27;\x0a\x0a\x09\x09\x09\x09classes = b.match( /class=\x22([^\x22]*)\x22/ );\x0a\x09\x09\x09\x09classes = ( classes && classes[1] ) ? classes[1] : \x27\x27;\x0a\x09\x09\x09\x09align = classes.match( /align[a-z]+/i ) || \x27alignnone\x27;\x0a\x0a\x09\x09\x09\x09if ( ! width || ! caption ) {\x0a\x09\x09\x09\x09\x09if ( \x27alignnone\x27 !== align[0] ) {\x0a\x09\x09\x09\x09\x09\x09c = c.replace( /\x3e\x3cimg/, \x27 class=\x22\x27 + align[0] + \x27\x22\x3e\x3cimg\x27 );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09return c;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09id = b.match( /id=\x22([^\x22]*)\x22/ );\x0a\x09\x09\x09\x09id = ( id && id[1] ) ? id[1] : \x27\x27;\x0a\x0a\x09\x09\x09\x09classes = classes.replace( /wp-caption ?|align[a-z]+ ?/gi, \x27\x27 );\x0a\x0a\x09\x09\x09\x09if ( classes ) {\x0a\x09\x09\x09\x09\x09classes = \x27 class=\x22\x27 + classes + \x27\x22\x27;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09caption = caption.replace( /\x5cr\x5cn|\x5cr/g, \x27\x5cn\x27 ).replace( /\x3c[a-zA-Z0-9]+( [^\x3c\x3e]+)?\x3e/g, function( a ) {\x0a\x09\x09\x09\x09\x09// no line breaks inside HTML tags\x0a\x09\x09\x09\x09\x09return a.replace( /[\x5cr\x5cn\x5ct]+/, \x27 \x27 );\x0a\x09\x09\x09\x09});\x0a\x0a\x09\x09\x09\x09// convert remaining line breaks to \x3cbr\x3e\x0a\x09\x09\x09\x09caption = caption.replace( /\x5cs*\x5cn\x5cs*/g, \x27\x3cbr /\x3e\x27 );\x0a\x0a\x09\x09\x09\x09return \x27[caption id=\x22\x27 + id + \x27\x22 align=\x22\x27 + align + \x27\x22 width=\x22\x27 + width + \x27\x22\x27 + classes + \x27]\x27 + c + \x27 \x27 + caption + \x27[/caption]\x27;\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09if ( out.indexOf(\x27[caption\x27) === -1 ) {\x0a\x09\x09\x09\x09// the caption html seems broken, try to find the image that may be wrapped in a link\x0a\x09\x09\x09\x09// and may be followed by \x3cp\x3e with the caption text.\x0a\x09\x09\x09\x09out = dl.replace( /[\x5cs\x5cS]*?((?:\x3ca [^\x3e]+\x3e)?\x3cimg [^\x3e]+\x3e(?:\x3c\x5c/a\x3e)?)(\x3cp\x3e[\x5cs\x5cS]*\x3c\x5c/p\x3e)?[\x5cs\x5cS]*/gi, \x27\x3cp\x3e$1\x3c/p\x3e$2\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return out;\x0a\x09\x09});\x0a\x09}\x0a\x0a\x09function extractImageData( imageNode ) {\x0a\x09\x09var classes, extraClasses, metadata, captionBlock, caption, link, width, height,\x0a\x09\x09\x09captionClassName = [],\x0a\x09\x09\x09dom = editor.dom,\x0a\x09\x09\x09isIntRegExp = /^\x5cd+$/;\x0a\x0a\x09\x09// default attributes\x0a\x09\x09metadata = {\x0a\x09\x09\x09attachment_id: false,\x0a\x09\x09\x09size: \x27custom\x27,\x0a\x09\x09\x09caption: \x27\x27,\x0a\x09\x09\x09align: \x27none\x27,\x0a\x09\x09\x09extraClasses: \x27\x27,\x0a\x09\x09\x09link: false,\x0a\x09\x09\x09linkUrl: \x27\x27,\x0a\x09\x09\x09linkClassName: \x27\x27,\x0a\x09\x09\x09linkTargetBlank: false,\x0a\x09\x09\x09linkRel: \x27\x27,\x0a\x09\x09\x09title: \x27\x27\x0a\x09\x09};\x0a\x0a\x09\x09metadata.url = dom.getAttrib( imageNode, \x27src\x27 );\x0a\x09\x09metadata.alt = dom.getAttrib( imageNode, \x27alt\x27 );\x0a\x09\x09metadata.title = dom.getAttrib( imageNode, \x27title\x27 );\x0a\x0a\x09\x09width = dom.getAttrib( imageNode, \x27width\x27 );\x0a\x09\x09height = dom.getAttrib( imageNode, \x27height\x27 );\x0a\x0a\x09\x09if ( ! isIntRegExp.test( width ) || parseInt( width, 10 ) \x3c 1 ) {\x0a\x09\x09\x09width = imageNode.naturalWidth || imageNode.width;\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! isIntRegExp.test( height ) || parseInt( height, 10 ) \x3c 1 ) {\x0a\x09\x09\x09height = imageNode.naturalHeight || imageNode.height;\x0a\x09\x09}\x0a\x0a\x09\x09metadata.customWidth = metadata.width = width;\x0a\x09\x09metadata.customHeight = metadata.height = height;\x0a\x0a\x09\x09classes = tinymce.explode( imageNode.className, \x27 \x27 );\x0a\x09\x09extraClasses = [];\x0a\x0a\x09\x09tinymce.each( classes, function( name ) {\x0a\x0a\x09\x09\x09if ( /^wp-image/.test( name ) ) {\x0a\x09\x09\x09\x09metadata.attachment_id = parseInt( name.replace( \x27wp-image-\x27, \x27\x27 ), 10 );\x0a\x09\x09\x09} else if ( /^align/.test( name ) ) {\x0a\x09\x09\x09\x09metadata.align = name.replace( \x27align\x27, \x27\x27 );\x0a\x09\x09\x09} else if ( /^size/.test( name ) ) {\x0a\x09\x09\x09\x09metadata.size = name.replace( \x27size-\x27, \x27\x27 );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09extraClasses.push( name );\x0a\x09\x09\x09}\x0a\x0a\x09\x09} );\x0a\x0a\x09\x09metadata.extraClasses = extraClasses.join( \x27 \x27 );\x0a\x0a\x09\x09// Extract caption\x0a\x09\x09captionBlock = dom.getParents( imageNode, \x27.wp-caption\x27 );\x0a\x0a\x09\x09if ( captionBlock.length ) {\x0a\x09\x09\x09captionBlock = captionBlock[0];\x0a\x0a\x09\x09\x09classes = captionBlock.className.split( \x27 \x27 );\x0a\x09\x09\x09tinymce.each( classes, function( name ) {\x0a\x09\x09\x09\x09if ( /^align/.test( name ) ) {\x0a\x09\x09\x09\x09\x09metadata.align = name.replace( \x27align\x27, \x27\x27 );\x0a\x09\x09\x09\x09} else if ( name && name !== \x27wp-caption\x27 ) {\x0a\x09\x09\x09\x09\x09captionClassName.push( name );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} );\x0a\x0a\x09\x09\x09metadata.captionClassName = captionClassName.join( \x27 \x27 );\x0a\x0a\x09\x09\x09caption = dom.select( \x27dd.wp-caption-dd\x27, captionBlock );\x0a\x09\x09\x09if ( caption.length ) {\x0a\x09\x09\x09\x09caption = caption[0];\x0a\x0a\x09\x09\x09\x09metadata.caption = editor.serializer.serialize( caption )\x0a\x09\x09\x09\x09\x09.replace( /\x3cbr[^\x3e]*\x3e/g, \x27$&\x5cn\x27 ).replace( /^\x3cp\x3e/, \x27\x27 ).replace( /\x3c\x5c/p\x3e$/, \x27\x27 );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09// Extract linkTo\x0a\x09\x09if ( imageNode.parentNode && imageNode.parentNode.nodeName === \x27A\x27 ) {\x0a\x09\x09\x09link = imageNode.parentNode;\x0a\x09\x09\x09metadata.linkUrl = dom.getAttrib( link, \x27href\x27 );\x0a\x09\x09\x09metadata.linkTargetBlank = dom.getAttrib( link, \x27target\x27 ) === \x27_blank\x27 ? true : false;\x0a\x09\x09\x09metadata.linkRel = dom.getAttrib( link, \x27rel\x27 );\x0a\x09\x09\x09metadata.linkClassName = link.className;\x0a\x09\x09}\x0a\x0a\x09\x09return metadata;\x0a\x09}\x0a\x0a\x09function hasTextContent( node ) {\x0a\x09\x09return node && !! ( node.textContent || node.innerText ).replace( /\x5cufeff/g, \x27\x27 );\x0a\x09}\x0a\x0a\x09// Verify HTML in captions\x0a\x09function verifyHTML( caption ) {\x0a\x09\x09if ( ! caption || ( caption.indexOf( \x27\x3c\x27 ) === -1 && caption.indexOf( \x27\x3e\x27 ) === -1 ) ) {\x0a\x09\x09\x09return caption;\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! serializer ) {\x0a\x09\x09\x09serializer = new tinymce.html.Serializer( {}, editor.schema );\x0a\x09\x09}\x0a\x0a\x09\x09return serializer.serialize( editor.parser.parse( caption, { forced_root_block: false } ) );\x0a\x09}\x0a\x0a\x09function updateImage( $imageNode, imageData ) {\x0a\x09\x09var classes, className, node, html, parent, wrap, linkNode, imageNode,\x0a\x09\x09\x09captionNode, dd, dl, id, attrs, linkAttrs, width, height, align,\x0a\x09\x09\x09$imageNode, srcset, src,\x0a\x09\x09\x09dom = editor.dom;\x0a\x0a\x09\x09if ( ! $imageNode || ! $imageNode.length ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09imageNode = $imageNode[0];\x0a\x09\x09classes = tinymce.explode( imageData.extraClasses, \x27 \x27 );\x0a\x0a\x09\x09if ( ! classes ) {\x0a\x09\x09\x09classes = [];\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! imageData.caption ) {\x0a\x09\x09\x09classes.push( \x27align\x27 + imageData.align );\x0a\x09\x09}\x0a\x0a\x09\x09if ( imageData.attachment_id ) {\x0a\x09\x09\x09classes.push( \x27wp-image-\x27 + imageData.attachment_id );\x0a\x09\x09\x09if ( imageData.size && imageData.size !== \x27custom\x27 ) {\x0a\x09\x09\x09\x09classes.push( \x27size-\x27 + imageData.size );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09width = imageData.width;\x0a\x09\x09height = imageData.height;\x0a\x0a\x09\x09if ( imageData.size === \x27custom\x27 ) {\x0a\x09\x09\x09width = imageData.customWidth;\x0a\x09\x09\x09height = imageData.customHeight;\x0a\x09\x09}\x0a\x0a\x09\x09attrs = {\x0a\x09\x09\x09src: imageData.url,\x0a\x09\x09\x09width: width || null,\x0a\x09\x09\x09height: height || null,\x0a\x09\x09\x09title: imageData.title || null,\x0a\x09\x09\x09\x27class\x27: classes.join( \x27 \x27 ) || null\x0a\x09\x09};\x0a\x0a\x09\x09dom.setAttribs( imageNode, attrs );\x0a\x0a\x09\x09// Preserve empty alt attributes.\x0a\x09\x09$imageNode.attr( \x27alt\x27, imageData.alt || \x27\x27 );\x0a\x0a\x09\x09linkAttrs = {\x0a\x09\x09\x09href: imageData.linkUrl,\x0a\x09\x09\x09rel: imageData.linkRel || null,\x0a\x09\x09\x09target: imageData.linkTargetBlank ? \x27_blank\x27: null,\x0a\x09\x09\x09\x27class\x27: imageData.linkClassName || null\x0a\x09\x09};\x0a\x0a\x09\x09if ( imageNode.parentNode && imageNode.parentNode.nodeName === \x27A\x27 && ! hasTextContent( imageNode.parentNode ) ) {\x0a\x09\x09\x09// Update or remove an existing link wrapped around the image\x0a\x09\x09\x09if ( imageData.linkUrl ) {\x0a\x09\x09\x09\x09dom.setAttribs( imageNode.parentNode, linkAttrs );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09dom.remove( imageNode.parentNode, true );\x0a\x09\x09\x09}\x0a\x09\x09} else if ( imageData.linkUrl ) {\x0a\x09\x09\x09if ( linkNode = dom.getParent( imageNode, \x27a\x27 ) ) {\x0a\x09\x09\x09\x09// The image is inside a link together with other nodes,\x0a\x09\x09\x09\x09// or is nested in another node, move it out\x0a\x09\x09\x09\x09dom.insertAfter( imageNode, linkNode );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Add link wrapped around the image\x0a\x09\x09\x09linkNode = dom.create( \x27a\x27, linkAttrs );\x0a\x09\x09\x09imageNode.parentNode.insertBefore( linkNode, imageNode );\x0a\x09\x09\x09linkNode.appendChild( imageNode );\x0a\x09\x09}\x0a\x0a\x09\x09captionNode = editor.dom.getParent( imageNode, \x27.mceTemp\x27 );\x0a\x0a\x09\x09if ( imageNode.parentNode && imageNode.parentNode.nodeName === \x27A\x27 && ! hasTextContent( imageNode.parentNode ) ) {\x0a\x09\x09\x09node = imageNode.parentNode;\x0a\x09\x09} else {\x0a\x09\x09\x09node = imageNode;\x0a\x09\x09}\x0a\x0a\x09\x09if ( imageData.caption ) {\x0a\x09\x09\x09imageData.caption = verifyHTML( imageData.caption );\x0a\x0a\x09\x09\x09id = imageData.attachment_id ? \x27attachment_\x27 + imageData.attachment_id : null;\x0a\x09\x09\x09align = \x27align\x27 + ( imageData.align || \x27none\x27 );\x0a\x09\x09\x09className = \x27wp-caption \x27 + align;\x0a\x0a\x09\x09\x09if ( imageData.captionClassName ) {\x0a\x09\x09\x09\x09className += \x27 \x27 + imageData.captionClassName.replace( /[\x3c\x3e&]+/g,  \x27\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( ! editor.getParam( \x27wpeditimage_html5_captions\x27 ) ) {\x0a\x09\x09\x09\x09width = parseInt( width, 10 );\x0a\x09\x09\x09\x09width += 10;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( captionNode ) {\x0a\x09\x09\x09\x09dl = dom.select( \x27dl.wp-caption\x27, captionNode );\x0a\x0a\x09\x09\x09\x09if ( dl.length ) {\x0a\x09\x09\x09\x09\x09dom.setAttribs( dl, {\x0a\x09\x09\x09\x09\x09\x09id: id,\x0a\x09\x09\x09\x09\x09\x09\x27class\x27: className,\x0a\x09\x09\x09\x09\x09\x09style: \x27width: \x27 + width + \x27px\x27\x0a\x09\x09\x09\x09\x09} );\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09dd = dom.select( \x27.wp-caption-dd\x27, captionNode );\x0a\x0a\x09\x09\x09\x09if ( dd.length ) {\x0a\x09\x09\x09\x09\x09dom.setHTML( dd[0], imageData.caption );\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09id = id ? \x27id=\x22\x27+ id +\x27\x22 \x27 : \x27\x27;\x0a\x0a\x09\x09\x09\x09// should create a new function for generating the caption markup\x0a\x09\x09\x09\x09html =  \x27\x3cdl \x27 + id + \x27class=\x22\x27 + className +\x27\x22 style=\x22width: \x27+ width +\x27px\x22\x3e\x27 +\x0a\x09\x09\x09\x09\x09\x27\x3cdt class=\x22wp-caption-dt\x22\x3e\x3c/dt\x3e\x3cdd class=\x22wp-caption-dd\x22\x3e\x27+ imageData.caption +\x27\x3c/dd\x3e\x3c/dl\x3e\x27;\x0a\x0a\x09\x09\x09\x09wrap = dom.create( \x27div\x27, { \x27class\x27: \x27mceTemp\x27 }, html );\x0a\x0a\x09\x09\x09\x09if ( parent = dom.getParent( node, \x27p\x27 ) ) {\x0a\x09\x09\x09\x09\x09parent.parentNode.insertBefore( wrap, parent );\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09node.parentNode.insertBefore( wrap, node );\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09editor.$( wrap ).find( \x27dt.wp-caption-dt\x27 ).append( node );\x0a\x0a\x09\x09\x09\x09if ( parent && dom.isEmpty( parent ) ) {\x0a\x09\x09\x09\x09\x09dom.remove( parent );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09} else if ( captionNode ) {\x0a\x09\x09\x09// Remove the caption wrapper and place the image in new paragraph\x0a\x09\x09\x09parent = dom.create( \x27p\x27 );\x0a\x09\x09\x09captionNode.parentNode.insertBefore( parent, captionNode );\x0a\x09\x09\x09parent.appendChild( node );\x0a\x09\x09\x09dom.remove( captionNode );\x0a\x09\x09}\x0a\x0a\x09\x09$imageNode = editor.$( imageNode );\x0a\x09\x09srcset = $imageNode.attr( \x27srcset\x27 );\x0a\x09\x09src = $imageNode.attr( \x27src\x27 );\x0a\x0a\x09\x09// Remove srcset and sizes if the image file was edited or the image was replaced.\x0a\x09\x09if ( srcset && src ) {\x0a\x09\x09\x09src = src.replace( /[?#].*/, \x27\x27 );\x0a\x0a\x09\x09\x09if ( srcset.indexOf( src ) === -1 ) {\x0a\x09\x09\x09\x09$imageNode.attr( \x27srcset\x27, null ).attr( \x27sizes\x27, null );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09if ( wp.media.events ) {\x0a\x09\x09\x09wp.media.events.trigger( \x27editor:image-update\x27, {\x0a\x09\x09\x09\x09editor: editor,\x0a\x09\x09\x09\x09metadata: imageData,\x0a\x09\x09\x09\x09image: imageNode\x0a\x09\x09\x09} );\x0a\x09\x09}\x0a\x0a\x09\x09editor.nodeChanged();\x0a\x09}\x0a\x0a\x09function editImage( img ) {\x0a\x09\x09var frame, callback, metadata, imageNode;\x0a\x0a\x09\x09if ( typeof wp === \x27undefined\x27 || ! wp.media ) {\x0a\x09\x09\x09editor.execCommand( \x27mceImage\x27 );\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09metadata = extractImageData( img );\x0a\x0a\x09\x09// Mark the image node so we can select it later.\x0a\x09\x09editor.$( img ).attr( \x27data-wp-editing\x27, 1 );\x0a\x0a\x09\x09// Manipulate the metadata by reference that is fed into the PostImage model used in the media modal\x0a\x09\x09wp.media.events.trigger( \x27editor:image-edit\x27, {\x0a\x09\x09\x09editor: editor,\x0a\x09\x09\x09metadata: metadata,\x0a\x09\x09\x09image: img\x0a\x09\x09} );\x0a\x0a\x09\x09frame = wp.media({\x0a\x09\x09\x09frame: \x27image\x27,\x0a\x09\x09\x09state: \x27image-details\x27,\x0a\x09\x09\x09metadata: metadata\x0a\x09\x09} );\x0a\x0a\x09\x09wp.media.events.trigger( \x27editor:frame-create\x27, { frame: frame } );\x0a\x0a\x09\x09callback = function( imageData ) {\x0a\x09\x09\x09editor.undoManager.transact( function() {\x0a\x09\x09\x09\x09updateImage( imageNode, imageData );\x0a\x09\x09\x09} );\x0a\x09\x09\x09frame.detach();\x0a\x09\x09};\x0a\x0a\x09\x09frame.state(\x27image-details\x27).on( \x27update\x27, callback );\x0a\x09\x09frame.state(\x27replace-image\x27).on( \x27replace\x27, callback );\x0a\x09\x09frame.on( \x27close\x27, function() {\x0a\x09\x09\x09editor.focus();\x0a\x09\x09\x09frame.detach();\x0a\x0a\x09\x09\x09// `close` fires first...\x0a\x09\x09\x09// To be able to update the image node, we need to find it here,\x0a\x09\x09\x09// and use it in the callback.\x0a\x09\x09\x09imageNode = editor.$( \x27img[data-wp-editing]\x27 )\x0a\x09\x09\x09imageNode.removeAttr( \x27data-wp-editing\x27 );\x0a\x09\x09});\x0a\x0a\x09\x09frame.open();\x0a\x09}\x0a\x0a\x09function removeImage( node ) {\x0a\x09\x09var wrap = editor.dom.getParent( node, \x27div.mceTemp\x27 );\x0a\x0a\x09\x09if ( ! wrap && node.nodeName === \x27IMG\x27 ) {\x0a\x09\x09\x09wrap = editor.dom.getParent( node, \x27a\x27 );\x0a\x09\x09}\x0a\x0a\x09\x09if ( wrap ) {\x0a\x09\x09\x09if ( wrap.nextSibling ) {\x0a\x09\x09\x09\x09editor.selection.select( wrap.nextSibling );\x0a\x09\x09\x09} else if ( wrap.previousSibling ) {\x0a\x09\x09\x09\x09editor.selection.select( wrap.previousSibling );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09editor.selection.select( wrap.parentNode );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09editor.selection.collapse( true );\x0a\x09\x09\x09editor.dom.remove( wrap );\x0a\x09\x09} else {\x0a\x09\x09\x09editor.dom.remove( node );\x0a\x09\x09}\x0a\x0a\x09\x09editor.nodeChanged();\x0a\x09\x09editor.undoManager.add();\x0a\x09}\x0a\x0a\x09editor.on( \x27init\x27, function() {\x0a\x09\x09var dom = editor.dom,\x0a\x09\x09\x09captionClass = editor.getParam( \x27wpeditimage_html5_captions\x27 ) ? \x27html5-captions\x27 : \x27html4-captions\x27;\x0a\x0a\x09\x09dom.addClass( editor.getBody(), captionClass );\x0a\x0a\x09\x09// Prevent IE11 from making dl.wp-caption resizable\x0a\x09\x09if ( tinymce.Env.ie && tinymce.Env.ie \x3e 10 ) {\x0a\x09\x09\x09// The \x27mscontrolselect\x27 event is supported only in IE11+\x0a\x09\x09\x09dom.bind( editor.getBody(), \x27mscontrolselect\x27, function( event ) {\x0a\x09\x09\x09\x09if ( event.target.nodeName === \x27IMG\x27 && dom.getParent( event.target, \x27.wp-caption\x27 ) ) {\x0a\x09\x09\x09\x09\x09// Hide the thick border with resize handles around dl.wp-caption\x0a\x09\x09\x09\x09\x09editor.getBody().focus(); // :(\x0a\x09\x09\x09\x09} else if ( event.target.nodeName === \x27DL\x27 && dom.hasClass( event.target, \x27wp-caption\x27 ) ) {\x0a\x09\x09\x09\x09\x09// Trigger the thick border with resize handles...\x0a\x09\x09\x09\x09\x09// This will make the caption text editable.\x0a\x09\x09\x09\x09\x09event.target.focus();\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27ObjectResized\x27, function( event ) {\x0a\x09\x09var node = event.target;\x0a\x0a\x09\x09if ( node.nodeName === \x27IMG\x27 ) {\x0a\x09\x09\x09editor.undoManager.transact( function() {\x0a\x09\x09\x09\x09var parent, width,\x0a\x09\x09\x09\x09\x09dom = editor.dom;\x0a\x0a\x09\x09\x09\x09node.className = node.className.replace( /\x5cbsize-[^ ]+/, \x27\x27 );\x0a\x0a\x09\x09\x09\x09if ( parent = dom.getParent( node, \x27.wp-caption\x27 ) ) {\x0a\x09\x09\x09\x09\x09width = event.width || dom.getAttrib( node, \x27width\x27 );\x0a\x0a\x09\x09\x09\x09\x09if ( width ) {\x0a\x09\x09\x09\x09\x09\x09width = parseInt( width, 10 );\x0a\x0a\x09\x09\x09\x09\x09\x09if ( ! editor.getParam( \x27wpeditimage_html5_captions\x27 ) ) {\x0a\x09\x09\x09\x09\x09\x09\x09width += 10;\x0a\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09dom.setStyle( parent, \x27width\x27, width + \x27px\x27 );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27pastePostProcess\x27, function( event ) {\x0a\x09\x09// Pasting in a caption node.\x0a\x09\x09if ( editor.dom.getParent( editor.selection.getNode(), \x27dd.wp-caption-dd\x27 ) ) {\x0a\x09\x09\x09// Remove \x22non-block\x22 elements that should not be in captions.\x0a\x09\x09\x09editor.$( \x27img, audio, video, object, embed, iframe, script, style\x27, event.node ).remove();\x0a\x0a\x09\x09\x09editor.$( \x27*\x27, event.node ).each( function( i, node ) {\x0a\x09\x09\x09\x09if ( editor.dom.isBlock( node ) ) {\x0a\x09\x09\x09\x09\x09// Insert \x3cbr\x3e where the blocks used to be. Makes it look better after pasting in the caption.\x0a\x09\x09\x09\x09\x09if ( tinymce.trim( node.textContent || node.innerText ) ) {\x0a\x09\x09\x09\x09\x09\x09editor.dom.insertAfter( editor.dom.create( \x27br\x27 ), node );\x0a\x09\x09\x09\x09\x09\x09editor.dom.remove( node, true );\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09editor.dom.remove( node );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09// Trim \x3cbr\x3e tags.\x0a\x09\x09\x09editor.$( \x27br\x27,  event.node ).each( function( i, node ) {\x0a\x09\x09\x09\x09if ( ! node.nextSibling || node.nextSibling.nodeName === \x27BR\x27 ||\x0a\x09\x09\x09\x09\x09! node.previousSibling || node.previousSibling.nodeName === \x27BR\x27 ) {\x0a\x0a\x09\x09\x09\x09\x09editor.dom.remove( node );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} );\x0a\x0a\x09\x09\x09// Pasted HTML is cleaned up for inserting in the caption.\x0a\x09\x09\x09pasteInCaption = true;\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27BeforeExecCommand\x27, function( event ) {\x0a\x09\x09var node, p, DL, align, replacement, captionParent,\x0a\x09\x09\x09cmd = event.command,\x0a\x09\x09\x09dom = editor.dom;\x0a\x0a\x09\x09if ( cmd === \x27mceInsertContent\x27 || cmd === \x27Indent\x27 || cmd === \x27Outdent\x27 ) {\x0a\x09\x09\x09node = editor.selection.getNode();\x0a\x09\x09\x09captionParent = dom.getParent( node, \x27div.mceTemp\x27 );\x0a\x0a\x09\x09\x09if ( captionParent ) {\x0a\x09\x09\x09\x09if ( cmd === \x27mceInsertContent\x27 ) {\x0a\x09\x09\x09\x09\x09if ( pasteInCaption ) {\x0a\x09\x09\x09\x09\x09\x09pasteInCaption = false;\x0a\x09\x09\x09\x09\x09\x09// We are in the caption element, and in \x27paste\x27 context,\x0a\x09\x09\x09\x09\x09\x09// and the pasted HTML was cleaned up on \x27pastePostProcess\x27 above.\x0a\x09\x09\x09\x09\x09\x09// Let it be pasted in the caption.\x0a\x09\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09// The paste is somewhere else in the caption DL element.\x0a\x09\x09\x09\x09\x09// Prevent pasting in there as it will break the caption.\x0a\x09\x09\x09\x09\x09// Make new paragraph under the caption DL and move the caret there.\x0a\x09\x09\x09\x09\x09p = dom.create( \x27p\x27 );\x0a\x09\x09\x09\x09\x09dom.insertAfter( p, captionParent );\x0a\x09\x09\x09\x09\x09editor.selection.setCursorLocation( p, 0 );\x0a\x0a\x09\x09\x09\x09\x09// If the image is selected and the user pastes \x22over\x22 it,\x0a\x09\x09\x09\x09\x09// replace both the image and the caption elements with the pasted content.\x0a\x09\x09\x09\x09\x09// This matches the behavior when pasting over non-caption images.\x0a\x09\x09\x09\x09\x09if ( node.nodeName === \x27IMG\x27 ) {\x0a                        editor.$( captionParent ).remove();\x0a                    }\x0a\x0a\x09\x09\x09\x09\x09editor.nodeChanged();\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09// Clicking Indent or Outdent while an image with a caption is selected breaks the caption.\x0a\x09\x09\x09\x09\x09// See #38313.\x0a\x09\x09\x09\x09\x09event.preventDefault();\x0a\x09\x09\x09\x09\x09event.stopImmediatePropagation();\x0a\x09\x09\x09\x09\x09return false;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09} else if ( cmd === \x27JustifyLeft\x27 || cmd === \x27JustifyRight\x27 || cmd === \x27JustifyCenter\x27 || cmd === \x27wpAlignNone\x27 ) {\x0a\x09\x09\x09node = editor.selection.getNode();\x0a\x09\x09\x09align = \x27align\x27 + cmd.slice( 7 ).toLowerCase();\x0a\x09\x09\x09DL = editor.dom.getParent( node, \x27.wp-caption\x27 );\x0a\x0a\x09\x09\x09if ( node.nodeName !== \x27IMG\x27 && ! DL ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09node = DL || node;\x0a\x0a\x09\x09\x09if ( editor.dom.hasClass( node, align ) ) {\x0a\x09\x09\x09\x09replacement = \x27 alignnone\x27;\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09replacement = \x27 \x27 + align;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09node.className = trim( node.className.replace( / ?align(left|center|right|none)/g, \x27\x27 ) + replacement );\x0a\x0a\x09\x09\x09editor.nodeChanged();\x0a\x09\x09\x09event.preventDefault();\x0a\x0a\x09\x09\x09if ( toolbar ) {\x0a\x09\x09\x09\x09toolbar.reposition();\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09editor.fire( \x27ExecCommand\x27, {\x0a\x09\x09\x09\x09command: cmd,\x0a\x09\x09\x09\x09ui: event.ui,\x0a\x09\x09\x09\x09value: event.value\x0a\x09\x09\x09} );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27keydown\x27, function( event ) {\x0a\x09\x09var node, wrap, P, spacer,\x0a\x09\x09\x09selection = editor.selection,\x0a\x09\x09\x09keyCode = event.keyCode,\x0a\x09\x09\x09dom = editor.dom,\x0a\x09\x09\x09VK = tinymce.util.VK;\x0a\x0a\x09\x09if ( keyCode === VK.ENTER ) {\x0a\x09\x09\x09// When pressing Enter inside a caption move the caret to a new parapraph under it\x0a\x09\x09\x09node = selection.getNode();\x0a\x09\x09\x09wrap = dom.getParent( node, \x27div.mceTemp\x27 );\x0a\x0a\x09\x09\x09if ( wrap ) {\x0a\x09\x09\x09\x09dom.events.cancel( event ); // Doesn\x27t cancel all :(\x0a\x0a\x09\x09\x09\x09// Remove any extra dt and dd cleated on pressing Enter...\x0a\x09\x09\x09\x09tinymce.each( dom.select( \x27dt, dd\x27, wrap ), function( element ) {\x0a\x09\x09\x09\x09\x09if ( dom.isEmpty( element ) ) {\x0a\x09\x09\x09\x09\x09\x09dom.remove( element );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09});\x0a\x0a\x09\x09\x09\x09spacer = tinymce.Env.ie && tinymce.Env.ie \x3c 11 ? \x27\x27 : \x27\x3cbr data-mce-bogus=\x221\x22 /\x3e\x27;\x0a\x09\x09\x09\x09P = dom.create( \x27p\x27, null, spacer );\x0a\x0a\x09\x09\x09\x09if ( node.nodeName === \x27DD\x27 ) {\x0a\x09\x09\x09\x09\x09dom.insertAfter( P, wrap );\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09wrap.parentNode.insertBefore( P, wrap );\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09editor.nodeChanged();\x0a\x09\x09\x09\x09selection.setCursorLocation( P, 0 );\x0a\x09\x09\x09}\x0a\x09\x09} else if ( keyCode === VK.DELETE || keyCode === VK.BACKSPACE ) {\x0a\x09\x09\x09node = selection.getNode();\x0a\x0a\x09\x09\x09if ( node.nodeName === \x27DIV\x27 && dom.hasClass( node, \x27mceTemp\x27 ) ) {\x0a\x09\x09\x09\x09wrap = node;\x0a\x09\x09\x09} else if ( node.nodeName === \x27IMG\x27 || node.nodeName === \x27DT\x27 || node.nodeName === \x27A\x27 ) {\x0a\x09\x09\x09\x09wrap = dom.getParent( node, \x27div.mceTemp\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( wrap ) {\x0a\x09\x09\x09\x09dom.events.cancel( event );\x0a\x09\x09\x09\x09removeImage( node );\x0a\x09\x09\x09\x09return false;\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09// After undo/redo FF seems to set the image height very slowly when it is set to \x27auto\x27 in the CSS.\x0a\x09// This causes image.getBoundingClientRect() to return wrong values and the resize handles are shown in wrong places.\x0a\x09// Collapse the selection to remove the resize handles.\x0a\x09if ( tinymce.Env.gecko ) {\x0a\x09\x09editor.on( \x27undo redo\x27, function() {\x0a\x09\x09\x09if ( editor.selection.getNode().nodeName === \x27IMG\x27 ) {\x0a\x09\x09\x09\x09editor.selection.collapse();\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09}\x0a\x0a\x09editor.wpSetImgCaption = function( content ) {\x0a\x09\x09return parseShortcode( content );\x0a\x09};\x0a\x0a\x09editor.wpGetImgCaption = function( content ) {\x0a\x09\x09return getShortcode( content );\x0a\x09};\x0a\x0a\x09editor.on( \x27beforeGetContent\x27, function( event ) {\x0a\x09\x09if ( event.format !== \x27raw\x27 ) {\x0a\x09\x09\x09editor.$( \x27img[id=\x22__wp-temp-img-id\x22]\x27 ).removeAttr( \x27id\x27 );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27BeforeSetContent\x27, function( event ) {\x0a\x09\x09if ( event.format !== \x27raw\x27 ) {\x0a\x09\x09\x09event.content = editor.wpSetImgCaption( event.content );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27PostProcess\x27, function( event ) {\x0a\x09\x09if ( event.get ) {\x0a\x09\x09\x09event.content = editor.wpGetImgCaption( event.content );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09( function() {\x0a\x09\x09var wrap;\x0a\x0a\x09\x09editor.on( \x27dragstart\x27, function() {\x0a\x09\x09\x09var node = editor.selection.getNode();\x0a\x0a\x09\x09\x09if ( node.nodeName === \x27IMG\x27 ) {\x0a\x09\x09\x09\x09wrap = editor.dom.getParent( node, \x27.mceTemp\x27 );\x0a\x0a\x09\x09\x09\x09if ( ! wrap && node.parentNode.nodeName === \x27A\x27 && ! hasTextContent( node.parentNode ) ) {\x0a\x09\x09\x09\x09\x09wrap = node.parentNode;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09editor.on( \x27drop\x27, function( event ) {\x0a\x09\x09\x09var dom = editor.dom,\x0a\x09\x09\x09\x09rng = tinymce.dom.RangeUtils.getCaretRangeFromPoint( event.clientX, event.clientY, editor.getDoc() );\x0a\x0a\x09\x09\x09// Don\x27t allow anything to be dropped in a captioned image.\x0a\x09\x09\x09if ( rng && dom.getParent( rng.startContainer, \x27.mceTemp\x27 ) ) {\x0a\x09\x09\x09\x09event.preventDefault();\x0a\x09\x09\x09} else if ( wrap ) {\x0a\x09\x09\x09\x09event.preventDefault();\x0a\x0a\x09\x09\x09\x09editor.undoManager.transact( function() {\x0a\x09\x09\x09\x09\x09if ( rng ) {\x0a\x09\x09\x09\x09\x09\x09editor.selection.setRng( rng );\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09editor.selection.setNode( wrap );\x0a\x09\x09\x09\x09\x09dom.remove( wrap );\x0a\x09\x09\x09\x09} );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09wrap = null;\x0a\x09\x09} );\x0a\x09} )();\x0a\x0a\x09// Add to editor.wp\x0a\x09editor.wp = editor.wp || {};\x0a\x09editor.wp.isPlaceholder = isPlaceholder;\x0a\x0a\x09// Back-compat.\x0a\x09return {\x0a\x09\x09_do_shcode: parseShortcode,\x0a\x09\x09_get_shcode: getShortcode\x0a\x09};\x0a});\x0a'}