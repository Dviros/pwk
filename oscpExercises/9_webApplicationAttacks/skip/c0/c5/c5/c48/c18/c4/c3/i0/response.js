var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 14:58:41 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Wed, 25 Apr 2018 22:35:21 GMT\x0aETag: \x221942-56ab3e2d73c40-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-1895/1896\x0aContent-Length: 1896\x0aKeep-Alive: timeout=5, max=65\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/**\x0a * validate.js\x0a *\x0a * Released under LGPL License.\x0a * Copyright (c) 1999-2017 Ephox Corp. All rights reserved\x0a *\x0a * License: http://www.tinymce.com/license\x0a * Contributing: http://www.tinymce.com/contributing\x0a */\x0a\x0a/**\x0a  // String validation:\x0a\x0a  if (!Validator.isEmail(\x27myemail\x27))\x0a    alert(\x27Invalid email.\x27);\x0a\x0a  // Form validation:\x0a\x0a  var f = document.forms[\x27myform\x27];\x0a\x0a  if (!Validator.isEmail(f.myemail))\x0a    alert(\x27Invalid email.\x27);\x0a*/\x0a\x0avar Validator = {\x0a  isEmail : function (s) {\x0a    return this.test(s, \x27^[-!#$%&\x5c\x27*+\x5c\x5c./0-9=?A-Z^_`a-z{|}~]+@[-!#$%&\x5c\x27*+\x5c\x5c/0-9=?A-Z^_`a-z{|}~]+\x5c.[-!#$%&\x5c\x27*+\x5c\x5c./0-9=?A-Z^_`a-z{|}~]+$\x27);\x0a  },\x0a\x0a  isAbsUrl : function (s) {\x0a    return this.test(s, \x27^(news|telnet|nttp|file|http|ftp|https)://[-A-Za-z0-9\x5c\x5c.]+\x5c\x5c/?.*$\x27);\x0a  },\x0a\x0a  isSize : function (s) {\x0a    return this.test(s, \x27^[0-9.]+(%|in|cm|mm|em|ex|pt|pc|px)?$\x27);\x0a  },\x0a\x0a  isId : function (s) {\x0a    return this.test(s, \x27^[A-Za-z_]([A-Za-z0-9_])*$\x27);\x0a  },\x0a\x0a  isEmpty : function (s) {\x0a    var nl, i;\x0a\x0a    if (s.nodeName == \x27SELECT\x27 && s.selectedIndex \x3c 1) {\x0a      return true;\x0a    }\x0a\x0a    if (s.type == \x27checkbox\x27 && !s.checked) {\x0a      return true;\x0a    }\x0a\x0a    if (s.type == \x27radio\x27) {\x0a      for (i = 0, nl = s.form.elements; i \x3c nl.length; i++) {\x0a        if (nl[i].type == \x22radio\x22 && nl[i].name == s.name && nl[i].checked) {\x0a          return false;\x0a        }\x0a      }\x0a\x0a      return true;\x0a    }\x0a\x0a    return new RegExp(\x27^\x5c\x5cs*$\x27).test(s.nodeType == 1 ? s.value : s);\x0a  },\x0a\x0a  isNumber : function (s, d) {\x0a    return !isNaN(s.nodeType == 1 ? s.value : s) && (!d || !this.test(s, \x27^-?[0-9]*\x5c\x5c.[0-9]*$\x27));\x0a  },\x0a\x0a  test : function (s, p) {\x0a    s = s.nodeType == 1 ? s.value : s;\x0a\x0a    return s == \x27\x27 || new RegExp(p).test(s);\x0a  }\x0a};\x0a\x0avar AutoValidator = {\x0a  settings : {\x0a    id_cls : \x27id\x27,\x0a    int_cls : \x27int\x27,\x0a    url_cls : \x27url\x27,\x0a    number_cls : \x27number\x27,\x0a    email_cls : \x27email\x27,\x0a    size_cls : \x27size\x27,\x0a    required_cls : \x27required\x27,\x0a    invalid_cls : \x27invalid\x27,\x0a    min_cls : \x27min\x27,\x0a    max_cls : \x27max\x27\x0a  },\x0a\x0a  init : function (s) {\x0a    var n;\x0a\x0a    for (n in s) {\x0a      this.settings[n] = s[n];\x0a    }\x0a  },\x0a\x0a  validate : function (f) {\x0a    var i, nl, s = this.settings, c = 0;\x0a\x0a    nl = this.tags(f, \x27label\x27);\x0a    for (i = 0; i \x3c nl.length; i++) {\x0a      this.removeClass(nl[i], s.invalid_cls);\x0a      nl[i].setAttribute(\x27aria-invalid\x27, false);\x0a    }\x0a\x0a    c += this.validateElms(f, \x27input\x27);\x0a    c += this.validateElms(f, \x27select\x27);\x0a    c += this.validateElms(f, \x27textarea\x27);\x0a\x0a    return c == 3;\x0a  },\x0a\x0a  invalidate : function (n) {\x0a    this.mark(n.form, n);\x0a  },\x0a\x0a  getErrorMessages : function (f) {\x0a    var nl, i, s = this.settings, field, msg, values, messages = [], ed = tinyMCEPopup.editor;\x0a    nl = this.tags(f, \x22label\x22);\x0a    for (i = 0; i \x3c nl.length; i++) {\x0a      if (this.hasClass(nl[i], s.invalid_cls)) {\x0a        field = document.getElementById(nl[i].getAttribute(\x22for\x22));\x0a        values = { field: nl[i].textContent };\x0a        if (this.hasClass(field, s.min_cls, true)) {\x0a          message = ed.getLang(\x27invalid_data_min\x27);\x0a          values.min = this.getNum(field, s.min_cls);\x0a        } else if (this.hasClass(field, s.number_cls)) {\x0a          message = ed.getLang(\x27invalid_data_number\x27);\x0a        } else if (this.hasClass(field, s.size_cls)) {\x0a          message = ed.getLang(\x27invalid_data_size\x27);\x0a        } else {\x0a          message = ed.getLang(\x27invalid_data\x27);\x0a        }\x0a\x0a        message = message.replace(/{\x5c#([^}]+)\x5c}/g, function (a, b) {\x0a          return values[b] || \x27{#\x27 + b + \x27}\x27;\x0a        });\x0a        messages.push(message);\x0a      }\x0a    }\x0a    return messages;\x0a  },\x0a\x0a  reset : function (e) {\x0a    var t = [\x27label\x27, \x27input\x27, \x27select\x27, \x27textarea\x27];\x0a    var i, j, nl, s = this.settings;\x0a\x0a    if (e == null) {\x0a      return;\x0a    }\x0a\x0a    for (i = 0; i \x3c t.length; i++) {\x0a      nl = this.tags(e.form ? e.form : e, t[i]);\x0a      for (j = 0; j \x3c nl.length; j++) {\x0a        this.removeClass(nl[j], s.invalid_cls);\x0a        nl[j].setAttribute(\x27aria-invalid\x27, false);\x0a      }\x0a    }\x0a  },\x0a\x0a  validateElms : function (f, e) {\x0a    var nl, i, n, s = this.settings, st = true, va = Validator, v;\x0a\x0a    nl = this.tags(f, e);\x0a    for (i = 0; i \x3c nl.length; i++) {\x0a      n = nl[i];\x0a\x0a      this.removeClass(n, s.invalid_cls);\x0a\x0a      if (this.hasClass(n, s.required_cls) && va.isEmpty(n)) {\x0a        st = this.mark(f, n);\x0a      }\x0a\x0a      if (this.hasClass(n, s.number_cls) && !va.isNumber(n)) {\x0a        st = this.mark(f, n);\x0a      }\x0a\x0a      if (this.hasClass(n, s.int_cls) && !va.isNumber(n, true)) {\x0a        st = this.mark(f, n);\x0a      }\x0a\x0a      if (this.hasClass(n, s.url_cls) && !va.isAbsUrl(n)) {\x0a        st = this.mark(f, n);\x0a      }\x0a\x0a      if (this.hasClass(n, s.email_cls) && !va.isEmail(n)) {\x0a        st = this.mark(f, n);\x0a      }\x0a\x0a      if (this.hasClass(n, s.size_cls) && !va.isSize(n)) {\x0a        st = this.mark(f, n);\x0a      }\x0a\x0a      if (this.hasClass(n, s.id_cls) && !va.isId(n)) {\x0a        st = this.mark(f, n);\x0a      }\x0a\x0a      if (this.hasClass(n, s.min_cls, true)) {\x0a        v = this.getNum(n, s.min_cls);\x0a\x0a        if (isNaN(v) || parseInt(n.value) \x3c parseInt(v)) {\x0a          st = this.mark(f, n);\x0a        }\x0a      }\x0a\x0a      if (this.hasClass(n, s.max_cls, true)) {\x0a        v = this.getNum(n, s.max_cls);\x0a\x0a        if (isNaN(v) || parseInt(n.value) \x3e parseInt(v)) {\x0a          st = this.mark(f, n);\x0a        }\x0a      }\x0a    }\x0a\x0a    return st;\x0a  },\x0a\x0a  hasClass : function (n, c, d) {\x0a    return new RegExp(\x27\x5c\x5cb\x27 + c + (d ? \x27[0-9]+\x27 : \x27\x27) + \x27\x5c\x5cb\x27, \x27g\x27).test(n.className);\x0a  },\x0a\x0a  getNum : function (n, c) {\x0a    c = n.className.match(new RegExp(\x27\x5c\x5cb\x27 + c + \x27([0-9]+)\x5c\x5cb\x27, \x27g\x27))[0];\x0a    c = c.replace(/[^0-9]/g, \x27\x27);\x0a\x0a    return c;\x0a  },\x0a\x0a  addClass : function (n, c, b) {\x0a    var o = this.removeClass(n, c);\x0a    n.className = b ? c + (o !== \x27\x27 ? (\x27 \x27 + o) : \x27\x27) : (o !== \x27\x27 ? (o + \x27 \x27) : \x27\x27) + c;\x0a  },\x0a\x0a  removeClass : function (n, c) {\x0a    c = n.className.replace(new RegExp(\x22(^|\x5c\x5cs+)\x22 + c + \x22(\x5c\x5cs+|$)\x22), \x27 \x27);\x0a    return n.className = c !== \x27 \x27 ? c : \x27\x27;\x0a  },\x0a\x0a  tags : function (f, s) {\x0a    return f.getElementsByTagName(s);\x0a  },\x0a\x0a  mark : function (f, n) {\x0a    var s = this.settings;\x0a\x0a    this.addClass(n, s.invalid_cls);\x0a    n.setAttribute(\x27aria-invalid\x27, \x27true\x27);\x0a    this.markLabels(f, n, s.invalid_cls);\x0a\x0a    return false;\x0a  },\x0a\x0a  markLabels : function (f, n, ic) {\x0a    var nl, i;\x0a\x0a    nl = this.tags(f, \x22label\x22);\x0a    for (i = 0; i \x3c nl.length; i++) {\x0a      if (nl[i].getAttribute(\x22for\x22) == n.id || nl[i].htmlFor == n.id) {\x0a        this.addClass(nl[i], ic);\x0a      }\x0a    }\x0a\x0a    return null;\x0a  }\x0a};\x0a!'}