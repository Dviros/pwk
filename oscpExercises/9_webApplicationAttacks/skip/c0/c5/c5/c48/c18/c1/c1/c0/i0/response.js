var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 14:57:49 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Tue, 29 Jan 2019 20:19:51 GMT\x0aETag: \x22de9-5809e83fae7c0-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-945/946\x0aContent-Length: 946\x0aKeep-Alive: timeout=5, max=2\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a(function () {\x0avar colorpicker = (function () {\x0a    \x27use strict\x27;\x0a\x0a    var global = tinymce.util.Tools.resolve(\x27tinymce.PluginManager\x27);\x0a\x0a    var global$1 = tinymce.util.Tools.resolve(\x27tinymce.util.Color\x27);\x0a\x0a    var showPreview = function (win, hexColor) {\x0a      win.find(\x27#preview\x27)[0].getEl().style.background = hexColor;\x0a    };\x0a    var setColor = function (win, value) {\x0a      var color = global$1(value), rgb = color.toRgb();\x0a      win.fromJSON({\x0a        r: rgb.r,\x0a        g: rgb.g,\x0a        b: rgb.b,\x0a        hex: color.toHex().substr(1)\x0a      });\x0a      showPreview(win, color.toHex());\x0a    };\x0a    var open = function (editor, callback, value) {\x0a      var win = editor.windowManager.open({\x0a        title: \x27Color\x27,\x0a        items: {\x0a          type: \x27container\x27,\x0a          layout: \x27flex\x27,\x0a          direction: \x27row\x27,\x0a          align: \x27stretch\x27,\x0a          padding: 5,\x0a          spacing: 10,\x0a          items: [\x0a            {\x0a              type: \x27colorpicker\x27,\x0a              value: value,\x0a              onchange: function () {\x0a                var rgb = this.rgb();\x0a                if (win) {\x0a                  win.find(\x27#r\x27).value(rgb.r);\x0a                  win.find(\x27#g\x27).value(rgb.g);\x0a                  win.find(\x27#b\x27).value(rgb.b);\x0a                  win.find(\x27#hex\x27).value(this.value().substr(1));\x0a                  showPreview(win, this.value());\x0a                }\x0a              }\x0a            },\x0a            {\x0a              type: \x27form\x27,\x0a              padding: 0,\x0a              labelGap: 5,\x0a              defaults: {\x0a                type: \x27textbox\x27,\x0a                size: 7,\x0a                value: \x270\x27,\x0a                flex: 1,\x0a                spellcheck: false,\x0a                onchange: function () {\x0a                  var colorPickerCtrl = win.find(\x27colorpicker\x27)[0];\x0a                  var name, value;\x0a                  name = this.name();\x0a                  value = this.value();\x0a                  if (name === \x27hex\x27) {\x0a                    value = \x27#\x27 + value;\x0a                    setColor(win, value);\x0a                    colorPickerCtrl.value(value);\x0a                    return;\x0a                  }\x0a                  value = {\x0a                    r: win.find(\x27#r\x27).value(),\x0a                    g: win.find(\x27#g\x27).value(),\x0a                    b: win.find(\x27#b\x27).value()\x0a                  };\x0a                  colorPickerCtrl.value(value);\x0a                  setColor(win, value);\x0a                }\x0a              },\x0a              items: [\x0a                {\x0a                  name: \x27r\x27,\x0a                  label: \x27R\x27,\x0a                  autofocus: 1\x0a                },\x0a                {\x0a                  name: \x27g\x27,\x0a                  label: \x27G\x27\x0a                },\x0a                {\x0a                  name: \x27b\x27,\x0a                  label: \x27B\x27\x0a                },\x0a                {\x0a                  name: \x27hex\x27,\x0a                  label: \x27#\x27,\x0a                  value: \x27000000\x27\x0a                },\x0a                {\x0a                  name: \x27preview\x27,\x0a                  type: \x27container\x27,\x0a                  border: 1\x0a                }\x0a              ]\x0a            }\x0a          ]\x0a        },\x0a        onSubmit: function () {\x0a          callback(\x27#\x27 + win.toJSON().hex);\x0a        }\x0a      });\x0a      setColor(win, value);\x0a    };\x0a    var Dialog = { open: open };\x0a\x0a    global.add(\x27colorpicker\x27, function (editor) {\x0a      if (!editor.settings.color_picker_callback) {\x0a        editor.settings.color_picker_callback = function (callback, value) {\x0a          Dialog.open(editor, callback, value);\x0a        };\x0a      }\x0a    });\x0a    function Plugin () {\x0a    }\x0a\x0a    return Plugin;\x0a\x0a}());\x0a})();\x0a'}