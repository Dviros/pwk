var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 15:04:06 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Mon, 19 Aug 2019 04:55:53 GMT\x0aETag: \x2271ff-59071278fe840-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-7343/7344\x0aContent-Length: 7344\x0aKeep-Alive: timeout=5, max=71\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/******/ (function(modules) { // webpackBootstrap\x0a/******/ \x09// The module cache\x0a/******/ \x09var installedModules = {};\x0a/******/\x0a/******/ \x09// The require function\x0a/******/ \x09function __webpack_require__(moduleId) {\x0a/******/\x0a/******/ \x09\x09// Check if module is in cache\x0a/******/ \x09\x09if(installedModules[moduleId]) {\x0a/******/ \x09\x09\x09return installedModules[moduleId].exports;\x0a/******/ \x09\x09}\x0a/******/ \x09\x09// Create a new module (and put it into the cache)\x0a/******/ \x09\x09var module = installedModules[moduleId] = {\x0a/******/ \x09\x09\x09i: moduleId,\x0a/******/ \x09\x09\x09l: false,\x0a/******/ \x09\x09\x09exports: {}\x0a/******/ \x09\x09};\x0a/******/\x0a/******/ \x09\x09// Execute the module function\x0a/******/ \x09\x09modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\x0a/******/\x0a/******/ \x09\x09// Flag the module as loaded\x0a/******/ \x09\x09module.l = true;\x0a/******/\x0a/******/ \x09\x09// Return the exports of the module\x0a/******/ \x09\x09return module.exports;\x0a/******/ \x09}\x0a/******/\x0a/******/\x0a/******/ \x09// expose the modules object (__webpack_modules__)\x0a/******/ \x09__webpack_require__.m = modules;\x0a/******/\x0a/******/ \x09// expose the module cache\x0a/******/ \x09__webpack_require__.c = installedModules;\x0a/******/\x0a/******/ \x09// define getter function for harmony exports\x0a/******/ \x09__webpack_require__.d = function(exports, name, getter) {\x0a/******/ \x09\x09if(!__webpack_require__.o(exports, name)) {\x0a/******/ \x09\x09\x09Object.defineProperty(exports, name, { enumerable: true, get: getter });\x0a/******/ \x09\x09}\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// define __esModule on exports\x0a/******/ \x09__webpack_require__.r = function(exports) {\x0a/******/ \x09\x09if(typeof Symbol !== \x27undefined\x27 && Symbol.toStringTag) {\x0a/******/ \x09\x09\x09Object.defineProperty(exports, Symbol.toStringTag, { value: \x27Module\x27 });\x0a/******/ \x09\x09}\x0a/******/ \x09\x09Object.defineProperty(exports, \x27__esModule\x27, { value: true });\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// create a fake namespace object\x0a/******/ \x09// mode & 1: value is a module id, require it\x0a/******/ \x09// mode & 2: merge all properties of value into the ns\x0a/******/ \x09// mode & 4: return value when already ns object\x0a/******/ \x09// mode & 8|1: behave like require\x0a/******/ \x09__webpack_require__.t = function(value, mode) {\x0a/******/ \x09\x09if(mode & 1) value = __webpack_require__(value);\x0a/******/ \x09\x09if(mode & 8) return value;\x0a/******/ \x09\x09if((mode & 4) && typeof value === \x27object\x27 && value && value.__esModule) return value;\x0a/******/ \x09\x09var ns = Object.create(null);\x0a/******/ \x09\x09__webpack_require__.r(ns);\x0a/******/ \x09\x09Object.defineProperty(ns, \x27default\x27, { enumerable: true, value: value });\x0a/******/ \x09\x09if(mode & 2 && typeof value != \x27string\x27) for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\x0a/******/ \x09\x09return ns;\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// getDefaultExport function for compatibility with non-harmony modules\x0a/******/ \x09__webpack_require__.n = function(module) {\x0a/******/ \x09\x09var getter = module && module.__esModule ?\x0a/******/ \x09\x09\x09function getDefault() { return module[\x27default\x27]; } :\x0a/******/ \x09\x09\x09function getModuleExports() { return module; };\x0a/******/ \x09\x09__webpack_require__.d(getter, \x27a\x27, getter);\x0a/******/ \x09\x09return getter;\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// Object.prototype.hasOwnProperty.call\x0a/******/ \x09__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\x0a/******/\x0a/******/ \x09// __webpack_public_path__\x0a/******/ \x09__webpack_require__.p = \x22\x22;\x0a/******/\x0a/******/\x0a/******/ \x09// Load entry module and return exports\x0a/******/ \x09return __webpack_require__(__webpack_require__.s = 11);\x0a/******/ })\x0a/************************************************************************/\x0a/******/ ([\x0a/* 0 */,\x0a/* 1 */,\x0a/* 2 */,\x0a/* 3 */,\x0a/* 4 */,\x0a/* 5 */,\x0a/* 6 */,\x0a/* 7 */,\x0a/* 8 */,\x0a/* 9 */,\x0a/* 10 */,\x0a/* 11 */\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0amodule.exports = __webpack_require__(12);\x0a\x0a\x0a/***/ }),\x0a/* 12 */\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a/**\x0a * @output wp-includes/js/media-grid.js\x0a */\x0a\x0avar media = wp.media;\x0a\x0amedia.controller.EditAttachmentMetadata = __webpack_require__( 13 );\x0amedia.view.MediaFrame.Manage = __webpack_require__( 14 );\x0amedia.view.Attachment.Details.TwoColumn = __webpack_require__( 15 );\x0amedia.view.MediaFrame.Manage.Router = __webpack_require__( 16 );\x0amedia.view.EditImage.Details = __webpack_require__( 17 );\x0amedia.view.MediaFrame.EditAttachments = __webpack_require__( 18 );\x0amedia.view.SelectModeToggleButton = __webpack_require__( 19 );\x0amedia.view.DeleteSelectedButton = __webpack_require__( 20 );\x0amedia.view.DeleteSelectedPermanentlyButton = __webpack_require__( 21 );\x0a\x0a\x0a/***/ }),\x0a/* 13 */\x0a/***/ (function(module, exports) {\x0a\x0avar l10n = wp.media.view.l10n,\x0a\x09EditAttachmentMetadata;\x0a\x0a/**\x0a * wp.media.controller.EditAttachmentMetadata\x0a *\x0a * A state for editing an attachment\x27s metadata.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a */\x0aEditAttachmentMetadata = wp.media.controller.State.extend(/** @lends wp.media.controller.EditAttachmentMetadata.prototype */{\x0a\x09defaults: {\x0a\x09\x09id:      \x27edit-attachment\x27,\x0a\x09\x09// Title string passed to the frame\x27s title region view.\x0a\x09\x09title:   l10n.attachmentDetails,\x0a\x09\x09// Region mode defaults.\x0a\x09\x09content: \x27edit-metadata\x27,\x0a\x09\x09menu:    false,\x0a\x09\x09toolbar: false,\x0a\x09\x09router:  false\x0a\x09}\x0a});\x0a\x0amodule.exports = EditAttachmentMetadata;\x0a\x0a\x0a/***/ }),\x0a/* 14 */\x0a/***/ (function(module, exports) {\x0a\x0avar MediaFrame = wp.media.view.MediaFrame,\x0a\x09Library = wp.media.controller.Library,\x0a\x0a\x09$ = Backbone.$,\x0a\x09Manage;\x0a\x0a/**\x0a * wp.media.view.MediaFrame.Manage\x0a *\x0a * A generic management frame workflow.\x0a *\x0a * Used in the media grid view.\x0a *\x0a * @memberOf wp.media.view.MediaFrame\x0a *\x0a * @class\x0a * @augments wp.media.view.MediaFrame\x0a * @augments wp.media.view.Frame\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a * @mixes wp.media.controller.StateMachine\x0a */\x0aManage = MediaFrame.extend(/** @lends wp.media.view.MediaFrame.Manage.prototype */{\x0a\x09/**\x0a\x09 * @constructs\x0a\x09 */\x0a\x09initialize: function() {\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09title:     \x27\x27,\x0a\x09\x09\x09modal:     false,\x0a\x09\x09\x09selection: [],\x0a\x09\x09\x09library:   {}, // Options hash for the query to the media library.\x0a\x09\x09\x09multiple:  \x27add\x27,\x0a\x09\x09\x09state:     \x27library\x27,\x0a\x09\x09\x09uploader:  true,\x0a\x09\x09\x09mode:      [ \x27grid\x27, \x27edit\x27 ]\x0a\x09\x09});\x0a\x0a\x09\x09this.$body = $( document.body );\x0a\x09\x09this.$window = $( window );\x0a\x09\x09this.$adminBar = $( \x27#wpadminbar\x27 );\x0a\x09\x09// Store the Add New button for later reuse in wp.media.view.UploaderInline.\x0a\x09\x09this.$uploaderToggler = $( \x27.page-title-action\x27 )\x0a\x09\x09\x09.attr( \x27aria-expanded\x27, \x27false\x27 )\x0a\x09\x09\x09.on( \x27click\x27, _.bind( this.addNewClickHandler, this ) );\x0a\x0a\x09\x09this.$window.on( \x27scroll resize\x27, _.debounce( _.bind( this.fixPosition, this ), 15 ) );\x0a\x0a\x09\x09// Ensure core and media grid view UI is enabled.\x0a\x09\x09this.$el.addClass(\x27wp-core-ui\x27);\x0a\x0a\x09\x09// Force the uploader off if the upload limit has been exceeded or\x0a\x09\x09// if the browser isn\x27t supported.\x0a\x09\x09if ( wp.Uploader.limitExceeded || ! wp.Uploader.browser.supported ) {\x0a\x09\x09\x09this.options.uploader = false;\x0a\x09\x09}\x0a\x0a\x09\x09// Initialize a window-wide uploader.\x0a\x09\x09if ( this.options.uploader ) {\x0a\x09\x09\x09this.uploader = new wp.media.view.UploaderWindow({\x0a\x09\x09\x09\x09controller: this,\x0a\x09\x09\x09\x09uploader: {\x0a\x09\x09\x09\x09\x09dropzone:  document.body,\x0a\x09\x09\x09\x09\x09container: document.body\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}).render();\x0a\x09\x09\x09this.uploader.ready();\x0a\x09\x09\x09$(\x27body\x27).append( this.uploader.el );\x0a\x0a\x09\x09\x09this.options.uploader = false;\x0a\x09\x09}\x0a\x0a\x09\x09this.gridRouter = new wp.media.view.MediaFrame.Manage.Router();\x0a\x0a\x09\x09// Call \x27initialize\x27 directly on the parent class.\x0a\x09\x09MediaFrame.prototype.initialize.apply( this, arguments );\x0a\x0a\x09\x09// Append the frame view directly the supplied container.\x0a\x09\x09this.$el.appendTo( this.options.container );\x0a\x0a\x09\x09this.createStates();\x0a\x09\x09this.bindRegionModeHandlers();\x0a\x09\x09this.render();\x0a\x09\x09this.bindSearchHandler();\x0a\x0a\x09\x09wp.media.frames.browse = this;\x0a\x09},\x0a\x0a\x09bindSearchHandler: function() {\x0a\x09\x09var search = this.$( \x27#media-search-input\x27 ),\x0a\x09\x09\x09searchView = this.browserView.toolbar.get( \x27search\x27 ).$el,\x0a\x09\x09\x09listMode = this.$( \x27.view-list\x27 ),\x0a\x0a\x09\x09\x09input  = _.throttle( function (e) {\x0a\x09\x09\x09\x09var val = $( e.currentTarget ).val(),\x0a\x09\x09\x09\x09\x09url = \x27\x27;\x0a\x0a\x09\x09\x09\x09if ( val ) {\x0a\x09\x09\x09\x09\x09url += \x27?search=\x27 + val;\x0a\x09\x09\x09\x09\x09this.gridRouter.navigate( this.gridRouter.baseUrl( url ), { replace: true } );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}, 1000 );\x0a\x0a\x09\x09// Update the URL when entering search string (at most once per second)\x0a\x09\x09search.on( \x27input\x27, _.bind( input, this ) );\x0a\x0a\x09\x09this.gridRouter\x0a\x09\x09\x09.on( \x27route:search\x27, function () {\x0a\x09\x09\x09\x09var href = window.location.href;\x0a\x09\x09\x09\x09if ( href.indexOf( \x27mode=\x27 ) \x3e -1 ) {\x0a\x09\x09\x09\x09\x09href = href.replace( /mode=[^&]+/g, \x27mode=list\x27 );\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09href += href.indexOf( \x27?\x27 ) \x3e -1 ? \x27&mode=list\x27 : \x27?mode=list\x27;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09href = href.replace( \x27search=\x27, \x27s=\x27 );\x0a\x09\x09\x09\x09listMode.prop( \x27href\x27, href );\x0a\x09\x09\x09})\x0a\x09\x09\x09.on( \x27route:reset\x27, function() {\x0a\x09\x09\x09\x09searchView.val( \x27\x27 ).trigger( \x27input\x27 );\x0a\x09\x09\x09});\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Create the default states for the frame.\x0a\x09 */\x0a\x09createStates: function() {\x0a\x09\x09var options = this.options;\x0a\x0a\x09\x09if ( this.options.states ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Add the default states.\x0a\x09\x09this.states.add([\x0a\x09\x09\x09new Library({\x0a\x09\x09\x09\x09library:            wp.media.query( options.library ),\x0a\x09\x09\x09\x09multiple:           options.multiple,\x0a\x09\x09\x09\x09title:              options.title,\x0a\x09\x09\x09\x09content:            \x27browse\x27,\x0a\x09\x09\x09\x09toolbar:            \x27select\x27,\x0a\x09\x09\x09\x09contentUserSetting: false,\x0a\x09\x09\x09\x09filterable:         \x27all\x27,\x0a\x09\x09\x09\x09autoSelect:         false\x0a\x09\x09\x09})\x0a\x09\x09]);\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Bind region mode activation events to proper handlers.\x0a\x09 */\x0a\x09bindRegionModeHandlers: function() {\x0a\x09\x09this.on( \x27content:create:browse\x27, this.browseContent, this );\x0a\x0a\x09\x09// Handle a frame-level event for editing an attachment.\x0a\x09\x09this.on( \x27edit:attachment\x27, this.openEditAttachmentModal, this );\x0a\x0a\x09\x09this.on( \x27select:activate\x27, this.bindKeydown, this );\x0a\x09\x09this.on( \x27select:deactivate\x27, this.unbindKeydown, this );\x0a\x09},\x0a\x0a\x09handleKeydown: function( e ) {\x0a\x09\x09if ( 27 === e.which ) {\x0a\x09\x09\x09e.preventDefault();\x0a\x09\x09\x09this.deactivateMode( \x27select\x27 ).activateMode( \x27edit\x27 );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09bindKeydown: function() {\x0a\x09\x09this.$body.on( \x27keydown.select\x27, _.bind( this.handleKeydown, this ) );\x0a\x09},\x0a\x0a\x09unbindKeydown: function() {\x0a\x09\x09this.$body.off( \x27keydown.select\x27 );\x0a\x09},\x0a\x0a\x09fixPosition: function() {\x0a\x09\x09var $browser, $toolbar;\x0a\x09\x09if ( ! this.isModeActive( \x27select\x27 ) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09$browser = this.$(\x27.attachments-browser\x27);\x0a\x09\x09$toolbar = $browser.find(\x27.media-toolbar\x27);\x0a\x0a\x09\x09// Offset doesn\x27t appear to take top margin into account, hence +16\x0a\x09\x09if ( ( $browser.offset().top + 16 ) \x3c this.$window.scrollTop() + this.$adminBar.height() ) {\x0a\x09\x09\x09$browser.addClass( \x27fixed\x27 );\x0a\x09\x09\x09$toolbar.css(\x27width\x27, $browser.width() + \x27px\x27);\x0a\x09\x09} else {\x0a\x09\x09\x09$browser.removeClass( \x27fixed\x27 );\x0a\x09\x09\x09$toolbar.css(\x27width\x27, \x27\x27);\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Click handler for the `Add New` button.\x0a\x09 */\x0a\x09addNewClickHandler: function( event ) {\x0a\x09\x09event.preventDefault();\x0a\x09\x09this.trigger( \x27toggle:upload:attachment\x27 );\x0a\x0a\x09\x09if ( this.uploader ) {\x0a\x09\x09\x09this.uploader.refresh();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Open the Edit Attachment modal.\x0a\x09 */\x0a\x09openEditAttachmentModal: function( model ) {\x0a\x09\x09// Create a new EditAttachment frame, passing along the library and the attachment model.\x0a\x09\x09if ( wp.media.frames.edit ) {\x0a\x09\x09\x09wp.media.frames.edit.open().trigger( \x27refresh\x27, model );\x0a\x09\x09} else {\x0a\x09\x09\x09wp.media.frames.edit = wp.media( {\x0a\x09\x09\x09\x09frame:       \x27edit-attachments\x27,\x0a\x09\x09\x09\x09controller:  this,\x0a\x09\x09\x09\x09library:     this.state().get(\x27library\x27),\x0a\x09\x09\x09\x09model:       model\x0a\x09\x09\x09} );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Create an attachments browser view within the content region.\x0a\x09 *\x0a\x09 * @param {Object} contentRegion Basic object with a `view` property, which\x0a\x09 *                               should be set with the proper region view.\x0a\x09 * @this wp.media.controller.Region\x0a\x09 */\x0a\x09browseContent: function( contentRegion ) {\x0a\x09\x09var state = this.state();\x0a\x0a\x09\x09// Browse our library of attachments.\x0a\x09\x09this.browserView = contentRegion.view = new wp.media.view.AttachmentsBrowser({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09collection: state.get(\x27library\x27),\x0a\x09\x09\x09selection:  state.get(\x27selection\x27),\x0a\x09\x09\x09model:      state,\x0a\x09\x09\x09sortable:   state.get(\x27sortable\x27),\x0a\x09\x09\x09search:     state.get(\x27searchable\x27),\x0a\x09\x09\x09filters:    state.get(\x27filterable\x27),\x0a\x09\x09\x09date:       state.get(\x27date\x27),\x0a\x09\x09\x09display:    state.get(\x27displaySettings\x27),\x0a\x09\x09\x09dragInfo:   state.get(\x27dragInfo\x27),\x0a\x09\x09\x09sidebar:    \x27errors\x27,\x0a\x0a\x09\x09\x09suggestedWidth:  state.get(\x27suggestedWidth\x27),\x0a\x09\x09\x09suggestedHeight: state.get(\x27suggestedHeight\x27),\x0a\x0a\x09\x09\x09AttachmentView: state.get(\x27AttachmentView\x27),\x0a\x0a\x09\x09\x09scrollElement: document\x0a\x09\x09});\x0a\x09\x09this.browserView.on( \x27ready\x27, _.bind( this.bindDeferred, this ) );\x0a\x0a\x09\x09this.errors = wp.Uploader.errors;\x0a\x09\x09this.errors.on( \x27add remove reset\x27, this.sidebarVisibility, this );\x0a\x09},\x0a\x0a\x09sidebarVisibility: function() {\x0a\x09\x09this.browserView.$( \x27.media-sidebar\x27 ).toggle( !! this.errors.length );\x0a\x09},\x0a\x0a\x09bindDeferred: function() {\x0a\x09\x09if ( ! this.browserView.dfd ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x09\x09this.browserView.dfd.done( _.bind( this.startHistory, this ) );\x0a\x09},\x0a\x0a\x09startHistory: function() {\x0a\x09\x09// Verify pushState support and activate\x0a\x09\x09if ( window.history && window.history.pushState ) {\x0a\x09\x09\x09if ( Backbone.History.started ) {\x0a\x09\x09\x09\x09Backbone.history.stop();\x0a\x09\x09\x09}\x0a\x09\x09\x09Backbone.history.start( {\x0a\x09\x09\x09\x09root: window._wpMediaGridSettings.adminUrl,\x0a\x09\x09\x09\x09pushState: true\x0a\x09\x09\x09} );\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = Manage;\x0a\x0a\x0a/***/ }),\x0a/* 15 */\x0a/***/ (function(module, exports) {\x0a\x0avar Details = wp.media.view.Attachment.Details,\x0a\x09TwoColumn;\x0a\x0a/**\x0a * wp.media.view.Attachment.Details.TwoColumn\x0a *\x0a * A similar view to media.view.Attachment.Details\x0a * for use in the Edit Attachment modal.\x0a *\x0a * @memberOf wp.media.view.Attachment.Details\x0a *\x0a * @class\x0a * @augments wp.media.view.Attachment.Details\x0a * @augments wp.media.view.Attachment\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aTwoColumn = Details.extend(/** @lends wp.media.view.Attachment.Details.TowColumn.prototype */{\x0a\x09template: wp.template( \x27attachment-details-two-column\x27 ),\x0a\x0a\x09initialize: function() {\x0a\x09\x09this.controller.on( \x27content:activate:edit-details\x27, _.bind( this.editAttachment, this ) );\x0a\x0a\x09\x09Details.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09editAttachment: function( event ) {\x0a\x09\x09if ( event ) {\x0a\x09\x09\x09event.preventDefault();\x0a\x09\x09}\x0a\x09\x09this.controller.content.mode( \x27edit-image\x27 );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Noop this from parent class, doesn\x27t apply here.\x0a\x09 */\x0a\x09toggleSelectionHandler: function() {},\x0a\x0a\x09render: function() {\x0a\x09\x09Details.prototype.render.apply( this, arguments );\x0a\x0a\x09\x09wp.media.mixin.removeAllPlayers();\x0a\x09\x09this.$( \x27audio, video\x27 ).each( function (i, elem) {\x0a\x09\x09\x09var el = wp.media.view.MediaDetails.prepareSrc( elem );\x0a\x09\x09\x09new window.MediaElementPlayer( el, wp.media.mixin.mejsSettings );\x0a\x09\x09} );\x0a\x09}\x0a});\x0a\x0amodule.exports = TwoColumn;\x0a\x0a\x0a/***/ }),\x0a/* 16 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.MediaFrame.Manage.Router\x0a *\x0a * A router for handling the browser history and application state.\x0a *\x0a * @memberOf wp.media.view.MediaFrame.Manage\x0a *\x0a * @class\x0a * @augments Backbone.Router\x0a */\x0avar Router = Backbone.Router.extend(/** @lends wp.media.view.MediaFrame.Manage.Router.prototype */{\x0a\x09routes: {\x0a\x09\x09\x27upload.php?item=:slug&mode=edit\x27: \x27editItem\x27,\x0a\x09\x09\x27upload.php?item=:slug\x27:           \x27showItem\x27,\x0a\x09\x09\x27upload.php?search=:query\x27:        \x27search\x27,\x0a\x09\x09\x27upload.php\x27:                      \x27reset\x27\x0a\x09},\x0a\x0a\x09// Map routes against the page URL\x0a\x09baseUrl: function( url ) {\x0a\x09\x09return \x27upload.php\x27 + url;\x0a\x09},\x0a\x0a\x09reset: function() {\x0a\x09\x09var frame = wp.media.frames.edit;\x0a\x0a\x09\x09if ( frame ) {\x0a\x09\x09\x09frame.close();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09// Respond to the search route by filling the search field and trigggering the input event\x0a\x09search: function( query ) {\x0a\x09\x09jQuery( \x27#media-search-input\x27 ).val( query ).trigger( \x27input\x27 );\x0a\x09},\x0a\x0a\x09// Show the modal with a specific item\x0a\x09showItem: function( query ) {\x0a\x09\x09var media = wp.media,\x0a\x09\x09\x09frame = media.frames.browse,\x0a\x09\x09\x09library = frame.state().get(\x27library\x27),\x0a\x09\x09\x09item;\x0a\x0a\x09\x09// Trigger the media frame to open the correct item\x0a\x09\x09item = library.findWhere( { id: parseInt( query, 10 ) } );\x0a\x09\x09item.set( \x27skipHistory\x27, true );\x0a\x0a\x09\x09if ( item ) {\x0a\x09\x09\x09frame.trigger( \x27edit:attachment\x27, item );\x0a\x09\x09} else {\x0a\x09\x09\x09item = media.attachment( query );\x0a\x09\x09\x09frame.listenTo( item, \x27change\x27, function( model ) {\x0a\x09\x09\x09\x09frame.stopListening( item );\x0a\x09\x09\x09\x09frame.trigger( \x27edit:attachment\x27, model );\x0a\x09\x09\x09} );\x0a\x09\x09\x09item.fetch();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09// Show the modal in edit mode with a specific item.\x0a\x09editItem: function( query ) {\x0a\x09\x09this.showItem( query );\x0a\x09\x09wp.media.frames.edit.content.mode( \x27edit-details\x27 );\x0a\x09}\x0a});\x0a\x0amodule.exports = Router;\x0a\x0a\x0a/***/ }),\x0a/* 17 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09EditImage = wp.media.view.EditImage,\x0a\x09Details;\x0a\x0a/**\x0a * wp.media.view.EditImage.Details\x0a *\x0a * @memberOf wp.media.view.EditImage\x0a *\x0a * @class\x0a * @augments wp.media.view.EditImage\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aDetails = EditImage.extend(/** @lends wp.media.view.EditImage.Details.prototype */{\x0a\x09initialize: function( options ) {\x0a\x09\x09this.editor = window.imageEdit;\x0a\x09\x09this.frame = options.frame;\x0a\x09\x09this.controller = options.controller;\x0a\x09\x09View.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09back: function() {\x0a\x09\x09this.frame.content.mode( \x27edit-metadata\x27 );\x0a\x09},\x0a\x0a\x09save: function() {\x0a\x09\x09this.model.fetch().done( _.bind( function() {\x0a\x09\x09\x09this.frame.content.mode( \x27edit-metadata\x27 );\x0a\x09\x09}, this ) );\x0a\x09}\x0a});\x0a\x0amodule.exports = Details;\x0a\x0a\x0a/***/ }),\x0a/* 18 */\x0a/***/ (function(module, exports) {\x0a\x0avar Frame = wp.media.view.Frame,\x0a\x09MediaFrame = wp.media.view.MediaFrame,\x0a\x0a\x09$ = jQuery,\x0a\x09EditAttachments;\x0a\x0a/**\x0a * wp.media.view.MediaFrame.EditAttachments\x0a *\x0a * A frame for editing the details of a specific media item.\x0a *\x0a * Opens in a modal by default.\x0a *\x0a * Requires an attachment model to be passed in the options hash under `model`.\x0a *\x0a * @memberOf wp.media.view.MediaFrame\x0a *\x0a * @class\x0a * @augments wp.media.view.Frame\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a * @mixes wp.media.controller.StateMachine\x0a */\x0aEditAttachments = MediaFrame.extend(/** @lends wp.media.view.MediaFrame.EditAttachments.prototype */{\x0a\x0a\x09className: \x27edit-attachment-frame\x27,\x0a\x09template:  wp.template( \x27edit-attachment-frame\x27 ),\x0a\x09regions:   [ \x27title\x27, \x27content\x27 ],\x0a\x0a\x09events: {\x0a\x09\x09\x27click .left\x27:  \x27previousMediaItem\x27,\x0a\x09\x09\x27click .right\x27: \x27nextMediaItem\x27\x0a\x09},\x0a\x0a\x09initialize: function() {\x0a\x09\x09Frame.prototype.initialize.apply( this, arguments );\x0a\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09modal: true,\x0a\x09\x09\x09state: \x27edit-attachment\x27\x0a\x09\x09});\x0a\x0a\x09\x09this.controller = this.options.controller;\x0a\x09\x09this.gridRouter = this.controller.gridRouter;\x0a\x09\x09this.library = this.options.library;\x0a\x0a\x09\x09if ( this.options.model ) {\x0a\x09\x09\x09this.model = this.options.model;\x0a\x09\x09}\x0a\x0a\x09\x09this.bindHandlers();\x0a\x09\x09this.createStates();\x0a\x09\x09this.createModal();\x0a\x0a\x09\x09this.title.mode( \x27default\x27 );\x0a\x09\x09this.toggleNav();\x0a\x09},\x0a\x0a\x09bindHandlers: function() {\x0a\x09\x09// Bind default title creation.\x0a\x09\x09this.on( \x27title:create:default\x27, this.createTitle, this );\x0a\x0a\x09\x09this.on( \x27content:create:edit-metadata\x27, this.editMetadataMode, this );\x0a\x09\x09this.on( \x27content:create:edit-image\x27, this.editImageMode, this );\x0a\x09\x09this.on( \x27content:render:edit-image\x27, this.editImageModeRender, this );\x0a\x09\x09this.on( \x27refresh\x27, this.rerender, this );\x0a\x09\x09this.on( \x27close\x27, this.detach );\x0a\x0a\x09\x09this.bindModelHandlers();\x0a\x09\x09this.listenTo( this.gridRouter, \x27route:search\x27, this.close, this );\x0a\x09},\x0a\x0a\x09bindModelHandlers: function() {\x0a\x09\x09// Close the modal if the attachment is deleted.\x0a\x09\x09this.listenTo( this.model, \x27change:status destroy\x27, this.close, this );\x0a\x09},\x0a\x0a\x09createModal: function() {\x0a\x09\x09// Initialize modal container view.\x0a\x09\x09if ( this.options.modal ) {\x0a\x09\x09\x09this.modal = new wp.media.view.Modal({\x0a\x09\x09\x09\x09controller:     this,\x0a\x09\x09\x09\x09title:          this.options.title,\x0a\x09\x09\x09\x09hasCloseButton: false\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09this.modal.on( \x27open\x27, _.bind( function () {\x0a\x09\x09\x09\x09$( \x27body\x27 ).on( \x27keydown.media-modal\x27, _.bind( this.keyEvent, this ) );\x0a\x09\x09\x09}, this ) );\x0a\x0a\x09\x09\x09// Completely destroy the modal DOM element when closing it.\x0a\x09\x09\x09this.modal.on( \x27close\x27, _.bind( function() {\x0a\x09\x09\x09\x09$( \x27body\x27 ).off( \x27keydown.media-modal\x27 ); /* remove the keydown event */\x0a\x09\x09\x09\x09// Restore the original focus item if possible\x0a\x09\x09\x09\x09$( \x27li.attachment[data-id=\x22\x27 + this.model.get( \x27id\x27 ) +\x27\x22]\x27 ).focus();\x0a\x09\x09\x09\x09this.resetRoute();\x0a\x09\x09\x09}, this ) );\x0a\x0a\x09\x09\x09// Set this frame as the modal\x27s content.\x0a\x09\x09\x09this.modal.content( this );\x0a\x09\x09\x09this.modal.open();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Add the default states to the frame.\x0a\x09 */\x0a\x09createStates: function() {\x0a\x09\x09this.states.add([\x0a\x09\x09\x09new wp.media.controller.EditAttachmentMetadata({\x0a\x09\x09\x09\x09model:   this.model,\x0a\x09\x09\x09\x09library: this.library\x0a\x09\x09\x09})\x0a\x09\x09]);\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Content region rendering callback for the `edit-metadata` mode.\x0a\x09 *\x0a\x09 * @param {Object} contentRegion Basic object with a `view` property, which\x0a\x09 *                               should be set with the proper region view.\x0a\x09 */\x0a\x09editMetadataMode: function( contentRegion ) {\x0a\x09\x09contentRegion.view = new wp.media.view.Attachment.Details.TwoColumn({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09model:      this.model\x0a\x09\x09});\x0a\x0a\x09\x09/**\x0a\x09\x09 * Attach a subview to display fields added via the\x0a\x09\x09 * `attachment_fields_to_edit` filter.\x0a\x09\x09 */\x0a\x09\x09contentRegion.view.views.set( \x27.attachment-compat\x27, new wp.media.view.AttachmentCompat({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09model:      this.model\x0a\x09\x09}) );\x0a\x0a\x09\x09// Update browser url when navigating media details, except on load.\x0a\x09\x09if ( this.model && ! this.model.get( \x27skipHistory\x27 ) ) {\x0a\x09\x09\x09this.gridRouter.navigate( this.gridRouter.baseUrl( \x27?item=\x27 + this.model.id ) );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Render the EditImage view into the frame\x27s content region.\x0a\x09 *\x0a\x09 * @param {Object} contentRegion Basic object with a `view` property, which\x0a\x09 *                               should be set with the proper region view.\x0a\x09 */\x0a\x09editImageMode: function( contentRegion ) {\x0a\x09\x09var editImageController = new wp.media.controller.EditImage( {\x0a\x09\x09\x09model: this.model,\x0a\x09\x09\x09frame: this\x0a\x09\x09} );\x0a\x09\x09// Noop some methods.\x0a\x09\x09editImageController._toolbar = function() {};\x0a\x09\x09editImageController._router = function() {};\x0a\x09\x09editImageController._menu = function() {};\x0a\x0a\x09\x09contentRegion.view = new wp.media.view.EditImage.Details( {\x0a\x09\x09\x09model: this.model,\x0a\x09\x09\x09frame: this,\x0a\x09\x09\x09controller: editImageController\x0a\x09\x09} );\x0a\x0a\x09\x09this.gridRouter.navigate( this.gridRouter.baseUrl( \x27?item=\x27 + this.model.id + \x27&mode=edit\x27 ) );\x0a\x0a\x09},\x0a\x0a\x09editImageModeRender: function( view ) {\x0a\x09\x09view.on( \x27ready\x27, view.loadEditor );\x0a\x09},\x0a\x0a\x09toggleNav: function() {\x0a\x09\x09this.$(\x27.left\x27).toggleClass( \x27disabled\x27, ! this.hasPrevious() );\x0a\x09\x09this.$(\x27.right\x27).toggleClass( \x27disabled\x27, ! this.hasNext() );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Rerender the view.\x0a\x09 */\x0a\x09rerender: function( model ) {\x0a\x09\x09this.stopListening( this.model );\x0a\x0a\x09\x09this.model = model;\x0a\x0a\x09\x09this.bindModelHandlers();\x0a\x0a\x09\x09// Only rerender the `content` region.\x0a\x09\x09if ( this.content.mode() !== \x27edit-metadata\x27 ) {\x0a\x09\x09\x09this.content.mode( \x27edit-metadata\x27 );\x0a\x09\x09} else {\x0a\x09\x09\x09this.content.render();\x0a\x09\x09}\x0a\x0a\x09\x09this.toggleNav();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Click handler to switch to the previous media item.\x0a\x09 */\x0a\x09previousMediaItem: function() {\x0a\x09\x09if ( ! this.hasPrevious() ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x09\x09this.trigger( \x27refresh\x27, this.library.at( this.getCurrentIndex() - 1 ) );\x0a\x09\x09this.$( \x27.left\x27 ).focus();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Click handler to switch to the next media item.\x0a\x09 */\x0a\x09nextMediaItem: function() {\x0a\x09\x09if ( ! this.hasNext() ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x09\x09this.trigger( \x27refresh\x27, this.library.at( this.getCurrentIndex() + 1 ) );\x0a\x09\x09this.$( \x27.right\x27 ).focus();\x0a\x09},\x0a\x0a\x09getCurrentIndex: function() {\x0a\x09\x09return this.library.indexOf( this.model );\x0a\x09},\x0a\x0a\x09hasNext: function() {\x0a\x09\x09return ( this.getCurrentIndex() + 1 ) \x3c this.library.length;\x0a\x09},\x0a\x0a\x09hasPrevious: function() {\x0a\x09\x09return ( this.getCurrentIndex() - 1 ) \x3e -1;\x0a\x09},\x0a\x09/**\x0a\x09 * Respond to the keyboard events: right arrow, left arrow, except when\x0a\x09 * focus is in a textarea or input field.\x0a\x09 */\x0a\x09keyEvent: function( event ) {\x0a\x09\x09if ( ( \x27INPUT\x27 === event.target.nodeName || \x27TEXTAREA\x27 === event.target.nodeName ) && ! ( event.target.readOnly || event.target.disabled ) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// The right arrow key\x0a\x09\x09if ( 39 === event.keyCode ) {\x0a\x09\x09\x09this.nextMediaItem();\x0a\x09\x09}\x0a\x09\x09// The left arrow key\x0a\x09\x09if ( 37 === event.keyCode ) {\x0a\x09\x09\x09this.previousMediaItem();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09resetRoute: function() {\x0a\x09\x09var searchTerm = this.controller.browserView.toolbar.get( \x27search\x27 ).$el.val(),\x0a\x09\x09\x09url = \x27\x27 !== searchTerm ? \x27?search=\x27 + searchTerm : \x27\x27;\x0a\x09\x09this.gridRouter.navigate( this.gridRouter.baseUrl( url ), { replace: true } );\x0a\x09}\x0a});\x0a\x0amodule.exports = EditAttachments;\x0a\x0a\x0a/***/ }),\x0a/* 19 */\x0a/***/ (function(module, exports) {\x0a\x0a\x0avar Button = wp.media.view.Button,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09SelectModeToggle;\x0a\x0a/**\x0a * wp.media.view.SelectModeToggleButton\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.Button\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aSelectModeToggle = Button.extend(/** @lends wp.media.view.SelectModeToggle.prototype */{\x0a\x09initialize: function() {\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09size : \x27\x27\x0a\x09\x09} );\x0a\x0a\x09\x09Button.prototype.initialize.apply( this, arguments );\x0a\x09\x09this.controller.on( \x27select:activate select:deactivate\x27, this.toggleBulkEditHandler, this );\x0a\x09\x09this.controller.on( \x27selection:action:done\x27, this.back, this );\x0a\x09},\x0a\x0a\x09back: function () {\x0a\x09\x09this.controller.deactivateMode( \x27select\x27 ).activateMode( \x27edit\x27 );\x0a\x09},\x0a\x0a\x09click: function() {\x0a\x09\x09Button.prototype.click.apply( this, arguments );\x0a\x09\x09if ( this.controller.isModeActive( \x27select\x27 ) ) {\x0a\x09\x09\x09this.back();\x0a\x09\x09} else {\x0a\x09\x09\x09this.controller.deactivateMode( \x27edit\x27 ).activateMode( \x27select\x27 );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09render: function() {\x0a\x09\x09Button.prototype.render.apply( this, arguments );\x0a\x09\x09this.$el.addClass( \x27select-mode-toggle-button\x27 );\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09toggleBulkEditHandler: function() {\x0a\x09\x09var toolbar = this.controller.content.get().toolbar, children;\x0a\x0a\x09\x09children = toolbar.$( \x27.media-toolbar-secondary \x3e *, .media-toolbar-primary \x3e *\x27 );\x0a\x0a\x09\x09// TODO: the Frame should be doing all of this.\x0a\x09\x09if ( this.controller.isModeActive( \x27select\x27 ) ) {\x0a\x09\x09\x09this.model.set( {\x0a\x09\x09\x09\x09size: \x27large\x27,\x0a\x09\x09\x09\x09text: l10n.cancel\x0a\x09\x09\x09} );\x0a\x09\x09\x09children.not( \x27.spinner, .media-button\x27 ).hide();\x0a\x09\x09\x09this.$el.show();\x0a\x09\x09\x09toolbar.$( \x27.delete-selected-button\x27 ).removeClass( \x27hidden\x27 );\x0a\x09\x09} else {\x0a\x09\x09\x09this.model.set( {\x0a\x09\x09\x09\x09size: \x27\x27,\x0a\x09\x09\x09\x09text: l10n.bulkSelect\x0a\x09\x09\x09} );\x0a\x09\x09\x09this.controller.content.get().$el.removeClass( \x27fixed\x27 );\x0a\x09\x09\x09toolbar.$el.css( \x27width\x27, \x27\x27 );\x0a\x09\x09\x09toolbar.$( \x27.delete-selected-button\x27 ).addClass( \x27hidden\x27 );\x0a\x09\x09\x09children.not( \x27.media-button\x27 ).show();\x0a\x09\x09\x09this.controller.state().get( \x27selection\x27 ).reset();\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = SelectModeToggle;\x0a\x0a\x0a/***/ }),\x0a/* 20 */\x0a/***/ (function(module, exports) {\x0a\x0avar Button = wp.media.view.Button,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09DeleteSelected;\x0a\x0a/**\x0a * wp.media.view.DeleteSelectedButton\x0a *\x0a * A button that handles bulk Delete/Trash logic\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.Button\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aDeleteSelected = Button.extend(/** @lends wp.media.view.DeleteSelectedButton.prototype */{\x0a\x09initialize: function() {\x0a\x09\x09Button.prototype.initialize.apply( this, arguments );\x0a\x09\x09if ( this.options.filters ) {\x0a\x09\x09\x09this.options.filters.model.on( \x27change\x27, this.filterChange, this );\x0a\x09\x09}\x0a\x09\x09this.controller.on( \x27selection:toggle\x27, this.toggleDisabled, this );\x0a\x09\x09this.controller.on( \x27select:activate\x27, this.toggleDisabled, this );\x0a\x09},\x0a\x0a\x09filterChange: function( model ) {\x0a\x09\x09if ( \x27trash\x27 === model.get( \x27status\x27 ) ) {\x0a\x09\x09\x09this.model.set( \x27text\x27, l10n.restoreSelected );\x0a\x09\x09} else if ( wp.media.view.settings.mediaTrash ) {\x0a\x09\x09\x09this.model.set( \x27text\x27, l10n.trashSelected );\x0a\x09\x09} else {\x0a\x09\x09\x09this.model.set( \x27text\x27, l10n.deletePermanently );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09toggleDisabled: function() {\x0a\x09\x09this.model.set( \x27disabled\x27, ! this.controller.state().get( \x27selection\x27 ).length );\x0a\x09},\x0a\x0a\x09render: function() {\x0a\x09\x09Button.prototype.render.apply( this, arguments );\x0a\x09\x09if ( this.controller.isModeActive( \x27select\x27 ) ) {\x0a\x09\x09\x09this.$el.addClass( \x27delete-selected-button\x27 );\x0a\x09\x09} else {\x0a\x09\x09\x09this.$el.addClass( \x27delete-selected-button hidden\x27 );\x0a\x09\x09}\x0a\x09\x09this.toggleDisabled();\x0a\x09\x09return this;\x0a\x09}\x0a});\x0a\x0amodule.exports = DeleteSelected;\x0a\x0a\x0a/***/ }),\x0a/* 21 */\x0a/***/ (function(module, exports) {\x0a\x0avar Button = wp.media.view.Button,\x0a\x09DeleteSelected = wp.media.view.DeleteSelectedButton,\x0a\x09DeleteSelectedPermanently;\x0a\x0a/**\x0a * wp.media.view.DeleteSelectedPermanentlyButton\x0a *\x0a * When MEDIA_TRASH is true, a button that handles bulk Delete Permanently logic\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.DeleteSelectedButton\x0a * @augments wp.media.view.Button\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aDeleteSelectedPermanently = DeleteSelected.extend(/** @lends wp.media.view.DeleteSelectedPermanentlyButton.prototype */{\x0a\x09initialize: function() {\x0a\x09\x09DeleteSelected.prototype.initialize.apply( this, arguments );\x0a\x09\x09this.controller.on( \x27select:activate\x27, this.selectActivate, this );\x0a\x09\x09this.controller.on( \x27select:deactivate\x27, this.selectDeactivate, this );\x0a\x09},\x0a\x0a\x09filterChange: function( model ) {\x0a\x09\x09this.canShow = ( \x27trash\x27 === model.get( \x27status\x27 ) );\x0a\x09},\x0a\x0a\x09selectActivate: function() {\x0a\x09\x09this.toggleDisabled();\x0a\x09\x09this.$el.toggleClass( \x27hidden\x27, ! this.canShow );\x0a\x09},\x0a\x0a\x09selectDeactivate: function() {\x0a\x09\x09this.toggleDisabled();\x0a\x09\x09this.$el.addClass( \x27hidden\x27 );\x0a\x09},\x0a\x0a\x09render: function() {\x0a\x09\x09Button.prototype.render.apply( this, arguments );\x0a\x09\x09this.selectActivate();\x0a\x09\x09return this;\x0a\x09}\x0a});\x0a\x0amodule.exports = DeleteSelectedPermanently;\x0a\x0a\x0a/***/ })\x0a/******/ ]);   !'}