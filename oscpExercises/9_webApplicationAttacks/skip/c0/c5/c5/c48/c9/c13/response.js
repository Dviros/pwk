var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 15:04:32 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Thu, 20 Jan 2011 23:09:37 GMT\x0aETag: \x2230f-49a4f3a3cce40-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-442/443\x0aContent-Length: 443\x0aKeep-Alive: timeout=5, max=13\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/*!\x0a * jQuery serializeObject - v0.2 - 1/20/2010\x0a * http://benalman.com/projects/jquery-misc-plugins/\x0a * \x0a * Copyright (c) 2010 \x22Cowboy\x22 Ben Alman\x0a * Dual licensed under the MIT and GPL licenses.\x0a * http://benalman.com/about/license/\x0a */\x0a\x0a// Whereas .serializeArray() serializes a form into an array, .serializeObject()\x0a// serializes a form into an (arguably more useful) object.\x0a\x0a(function($,undefined){\x0a  \x27$:nomunge\x27; // Used by YUI compressor.\x0a  \x0a  $.fn.serializeObject = function(){\x0a    var obj = {};\x0a    \x0a    $.each( this.serializeArray(), function(i,o){\x0a      var n = o.name,\x0a        v = o.value;\x0a        \x0a        obj[n] = obj[n] === undefined ? v\x0a          : $.isArray( obj[n] ) ? obj[n].concat( v )\x0a          : [ obj[n], v ];\x0a    });\x0a    \x0a    return obj;\x0a  };\x0a  \x0a})(jQuery);\x0a'}