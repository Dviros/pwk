var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 15:00:01 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Tue, 20 Aug 2019 22:55:52 GMT\x0aETag: \x223d953-590945bb98e00-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-49080/49081\x0aContent-Length: 49081\x0aKeep-Alive: timeout=5, max=38\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/******/ (function(modules) { // webpackBootstrap\x0a/******/ \x09// The module cache\x0a/******/ \x09var installedModules = {};\x0a/******/\x0a/******/ \x09// The require function\x0a/******/ \x09function __webpack_require__(moduleId) {\x0a/******/\x0a/******/ \x09\x09// Check if module is in cache\x0a/******/ \x09\x09if(installedModules[moduleId]) {\x0a/******/ \x09\x09\x09return installedModules[moduleId].exports;\x0a/******/ \x09\x09}\x0a/******/ \x09\x09// Create a new module (and put it into the cache)\x0a/******/ \x09\x09var module = installedModules[moduleId] = {\x0a/******/ \x09\x09\x09i: moduleId,\x0a/******/ \x09\x09\x09l: false,\x0a/******/ \x09\x09\x09exports: {}\x0a/******/ \x09\x09};\x0a/******/\x0a/******/ \x09\x09// Execute the module function\x0a/******/ \x09\x09modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\x0a/******/\x0a/******/ \x09\x09// Flag the module as loaded\x0a/******/ \x09\x09module.l = true;\x0a/******/\x0a/******/ \x09\x09// Return the exports of the module\x0a/******/ \x09\x09return module.exports;\x0a/******/ \x09}\x0a/******/\x0a/******/\x0a/******/ \x09// expose the modules object (__webpack_modules__)\x0a/******/ \x09__webpack_require__.m = modules;\x0a/******/\x0a/******/ \x09// expose the module cache\x0a/******/ \x09__webpack_require__.c = installedModules;\x0a/******/\x0a/******/ \x09// define getter function for harmony exports\x0a/******/ \x09__webpack_require__.d = function(exports, name, getter) {\x0a/******/ \x09\x09if(!__webpack_require__.o(exports, name)) {\x0a/******/ \x09\x09\x09Object.defineProperty(exports, name, { enumerable: true, get: getter });\x0a/******/ \x09\x09}\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// define __esModule on exports\x0a/******/ \x09__webpack_require__.r = function(exports) {\x0a/******/ \x09\x09if(typeof Symbol !== \x27undefined\x27 && Symbol.toStringTag) {\x0a/******/ \x09\x09\x09Object.defineProperty(exports, Symbol.toStringTag, { value: \x27Module\x27 });\x0a/******/ \x09\x09}\x0a/******/ \x09\x09Object.defineProperty(exports, \x27__esModule\x27, { value: true });\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// create a fake namespace object\x0a/******/ \x09// mode & 1: value is a module id, require it\x0a/******/ \x09// mode & 2: merge all properties of value into the ns\x0a/******/ \x09// mode & 4: return value when already ns object\x0a/******/ \x09// mode & 8|1: behave like require\x0a/******/ \x09__webpack_require__.t = function(value, mode) {\x0a/******/ \x09\x09if(mode & 1) value = __webpack_require__(value);\x0a/******/ \x09\x09if(mode & 8) return value;\x0a/******/ \x09\x09if((mode & 4) && typeof value === \x27object\x27 && value && value.__esModule) return value;\x0a/******/ \x09\x09var ns = Object.create(null);\x0a/******/ \x09\x09__webpack_require__.r(ns);\x0a/******/ \x09\x09Object.defineProperty(ns, \x27default\x27, { enumerable: true, value: value });\x0a/******/ \x09\x09if(mode & 2 && typeof value != \x27string\x27) for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\x0a/******/ \x09\x09return ns;\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// getDefaultExport function for compatibility with non-harmony modules\x0a/******/ \x09__webpack_require__.n = function(module) {\x0a/******/ \x09\x09var getter = module && module.__esModule ?\x0a/******/ \x09\x09\x09function getDefault() { return module[\x27default\x27]; } :\x0a/******/ \x09\x09\x09function getModuleExports() { return module; };\x0a/******/ \x09\x09__webpack_require__.d(getter, \x27a\x27, getter);\x0a/******/ \x09\x09return getter;\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// Object.prototype.hasOwnProperty.call\x0a/******/ \x09__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\x0a/******/\x0a/******/ \x09// __webpack_public_path__\x0a/******/ \x09__webpack_require__.p = \x22\x22;\x0a/******/\x0a/******/\x0a/******/ \x09// Load entry module and return exports\x0a/******/ \x09return __webpack_require__(__webpack_require__.s = 29);\x0a/******/ })\x0a/************************************************************************/\x0a/******/ (Array(29).concat([\x0a/* 29 */\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0amodule.exports = __webpack_require__(30);\x0a\x0a\x0a/***/ }),\x0a/* 30 */\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a/**\x0a * @output wp-includes/js/media-views.js\x0a */\x0a\x0avar media = wp.media,\x0a\x09$ = jQuery,\x0a\x09l10n;\x0a\x0amedia.isTouchDevice = ( \x27ontouchend\x27 in document );\x0a\x0a// Link any localized strings.\x0al10n = media.view.l10n = window._wpMediaViewsL10n || {};\x0a\x0a// Link any settings.\x0amedia.view.settings = l10n.settings || {};\x0adelete l10n.settings;\x0a\x0a// Copy the `post` setting over to the model settings.\x0amedia.model.settings.post = media.view.settings.post;\x0a\x0a// Check if the browser supports CSS 3.0 transitions\x0a$.support.transition = (function(){\x0a\x09var style = document.documentElement.style,\x0a\x09\x09transitions = {\x0a\x09\x09\x09WebkitTransition: \x27webkitTransitionEnd\x27,\x0a\x09\x09\x09MozTransition:    \x27transitionend\x27,\x0a\x09\x09\x09OTransition:      \x27oTransitionEnd otransitionend\x27,\x0a\x09\x09\x09transition:       \x27transitionend\x27\x0a\x09\x09}, transition;\x0a\x0a\x09transition = _.find( _.keys( transitions ), function( transition ) {\x0a\x09\x09return ! _.isUndefined( style[ transition ] );\x0a\x09});\x0a\x0a\x09return transition && {\x0a\x09\x09end: transitions[ transition ]\x0a\x09};\x0a}());\x0a\x0a/**\x0a * A shared event bus used to provide events into\x0a * the media workflows that 3rd-party devs can use to hook\x0a * in.\x0a */\x0amedia.events = _.extend( {}, Backbone.Events );\x0a\x0a/**\x0a * Makes it easier to bind events using transitions.\x0a *\x0a * @param {string} selector\x0a * @param {Number} sensitivity\x0a * @returns {Promise}\x0a */\x0amedia.transition = function( selector, sensitivity ) {\x0a\x09var deferred = $.Deferred();\x0a\x0a\x09sensitivity = sensitivity || 2000;\x0a\x0a\x09if ( $.support.transition ) {\x0a\x09\x09if ( ! (selector instanceof $) ) {\x0a\x09\x09\x09selector = $( selector );\x0a\x09\x09}\x0a\x0a\x09\x09// Resolve the deferred when the first element finishes animating.\x0a\x09\x09selector.first().one( $.support.transition.end, deferred.resolve );\x0a\x0a\x09\x09// Just in case the event doesn\x27t trigger, fire a callback.\x0a\x09\x09_.delay( deferred.resolve, sensitivity );\x0a\x0a\x09// Otherwise, execute on the spot.\x0a\x09} else {\x0a\x09\x09deferred.resolve();\x0a\x09}\x0a\x0a\x09return deferred.promise();\x0a};\x0a\x0amedia.controller.Region = __webpack_require__( 31 );\x0amedia.controller.StateMachine = __webpack_require__( 32 );\x0amedia.controller.State = __webpack_require__( 33 );\x0a\x0amedia.selectionSync = __webpack_require__( 34 );\x0amedia.controller.Library = __webpack_require__( 35 );\x0amedia.controller.ImageDetails = __webpack_require__( 36 );\x0amedia.controller.GalleryEdit = __webpack_require__( 37 );\x0amedia.controller.GalleryAdd = __webpack_require__( 38 );\x0amedia.controller.CollectionEdit = __webpack_require__( 39 );\x0amedia.controller.CollectionAdd = __webpack_require__( 40 );\x0amedia.controller.FeaturedImage = __webpack_require__( 41 );\x0amedia.controller.ReplaceImage = __webpack_require__( 42 );\x0amedia.controller.EditImage = __webpack_require__( 43 );\x0amedia.controller.MediaLibrary = __webpack_require__( 44 );\x0amedia.controller.Embed = __webpack_require__( 45 );\x0amedia.controller.Cropper = __webpack_require__( 46 );\x0amedia.controller.CustomizeImageCropper = __webpack_require__( 47 );\x0amedia.controller.SiteIconCropper = __webpack_require__( 48 );\x0a\x0amedia.View = __webpack_require__( 49 );\x0amedia.view.Frame = __webpack_require__( 50 );\x0amedia.view.MediaFrame = __webpack_require__( 51 );\x0amedia.view.MediaFrame.Select = __webpack_require__( 52 );\x0amedia.view.MediaFrame.Post = __webpack_require__( 53 );\x0amedia.view.MediaFrame.ImageDetails = __webpack_require__( 54 );\x0amedia.view.Modal = __webpack_require__( 55 );\x0amedia.view.FocusManager = __webpack_require__( 56 );\x0amedia.view.UploaderWindow = __webpack_require__( 57 );\x0amedia.view.EditorUploader = __webpack_require__( 58 );\x0amedia.view.UploaderInline = __webpack_require__( 59 );\x0amedia.view.UploaderStatus = __webpack_require__( 60 );\x0amedia.view.UploaderStatusError = __webpack_require__( 61 );\x0amedia.view.Toolbar = __webpack_require__( 62 );\x0amedia.view.Toolbar.Select = __webpack_require__( 63 );\x0amedia.view.Toolbar.Embed = __webpack_require__( 64 );\x0amedia.view.Button = __webpack_require__( 65 );\x0amedia.view.ButtonGroup = __webpack_require__( 66 );\x0amedia.view.PriorityList = __webpack_require__( 67 );\x0amedia.view.MenuItem = __webpack_require__( 68 );\x0amedia.view.Menu = __webpack_require__( 69 );\x0amedia.view.RouterItem = __webpack_require__( 70 );\x0amedia.view.Router = __webpack_require__( 71 );\x0amedia.view.Sidebar = __webpack_require__( 72 );\x0amedia.view.Attachment = __webpack_require__( 73 );\x0amedia.view.Attachment.Library = __webpack_require__( 74 );\x0amedia.view.Attachment.EditLibrary = __webpack_require__( 75 );\x0amedia.view.Attachments = __webpack_require__( 76 );\x0amedia.view.Search = __webpack_require__( 77 );\x0amedia.view.AttachmentFilters = __webpack_require__( 78 );\x0amedia.view.DateFilter = __webpack_require__( 79 );\x0amedia.view.AttachmentFilters.Uploaded = __webpack_require__( 80 );\x0amedia.view.AttachmentFilters.All = __webpack_require__( 81 );\x0amedia.view.AttachmentsBrowser = __webpack_require__( 82 );\x0amedia.view.Selection = __webpack_require__( 83 );\x0amedia.view.Attachment.Selection = __webpack_require__( 84 );\x0amedia.view.Attachments.Selection = __webpack_require__( 85 );\x0amedia.view.Attachment.EditSelection = __webpack_require__( 86 );\x0amedia.view.Settings = __webpack_require__( 87 );\x0amedia.view.Settings.AttachmentDisplay = __webpack_require__( 88 );\x0amedia.view.Settings.Gallery = __webpack_require__( 89 );\x0amedia.view.Settings.Playlist = __webpack_require__( 90 );\x0amedia.view.Attachment.Details = __webpack_require__( 91 );\x0amedia.view.AttachmentCompat = __webpack_require__( 92 );\x0amedia.view.Iframe = __webpack_require__( 93 );\x0amedia.view.Embed = __webpack_require__( 94 );\x0amedia.view.Label = __webpack_require__( 95 );\x0amedia.view.EmbedUrl = __webpack_require__( 96 );\x0amedia.view.EmbedLink = __webpack_require__( 97 );\x0amedia.view.EmbedImage = __webpack_require__( 98 );\x0amedia.view.ImageDetails = __webpack_require__( 99 );\x0amedia.view.Cropper = __webpack_require__( 100 );\x0amedia.view.SiteIconCropper = __webpack_require__( 101 );\x0amedia.view.SiteIconPreview = __webpack_require__( 102 );\x0amedia.view.EditImage = __webpack_require__( 103 );\x0amedia.view.Spinner = __webpack_require__( 104 );\x0amedia.view.Heading = __webpack_require__( 105 );\x0a\x0a\x0a/***/ }),\x0a/* 31 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.controller.Region\x0a *\x0a * A region is a persistent application layout area.\x0a *\x0a * A region assumes one mode at any time, and can be switched to another.\x0a *\x0a * When mode changes, events are triggered on the region\x27s parent view.\x0a * The parent view will listen to specific events and fill the region with an\x0a * appropriate view depending on mode. For example, a frame listens for the\x0a * \x27browse\x27 mode t be activated on the \x27content\x27 view and then fills the region\x0a * with an AttachmentsBrowser view.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a *\x0a * @param {object}        options          Options hash for the region.\x0a * @param {string}        options.id       Unique identifier for the region.\x0a * @param {Backbone.View} options.view     A parent view the region exists within.\x0a * @param {string}        options.selector jQuery selector for the region within the parent view.\x0a */\x0avar Region = function( options ) {\x0a\x09_.extend( this, _.pick( options || {}, \x27id\x27, \x27view\x27, \x27selector\x27 ) );\x0a};\x0a\x0a// Use Backbone\x27s self-propagating `extend` inheritance method.\x0aRegion.extend = Backbone.Model.extend;\x0a\x0a_.extend( Region.prototype,/** @lends wp.media.controller.Region.prototype */{\x0a\x09/**\x0a\x09 * Activate a mode.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @param {string} mode\x0a\x09 *\x0a\x09 * @fires Region#activate\x0a\x09 * @fires Region#deactivate\x0a\x09 *\x0a\x09 * @returns {wp.media.controller.Region} Returns itself to allow chaining.\x0a\x09 */\x0a\x09mode: function( mode ) {\x0a\x09\x09if ( ! mode ) {\x0a\x09\x09\x09return this._mode;\x0a\x09\x09}\x0a\x09\x09// Bail if we\x27re trying to change to the current mode.\x0a\x09\x09if ( mode === this._mode ) {\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x0a\x09\x09/**\x0a\x09\x09 * Region mode deactivation event.\x0a\x09\x09 *\x0a\x09\x09 * @event wp.media.controller.Region#deactivate\x0a\x09\x09 */\x0a\x09\x09this.trigger(\x27deactivate\x27);\x0a\x0a\x09\x09this._mode = mode;\x0a\x09\x09this.render( mode );\x0a\x0a\x09\x09/**\x0a\x09\x09 * Region mode activation event.\x0a\x09\x09 *\x0a\x09\x09 * @event wp.media.controller.Region#activate\x0a\x09\x09 */\x0a\x09\x09this.trigger(\x27activate\x27);\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * Render a mode.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @param {string} mode\x0a\x09 *\x0a\x09 * @fires Region#create\x0a\x09 * @fires Region#render\x0a\x09 *\x0a\x09 * @returns {wp.media.controller.Region} Returns itself to allow chaining\x0a\x09 */\x0a\x09render: function( mode ) {\x0a\x09\x09// If the mode isn\x27t active, activate it.\x0a\x09\x09if ( mode && mode !== this._mode ) {\x0a\x09\x09\x09return this.mode( mode );\x0a\x09\x09}\x0a\x0a\x09\x09var set = { view: null },\x0a\x09\x09\x09view;\x0a\x0a\x09\x09/**\x0a\x09\x09 * Create region view event.\x0a\x09\x09 *\x0a\x09\x09 * Region view creation takes place in an event callback on the frame.\x0a\x09\x09 *\x0a\x09\x09 * @event wp.media.controller.Region#create\x0a\x09\x09 * @type {object}\x0a\x09\x09 * @property {object} view\x0a\x09\x09 */\x0a\x09\x09this.trigger( \x27create\x27, set );\x0a\x09\x09view = set.view;\x0a\x0a\x09\x09/**\x0a\x09\x09 * Render region view event.\x0a\x09\x09 *\x0a\x09\x09 * Region view creation takes place in an event callback on the frame.\x0a\x09\x09 *\x0a\x09\x09 * @event wp.media.controller.Region#render\x0a\x09\x09 * @type {object}\x0a\x09\x09 */\x0a\x09\x09this.trigger( \x27render\x27, view );\x0a\x09\x09if ( view ) {\x0a\x09\x09\x09this.set( view );\x0a\x09\x09}\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Get the region\x27s view.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @returns {wp.media.View}\x0a\x09 */\x0a\x09get: function() {\x0a\x09\x09return this.view.views.first( this.selector );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Set the region\x27s view as a subview of the frame.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @param {Array|Object} views\x0a\x09 * @param {Object} [options={}]\x0a\x09 * @returns {wp.Backbone.Subviews} Subviews is returned to allow chaining\x0a\x09 */\x0a\x09set: function( views, options ) {\x0a\x09\x09if ( options ) {\x0a\x09\x09\x09options.add = false;\x0a\x09\x09}\x0a\x09\x09return this.view.views.set( this.selector, views, options );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Trigger regional view events on the frame.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @param {string} event\x0a\x09 * @returns {undefined|wp.media.controller.Region} Returns itself to allow chaining.\x0a\x09 */\x0a\x09trigger: function( event ) {\x0a\x09\x09var base, args;\x0a\x0a\x09\x09if ( ! this._mode ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09args = _.toArray( arguments );\x0a\x09\x09base = this.id + \x27:\x27 + event;\x0a\x0a\x09\x09// Trigger `{this.id}:{event}:{this._mode}` event on the frame.\x0a\x09\x09args[0] = base + \x27:\x27 + this._mode;\x0a\x09\x09this.view.trigger.apply( this.view, args );\x0a\x0a\x09\x09// Trigger `{this.id}:{event}` event on the frame.\x0a\x09\x09args[0] = base;\x0a\x09\x09this.view.trigger.apply( this.view, args );\x0a\x09\x09return this;\x0a\x09}\x0a});\x0a\x0amodule.exports = Region;\x0a\x0a\x0a/***/ }),\x0a/* 32 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.controller.StateMachine\x0a *\x0a * A state machine keeps track of state. It is in one state at a time,\x0a * and can change from one state to another.\x0a *\x0a * States are stored as models in a Backbone collection.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @since 3.5.0\x0a *\x0a * @class\x0a * @augments Backbone.Model\x0a * @mixin\x0a * @mixes Backbone.Events\x0a *\x0a * @param {Array} states\x0a */\x0avar StateMachine = function( states ) {\x0a\x09// @todo This is dead code. The states collection gets created in media.view.Frame._createStates.\x0a\x09this.states = new Backbone.Collection( states );\x0a};\x0a\x0a// Use Backbone\x27s self-propagating `extend` inheritance method.\x0aStateMachine.extend = Backbone.Model.extend;\x0a\x0a_.extend( StateMachine.prototype, Backbone.Events,/** @lends wp.media.controller.StateMachine.prototype */{\x0a\x09/**\x0a\x09 * Fetch a state.\x0a\x09 *\x0a\x09 * If no `id` is provided, returns the active state.\x0a\x09 *\x0a\x09 * Implicitly creates states.\x0a\x09 *\x0a\x09 * Ensure that the `states` collection exists so the `StateMachine`\x0a\x09 *   can be used as a mixin.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @param {string} id\x0a\x09 * @returns {wp.media.controller.State} Returns a State model\x0a\x09 *   from the StateMachine collection\x0a\x09 */\x0a\x09state: function( id ) {\x0a\x09\x09this.states = this.states || new Backbone.Collection();\x0a\x0a\x09\x09// Default to the active state.\x0a\x09\x09id = id || this._state;\x0a\x0a\x09\x09if ( id && ! this.states.get( id ) ) {\x0a\x09\x09\x09this.states.add({ id: id });\x0a\x09\x09}\x0a\x09\x09return this.states.get( id );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Sets the active state.\x0a\x09 *\x0a\x09 * Bail if we\x27re trying to select the current state, if we haven\x27t\x0a\x09 * created the `states` collection, or are trying to select a state\x0a\x09 * that does not exist.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @param {string} id\x0a\x09 *\x0a\x09 * @fires wp.media.controller.State#deactivate\x0a\x09 * @fires wp.media.controller.State#activate\x0a\x09 *\x0a\x09 * @returns {wp.media.controller.StateMachine} Returns itself to allow chaining\x0a\x09 */\x0a\x09setState: function( id ) {\x0a\x09\x09var previous = this.state();\x0a\x0a\x09\x09if ( ( previous && id === previous.id ) || ! this.states || ! this.states.get( id ) ) {\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x0a\x09\x09if ( previous ) {\x0a\x09\x09\x09previous.trigger(\x27deactivate\x27);\x0a\x09\x09\x09this._lastState = previous.id;\x0a\x09\x09}\x0a\x0a\x09\x09this._state = id;\x0a\x09\x09this.state().trigger(\x27activate\x27);\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Returns the previous active state.\x0a\x09 *\x0a\x09 * Call the `state()` method with no parameters to retrieve the current\x0a\x09 * active state.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @returns {wp.media.controller.State} Returns a State model\x0a\x09 *    from the StateMachine collection\x0a\x09 */\x0a\x09lastState: function() {\x0a\x09\x09if ( this._lastState ) {\x0a\x09\x09\x09return this.state( this._lastState );\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0a// Map all event binding and triggering on a StateMachine to its `states` collection.\x0a_.each([ \x27on\x27, \x27off\x27, \x27trigger\x27 ], function( method ) {\x0a\x09/**\x0a\x09 * @function on\x0a\x09 * @memberOf wp.media.controller.StateMachine\x0a\x09 * @instance\x0a\x09 * @returns {wp.media.controller.StateMachine} Returns itself to allow chaining.\x0a\x09 */\x0a\x09/**\x0a\x09 * @function off\x0a\x09 * @memberOf wp.media.controller.StateMachine\x0a\x09 * @instance\x0a\x09 * @returns {wp.media.controller.StateMachine} Returns itself to allow chaining.\x0a\x09 */\x0a\x09/**\x0a\x09 * @function trigger\x0a\x09 * @memberOf wp.media.controller.StateMachine\x0a\x09 * @instance\x0a\x09 * @returns {wp.media.controller.StateMachine} Returns itself to allow chaining.\x0a\x09 */\x0a\x09StateMachine.prototype[ method ] = function() {\x0a\x09\x09// Ensure that the `states` collection exists so the `StateMachine`\x0a\x09\x09// can be used as a mixin.\x0a\x09\x09this.states = this.states || new Backbone.Collection();\x0a\x09\x09// Forward the method to the `states` collection.\x0a\x09\x09this.states[ method ].apply( this.states, arguments );\x0a\x09\x09return this;\x0a\x09};\x0a});\x0a\x0amodule.exports = StateMachine;\x0a\x0a\x0a/***/ }),\x0a/* 33 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.controller.State\x0a *\x0a * A state is a step in a workflow that when set will trigger the controllers\x0a * for the regions to be updated as specified in the frame.\x0a *\x0a * A state has an event-driven lifecycle:\x0a *\x0a *     \x27ready\x27      triggers when a state is added to a state machine\x27s collection.\x0a *     \x27activate\x27   triggers when a state is activated by a state machine.\x0a *     \x27deactivate\x27 triggers when a state is deactivated by a state machine.\x0a *     \x27reset\x27      is not triggered automatically. It should be invoked by the\x0a *                  proper controller to reset the state to its default.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments Backbone.Model\x0a */\x0avar State = Backbone.Model.extend(/** @lends wp.media.controller.State.prototype */{\x0a\x09/**\x0a\x09 * Constructor.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09constructor: function() {\x0a\x09\x09this.on( \x27activate\x27, this._preActivate, this );\x0a\x09\x09this.on( \x27activate\x27, this.activate, this );\x0a\x09\x09this.on( \x27activate\x27, this._postActivate, this );\x0a\x09\x09this.on( \x27deactivate\x27, this._deactivate, this );\x0a\x09\x09this.on( \x27deactivate\x27, this.deactivate, this );\x0a\x09\x09this.on( \x27reset\x27, this.reset, this );\x0a\x09\x09this.on( \x27ready\x27, this._ready, this );\x0a\x09\x09this.on( \x27ready\x27, this.ready, this );\x0a\x09\x09/**\x0a\x09\x09 * Call parent constructor with passed arguments\x0a\x09\x09 */\x0a\x09\x09Backbone.Model.apply( this, arguments );\x0a\x09\x09this.on( \x27change:menu\x27, this._updateMenu, this );\x0a\x09},\x0a\x09/**\x0a\x09 * Ready event callback.\x0a\x09 *\x0a\x09 * @abstract\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09ready: function() {},\x0a\x0a\x09/**\x0a\x09 * Activate event callback.\x0a\x09 *\x0a\x09 * @abstract\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09activate: function() {},\x0a\x0a\x09/**\x0a\x09 * Deactivate event callback.\x0a\x09 *\x0a\x09 * @abstract\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09deactivate: function() {},\x0a\x0a\x09/**\x0a\x09 * Reset event callback.\x0a\x09 *\x0a\x09 * @abstract\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09reset: function() {},\x0a\x0a\x09/**\x0a\x09 * @access private\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09_ready: function() {\x0a\x09\x09this._updateMenu();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @access private\x0a\x09 * @since 3.5.0\x0a\x09*/\x0a\x09_preActivate: function() {\x0a\x09\x09this.active = true;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @access private\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09_postActivate: function() {\x0a\x09\x09this.on( \x27change:menu\x27, this._menu, this );\x0a\x09\x09this.on( \x27change:titleMode\x27, this._title, this );\x0a\x09\x09this.on( \x27change:content\x27, this._content, this );\x0a\x09\x09this.on( \x27change:toolbar\x27, this._toolbar, this );\x0a\x0a\x09\x09this.frame.on( \x27title:render:default\x27, this._renderTitle, this );\x0a\x0a\x09\x09this._title();\x0a\x09\x09this._menu();\x0a\x09\x09this._toolbar();\x0a\x09\x09this._content();\x0a\x09\x09this._router();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @access private\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09_deactivate: function() {\x0a\x09\x09this.active = false;\x0a\x0a\x09\x09this.frame.off( \x27title:render:default\x27, this._renderTitle, this );\x0a\x0a\x09\x09this.off( \x27change:menu\x27, this._menu, this );\x0a\x09\x09this.off( \x27change:titleMode\x27, this._title, this );\x0a\x09\x09this.off( \x27change:content\x27, this._content, this );\x0a\x09\x09this.off( \x27change:toolbar\x27, this._toolbar, this );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @access private\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09_title: function() {\x0a\x09\x09this.frame.title.render( this.get(\x27titleMode\x27) || \x27default\x27 );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @access private\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09_renderTitle: function( view ) {\x0a\x09\x09view.$el.text( this.get(\x27title\x27) || \x27\x27 );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @access private\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09_router: function() {\x0a\x09\x09var router = this.frame.router,\x0a\x09\x09\x09mode = this.get(\x27router\x27),\x0a\x09\x09\x09view;\x0a\x0a\x09\x09this.frame.$el.toggleClass( \x27hide-router\x27, ! mode );\x0a\x09\x09if ( ! mode ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09this.frame.router.render( mode );\x0a\x0a\x09\x09view = router.get();\x0a\x09\x09if ( view && view.select ) {\x0a\x09\x09\x09view.select( this.frame.content.mode() );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @access private\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09_menu: function() {\x0a\x09\x09var menu = this.frame.menu,\x0a\x09\x09\x09mode = this.get(\x27menu\x27),\x0a\x09\x09\x09view;\x0a\x0a\x09\x09this.frame.$el.toggleClass( \x27hide-menu\x27, ! mode );\x0a\x09\x09if ( ! mode ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09menu.mode( mode );\x0a\x0a\x09\x09view = menu.get();\x0a\x09\x09if ( view && view.select ) {\x0a\x09\x09\x09view.select( this.id );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @access private\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09_updateMenu: function() {\x0a\x09\x09var previous = this.previous(\x27menu\x27),\x0a\x09\x09\x09menu = this.get(\x27menu\x27);\x0a\x0a\x09\x09if ( previous ) {\x0a\x09\x09\x09this.frame.off( \x27menu:render:\x27 + previous, this._renderMenu, this );\x0a\x09\x09}\x0a\x0a\x09\x09if ( menu ) {\x0a\x09\x09\x09this.frame.on( \x27menu:render:\x27 + menu, this._renderMenu, this );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Create a view in the media menu for the state.\x0a\x09 *\x0a\x09 * @access private\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @param {media.view.Menu} view The menu view.\x0a\x09 */\x0a\x09_renderMenu: function( view ) {\x0a\x09\x09var menuItem = this.get(\x27menuItem\x27),\x0a\x09\x09\x09title = this.get(\x27title\x27),\x0a\x09\x09\x09priority = this.get(\x27priority\x27);\x0a\x0a\x09\x09if ( ! menuItem && title ) {\x0a\x09\x09\x09menuItem = { text: title };\x0a\x0a\x09\x09\x09if ( priority ) {\x0a\x09\x09\x09\x09menuItem.priority = priority;\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! menuItem ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09view.set( this.id, menuItem );\x0a\x09}\x0a});\x0a\x0a_.each([\x27toolbar\x27,\x27content\x27], function( region ) {\x0a\x09/**\x0a\x09 * @access private\x0a\x09 */\x0a\x09State.prototype[ \x27_\x27 + region ] = function() {\x0a\x09\x09var mode = this.get( region );\x0a\x09\x09if ( mode ) {\x0a\x09\x09\x09this.frame[ region ].render( mode );\x0a\x09\x09}\x0a\x09};\x0a});\x0a\x0amodule.exports = State;\x0a\x0a\x0a/***/ }),\x0a/* 34 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.selectionSync\x0a *\x0a * Sync an attachments selection in a state with another state.\x0a *\x0a * Allows for selecting multiple images in the Add Media workflow, and then\x0a * switching to the Insert Gallery workflow while preserving the attachments selection.\x0a *\x0a * @memberOf wp.media\x0a *\x0a * @mixin\x0a */\x0avar selectionSync = {\x0a\x09/**\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09syncSelection: function() {\x0a\x09\x09var selection = this.get(\x27selection\x27),\x0a\x09\x09\x09manager = this.frame._selection;\x0a\x0a\x09\x09if ( ! this.get(\x27syncSelection\x27) || ! manager || ! selection ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// If the selection supports multiple items, validate the stored\x0a\x09\x09// attachments based on the new selection\x27s conditions. Record\x0a\x09\x09// the attachments that are not included; we\x27ll maintain a\x0a\x09\x09// reference to those. Other attachments are considered in flux.\x0a\x09\x09if ( selection.multiple ) {\x0a\x09\x09\x09selection.reset( [], { silent: true });\x0a\x09\x09\x09selection.validateAll( manager.attachments );\x0a\x09\x09\x09manager.difference = _.difference( manager.attachments.models, selection.models );\x0a\x09\x09}\x0a\x0a\x09\x09// Sync the selection\x27s single item with the master.\x0a\x09\x09selection.single( manager.single );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Record the currently active attachments, which is a combination\x0a\x09 * of the selection\x27s attachments and the set of selected\x0a\x09 * attachments that this specific selection considered invalid.\x0a\x09 * Reset the difference and record the single attachment.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09recordSelection: function() {\x0a\x09\x09var selection = this.get(\x27selection\x27),\x0a\x09\x09\x09manager = this.frame._selection;\x0a\x0a\x09\x09if ( ! this.get(\x27syncSelection\x27) || ! manager || ! selection ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09if ( selection.multiple ) {\x0a\x09\x09\x09manager.attachments.reset( selection.toArray().concat( manager.difference ) );\x0a\x09\x09\x09manager.difference = [];\x0a\x09\x09} else {\x0a\x09\x09\x09manager.attachments.add( selection.toArray() );\x0a\x09\x09}\x0a\x0a\x09\x09manager.single = selection._single;\x0a\x09}\x0a};\x0a\x0amodule.exports = selectionSync;\x0a\x0a\x0a/***/ }),\x0a/* 35 */\x0a/***/ (function(module, exports) {\x0a\x0avar l10n = wp.media.view.l10n,\x0a\x09getUserSetting = window.getUserSetting,\x0a\x09setUserSetting = window.setUserSetting,\x0a\x09Library;\x0a\x0a/**\x0a * wp.media.controller.Library\x0a *\x0a * A state for choosing an attachment or group of attachments from the media library.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a * @mixes media.selectionSync\x0a *\x0a * @param {object}                          [attributes]                         The attributes hash passed to the state.\x0a * @param {string}                          [attributes.id=library]              Unique identifier.\x0a * @param {string}                          [attributes.title=Media library]     Title for the state. Displays in the media menu and the frame\x27s title region.\x0a * @param {wp.media.model.Attachments}      [attributes.library]                 The attachments collection to browse.\x0a *                                                                               If one is not supplied, a collection of all attachments will be created.\x0a * @param {wp.media.model.Selection|object} [attributes.selection]               A collection to contain attachment selections within the state.\x0a *                                                                               If the \x27selection\x27 attribute is a plain JS object,\x0a *                                                                               a Selection will be created using its values as the selection instance\x27s `props` model.\x0a *                                                                               Otherwise, it will copy the library\x27s `props` model.\x0a * @param {boolean}                         [attributes.multiple=false]          Whether multi-select is enabled.\x0a * @param {string}                          [attributes.content=upload]          Initial mode for the content region.\x0a *                                                                               Overridden by persistent user setting if \x27contentUserSetting\x27 is true.\x0a * @param {string}                          [attributes.menu=default]            Initial mode for the menu region.\x0a * @param {string}                          [attributes.router=browse]           Initial mode for the router region.\x0a * @param {string}                          [attributes.toolbar=select]          Initial mode for the toolbar region.\x0a * @param {boolean}                         [attributes.searchable=true]         Whether the library is searchable.\x0a * @param {boolean|string}                  [attributes.filterable=false]        Whether the library is filterable, and if so what filters should be shown.\x0a *                                                                               Accepts \x27all\x27, \x27uploaded\x27, or \x27unattached\x27.\x0a * @param {boolean}                         [attributes.sortable=true]           Whether the Attachments should be sortable. Depends on the orderby property being set to menuOrder on the attachments collection.\x0a * @param {boolean}                         [attributes.autoSelect=true]         Whether an uploaded attachment should be automatically added to the selection.\x0a * @param {boolean}                         [attributes.describe=false]          Whether to offer UI to describe attachments - e.g. captioning images in a gallery.\x0a * @param {boolean}                         [attributes.contentUserSetting=true] Whether the content region\x27s mode should be set and persisted per user.\x0a * @param {boolean}                         [attributes.syncSelection=true]      Whether the Attachments selection should be persisted from the last state.\x0a */\x0aLibrary = wp.media.controller.State.extend(/** @lends wp.media.controller.Library.prototype */{\x0a\x09defaults: {\x0a\x09\x09id:                 \x27library\x27,\x0a\x09\x09title:              l10n.mediaLibraryTitle,\x0a\x09\x09multiple:           false,\x0a\x09\x09content:            \x27upload\x27,\x0a\x09\x09menu:               \x27default\x27,\x0a\x09\x09router:             \x27browse\x27,\x0a\x09\x09toolbar:            \x27select\x27,\x0a\x09\x09searchable:         true,\x0a\x09\x09filterable:         false,\x0a\x09\x09sortable:           true,\x0a\x09\x09autoSelect:         true,\x0a\x09\x09describe:           false,\x0a\x09\x09contentUserSetting: true,\x0a\x09\x09syncSelection:      true\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * If a library isn\x27t provided, query all media items.\x0a\x09 * If a selection instance isn\x27t provided, create one.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09initialize: function() {\x0a\x09\x09var selection = this.get(\x27selection\x27),\x0a\x09\x09\x09props;\x0a\x0a\x09\x09if ( ! this.get(\x27library\x27) ) {\x0a\x09\x09\x09this.set( \x27library\x27, wp.media.query() );\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! ( selection instanceof wp.media.model.Selection ) ) {\x0a\x09\x09\x09props = selection;\x0a\x0a\x09\x09\x09if ( ! props ) {\x0a\x09\x09\x09\x09props = this.get(\x27library\x27).props.toJSON();\x0a\x09\x09\x09\x09props = _.omit( props, \x27orderby\x27, \x27query\x27 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09this.set( \x27selection\x27, new wp.media.model.Selection( null, {\x0a\x09\x09\x09\x09multiple: this.get(\x27multiple\x27),\x0a\x09\x09\x09\x09props: props\x0a\x09\x09\x09}) );\x0a\x09\x09}\x0a\x0a\x09\x09this.resetDisplays();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09activate: function() {\x0a\x09\x09this.syncSelection();\x0a\x0a\x09\x09wp.Uploader.queue.on( \x27add\x27, this.uploading, this );\x0a\x0a\x09\x09this.get(\x27selection\x27).on( \x27add remove reset\x27, this.refreshContent, this );\x0a\x0a\x09\x09if ( this.get( \x27router\x27 ) && this.get(\x27contentUserSetting\x27) ) {\x0a\x09\x09\x09this.frame.on( \x27content:activate\x27, this.saveContentMode, this );\x0a\x09\x09\x09this.set( \x27content\x27, getUserSetting( \x27libraryContent\x27, this.get(\x27content\x27) ) );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09deactivate: function() {\x0a\x09\x09this.recordSelection();\x0a\x0a\x09\x09this.frame.off( \x27content:activate\x27, this.saveContentMode, this );\x0a\x0a\x09\x09// Unbind all event handlers that use this state as the context\x0a\x09\x09// from the selection.\x0a\x09\x09this.get(\x27selection\x27).off( null, null, this );\x0a\x0a\x09\x09wp.Uploader.queue.off( null, null, this );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Reset the library to its initial state.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09reset: function() {\x0a\x09\x09this.get(\x27selection\x27).reset();\x0a\x09\x09this.resetDisplays();\x0a\x09\x09this.refreshContent();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Reset the attachment display settings defaults to the site options.\x0a\x09 *\x0a\x09 * If site options don\x27t define them, fall back to a persistent user setting.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09resetDisplays: function() {\x0a\x09\x09var defaultProps = wp.media.view.settings.defaultProps;\x0a\x09\x09this._displays = [];\x0a\x09\x09this._defaultDisplaySettings = {\x0a\x09\x09\x09align: getUserSetting( \x27align\x27, defaultProps.align ) || \x27none\x27,\x0a\x09\x09\x09size:  getUserSetting( \x27imgsize\x27, defaultProps.size ) || \x27medium\x27,\x0a\x09\x09\x09link:  getUserSetting( \x27urlbutton\x27, defaultProps.link ) || \x27none\x27\x0a\x09\x09};\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Create a model to represent display settings (alignment, etc.) for an attachment.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @param {wp.media.model.Attachment} attachment\x0a\x09 * @returns {Backbone.Model}\x0a\x09 */\x0a\x09display: function( attachment ) {\x0a\x09\x09var displays = this._displays;\x0a\x0a\x09\x09if ( ! displays[ attachment.cid ] ) {\x0a\x09\x09\x09displays[ attachment.cid ] = new Backbone.Model( this.defaultDisplaySettings( attachment ) );\x0a\x09\x09}\x0a\x09\x09return displays[ attachment.cid ];\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Given an attachment, create attachment display settings properties.\x0a\x09 *\x0a\x09 * @since 3.6.0\x0a\x09 *\x0a\x09 * @param {wp.media.model.Attachment} attachment\x0a\x09 * @returns {Object}\x0a\x09 */\x0a\x09defaultDisplaySettings: function( attachment ) {\x0a\x09\x09var settings = _.clone( this._defaultDisplaySettings );\x0a\x0a\x09\x09if ( settings.canEmbed = this.canEmbed( attachment ) ) {\x0a\x09\x09\x09settings.link = \x27embed\x27;\x0a\x09\x09} else if ( ! this.isImageAttachment( attachment ) && settings.link === \x27none\x27 ) {\x0a\x09\x09\x09settings.link = \x27file\x27;\x0a\x09\x09}\x0a\x0a\x09\x09return settings;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Whether an attachment is image.\x0a\x09 *\x0a\x09 * @since 4.4.1\x0a\x09 *\x0a\x09 * @param {wp.media.model.Attachment} attachment\x0a\x09 * @returns {Boolean}\x0a\x09 */\x0a\x09isImageAttachment: function( attachment ) {\x0a\x09\x09// If uploading, we know the filename but not the mime type.\x0a\x09\x09if ( attachment.get(\x27uploading\x27) ) {\x0a\x09\x09\x09return /\x5c.(jpe?g|png|gif)$/i.test( attachment.get(\x27filename\x27) );\x0a\x09\x09}\x0a\x0a\x09\x09return attachment.get(\x27type\x27) === \x27image\x27;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Whether an attachment can be embedded (audio or video).\x0a\x09 *\x0a\x09 * @since 3.6.0\x0a\x09 *\x0a\x09 * @param {wp.media.model.Attachment} attachment\x0a\x09 * @returns {Boolean}\x0a\x09 */\x0a\x09canEmbed: function( attachment ) {\x0a\x09\x09// If uploading, we know the filename but not the mime type.\x0a\x09\x09if ( ! attachment.get(\x27uploading\x27) ) {\x0a\x09\x09\x09var type = attachment.get(\x27type\x27);\x0a\x09\x09\x09if ( type !== \x27audio\x27 && type !== \x27video\x27 ) {\x0a\x09\x09\x09\x09return false;\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09return _.contains( wp.media.view.settings.embedExts, attachment.get(\x27filename\x27).split(\x27.\x27).pop() );\x0a\x09},\x0a\x0a\x0a\x09/**\x0a\x09 * If the state is active, no items are selected, and the current\x0a\x09 * content mode is not an option in the state\x27s router (provided\x0a\x09 * the state has a router), reset the content mode to the default.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09refreshContent: function() {\x0a\x09\x09var selection = this.get(\x27selection\x27),\x0a\x09\x09\x09frame = this.frame,\x0a\x09\x09\x09router = frame.router.get(),\x0a\x09\x09\x09mode = frame.content.mode();\x0a\x0a\x09\x09if ( this.active && ! selection.length && router && ! router.get( mode ) ) {\x0a\x09\x09\x09this.frame.content.render( this.get(\x27content\x27) );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Callback handler when an attachment is uploaded.\x0a\x09 *\x0a\x09 * Switch to the Media Library if uploaded from the \x27Upload Files\x27 tab.\x0a\x09 *\x0a\x09 * Adds any uploading attachments to the selection.\x0a\x09 *\x0a\x09 * If the state only supports one attachment to be selected and multiple\x0a\x09 * attachments are uploaded, the last attachment in the upload queue will\x0a\x09 * be selected.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @param {wp.media.model.Attachment} attachment\x0a\x09 */\x0a\x09uploading: function( attachment ) {\x0a\x09\x09var content = this.frame.content;\x0a\x0a\x09\x09if ( \x27upload\x27 === content.mode() ) {\x0a\x09\x09\x09this.frame.content.mode(\x27browse\x27);\x0a\x09\x09}\x0a\x0a\x09\x09if ( this.get( \x27autoSelect\x27 ) ) {\x0a\x09\x09\x09this.get(\x27selection\x27).add( attachment );\x0a\x09\x09\x09this.frame.trigger( \x27library:selection:add\x27 );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Persist the mode of the content region as a user setting.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09saveContentMode: function() {\x0a\x09\x09if ( \x27browse\x27 !== this.get(\x27router\x27) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09var mode = this.frame.content.mode(),\x0a\x09\x09\x09view = this.frame.router.get();\x0a\x0a\x09\x09if ( view && view.get( mode ) ) {\x0a\x09\x09\x09setUserSetting( \x27libraryContent\x27, mode );\x0a\x09\x09}\x0a\x09}\x0a\x0a});\x0a\x0a// Make selectionSync available on any Media Library state.\x0a_.extend( Library.prototype, wp.media.selectionSync );\x0a\x0amodule.exports = Library;\x0a\x0a\x0a/***/ }),\x0a/* 36 */\x0a/***/ (function(module, exports) {\x0a\x0avar State = wp.media.controller.State,\x0a\x09Library = wp.media.controller.Library,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09ImageDetails;\x0a\x0a/**\x0a * wp.media.controller.ImageDetails\x0a *\x0a * A state for editing the attachment display settings of an image that\x27s been\x0a * inserted into the editor.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a *\x0a * @param {object}                    [attributes]                       The attributes hash passed to the state.\x0a * @param {string}                    [attributes.id=image-details]      Unique identifier.\x0a * @param {string}                    [attributes.title=Image Details]   Title for the state. Displays in the frame\x27s title region.\x0a * @param {wp.media.model.Attachment} attributes.image                   The image\x27s model.\x0a * @param {string|false}              [attributes.content=image-details] Initial mode for the content region.\x0a * @param {string|false}              [attributes.menu=false]            Initial mode for the menu region.\x0a * @param {string|false}              [attributes.router=false]          Initial mode for the router region.\x0a * @param {string|false}              [attributes.toolbar=image-details] Initial mode for the toolbar region.\x0a * @param {boolean}                   [attributes.editing=false]         Unused.\x0a * @param {int}                       [attributes.priority=60]           Unused.\x0a *\x0a * @todo This state inherits some defaults from media.controller.Library.prototype.defaults,\x0a *       however this may not do anything.\x0a */\x0aImageDetails = State.extend(/** @lends wp.media.controller.ImageDetails.prototype */{\x0a\x09defaults: _.defaults({\x0a\x09\x09id:       \x27image-details\x27,\x0a\x09\x09title:    l10n.imageDetailsTitle,\x0a\x09\x09content:  \x27image-details\x27,\x0a\x09\x09menu:     false,\x0a\x09\x09router:   false,\x0a\x09\x09toolbar:  \x27image-details\x27,\x0a\x09\x09editing:  false,\x0a\x09\x09priority: 60\x0a\x09}, Library.prototype.defaults ),\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 *\x0a\x09 * @param options Attributes\x0a\x09 */\x0a\x09initialize: function( options ) {\x0a\x09\x09this.image = options.image;\x0a\x09\x09State.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 */\x0a\x09activate: function() {\x0a\x09\x09this.frame.modal.$el.addClass(\x27image-details\x27);\x0a\x09}\x0a});\x0a\x0amodule.exports = ImageDetails;\x0a\x0a\x0a/***/ }),\x0a/* 37 */\x0a/***/ (function(module, exports) {\x0a\x0avar Library = wp.media.controller.Library,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09GalleryEdit;\x0a\x0a/**\x0a * wp.media.controller.GalleryEdit\x0a *\x0a * A state for editing a gallery\x27s images and settings.\x0a *\x0a * @since 3.5.0\x0a *\x0a * @class\x0a * @augments wp.media.controller.Library\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @param {Object}                     [attributes]                       The attributes hash passed to the state.\x0a * @param {string}                     [attributes.id=gallery-edit]       Unique identifier.\x0a * @param {string}                     [attributes.title=Edit Gallery]    Title for the state. Displays in the frame\x27s title region.\x0a * @param {wp.media.model.Attachments} [attributes.library]               The collection of attachments in the gallery.\x0a *                                                                        If one is not supplied, an empty media.model.Selection collection is created.\x0a * @param {boolean}                    [attributes.multiple=false]        Whether multi-select is enabled.\x0a * @param {boolean}                    [attributes.searchable=false]      Whether the library is searchable.\x0a * @param {boolean}                    [attributes.sortable=true]         Whether the Attachments should be sortable. Depends on the orderby property being set to menuOrder on the attachments collection.\x0a * @param {boolean}                    [attributes.date=true]             Whether to show the date filter in the browser\x27s toolbar.\x0a * @param {string|false}               [attributes.content=browse]        Initial mode for the content region.\x0a * @param {string|false}               [attributes.toolbar=image-details] Initial mode for the toolbar region.\x0a * @param {boolean}                    [attributes.describe=true]         Whether to offer UI to describe attachments - e.g. captioning images in a gallery.\x0a * @param {boolean}                    [attributes.displaySettings=true]  Whether to show the attachment display settings interface.\x0a * @param {boolean}                    [attributes.dragInfo=true]         Whether to show instructional text about the attachments being sortable.\x0a * @param {number}                     [attributes.idealColumnWidth=170]  The ideal column width in pixels for attachments.\x0a * @param {boolean}                    [attributes.editing=false]         Whether the gallery is being created, or editing an existing instance.\x0a * @param {number}                     [attributes.priority=60]           The priority for the state link in the media menu.\x0a * @param {boolean}                    [attributes.syncSelection=false]   Whether the Attachments selection should be persisted from the last state.\x0a *                                                                        Defaults to false for this state, because the library passed in  *is* the selection.\x0a * @param {view}                       [attributes.AttachmentView]        The single `Attachment` view to be used in the `Attachments`.\x0a *                                                                        If none supplied, defaults to wp.media.view.Attachment.EditLibrary.\x0a */\x0aGalleryEdit = Library.extend(/** @lends wp.media.controller.GalleryEdit.prototype */{\x0a\x09defaults: {\x0a\x09\x09id:               \x27gallery-edit\x27,\x0a\x09\x09title:            l10n.editGalleryTitle,\x0a\x09\x09multiple:         false,\x0a\x09\x09searchable:       false,\x0a\x09\x09sortable:         true,\x0a\x09\x09date:             false,\x0a\x09\x09display:          false,\x0a\x09\x09content:          \x27browse\x27,\x0a\x09\x09toolbar:          \x27gallery-edit\x27,\x0a\x09\x09describe:         true,\x0a\x09\x09displaySettings:  true,\x0a\x09\x09dragInfo:         true,\x0a\x09\x09idealColumnWidth: 170,\x0a\x09\x09editing:          false,\x0a\x09\x09priority:         60,\x0a\x09\x09syncSelection:    false\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Initializes the library.\x0a\x09 *\x0a\x09 * Creates a selection if a library isn\x27t supplied and creates an attachment\x0a\x09 * view if no attachment view is supplied.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @return {void}\x0a\x09 */\x0a\x09initialize: function() {\x0a\x09\x09// If we haven\x27t been provided a `library`, create a `Selection`.\x0a\x09\x09if ( ! this.get(\x27library\x27) ) {\x0a\x09\x09\x09this.set( \x27library\x27, new wp.media.model.Selection() );\x0a\x09\x09}\x0a\x0a\x09\x09// The single `Attachment` view to be used in the `Attachments` view.\x0a\x09\x09if ( ! this.get(\x27AttachmentView\x27) ) {\x0a\x09\x09\x09this.set( \x27AttachmentView\x27, wp.media.view.Attachment.EditLibrary );\x0a\x09\x09}\x0a\x0a\x09\x09Library.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Activates the library.\x0a\x09 *\x0a\x09 * Limits the library to images, watches for uploaded attachments. Watches for\x0a\x09 * the browse event on the frame and binds it to gallerySettings.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @return {void}\x0a\x09 */\x0a\x09activate: function() {\x0a\x09\x09var library = this.get(\x27library\x27);\x0a\x0a\x09\x09// Limit the library to images only.\x0a\x09\x09library.props.set( \x27type\x27, \x27image\x27 );\x0a\x0a\x09\x09// Watch for uploaded attachments.\x0a\x09\x09this.get(\x27library\x27).observe( wp.Uploader.queue );\x0a\x0a\x09\x09this.frame.on( \x27content:render:browse\x27, this.gallerySettings, this );\x0a\x0a\x09\x09Library.prototype.activate.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Deactivates the library.\x0a\x09 *\x0a\x09 * Stops watching for uploaded attachments and browse events.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @return {void}\x0a\x09 */\x0a\x09deactivate: function() {\x0a\x09\x09// Stop watching for uploaded attachments.\x0a\x09\x09this.get(\x27library\x27).unobserve( wp.Uploader.queue );\x0a\x0a\x09\x09this.frame.off( \x27content:render:browse\x27, this.gallerySettings, this );\x0a\x0a\x09\x09Library.prototype.deactivate.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Adds the gallery settings to the sidebar and adds a reverse button to the\x0a\x09 * toolbar.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @param {wp.media.view.Frame} browser The file browser.\x0a\x09 *\x0a\x09 * @return {void}\x0a\x09 */\x0a\x09gallerySettings: function( browser ) {\x0a\x09\x09if ( ! this.get(\x27displaySettings\x27) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09var library = this.get(\x27library\x27);\x0a\x0a\x09\x09if ( ! library || ! browser ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09library.gallery = library.gallery || new Backbone.Model();\x0a\x0a\x09\x09browser.sidebar.set({\x0a\x09\x09\x09gallery: new wp.media.view.Settings.Gallery({\x0a\x09\x09\x09\x09controller: this,\x0a\x09\x09\x09\x09model:      library.gallery,\x0a\x09\x09\x09\x09priority:   40\x0a\x09\x09\x09})\x0a\x09\x09});\x0a\x0a\x09\x09browser.toolbar.set( \x27reverse\x27, {\x0a\x09\x09\x09text:     l10n.reverseOrder,\x0a\x09\x09\x09priority: 80,\x0a\x0a\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09library.reset( library.toArray().reverse() );\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09}\x0a});\x0a\x0amodule.exports = GalleryEdit;\x0a\x0a\x0a/***/ }),\x0a/* 38 */\x0a/***/ (function(module, exports) {\x0a\x0avar Selection = wp.media.model.Selection,\x0a\x09Library = wp.media.controller.Library,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09GalleryAdd;\x0a\x0a/**\x0a * wp.media.controller.GalleryAdd\x0a *\x0a * A state for selecting more images to add to a gallery.\x0a *\x0a * @since 3.5.0\x0a *\x0a * @class\x0a * @augments wp.media.controller.Library\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a *\x0a * @memberof wp.media.controller\x0a *\x0a * @param {Object}                     [attributes]                         The attributes hash passed to the state.\x0a * @param {string}                     [attributes.id=gallery-library]      Unique identifier.\x0a * @param {string}                     [attributes.title=Add to Gallery]    Title for the state. Displays in the frame\x27s title region.\x0a * @param {boolean}                    [attributes.multiple=add]            Whether multi-select is enabled. @todo \x27add\x27 doesn\x27t seem do anything special, and gets used as a boolean.\x0a * @param {wp.media.model.Attachments} [attributes.library]                 The attachments collection to browse.\x0a *                                                                          If one is not supplied, a collection of all images will be created.\x0a * @param {boolean|string}             [attributes.filterable=uploaded]     Whether the library is filterable, and if so what filters should be shown.\x0a *                                                                          Accepts \x27all\x27, \x27uploaded\x27, or \x27unattached\x27.\x0a * @param {string}                     [attributes.menu=gallery]            Initial mode for the menu region.\x0a * @param {string}                     [attributes.content=upload]          Initial mode for the content region.\x0a *                                                                          Overridden by persistent user setting if \x27contentUserSetting\x27 is true.\x0a * @param {string}                     [attributes.router=browse]           Initial mode for the router region.\x0a * @param {string}                     [attributes.toolbar=gallery-add]     Initial mode for the toolbar region.\x0a * @param {boolean}                    [attributes.searchable=true]         Whether the library is searchable.\x0a * @param {boolean}                    [attributes.sortable=true]           Whether the Attachments should be sortable. Depends on the orderby property being set to menuOrder on the attachments collection.\x0a * @param {boolean}                    [attributes.autoSelect=true]         Whether an uploaded attachment should be automatically added to the selection.\x0a * @param {boolean}                    [attributes.contentUserSetting=true] Whether the content region\x27s mode should be set and persisted per user.\x0a * @param {number}                     [attributes.priority=100]            The priority for the state link in the media menu.\x0a * @param {boolean}                    [attributes.syncSelection=false]     Whether the Attachments selection should be persisted from the last state.\x0a *                                                                          Defaults to false because for this state, because the library of the Edit Gallery state is the selection.\x0a */\x0aGalleryAdd = Library.extend(/** @lends wp.media.controller.GalleryAdd.prototype */{\x0a\x09defaults: _.defaults({\x0a\x09\x09id:            \x27gallery-library\x27,\x0a\x09\x09title:         l10n.addToGalleryTitle,\x0a\x09\x09multiple:      \x27add\x27,\x0a\x09\x09filterable:    \x27uploaded\x27,\x0a\x09\x09menu:          \x27gallery\x27,\x0a\x09\x09toolbar:       \x27gallery-add\x27,\x0a\x09\x09priority:      100,\x0a\x09\x09syncSelection: false\x0a\x09}, Library.prototype.defaults ),\x0a\x0a\x09/**\x0a\x09 * Initializes the library. Creates a library of images if a library isn\x27t supplied.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09initialize: function() {\x0a\x09\x09if ( ! this.get(\x27library\x27) ) {\x0a\x09\x09\x09this.set( \x27library\x27, wp.media.query({ type: \x27image\x27 }) );\x0a\x09\x09}\x0a\x0a\x09\x09Library.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Activates the library.\x0a\x09 *\x0a\x09 * Removes all event listeners if in edit mode. Creates a validator to check an attachment.\x0a\x09 * Resets library and re-enables event listeners. Activates edit mode. Calls the parent\x27s activate method.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09activate: function() {\x0a\x09\x09var library = this.get(\x27library\x27),\x0a\x09\x09\x09edit    = this.frame.state(\x27gallery-edit\x27).get(\x27library\x27);\x0a\x0a\x09\x09if ( this.editLibrary && this.editLibrary !== edit ) {\x0a\x09\x09\x09library.unobserve( this.editLibrary );\x0a\x09\x09}\x0a\x0a\x09\x09/*\x0a\x09\x09 * Accept attachments that exist in the original library but\x0a\x09\x09 * that do not exist in gallery\x27s library yet.\x0a\x09\x09 */\x0a\x09\x09library.validator = function( attachment ) {\x0a\x09\x09\x09return !! this.mirroring.get( attachment.cid ) && ! edit.get( attachment.cid ) && Selection.prototype.validator.apply( this, arguments );\x0a\x09\x09};\x0a\x0a\x09\x09/*\x0a\x09\x09 * Reset the library to ensure that all attachments are re-added\x0a\x09\x09 * to the collection. Do so silently, as calling `observe` will\x0a\x09\x09 * trigger the `reset` event.\x0a\x09\x09 */\x0a\x09\x09library.reset( library.mirroring.models, { silent: true });\x0a\x09\x09library.observe( edit );\x0a\x09\x09this.editLibrary = edit;\x0a\x0a\x09\x09Library.prototype.activate.apply( this, arguments );\x0a\x09}\x0a});\x0a\x0amodule.exports = GalleryAdd;\x0a\x0a\x0a/***/ }),\x0a/* 39 */\x0a/***/ (function(module, exports) {\x0a\x0avar Library = wp.media.controller.Library,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09$ = jQuery,\x0a\x09CollectionEdit;\x0a\x0a/**\x0a * wp.media.controller.CollectionEdit\x0a *\x0a * A state for editing a collection, which is used by audio and video playlists,\x0a * and can be used for other collections.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.Library\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a *\x0a * @param {object}                     [attributes]                      The attributes hash passed to the state.\x0a * @param {string}                     attributes.title                  Title for the state. Displays in the media menu and the frame\x27s title region.\x0a * @param {wp.media.model.Attachments} [attributes.library]              The attachments collection to edit.\x0a *                                                                       If one is not supplied, an empty media.model.Selection collection is created.\x0a * @param {boolean}                    [attributes.multiple=false]       Whether multi-select is enabled.\x0a * @param {string}                     [attributes.content=browse]       Initial mode for the content region.\x0a * @param {string}                     attributes.menu                   Initial mode for the menu region. @todo this needs a better explanation.\x0a * @param {boolean}                    [attributes.searchable=false]     Whether the library is searchable.\x0a * @param {boolean}                    [attributes.sortable=true]        Whether the Attachments should be sortable. Depends on the orderby property being set to menuOrder on the attachments collection.\x0a * @param {boolean}                    [attributes.date=true]            Whether to show the date filter in the browser\x27s toolbar.\x0a * @param {boolean}                    [attributes.describe=true]        Whether to offer UI to describe the attachments - e.g. captioning images in a gallery.\x0a * @param {boolean}                    [attributes.dragInfo=true]        Whether to show instructional text about the attachments being sortable.\x0a * @param {boolean}                    [attributes.dragInfoText]         Instructional text about the attachments being sortable.\x0a * @param {int}                        [attributes.idealColumnWidth=170] The ideal column width in pixels for attachments.\x0a * @param {boolean}                    [attributes.editing=false]        Whether the gallery is being created, or editing an existing instance.\x0a * @param {int}                        [attributes.priority=60]          The priority for the state link in the media menu.\x0a * @param {boolean}                    [attributes.syncSelection=false]  Whether the Attachments selection should be persisted from the last state.\x0a *                                                                       Defaults to false for this state, because the library passed in  *is* the selection.\x0a * @param {view}                       [attributes.SettingsView]         The view to edit the collection instance settings (e.g. Playlist settings with \x22Show tracklist\x22 checkbox).\x0a * @param {view}                       [attributes.AttachmentView]       The single `Attachment` view to be used in the `Attachments`.\x0a *                                                                       If none supplied, defaults to wp.media.view.Attachment.EditLibrary.\x0a * @param {string}                     attributes.type                   The collection\x27s media type. (e.g. \x27video\x27).\x0a * @param {string}                     attributes.collectionType         The collection type. (e.g. \x27playlist\x27).\x0a */\x0aCollectionEdit = Library.extend(/** @lends wp.media.controller.CollectionEdit.prototype */{\x0a\x09defaults: {\x0a\x09\x09multiple:         false,\x0a\x09\x09sortable:         true,\x0a\x09\x09date:             false,\x0a\x09\x09searchable:       false,\x0a\x09\x09content:          \x27browse\x27,\x0a\x09\x09describe:         true,\x0a\x09\x09dragInfo:         true,\x0a\x09\x09idealColumnWidth: 170,\x0a\x09\x09editing:          false,\x0a\x09\x09priority:         60,\x0a\x09\x09SettingsView:     false,\x0a\x09\x09syncSelection:    false\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 */\x0a\x09initialize: function() {\x0a\x09\x09var collectionType = this.get(\x27collectionType\x27);\x0a\x0a\x09\x09if ( \x27video\x27 === this.get( \x27type\x27 ) ) {\x0a\x09\x09\x09collectionType = \x27video-\x27 + collectionType;\x0a\x09\x09}\x0a\x0a\x09\x09this.set( \x27id\x27, collectionType + \x27-edit\x27 );\x0a\x09\x09this.set( \x27toolbar\x27, collectionType + \x27-edit\x27 );\x0a\x0a\x09\x09// If we haven\x27t been provided a `library`, create a `Selection`.\x0a\x09\x09if ( ! this.get(\x27library\x27) ) {\x0a\x09\x09\x09this.set( \x27library\x27, new wp.media.model.Selection() );\x0a\x09\x09}\x0a\x09\x09// The single `Attachment` view to be used in the `Attachments` view.\x0a\x09\x09if ( ! this.get(\x27AttachmentView\x27) ) {\x0a\x09\x09\x09this.set( \x27AttachmentView\x27, wp.media.view.Attachment.EditLibrary );\x0a\x09\x09}\x0a\x09\x09Library.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 */\x0a\x09activate: function() {\x0a\x09\x09var library = this.get(\x27library\x27);\x0a\x0a\x09\x09// Limit the library to images only.\x0a\x09\x09library.props.set( \x27type\x27, this.get( \x27type\x27 ) );\x0a\x0a\x09\x09// Watch for uploaded attachments.\x0a\x09\x09this.get(\x27library\x27).observe( wp.Uploader.queue );\x0a\x0a\x09\x09this.frame.on( \x27content:render:browse\x27, this.renderSettings, this );\x0a\x0a\x09\x09Library.prototype.activate.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 */\x0a\x09deactivate: function() {\x0a\x09\x09// Stop watching for uploaded attachments.\x0a\x09\x09this.get(\x27library\x27).unobserve( wp.Uploader.queue );\x0a\x0a\x09\x09this.frame.off( \x27content:render:browse\x27, this.renderSettings, this );\x0a\x0a\x09\x09Library.prototype.deactivate.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Render the collection embed settings view in the browser sidebar.\x0a\x09 *\x0a\x09 * @todo This is against the pattern elsewhere in media. Typically the frame\x0a\x09 *       is responsible for adding region mode callbacks. Explain.\x0a\x09 *\x0a\x09 * @since 3.9.0\x0a\x09 *\x0a\x09 * @param {wp.media.view.attachmentsBrowser} The attachments browser view.\x0a\x09 */\x0a\x09renderSettings: function( attachmentsBrowserView ) {\x0a\x09\x09var library = this.get(\x27library\x27),\x0a\x09\x09\x09collectionType = this.get(\x27collectionType\x27),\x0a\x09\x09\x09dragInfoText = this.get(\x27dragInfoText\x27),\x0a\x09\x09\x09SettingsView = this.get(\x27SettingsView\x27),\x0a\x09\x09\x09obj = {};\x0a\x0a\x09\x09if ( ! library || ! attachmentsBrowserView ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09library[ collectionType ] = library[ collectionType ] || new Backbone.Model();\x0a\x0a\x09\x09obj[ collectionType ] = new SettingsView({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09model:      library[ collectionType ],\x0a\x09\x09\x09priority:   40\x0a\x09\x09});\x0a\x0a\x09\x09attachmentsBrowserView.sidebar.set( obj );\x0a\x0a\x09\x09if ( dragInfoText ) {\x0a\x09\x09\x09attachmentsBrowserView.toolbar.set( \x27dragInfo\x27, new wp.media.View({\x0a\x09\x09\x09\x09el: $( \x27\x3cdiv class=\x22instructions\x22\x3e\x27 + dragInfoText + \x27\x3c/div\x3e\x27 )[0],\x0a\x09\x09\x09\x09priority: -40\x0a\x09\x09\x09}) );\x0a\x09\x09}\x0a\x0a\x09\x09// Add the \x27Reverse order\x27 button to the toolbar.\x0a\x09\x09attachmentsBrowserView.toolbar.set( \x27reverse\x27, {\x0a\x09\x09\x09text:     l10n.reverseOrder,\x0a\x09\x09\x09priority: 80,\x0a\x0a\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09library.reset( library.toArray().reverse() );\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09}\x0a});\x0a\x0amodule.exports = CollectionEdit;\x0a\x0a\x0a/***/ }),\x0a/* 40 */\x0a/***/ (function(module, exports) {\x0a\x0avar Selection = wp.media.model.Selection,\x0a\x09Library = wp.media.controller.Library,\x0a\x09CollectionAdd;\x0a\x0a/**\x0a * wp.media.controller.CollectionAdd\x0a *\x0a * A state for adding attachments to a collection (e.g. video playlist).\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.Library\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a *\x0a * @param {object}                     [attributes]                         The attributes hash passed to the state.\x0a * @param {string}                     [attributes.id=library]      Unique identifier.\x0a * @param {string}                     attributes.title                    Title for the state. Displays in the frame\x27s title region.\x0a * @param {boolean}                    [attributes.multiple=add]            Whether multi-select is enabled. @todo \x27add\x27 doesn\x27t seem do anything special, and gets used as a boolean.\x0a * @param {wp.media.model.Attachments} [attributes.library]                 The attachments collection to browse.\x0a *                                                                          If one is not supplied, a collection of attachments of the specified type will be created.\x0a * @param {boolean|string}             [attributes.filterable=uploaded]     Whether the library is filterable, and if so what filters should be shown.\x0a *                                                                          Accepts \x27all\x27, \x27uploaded\x27, or \x27unattached\x27.\x0a * @param {string}                     [attributes.menu=gallery]            Initial mode for the menu region.\x0a * @param {string}                     [attributes.content=upload]          Initial mode for the content region.\x0a *                                                                          Overridden by persistent user setting if \x27contentUserSetting\x27 is true.\x0a * @param {string}                     [attributes.router=browse]           Initial mode for the router region.\x0a * @param {string}                     [attributes.toolbar=gallery-add]     Initial mode for the toolbar region.\x0a * @param {boolean}                    [attributes.searchable=true]         Whether the library is searchable.\x0a * @param {boolean}                    [attributes.sortable=true]           Whether the Attachments should be sortable. Depends on the orderby property being set to menuOrder on the attachments collection.\x0a * @param {boolean}                    [attributes.autoSelect=true]         Whether an uploaded attachment should be automatically added to the selection.\x0a * @param {boolean}                    [attributes.contentUserSetting=true] Whether the content region\x27s mode should be set and persisted per user.\x0a * @param {int}                        [attributes.priority=100]            The priority for the state link in the media menu.\x0a * @param {boolean}                    [attributes.syncSelection=false]     Whether the Attachments selection should be persisted from the last state.\x0a *                                                                          Defaults to false because for this state, because the library of the Edit Gallery state is the selection.\x0a * @param {string}                     attributes.type                   The collection\x27s media type. (e.g. \x27video\x27).\x0a * @param {string}                     attributes.collectionType         The collection type. (e.g. \x27playlist\x27).\x0a */\x0aCollectionAdd = Library.extend(/** @lends wp.media.controller.CollectionAdd.prototype */{\x0a\x09defaults: _.defaults( {\x0a\x09\x09// Selection defaults. @see media.model.Selection\x0a\x09\x09multiple:      \x27add\x27,\x0a\x09\x09// Attachments browser defaults. @see media.view.AttachmentsBrowser\x0a\x09\x09filterable:    \x27uploaded\x27,\x0a\x0a\x09\x09priority:      100,\x0a\x09\x09syncSelection: false\x0a\x09}, Library.prototype.defaults ),\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 */\x0a\x09initialize: function() {\x0a\x09\x09var collectionType = this.get(\x27collectionType\x27);\x0a\x0a\x09\x09if ( \x27video\x27 === this.get( \x27type\x27 ) ) {\x0a\x09\x09\x09collectionType = \x27video-\x27 + collectionType;\x0a\x09\x09}\x0a\x0a\x09\x09this.set( \x27id\x27, collectionType + \x27-library\x27 );\x0a\x09\x09this.set( \x27toolbar\x27, collectionType + \x27-add\x27 );\x0a\x09\x09this.set( \x27menu\x27, collectionType );\x0a\x0a\x09\x09// If we haven\x27t been provided a `library`, create a `Selection`.\x0a\x09\x09if ( ! this.get(\x27library\x27) ) {\x0a\x09\x09\x09this.set( \x27library\x27, wp.media.query({ type: this.get(\x27type\x27) }) );\x0a\x09\x09}\x0a\x09\x09Library.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 */\x0a\x09activate: function() {\x0a\x09\x09var library = this.get(\x27library\x27),\x0a\x09\x09\x09editLibrary = this.get(\x27editLibrary\x27),\x0a\x09\x09\x09edit = this.frame.state( this.get(\x27collectionType\x27) + \x27-edit\x27 ).get(\x27library\x27);\x0a\x0a\x09\x09if ( editLibrary && editLibrary !== edit ) {\x0a\x09\x09\x09library.unobserve( editLibrary );\x0a\x09\x09}\x0a\x0a\x09\x09// Accepts attachments that exist in the original library and\x0a\x09\x09// that do not exist in gallery\x27s library.\x0a\x09\x09library.validator = function( attachment ) {\x0a\x09\x09\x09return !! this.mirroring.get( attachment.cid ) && ! edit.get( attachment.cid ) && Selection.prototype.validator.apply( this, arguments );\x0a\x09\x09};\x0a\x0a\x09\x09// Reset the library to ensure that all attachments are re-added\x0a\x09\x09// to the collection. Do so silently, as calling `observe` will\x0a\x09\x09// trigger the `reset` event.\x0a\x09\x09library.reset( library.mirroring.models, { silent: true });\x0a\x09\x09library.observe( edit );\x0a\x09\x09this.set(\x27editLibrary\x27, edit);\x0a\x0a\x09\x09Library.prototype.activate.apply( this, arguments );\x0a\x09}\x0a});\x0a\x0amodule.exports = CollectionAdd;\x0a\x0a\x0a/***/ }),\x0a/* 41 */\x0a/***/ (function(module, exports) {\x0a\x0avar Attachment = wp.media.model.Attachment,\x0a\x09Library = wp.media.controller.Library,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09FeaturedImage;\x0a\x0a/**\x0a * wp.media.controller.FeaturedImage\x0a *\x0a * A state for selecting a featured image for a post.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.Library\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a *\x0a * @param {object}                     [attributes]                          The attributes hash passed to the state.\x0a * @param {string}                     [attributes.id=featured-image]        Unique identifier.\x0a * @param {string}                     [attributes.title=Set Featured Image] Title for the state. Displays in the media menu and the frame\x27s title region.\x0a * @param {wp.media.model.Attachments} [attributes.library]                  The attachments collection to browse.\x0a *                                                                           If one is not supplied, a collection of all images will be created.\x0a * @param {boolean}                    [attributes.multiple=false]           Whether multi-select is enabled.\x0a * @param {string}                     [attributes.content=upload]           Initial mode for the content region.\x0a *                                                                           Overridden by persistent user setting if \x27contentUserSetting\x27 is true.\x0a * @param {string}                     [attributes.menu=default]             Initial mode for the menu region.\x0a * @param {string}                     [attributes.router=browse]            Initial mode for the router region.\x0a * @param {string}                     [attributes.toolbar=featured-image]   Initial mode for the toolbar region.\x0a * @param {int}                        [attributes.priority=60]              The priority for the state link in the media menu.\x0a * @param {boolean}                    [attributes.searchable=true]          Whether the library is searchable.\x0a * @param {boolean|string}             [attributes.filterable=false]         Whether the library is filterable, and if so what filters should be shown.\x0a *                                                                           Accepts \x27all\x27, \x27uploaded\x27, or \x27unattached\x27.\x0a * @param {boolean}                    [attributes.sortable=true]            Whether the Attachments should be sortable. Depends on the orderby property being set to menuOrder on the attachments collection.\x0a * @param {boolean}                    [attributes.autoSelect=true]          Whether an uploaded attachment should be automatically added to the selection.\x0a * @param {boolean}                    [attributes.describe=false]           Whether to offer UI to describe attachments - e.g. captioning images in a gallery.\x0a * @param {boolean}                    [attributes.contentUserSetting=true]  Whether the content region\x27s mode should be set and persisted per user.\x0a * @param {boolean}                    [attributes.syncSelection=true]       Whether the Attachments selection should be persisted from the last state.\x0a */\x0aFeaturedImage = Library.extend(/** @lends wp.media.controller.FeaturedImage.prototype */{\x0a\x09defaults: _.defaults({\x0a\x09\x09id:            \x27featured-image\x27,\x0a\x09\x09title:         l10n.setFeaturedImageTitle,\x0a\x09\x09multiple:      false,\x0a\x09\x09filterable:    \x27uploaded\x27,\x0a\x09\x09toolbar:       \x27featured-image\x27,\x0a\x09\x09priority:      60,\x0a\x09\x09syncSelection: true\x0a\x09}, Library.prototype.defaults ),\x0a\x0a\x09/**\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09initialize: function() {\x0a\x09\x09var library, comparator;\x0a\x0a\x09\x09// If we haven\x27t been provided a `library`, create a `Selection`.\x0a\x09\x09if ( ! this.get(\x27library\x27) ) {\x0a\x09\x09\x09this.set( \x27library\x27, wp.media.query({ type: \x27image\x27 }) );\x0a\x09\x09}\x0a\x0a\x09\x09Library.prototype.initialize.apply( this, arguments );\x0a\x0a\x09\x09library    = this.get(\x27library\x27);\x0a\x09\x09comparator = library.comparator;\x0a\x0a\x09\x09// Overload the library\x27s comparator to push items that are not in\x0a\x09\x09// the mirrored query to the front of the aggregate collection.\x0a\x09\x09library.comparator = function( a, b ) {\x0a\x09\x09\x09var aInQuery = !! this.mirroring.get( a.cid ),\x0a\x09\x09\x09\x09bInQuery = !! this.mirroring.get( b.cid );\x0a\x0a\x09\x09\x09if ( ! aInQuery && bInQuery ) {\x0a\x09\x09\x09\x09return -1;\x0a\x09\x09\x09} else if ( aInQuery && ! bInQuery ) {\x0a\x09\x09\x09\x09return 1;\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09return comparator.apply( this, arguments );\x0a\x09\x09\x09}\x0a\x09\x09};\x0a\x0a\x09\x09// Add all items in the selection to the library, so any featured\x0a\x09\x09// images that are not initially loaded still appear.\x0a\x09\x09library.observe( this.get(\x27selection\x27) );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09activate: function() {\x0a\x09\x09this.updateSelection();\x0a\x09\x09this.frame.on( \x27open\x27, this.updateSelection, this );\x0a\x0a\x09\x09Library.prototype.activate.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09deactivate: function() {\x0a\x09\x09this.frame.off( \x27open\x27, this.updateSelection, this );\x0a\x0a\x09\x09Library.prototype.deactivate.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.5.0\x0a\x09 */\x0a\x09updateSelection: function() {\x0a\x09\x09var selection = this.get(\x27selection\x27),\x0a\x09\x09\x09id = wp.media.view.settings.post.featuredImageId,\x0a\x09\x09\x09attachment;\x0a\x0a\x09\x09if ( \x27\x27 !== id && -1 !== id ) {\x0a\x09\x09\x09attachment = Attachment.get( id );\x0a\x09\x09\x09attachment.fetch();\x0a\x09\x09}\x0a\x0a\x09\x09selection.reset( attachment ? [ attachment ] : [] );\x0a\x09}\x0a});\x0a\x0amodule.exports = FeaturedImage;\x0a\x0a\x0a/***/ }),\x0a/* 42 */\x0a/***/ (function(module, exports) {\x0a\x0avar Library = wp.media.controller.Library,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09ReplaceImage;\x0a\x0a/**\x0a * wp.media.controller.ReplaceImage\x0a *\x0a * A state for replacing an image.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.Library\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a *\x0a * @param {object}                     [attributes]                         The attributes hash passed to the state.\x0a * @param {string}                     [attributes.id=replace-image]        Unique identifier.\x0a * @param {string}                     [attributes.title=Replace Image]     Title for the state. Displays in the media menu and the frame\x27s title region.\x0a * @param {wp.media.model.Attachments} [attributes.library]                 The attachments collection to browse.\x0a *                                                                          If one is not supplied, a collection of all images will be created.\x0a * @param {boolean}                    [attributes.multiple=false]          Whether multi-select is enabled.\x0a * @param {string}                     [attributes.content=upload]          Initial mode for the content region.\x0a *                                                                          Overridden by persistent user setting if \x27contentUserSetting\x27 is true.\x0a * @param {string}                     [attributes.menu=default]            Initial mode for the menu region.\x0a * @param {string}                     [attributes.router=browse]           Initial mode for the router region.\x0a * @param {string}                     [attributes.toolbar=replace]         Initial mode for the toolbar region.\x0a * @param {int}                        [attributes.priority=60]             The priority for the state link in the media menu.\x0a * @param {boolean}                    [attributes.searchable=true]         Whether the library is searchable.\x0a * @param {boolean|string}             [attributes.filterable=uploaded]     Whether the library is filterable, and if so what filters should be shown.\x0a *                                                                          Accepts \x27all\x27, \x27uploaded\x27, or \x27unattached\x27.\x0a * @param {boolean}                    [attributes.sortable=true]           Whether the Attachments should be sortable. Depends on the orderby property being set to menuOrder on the attachments collection.\x0a * @param {boolean}                    [attributes.autoSelect=true]         Whether an uploaded attachment should be automatically added to the selection.\x0a * @param {boolean}                    [attributes.describe=false]          Whether to offer UI to describe attachments - e.g. captioning images in a gallery.\x0a * @param {boolean}                    [attributes.contentUserSetting=true] Whether the content region\x27s mode should be set and persisted per user.\x0a * @param {boolean}                    [attributes.syncSelection=true]      Whether the Attachments selection should be persisted from the last state.\x0a */\x0aReplaceImage = Library.extend(/** @lends wp.media.controller.ReplaceImage.prototype */{\x0a\x09defaults: _.defaults({\x0a\x09\x09id:            \x27replace-image\x27,\x0a\x09\x09title:         l10n.replaceImageTitle,\x0a\x09\x09multiple:      false,\x0a\x09\x09filterable:    \x27uploaded\x27,\x0a\x09\x09toolbar:       \x27replace\x27,\x0a\x09\x09menu:          false,\x0a\x09\x09priority:      60,\x0a\x09\x09syncSelection: true\x0a\x09}, Library.prototype.defaults ),\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 *\x0a\x09 * @param options\x0a\x09 */\x0a\x09initialize: function( options ) {\x0a\x09\x09var library, comparator;\x0a\x0a\x09\x09this.image = options.image;\x0a\x09\x09// If we haven\x27t been provided a `library`, create a `Selection`.\x0a\x09\x09if ( ! this.get(\x27library\x27) ) {\x0a\x09\x09\x09this.set( \x27library\x27, wp.media.query({ type: \x27image\x27 }) );\x0a\x09\x09}\x0a\x0a\x09\x09Library.prototype.initialize.apply( this, arguments );\x0a\x0a\x09\x09library    = this.get(\x27library\x27);\x0a\x09\x09comparator = library.comparator;\x0a\x0a\x09\x09// Overload the library\x27s comparator to push items that are not in\x0a\x09\x09// the mirrored query to the front of the aggregate collection.\x0a\x09\x09library.comparator = function( a, b ) {\x0a\x09\x09\x09var aInQuery = !! this.mirroring.get( a.cid ),\x0a\x09\x09\x09\x09bInQuery = !! this.mirroring.get( b.cid );\x0a\x0a\x09\x09\x09if ( ! aInQuery && bInQuery ) {\x0a\x09\x09\x09\x09return -1;\x0a\x09\x09\x09} else if ( aInQuery && ! bInQuery ) {\x0a\x09\x09\x09\x09return 1;\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09return comparator.apply( this, arguments );\x0a\x09\x09\x09}\x0a\x09\x09};\x0a\x0a\x09\x09// Add all items in the selection to the library, so any featured\x0a\x09\x09// images that are not initially loaded still appear.\x0a\x09\x09library.observe( this.get(\x27selection\x27) );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 */\x0a\x09activate: function() {\x0a\x09\x09this.updateSelection();\x0a\x09\x09Library.prototype.activate.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 */\x0a\x09updateSelection: function() {\x0a\x09\x09var selection = this.get(\x27selection\x27),\x0a\x09\x09\x09attachment = this.image.attachment;\x0a\x0a\x09\x09selection.reset( attachment ? [ attachment ] : [] );\x0a\x09}\x0a});\x0a\x0amodule.exports = ReplaceImage;\x0a\x0a\x0a/***/ }),\x0a/* 43 */\x0a/***/ (function(module, exports) {\x0a\x0avar l10n = wp.media.view.l10n,\x0a\x09EditImage;\x0a\x0a/**\x0a * wp.media.controller.EditImage\x0a *\x0a * A state for editing (cropping, etc.) an image.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a *\x0a * @param {object}                    attributes                      The attributes hash passed to the state.\x0a * @param {wp.media.model.Attachment} attributes.model                The attachment.\x0a * @param {string}                    [attributes.id=edit-image]      Unique identifier.\x0a * @param {string}                    [attributes.title=Edit Image]   Title for the state. Displays in the media menu and the frame\x27s title region.\x0a * @param {string}                    [attributes.content=edit-image] Initial mode for the content region.\x0a * @param {string}                    [attributes.toolbar=edit-image] Initial mode for the toolbar region.\x0a * @param {string}                    [attributes.menu=false]         Initial mode for the menu region.\x0a * @param {string}                    [attributes.url]                Unused. @todo Consider removal.\x0a */\x0aEditImage = wp.media.controller.State.extend(/** @lends wp.media.controller.EditImage.prototype */{\x0a\x09defaults: {\x0a\x09\x09id:      \x27edit-image\x27,\x0a\x09\x09title:   l10n.editImage,\x0a\x09\x09menu:    false,\x0a\x09\x09toolbar: \x27edit-image\x27,\x0a\x09\x09content: \x27edit-image\x27,\x0a\x09\x09url:     \x27\x27\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Activates a frame for editing a featured image.\x0a\x09 *\x0a\x09 * @since 3.9.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09activate: function() {\x0a\x09\x09this.frame.on( \x27toolbar:render:edit-image\x27, _.bind( this.toolbar, this ) );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Deactivates a frame for editing a featured image.\x0a\x09 *\x0a\x09 * @since 3.9.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09deactivate: function() {\x0a\x09\x09this.frame.off( \x27toolbar:render:edit-image\x27 );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Adds a toolbar with a back button.\x0a\x09 *\x0a\x09 * When the back button is pressed it checks whether there is a previous state.\x0a\x09 * In case there is a previous state it sets that previous state otherwise it\x0a\x09 * closes the frame.\x0a\x09 *\x0a\x09 * @since 3.9.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09toolbar: function() {\x0a\x09\x09var frame = this.frame,\x0a\x09\x09\x09lastState = frame.lastState(),\x0a\x09\x09\x09previous = lastState && lastState.id;\x0a\x0a\x09\x09frame.toolbar.set( new wp.media.view.Toolbar({\x0a\x09\x09\x09controller: frame,\x0a\x09\x09\x09items: {\x0a\x09\x09\x09\x09back: {\x0a\x09\x09\x09\x09\x09style: \x27primary\x27,\x0a\x09\x09\x09\x09\x09text:     l10n.back,\x0a\x09\x09\x09\x09\x09priority: 20,\x0a\x09\x09\x09\x09\x09click:    function() {\x0a\x09\x09\x09\x09\x09\x09if ( previous ) {\x0a\x09\x09\x09\x09\x09\x09\x09frame.setState( previous );\x0a\x09\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09\x09frame.close();\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}) );\x0a\x09}\x0a});\x0a\x0amodule.exports = EditImage;\x0a\x0a\x0a/***/ }),\x0a/* 44 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.controller.MediaLibrary\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.Library\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a */\x0avar Library = wp.media.controller.Library,\x0a\x09MediaLibrary;\x0a\x0aMediaLibrary = Library.extend(/** @lends wp.media.controller.MediaLibrary.prototype */{\x0a\x09defaults: _.defaults({\x0a\x09\x09// Attachments browser defaults. @see media.view.AttachmentsBrowser\x0a\x09\x09filterable:      \x27uploaded\x27,\x0a\x0a\x09\x09displaySettings: false,\x0a\x09\x09priority:        80,\x0a\x09\x09syncSelection:   false\x0a\x09}, Library.prototype.defaults ),\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 *\x0a\x09 * @param options\x0a\x09 */\x0a\x09initialize: function( options ) {\x0a\x09\x09this.media = options.media;\x0a\x09\x09this.type = options.type;\x0a\x09\x09this.set( \x27library\x27, wp.media.query({ type: this.type }) );\x0a\x0a\x09\x09Library.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @since 3.9.0\x0a\x09 */\x0a\x09activate: function() {\x0a\x09\x09// @todo this should use this.frame.\x0a\x09\x09if ( wp.media.frame.lastMime ) {\x0a\x09\x09\x09this.set( \x27library\x27, wp.media.query({ type: wp.media.frame.lastMime }) );\x0a\x09\x09\x09delete wp.media.frame.lastMime;\x0a\x09\x09}\x0a\x09\x09Library.prototype.activate.apply( this, arguments );\x0a\x09}\x0a});\x0a\x0amodule.exports = MediaLibrary;\x0a\x0a\x0a/***/ }),\x0a/* 45 */\x0a/***/ (function(module, exports) {\x0a\x0avar l10n = wp.media.view.l10n,\x0a\x09$ = Backbone.$,\x0a\x09Embed;\x0a\x0a/**\x0a * wp.media.controller.Embed\x0a *\x0a * A state for embedding media from a URL.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a *\x0a * @param {object} attributes                         The attributes hash passed to the state.\x0a * @param {string} [attributes.id=embed]              Unique identifier.\x0a * @param {string} [attributes.title=Insert From URL] Title for the state. Displays in the media menu and the frame\x27s title region.\x0a * @param {string} [attributes.content=embed]         Initial mode for the content region.\x0a * @param {string} [attributes.menu=default]          Initial mode for the menu region.\x0a * @param {string} [attributes.toolbar=main-embed]    Initial mode for the toolbar region.\x0a * @param {string} [attributes.menu=false]            Initial mode for the menu region.\x0a * @param {int}    [attributes.priority=120]          The priority for the state link in the media menu.\x0a * @param {string} [attributes.type=link]             The type of embed. Currently only link is supported.\x0a * @param {string} [attributes.url]                   The embed URL.\x0a * @param {object} [attributes.metadata={}]           Properties of the embed, which will override attributes.url if set.\x0a */\x0aEmbed = wp.media.controller.State.extend(/** @lends wp.media.controller.Embed.prototype */{\x0a\x09defaults: {\x0a\x09\x09id:       \x27embed\x27,\x0a\x09\x09title:    l10n.insertFromUrlTitle,\x0a\x09\x09content:  \x27embed\x27,\x0a\x09\x09menu:     \x27default\x27,\x0a\x09\x09toolbar:  \x27main-embed\x27,\x0a\x09\x09priority: 120,\x0a\x09\x09type:     \x27link\x27,\x0a\x09\x09url:      \x27\x27,\x0a\x09\x09metadata: {}\x0a\x09},\x0a\x0a\x09// The amount of time used when debouncing the scan.\x0a\x09sensitivity: 400,\x0a\x0a\x09initialize: function(options) {\x0a\x09\x09this.metadata = options.metadata;\x0a\x09\x09this.debouncedScan = _.debounce( _.bind( this.scan, this ), this.sensitivity );\x0a\x09\x09this.props = new Backbone.Model( this.metadata || { url: \x27\x27 });\x0a\x09\x09this.props.on( \x27change:url\x27, this.debouncedScan, this );\x0a\x09\x09this.props.on( \x27change:url\x27, this.refresh, this );\x0a\x09\x09this.on( \x27scan\x27, this.scanImage, this );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Trigger a scan of the embedded URL\x27s content for metadata required to embed.\x0a\x09 *\x0a\x09 * @fires wp.media.controller.Embed#scan\x0a\x09 */\x0a\x09scan: function() {\x0a\x09\x09var scanners,\x0a\x09\x09\x09embed = this,\x0a\x09\x09\x09attributes = {\x0a\x09\x09\x09\x09type: \x27link\x27,\x0a\x09\x09\x09\x09scanners: []\x0a\x09\x09\x09};\x0a\x0a\x09\x09// Scan is triggered with the list of `attributes` to set on the\x0a\x09\x09// state, useful for the \x27type\x27 attribute and \x27scanners\x27 attribute,\x0a\x09\x09// an array of promise objects for asynchronous scan operations.\x0a\x09\x09if ( this.props.get(\x27url\x27) ) {\x0a\x09\x09\x09this.trigger( \x27scan\x27, attributes );\x0a\x09\x09}\x0a\x0a\x09\x09if ( attributes.scanners.length ) {\x0a\x09\x09\x09scanners = attributes.scanners = $.when.apply( $, attributes.scanners );\x0a\x09\x09\x09scanners.always( function() {\x0a\x09\x09\x09\x09if ( embed.get(\x27scanners\x27) === scanners ) {\x0a\x09\x09\x09\x09\x09embed.set( \x27loading\x27, false );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x09\x09} else {\x0a\x09\x09\x09attributes.scanners = null;\x0a\x09\x09}\x0a\x0a\x09\x09attributes.loading = !! attributes.scanners;\x0a\x09\x09this.set( attributes );\x0a\x09},\x0a\x09/**\x0a\x09 * Try scanning the embed as an image to discover its dimensions.\x0a\x09 *\x0a\x09 * @param {Object} attributes\x0a\x09 */\x0a\x09scanImage: function( attributes ) {\x0a\x09\x09var frame = this.frame,\x0a\x09\x09\x09state = this,\x0a\x09\x09\x09url = this.props.get(\x27url\x27),\x0a\x09\x09\x09image = new Image(),\x0a\x09\x09\x09deferred = $.Deferred();\x0a\x0a\x09\x09attributes.scanners.push( deferred.promise() );\x0a\x0a\x09\x09// Try to load the image and find its width/height.\x0a\x09\x09image.onload = function() {\x0a\x09\x09\x09deferred.resolve();\x0a\x0a\x09\x09\x09if ( state !== frame.state() || url !== state.props.get(\x27url\x27) ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09state.set({\x0a\x09\x09\x09\x09type: \x27image\x27\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09state.props.set({\x0a\x09\x09\x09\x09width:  image.width,\x0a\x09\x09\x09\x09height: image.height\x0a\x09\x09\x09});\x0a\x09\x09};\x0a\x0a\x09\x09image.onerror = deferred.reject;\x0a\x09\x09image.src = url;\x0a\x09},\x0a\x0a\x09refresh: function() {\x0a\x09\x09this.frame.toolbar.get().refresh();\x0a\x09},\x0a\x0a\x09reset: function() {\x0a\x09\x09this.props.clear().set({ url: \x27\x27 });\x0a\x0a\x09\x09if ( this.active ) {\x0a\x09\x09\x09this.refresh();\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = Embed;\x0a\x0a\x0a/***/ }),\x0a/* 46 */\x0a/***/ (function(module, exports) {\x0a\x0avar l10n = wp.media.view.l10n,\x0a\x09Cropper;\x0a\x0a/**\x0a * wp.media.controller.Cropper\x0a *\x0a * A class for cropping an image when called from the header media customization panel.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a */\x0aCropper = wp.media.controller.State.extend(/** @lends wp.media.controller.Cropper.prototype */{\x0a\x09defaults: {\x0a\x09\x09id:          \x27cropper\x27,\x0a\x09\x09title:       l10n.cropImage,\x0a\x09\x09// Region mode defaults.\x0a\x09\x09toolbar:     \x27crop\x27,\x0a\x09\x09content:     \x27crop\x27,\x0a\x09\x09router:      false,\x0a\x09\x09canSkipCrop: false,\x0a\x0a\x09\x09// Default doCrop Ajax arguments to allow the Customizer (for example) to inject state.\x0a\x09\x09doCropArgs: {}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Shows the crop image window when called from the Add new image button.\x0a\x09 *\x0a\x09 * @since 4.2.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09activate: function() {\x0a\x09\x09this.frame.on( \x27content:create:crop\x27, this.createCropContent, this );\x0a\x09\x09this.frame.on( \x27close\x27, this.removeCropper, this );\x0a\x09\x09this.set(\x27selection\x27, new Backbone.Collection(this.frame._selection.single));\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Changes the state of the toolbar window to browse mode.\x0a\x09 *\x0a\x09 * @since 4.2.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09deactivate: function() {\x0a\x09\x09this.frame.toolbar.mode(\x27browse\x27);\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Creates the crop image window.\x0a\x09 *\x0a\x09 * Initialized when clicking on the Select and Crop button.\x0a\x09 *\x0a\x09 * @since 4.2.0\x0a\x09 *\x0a\x09 * @fires crop window\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09createCropContent: function() {\x0a\x09\x09this.cropperView = new wp.media.view.Cropper({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09attachment: this.get(\x27selection\x27).first()\x0a\x09\x09});\x0a\x09\x09this.cropperView.on(\x27image-loaded\x27, this.createCropToolbar, this);\x0a\x09\x09this.frame.content.set(this.cropperView);\x0a\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Removes the image selection and closes the cropping window.\x0a\x09 *\x0a\x09 * @since 4.2.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09removeCropper: function() {\x0a\x09\x09this.imgSelect.cancelSelection();\x0a\x09\x09this.imgSelect.setOptions({remove: true});\x0a\x09\x09this.imgSelect.update();\x0a\x09\x09this.cropperView.remove();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Checks if cropping can be skipped and creates crop toolbar accordingly.\x0a\x09 *\x0a\x09 * @since 4.2.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09createCropToolbar: function() {\x0a\x09\x09var canSkipCrop, toolbarOptions;\x0a\x0a\x09\x09canSkipCrop = this.get(\x27canSkipCrop\x27) || false;\x0a\x0a\x09\x09toolbarOptions = {\x0a\x09\x09\x09controller: this.frame,\x0a\x09\x09\x09items: {\x0a\x09\x09\x09\x09insert: {\x0a\x09\x09\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09\x09\x09text:     l10n.cropImage,\x0a\x09\x09\x09\x09\x09priority: 80,\x0a\x09\x09\x09\x09\x09requires: { library: false, selection: false },\x0a\x0a\x09\x09\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09\x09\x09var controller = this.controller,\x0a\x09\x09\x09\x09\x09\x09\x09selection;\x0a\x0a\x09\x09\x09\x09\x09\x09selection = controller.state().get(\x27selection\x27).first();\x0a\x09\x09\x09\x09\x09\x09selection.set({cropDetails: controller.state().imgSelect.getSelection()});\x0a\x0a\x09\x09\x09\x09\x09\x09this.$el.text(l10n.cropping);\x0a\x09\x09\x09\x09\x09\x09this.$el.attr(\x27disabled\x27, true);\x0a\x0a\x09\x09\x09\x09\x09\x09controller.state().doCrop( selection ).done( function( croppedImage ) {\x0a\x09\x09\x09\x09\x09\x09\x09controller.trigger(\x27cropped\x27, croppedImage );\x0a\x09\x09\x09\x09\x09\x09\x09controller.close();\x0a\x09\x09\x09\x09\x09\x09}).fail( function() {\x0a\x09\x09\x09\x09\x09\x09\x09controller.trigger(\x27content:error:crop\x27);\x0a\x09\x09\x09\x09\x09\x09});\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09};\x0a\x0a\x09\x09if ( canSkipCrop ) {\x0a\x09\x09\x09_.extend( toolbarOptions.items, {\x0a\x09\x09\x09\x09skip: {\x0a\x09\x09\x09\x09\x09style:      \x27secondary\x27,\x0a\x09\x09\x09\x09\x09text:       l10n.skipCropping,\x0a\x09\x09\x09\x09\x09priority:   70,\x0a\x09\x09\x09\x09\x09requires:   { library: false, selection: false },\x0a\x09\x09\x09\x09\x09click:      function() {\x0a\x09\x09\x09\x09\x09\x09var selection = this.controller.state().get(\x27selection\x27).first();\x0a\x09\x09\x09\x09\x09\x09this.controller.state().cropperView.remove();\x0a\x09\x09\x09\x09\x09\x09this.controller.trigger(\x27skippedcrop\x27, selection);\x0a\x09\x09\x09\x09\x09\x09this.controller.close();\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x0a\x09\x09this.frame.toolbar.set( new wp.media.view.Toolbar(toolbarOptions) );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Creates an object with the image attachment and crop properties.\x0a\x09 *\x0a\x09 * @since 4.2.0\x0a\x09 *\x0a\x09 * @returns {$.promise} A jQuery promise with the custom header crop details.\x0a\x09 */\x0a\x09doCrop: function( attachment ) {\x0a\x09\x09return wp.ajax.post( \x27custom-header-crop\x27, _.extend(\x0a\x09\x09\x09{},\x0a\x09\x09\x09this.defaults.doCropArgs,\x0a\x09\x09\x09{\x0a\x09\x09\x09\x09nonce: attachment.get( \x27nonces\x27 ).edit,\x0a\x09\x09\x09\x09id: attachment.get( \x27id\x27 ),\x0a\x09\x09\x09\x09cropDetails: attachment.get( \x27cropDetails\x27 )\x0a\x09\x09\x09}\x0a\x09\x09) );\x0a\x09}\x0a});\x0a\x0amodule.exports = Cropper;\x0a\x0a\x0a/***/ }),\x0a/* 47 */\x0a/***/ (function(module, exports) {\x0a\x0avar Controller = wp.media.controller,\x0a\x09CustomizeImageCropper;\x0a\x0a/**\x0a * A state for cropping an image in the customizer.\x0a *\x0a * @since 4.3.0\x0a *\x0a * @constructs wp.media.controller.CustomizeImageCropper\x0a * @memberOf wp.media.controller\x0a * @augments wp.media.controller.CustomizeImageCropper.Cropper\x0a * @inheritDoc\x0a */\x0aCustomizeImageCropper = Controller.Cropper.extend(/** @lends wp.media.controller.CustomizeImageCropper.prototype */{\x0a\x09/**\x0a\x09 * Posts the crop details to the admin.\x0a\x09 *\x0a\x09 * Uses crop measurements when flexible in both directions.\x0a\x09 * Constrains flexible side based on image ratio and size of the fixed side.\x0a\x09 *\x0a\x09 * @since 4.3.0\x0a\x09 *\x0a\x09 * @param {Object} attachment The attachment to crop.\x0a\x09 *\x0a\x09 * @returns {$.promise} A jQuery promise that represents the crop image request.\x0a\x09 */\x0a\x09doCrop: function( attachment ) {\x0a\x09\x09var cropDetails = attachment.get( \x27cropDetails\x27 ),\x0a\x09\x09\x09control = this.get( \x27control\x27 ),\x0a\x09\x09\x09ratio = cropDetails.width / cropDetails.height;\x0a\x0a\x09\x09// Use crop measurements when flexible in both directions.\x0a\x09\x09if ( control.params.flex_width && control.params.flex_height ) {\x0a\x09\x09\x09cropDetails.dst_width  = cropDetails.width;\x0a\x09\x09\x09cropDetails.dst_height = cropDetails.height;\x0a\x0a\x09\x09// Constrain flexible side based on image ratio and size of the fixed side.\x0a\x09\x09} else {\x0a\x09\x09\x09cropDetails.dst_width  = control.params.flex_width  ? control.params.height * ratio : control.params.width;\x0a\x09\x09\x09cropDetails.dst_height = control.params.flex_height ? control.params.width  / ratio : control.params.height;\x0a\x09\x09}\x0a\x0a\x09\x09return wp.ajax.post( \x27crop-image\x27, {\x0a\x09\x09\x09wp_customize: \x27on\x27,\x0a\x09\x09\x09nonce: attachment.get( \x27nonces\x27 ).edit,\x0a\x09\x09\x09id: attachment.get( \x27id\x27 ),\x0a\x09\x09\x09context: control.id,\x0a\x09\x09\x09cropDetails: cropDetails\x0a\x09\x09} );\x0a\x09}\x0a});\x0a\x0amodule.exports = CustomizeImageCropper;\x0a\x0a\x0a/***/ }),\x0a/* 48 */\x0a/***/ (function(module, exports) {\x0a\x0avar Controller = wp.media.controller,\x0a\x09SiteIconCropper;\x0a\x0a/**\x0a * wp.media.controller.SiteIconCropper\x0a *\x0a * A state for cropping a Site Icon.\x0a *\x0a * @memberOf wp.media.controller\x0a *\x0a * @class\x0a * @augments wp.media.controller.Cropper\x0a * @augments wp.media.controller.State\x0a * @augments Backbone.Model\x0a */\x0aSiteIconCropper = Controller.Cropper.extend(/** @lends wp.media.controller.SiteIconCropper.prototype */{\x0a\x09activate: function() {\x0a\x09\x09this.frame.on( \x27content:create:crop\x27, this.createCropContent, this );\x0a\x09\x09this.frame.on( \x27close\x27, this.removeCropper, this );\x0a\x09\x09this.set(\x27selection\x27, new Backbone.Collection(this.frame._selection.single));\x0a\x09},\x0a\x0a\x09createCropContent: function() {\x0a\x09\x09this.cropperView = new wp.media.view.SiteIconCropper({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09attachment: this.get(\x27selection\x27).first()\x0a\x09\x09});\x0a\x09\x09this.cropperView.on(\x27image-loaded\x27, this.createCropToolbar, this);\x0a\x09\x09this.frame.content.set(this.cropperView);\x0a\x0a\x09},\x0a\x0a\x09doCrop: function( attachment ) {\x0a\x09\x09var cropDetails = attachment.get( \x27cropDetails\x27 ),\x0a\x09\x09\x09control = this.get( \x27control\x27 );\x0a\x0a\x09\x09cropDetails.dst_width  = control.params.width;\x0a\x09\x09cropDetails.dst_height = control.params.height;\x0a\x0a\x09\x09return wp.ajax.post( \x27crop-image\x27, {\x0a\x09\x09\x09nonce: attachment.get( \x27nonces\x27 ).edit,\x0a\x09\x09\x09id: attachment.get( \x27id\x27 ),\x0a\x09\x09\x09context: \x27site-icon\x27,\x0a\x09\x09\x09cropDetails: cropDetails\x0a\x09\x09} );\x0a\x09}\x0a});\x0a\x0amodule.exports = SiteIconCropper;\x0a\x0a\x0a/***/ }),\x0a/* 49 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.View\x0a *\x0a * The base view class for media.\x0a *\x0a * Undelegating events, removing events from the model, and\x0a * removing events from the controller mirror the code for\x0a * `Backbone.View.dispose` in Backbone 0.9.8 development.\x0a *\x0a * This behavior has since been removed, and should not be used\x0a * outside of the media manager.\x0a *\x0a * @memberOf wp.media\x0a *\x0a * @class\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar View = wp.Backbone.View.extend(/** @lends wp.media.View.prototype */{\x0a\x09constructor: function( options ) {\x0a\x09\x09if ( options && options.controller ) {\x0a\x09\x09\x09this.controller = options.controller;\x0a\x09\x09}\x0a\x09\x09wp.Backbone.View.apply( this, arguments );\x0a\x09},\x0a\x09/**\x0a\x09 * @todo The internal comment mentions this might have been a stop-gap\x0a\x09 *       before Backbone 0.9.8 came out. Figure out if Backbone core takes\x0a\x09 *       care of this in Backbone.View now.\x0a\x09 *\x0a\x09 * @returns {wp.media.View} Returns itself to allow chaining\x0a\x09 */\x0a\x09dispose: function() {\x0a\x09\x09// Undelegating events, removing events from the model, and\x0a\x09\x09// removing events from the controller mirror the code for\x0a\x09\x09// `Backbone.View.dispose` in Backbone 0.9.8 development.\x0a\x09\x09this.undelegateEvents();\x0a\x0a\x09\x09if ( this.model && this.model.off ) {\x0a\x09\x09\x09this.model.off( null, null, this );\x0a\x09\x09}\x0a\x0a\x09\x09if ( this.collection && this.collection.off ) {\x0a\x09\x09\x09this.collection.off( null, null, this );\x0a\x09\x09}\x0a\x0a\x09\x09// Unbind controller events.\x0a\x09\x09if ( this.controller && this.controller.off ) {\x0a\x09\x09\x09this.controller.off( null, null, this );\x0a\x09\x09}\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.View} Returns itself to allow chaining\x0a\x09 */\x0a\x09remove: function() {\x0a\x09\x09this.dispose();\x0a\x09\x09/**\x0a\x09\x09 * call \x27remove\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09return wp.Backbone.View.prototype.remove.apply( this, arguments );\x0a\x09}\x0a});\x0a\x0amodule.exports = View;\x0a\x0a\x0a/***/ }),\x0a/* 50 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Frame\x0a *\x0a * A frame is a composite view consisting of one or more regions and one or more\x0a * states.\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @see wp.media.controller.State\x0a * @see wp.media.controller.Region\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a * @mixes wp.media.controller.StateMachine\x0a */\x0avar Frame = wp.media.View.extend(/** @lends wp.media.view.Frame.prototype */{\x0a\x09initialize: function() {\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09mode: [ \x27select\x27 ]\x0a\x09\x09});\x0a\x09\x09this._createRegions();\x0a\x09\x09this._createStates();\x0a\x09\x09this._createModes();\x0a\x09},\x0a\x0a\x09_createRegions: function() {\x0a\x09\x09// Clone the regions array.\x0a\x09\x09this.regions = this.regions ? this.regions.slice() : [];\x0a\x0a\x09\x09// Initialize regions.\x0a\x09\x09_.each( this.regions, function( region ) {\x0a\x09\x09\x09this[ region ] = new wp.media.controller.Region({\x0a\x09\x09\x09\x09view:     this,\x0a\x09\x09\x09\x09id:       region,\x0a\x09\x09\x09\x09selector: \x27.media-frame-\x27 + region\x0a\x09\x09\x09});\x0a\x09\x09}, this );\x0a\x09},\x0a\x09/**\x0a\x09 * Create the frame\x27s states.\x0a\x09 *\x0a\x09 * @see wp.media.controller.State\x0a\x09 * @see wp.media.controller.StateMachine\x0a\x09 *\x0a\x09 * @fires wp.media.controller.State#ready\x0a\x09 */\x0a\x09_createStates: function() {\x0a\x09\x09// Create the default `states` collection.\x0a\x09\x09this.states = new Backbone.Collection( null, {\x0a\x09\x09\x09model: wp.media.controller.State\x0a\x09\x09});\x0a\x0a\x09\x09// Ensure states have a reference to the frame.\x0a\x09\x09this.states.on( \x27add\x27, function( model ) {\x0a\x09\x09\x09model.frame = this;\x0a\x09\x09\x09model.trigger(\x27ready\x27);\x0a\x09\x09}, this );\x0a\x0a\x09\x09if ( this.options.states ) {\x0a\x09\x09\x09this.states.add( this.options.states );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * A frame can be in a mode or multiple modes at one time.\x0a\x09 *\x0a\x09 * For example, the manage media frame can be in the `Bulk Select` or `Edit` mode.\x0a\x09 */\x0a\x09_createModes: function() {\x0a\x09\x09// Store active \x22modes\x22 that the frame is in. Unrelated to region modes.\x0a\x09\x09this.activeModes = new Backbone.Collection();\x0a\x09\x09this.activeModes.on( \x27add remove reset\x27, _.bind( this.triggerModeEvents, this ) );\x0a\x0a\x09\x09_.each( this.options.mode, function( mode ) {\x0a\x09\x09\x09this.activateMode( mode );\x0a\x09\x09}, this );\x0a\x09},\x0a\x09/**\x0a\x09 * Reset all states on the frame to their defaults.\x0a\x09 *\x0a\x09 * @returns {wp.media.view.Frame} Returns itself to allow chaining\x0a\x09 */\x0a\x09reset: function() {\x0a\x09\x09this.states.invoke( \x27trigger\x27, \x27reset\x27 );\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * Map activeMode collection events to the frame.\x0a\x09 */\x0a\x09triggerModeEvents: function( model, collection, options ) {\x0a\x09\x09var collectionEvent,\x0a\x09\x09\x09modeEventMap = {\x0a\x09\x09\x09\x09add: \x27activate\x27,\x0a\x09\x09\x09\x09remove: \x27deactivate\x27\x0a\x09\x09\x09},\x0a\x09\x09\x09eventToTrigger;\x0a\x09\x09// Probably a better way to do this.\x0a\x09\x09_.each( options, function( value, key ) {\x0a\x09\x09\x09if ( value ) {\x0a\x09\x09\x09\x09collectionEvent = key;\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09if ( ! _.has( modeEventMap, collectionEvent ) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09eventToTrigger = model.get(\x27id\x27) + \x27:\x27 + modeEventMap[collectionEvent];\x0a\x09\x09this.trigger( eventToTrigger );\x0a\x09},\x0a\x09/**\x0a\x09 * Activate a mode on the frame.\x0a\x09 *\x0a\x09 * @param string mode Mode ID.\x0a\x09 * @returns {this} Returns itself to allow chaining.\x0a\x09 */\x0a\x09activateMode: function( mode ) {\x0a\x09\x09// Bail if the mode is already active.\x0a\x09\x09if ( this.isModeActive( mode ) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x09\x09this.activeModes.add( [ { id: mode } ] );\x0a\x09\x09// Add a CSS class to the frame so elements can be styled for the mode.\x0a\x09\x09this.$el.addClass( \x27mode-\x27 + mode );\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * Deactivate a mode on the frame.\x0a\x09 *\x0a\x09 * @param string mode Mode ID.\x0a\x09 * @returns {this} Returns itself to allow chaining.\x0a\x09 */\x0a\x09deactivateMode: function( mode ) {\x0a\x09\x09// Bail if the mode isn\x27t active.\x0a\x09\x09if ( ! this.isModeActive( mode ) ) {\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x09\x09this.activeModes.remove( this.activeModes.where( { id: mode } ) );\x0a\x09\x09this.$el.removeClass( \x27mode-\x27 + mode );\x0a\x09\x09/**\x0a\x09\x09 * Frame mode deactivation event.\x0a\x09\x09 *\x0a\x09\x09 * @event wp.media.view.Frame#{mode}:deactivate\x0a\x09\x09 */\x0a\x09\x09this.trigger( mode + \x27:deactivate\x27 );\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * Check if a mode is enabled on the frame.\x0a\x09 *\x0a\x09 * @param  string mode Mode ID.\x0a\x09 * @return bool\x0a\x09 */\x0a\x09isModeActive: function( mode ) {\x0a\x09\x09return Boolean( this.activeModes.where( { id: mode } ).length );\x0a\x09}\x0a});\x0a\x0a// Make the `Frame` a `StateMachine`.\x0a_.extend( Frame.prototype, wp.media.controller.StateMachine.prototype );\x0a\x0amodule.exports = Frame;\x0a\x0a\x0a/***/ }),\x0a/* 51 */\x0a/***/ (function(module, exports) {\x0a\x0avar Frame = wp.media.view.Frame,\x0a\x09$ = jQuery,\x0a\x09MediaFrame;\x0a\x0a/**\x0a * wp.media.view.MediaFrame\x0a *\x0a * The frame used to create the media modal.\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.Frame\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a * @mixes wp.media.controller.StateMachine\x0a */\x0aMediaFrame = Frame.extend(/** @lends wp.media.view.MediaFrame.prototype */{\x0a\x09className: \x27media-frame\x27,\x0a\x09template:  wp.template(\x27media-frame\x27),\x0a\x09regions:   [\x27menu\x27,\x27title\x27,\x27content\x27,\x27toolbar\x27,\x27router\x27],\x0a\x0a\x09events: {\x0a\x09\x09\x27click div.media-frame-title h1\x27: \x27toggleMenu\x27\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @constructs\x0a\x09 */\x0a\x09initialize: function() {\x0a\x09\x09Frame.prototype.initialize.apply( this, arguments );\x0a\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09title:    \x27\x27,\x0a\x09\x09\x09modal:    true,\x0a\x09\x09\x09uploader: true\x0a\x09\x09});\x0a\x0a\x09\x09// Ensure core UI is enabled.\x0a\x09\x09this.$el.addClass(\x27wp-core-ui\x27);\x0a\x0a\x09\x09// Initialize modal container view.\x0a\x09\x09if ( this.options.modal ) {\x0a\x09\x09\x09this.modal = new wp.media.view.Modal({\x0a\x09\x09\x09\x09controller: this,\x0a\x09\x09\x09\x09title:      this.options.title\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09this.modal.content( this );\x0a\x09\x09}\x0a\x0a\x09\x09// Force the uploader off if the upload limit has been exceeded or\x0a\x09\x09// if the browser isn\x27t supported.\x0a\x09\x09if ( wp.Uploader.limitExceeded || ! wp.Uploader.browser.supported ) {\x0a\x09\x09\x09this.options.uploader = false;\x0a\x09\x09}\x0a\x0a\x09\x09// Initialize window-wide uploader.\x0a\x09\x09if ( this.options.uploader ) {\x0a\x09\x09\x09this.uploader = new wp.media.view.UploaderWindow({\x0a\x09\x09\x09\x09controller: this,\x0a\x09\x09\x09\x09uploader: {\x0a\x09\x09\x09\x09\x09dropzone:  this.modal ? this.modal.$el : this.$el,\x0a\x09\x09\x09\x09\x09container: this.$el\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x09\x09\x09this.views.set( \x27.media-frame-uploader\x27, this.uploader );\x0a\x09\x09}\x0a\x0a\x09\x09this.on( \x27attach\x27, _.bind( this.views.ready, this.views ), this );\x0a\x0a\x09\x09// Bind default title creation.\x0a\x09\x09this.on( \x27title:create:default\x27, this.createTitle, this );\x0a\x09\x09this.title.mode(\x27default\x27);\x0a\x0a\x09\x09this.on( \x27title:render\x27, function( view ) {\x0a\x09\x09\x09view.$el.append( \x27\x3cspan class=\x22dashicons dashicons-arrow-down\x22\x3e\x3c/span\x3e\x27 );\x0a\x09\x09});\x0a\x0a\x09\x09// Bind default menu.\x0a\x09\x09this.on( \x27menu:create:default\x27, this.createMenu, this );\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.MediaFrame} Returns itself to allow chaining\x0a\x09 */\x0a\x09render: function() {\x0a\x09\x09// Activate the default state if no active state exists.\x0a\x09\x09if ( ! this.state() && this.options.state ) {\x0a\x09\x09\x09this.setState( this.options.state );\x0a\x09\x09}\x0a\x09\x09/**\x0a\x09\x09 * call \x27render\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09return Frame.prototype.render.apply( this, arguments );\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} title\x0a\x09 * @this wp.media.controller.Region\x0a\x09 */\x0a\x09createTitle: function( title ) {\x0a\x09\x09title.view = new wp.media.View({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09tagName: \x27h1\x27\x0a\x09\x09});\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} menu\x0a\x09 * @this wp.media.controller.Region\x0a\x09 */\x0a\x09createMenu: function( menu ) {\x0a\x09\x09menu.view = new wp.media.view.Menu({\x0a\x09\x09\x09controller: this\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09toggleMenu: function() {\x0a\x09\x09this.$el.find( \x27.media-menu\x27 ).toggleClass( \x27visible\x27 );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @param {Object} toolbar\x0a\x09 * @this wp.media.controller.Region\x0a\x09 */\x0a\x09createToolbar: function( toolbar ) {\x0a\x09\x09toolbar.view = new wp.media.view.Toolbar({\x0a\x09\x09\x09controller: this\x0a\x09\x09});\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} router\x0a\x09 * @this wp.media.controller.Region\x0a\x09 */\x0a\x09createRouter: function( router ) {\x0a\x09\x09router.view = new wp.media.view.Router({\x0a\x09\x09\x09controller: this\x0a\x09\x09});\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} options\x0a\x09 */\x0a\x09createIframeStates: function( options ) {\x0a\x09\x09var settings = wp.media.view.settings,\x0a\x09\x09\x09tabs = settings.tabs,\x0a\x09\x09\x09tabUrl = settings.tabUrl,\x0a\x09\x09\x09$postId;\x0a\x0a\x09\x09if ( ! tabs || ! tabUrl ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Add the post ID to the tab URL if it exists.\x0a\x09\x09$postId = $(\x27#post_ID\x27);\x0a\x09\x09if ( $postId.length ) {\x0a\x09\x09\x09tabUrl += \x27&post_id=\x27 + $postId.val();\x0a\x09\x09}\x0a\x0a\x09\x09// Generate the tab states.\x0a\x09\x09_.each( tabs, function( title, id ) {\x0a\x09\x09\x09this.state( \x27iframe:\x27 + id ).set( _.defaults({\x0a\x09\x09\x09\x09tab:     id,\x0a\x09\x09\x09\x09src:     tabUrl + \x27&tab=\x27 + id,\x0a\x09\x09\x09\x09title:   title,\x0a\x09\x09\x09\x09content: \x27iframe\x27,\x0a\x09\x09\x09\x09menu:    \x27default\x27\x0a\x09\x09\x09}, options ) );\x0a\x09\x09}, this );\x0a\x0a\x09\x09this.on( \x27content:create:iframe\x27, this.iframeContent, this );\x0a\x09\x09this.on( \x27content:deactivate:iframe\x27, this.iframeContentCleanup, this );\x0a\x09\x09this.on( \x27menu:render:default\x27, this.iframeMenu, this );\x0a\x09\x09this.on( \x27open\x27, this.hijackThickbox, this );\x0a\x09\x09this.on( \x27close\x27, this.restoreThickbox, this );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @param {Object} content\x0a\x09 * @this wp.media.controller.Region\x0a\x09 */\x0a\x09iframeContent: function( content ) {\x0a\x09\x09this.$el.addClass(\x27hide-toolbar\x27);\x0a\x09\x09content.view = new wp.media.view.Iframe({\x0a\x09\x09\x09controller: this\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09iframeContentCleanup: function() {\x0a\x09\x09this.$el.removeClass(\x27hide-toolbar\x27);\x0a\x09},\x0a\x0a\x09iframeMenu: function( view ) {\x0a\x09\x09var views = {};\x0a\x0a\x09\x09if ( ! view ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09_.each( wp.media.view.settings.tabs, function( title, id ) {\x0a\x09\x09\x09views[ \x27iframe:\x27 + id ] = {\x0a\x09\x09\x09\x09text: this.state( \x27iframe:\x27 + id ).get(\x27title\x27),\x0a\x09\x09\x09\x09priority: 200\x0a\x09\x09\x09};\x0a\x09\x09}, this );\x0a\x0a\x09\x09view.set( views );\x0a\x09},\x0a\x0a\x09hijackThickbox: function() {\x0a\x09\x09var frame = this;\x0a\x0a\x09\x09if ( ! window.tb_remove || this._tb_remove ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09this._tb_remove = window.tb_remove;\x0a\x09\x09window.tb_remove = function() {\x0a\x09\x09\x09frame.close();\x0a\x09\x09\x09frame.reset();\x0a\x09\x09\x09frame.setState( frame.options.state );\x0a\x09\x09\x09frame._tb_remove.call( window );\x0a\x09\x09};\x0a\x09},\x0a\x0a\x09restoreThickbox: function() {\x0a\x09\x09if ( ! this._tb_remove ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09window.tb_remove = this._tb_remove;\x0a\x09\x09delete this._tb_remove;\x0a\x09}\x0a});\x0a\x0a// Map some of the modal\x27s methods to the frame.\x0a_.each([\x27open\x27,\x27close\x27,\x27attach\x27,\x27detach\x27,\x27escape\x27], function( method ) {\x0a\x09/**\x0a\x09 * @function open\x0a\x09 * @memberOf wp.media.view.MediaFrame\x0a\x09 * @instance\x0a\x09 *\x0a\x09 * @returns {wp.media.view.MediaFrame} Returns itself to allow chaining\x0a\x09 */\x0a\x09/**\x0a\x09 * @function close\x0a\x09 * @memberOf wp.media.view.MediaFrame\x0a\x09 * @instance\x0a\x09 *\x0a\x09 * @returns {wp.media.view.MediaFrame} Returns itself to allow chaining\x0a\x09 */\x0a\x09/**\x0a\x09 * @function attach\x0a\x09 * @memberOf wp.media.view.MediaFrame\x0a\x09 * @instance\x0a\x09 *\x0a\x09 * @returns {wp.media.view.MediaFrame} Returns itself to allow chaining\x0a\x09 */\x0a\x09/**\x0a\x09 * @function detach\x0a\x09 * @memberOf wp.media.view.MediaFrame\x0a\x09 * @instance\x0a\x09 *\x0a\x09 * @returns {wp.media.view.MediaFrame} Returns itself to allow chaining\x0a\x09 */\x0a\x09/**\x0a\x09 * @function escape\x0a\x09 * @memberOf wp.media.view.MediaFrame\x0a\x09 * @instance\x0a\x09 *\x0a\x09 * @returns {wp.media.view.MediaFrame} Returns itself to allow chaining\x0a\x09 */\x0a\x09MediaFrame.prototype[ method ] = function() {\x0a\x09\x09if ( this.modal ) {\x0a\x09\x09\x09this.modal[ method ].apply( this.modal, arguments );\x0a\x09\x09}\x0a\x09\x09return this;\x0a\x09};\x0a});\x0a\x0amodule.exports = MediaFrame;\x0a\x0a\x0a/***/ }),\x0a/* 52 */\x0a/***/ (function(module, exports) {\x0a\x0avar MediaFrame = wp.media.view.MediaFrame,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09Select;\x0a\x0a/**\x0a * wp.media.view.MediaFrame.Select\x0a *\x0a * A frame for selecting an item or items from the media library.\x0a *\x0a * @memberOf wp.media.view.MediaFrame\x0a *\x0a * @class\x0a * @augments wp.media.view.MediaFrame\x0a * @augments wp.media.view.Frame\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a * @mixes wp.media.controller.StateMachine\x0a */\x0aSelect = MediaFrame.extend(/** @lends wp.media.view.MediaFrame.Select.prototype */{\x0a\x09initialize: function() {\x0a\x09\x09// Call \x27initialize\x27 directly on the parent class.\x0a\x09\x09MediaFrame.prototype.initialize.apply( this, arguments );\x0a\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09selection: [],\x0a\x09\x09\x09library:   {},\x0a\x09\x09\x09multiple:  false,\x0a\x09\x09\x09state:    \x27library\x27\x0a\x09\x09});\x0a\x0a\x09\x09this.createSelection();\x0a\x09\x09this.createStates();\x0a\x09\x09this.bindHandlers();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Attach a selection collection to the frame.\x0a\x09 *\x0a\x09 * A selection is a collection of attachments used for a specific purpose\x0a\x09 * by a media frame. e.g. Selecting an attachment (or many) to insert into\x0a\x09 * post content.\x0a\x09 *\x0a\x09 * @see media.model.Selection\x0a\x09 */\x0a\x09createSelection: function() {\x0a\x09\x09var selection = this.options.selection;\x0a\x0a\x09\x09if ( ! (selection instanceof wp.media.model.Selection) ) {\x0a\x09\x09\x09this.options.selection = new wp.media.model.Selection( selection, {\x0a\x09\x09\x09\x09multiple: this.options.multiple\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x0a\x09\x09this._selection = {\x0a\x09\x09\x09attachments: new wp.media.model.Attachments(),\x0a\x09\x09\x09difference: []\x0a\x09\x09};\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Create the default states on the frame.\x0a\x09 */\x0a\x09createStates: function() {\x0a\x09\x09var options = this.options;\x0a\x0a\x09\x09if ( this.options.states ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Add the default states.\x0a\x09\x09this.states.add([\x0a\x09\x09\x09// Main states.\x0a\x09\x09\x09new wp.media.controller.Library({\x0a\x09\x09\x09\x09library:   wp.media.query( options.library ),\x0a\x09\x09\x09\x09multiple:  options.multiple,\x0a\x09\x09\x09\x09title:     options.title,\x0a\x09\x09\x09\x09priority:  20\x0a\x09\x09\x09})\x0a\x09\x09]);\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Bind region mode event callbacks.\x0a\x09 *\x0a\x09 * @see media.controller.Region.render\x0a\x09 */\x0a\x09bindHandlers: function() {\x0a\x09\x09this.on( \x27router:create:browse\x27, this.createRouter, this );\x0a\x09\x09this.on( \x27router:render:browse\x27, this.browseRouter, this );\x0a\x09\x09this.on( \x27content:create:browse\x27, this.browseContent, this );\x0a\x09\x09this.on( \x27content:render:upload\x27, this.uploadContent, this );\x0a\x09\x09this.on( \x27toolbar:create:select\x27, this.createSelectToolbar, this );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Render callback for the router region in the `browse` mode.\x0a\x09 *\x0a\x09 * @param {wp.media.view.Router} routerView\x0a\x09 */\x0a\x09browseRouter: function( routerView ) {\x0a\x09\x09routerView.set({\x0a\x09\x09\x09upload: {\x0a\x09\x09\x09\x09text:     l10n.uploadFilesTitle,\x0a\x09\x09\x09\x09priority: 20\x0a\x09\x09\x09},\x0a\x09\x09\x09browse: {\x0a\x09\x09\x09\x09text:     l10n.mediaLibraryTitle,\x0a\x09\x09\x09\x09priority: 40\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Render callback for the content region in the `browse` mode.\x0a\x09 *\x0a\x09 * @param {wp.media.controller.Region} contentRegion\x0a\x09 */\x0a\x09browseContent: function( contentRegion ) {\x0a\x09\x09var state = this.state();\x0a\x0a\x09\x09this.$el.removeClass(\x27hide-toolbar\x27);\x0a\x0a\x09\x09// Browse our library of attachments.\x0a\x09\x09contentRegion.view = new wp.media.view.AttachmentsBrowser({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09collection: state.get(\x27library\x27),\x0a\x09\x09\x09selection:  state.get(\x27selection\x27),\x0a\x09\x09\x09model:      state,\x0a\x09\x09\x09sortable:   state.get(\x27sortable\x27),\x0a\x09\x09\x09search:     state.get(\x27searchable\x27),\x0a\x09\x09\x09filters:    state.get(\x27filterable\x27),\x0a\x09\x09\x09date:       state.get(\x27date\x27),\x0a\x09\x09\x09display:    state.has(\x27display\x27) ? state.get(\x27display\x27) : state.get(\x27displaySettings\x27),\x0a\x09\x09\x09dragInfo:   state.get(\x27dragInfo\x27),\x0a\x0a\x09\x09\x09idealColumnWidth: state.get(\x27idealColumnWidth\x27),\x0a\x09\x09\x09suggestedWidth:   state.get(\x27suggestedWidth\x27),\x0a\x09\x09\x09suggestedHeight:  state.get(\x27suggestedHeight\x27),\x0a\x0a\x09\x09\x09AttachmentView: state.get(\x27AttachmentView\x27)\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Render callback for the content region in the `upload` mode.\x0a\x09 */\x0a\x09uploadContent: function() {\x0a\x09\x09this.$el.removeClass( \x27hide-toolbar\x27 );\x0a\x09\x09this.content.set( new wp.media.view.UploaderInline({\x0a\x09\x09\x09controller: this\x0a\x09\x09}) );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Toolbars\x0a\x09 *\x0a\x09 * @param {Object} toolbar\x0a\x09 * @param {Object} [options={}]\x0a\x09 * @this wp.media.controller.Region\x0a\x09 */\x0a\x09createSelectToolbar: function( toolbar, options ) {\x0a\x09\x09options = options || this.options.button || {};\x0a\x09\x09options.controller = this;\x0a\x0a\x09\x09toolbar.view = new wp.media.view.Toolbar.Select( options );\x0a\x09}\x0a});\x0a\x0amodule.exports = Select;\x0a\x0a\x0a/***/ }),\x0a/* 53 */\x0a/***/ (function(module, exports) {\x0a\x0avar Select = wp.media.view.MediaFrame.Select,\x0a\x09Library = wp.media.controller.Library,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09Post;\x0a\x0a/**\x0a * wp.media.view.MediaFrame.Post\x0a *\x0a * The frame for manipulating media on the Edit Post page.\x0a *\x0a * @memberOf wp.media.view.MediaFrame\x0a *\x0a * @class\x0a * @augments wp.media.view.MediaFrame.Select\x0a * @augments wp.media.view.MediaFrame\x0a * @augments wp.media.view.Frame\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a * @mixes wp.media.controller.StateMachine\x0a */\x0aPost = Select.extend(/** @lends wp.media.view.MediaFrame.Post.prototype */{\x0a\x09initialize: function() {\x0a\x09\x09this.counts = {\x0a\x09\x09\x09audio: {\x0a\x09\x09\x09\x09count: wp.media.view.settings.attachmentCounts.audio,\x0a\x09\x09\x09\x09state: \x27playlist\x27\x0a\x09\x09\x09},\x0a\x09\x09\x09video: {\x0a\x09\x09\x09\x09count: wp.media.view.settings.attachmentCounts.video,\x0a\x09\x09\x09\x09state: \x27video-playlist\x27\x0a\x09\x09\x09}\x0a\x09\x09};\x0a\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09multiple:  true,\x0a\x09\x09\x09editing:   false,\x0a\x09\x09\x09state:    \x27insert\x27,\x0a\x09\x09\x09metadata:  {}\x0a\x09\x09});\x0a\x0a\x09\x09// Call \x27initialize\x27 directly on the parent class.\x0a\x09\x09Select.prototype.initialize.apply( this, arguments );\x0a\x09\x09this.createIframeStates();\x0a\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Create the default states.\x0a\x09 */\x0a\x09createStates: function() {\x0a\x09\x09var options = this.options;\x0a\x0a\x09\x09this.states.add([\x0a\x09\x09\x09// Main states.\x0a\x09\x09\x09new Library({\x0a\x09\x09\x09\x09id:         \x27insert\x27,\x0a\x09\x09\x09\x09title:      l10n.insertMediaTitle,\x0a\x09\x09\x09\x09priority:   20,\x0a\x09\x09\x09\x09toolbar:    \x27main-insert\x27,\x0a\x09\x09\x09\x09filterable: \x27all\x27,\x0a\x09\x09\x09\x09library:    wp.media.query( options.library ),\x0a\x09\x09\x09\x09multiple:   options.multiple ? \x27reset\x27 : false,\x0a\x09\x09\x09\x09editable:   true,\x0a\x0a\x09\x09\x09\x09// If the user isn\x27t allowed to edit fields,\x0a\x09\x09\x09\x09// can they still edit it locally?\x0a\x09\x09\x09\x09allowLocalEdits: true,\x0a\x0a\x09\x09\x09\x09// Show the attachment display settings.\x0a\x09\x09\x09\x09displaySettings: true,\x0a\x09\x09\x09\x09// Update user settings when users adjust the\x0a\x09\x09\x09\x09// attachment display settings.\x0a\x09\x09\x09\x09displayUserSettings: true\x0a\x09\x09\x09}),\x0a\x0a\x09\x09\x09new Library({\x0a\x09\x09\x09\x09id:         \x27gallery\x27,\x0a\x09\x09\x09\x09title:      l10n.createGalleryTitle,\x0a\x09\x09\x09\x09priority:   40,\x0a\x09\x09\x09\x09toolbar:    \x27main-gallery\x27,\x0a\x09\x09\x09\x09filterable: \x27uploaded\x27,\x0a\x09\x09\x09\x09multiple:   \x27add\x27,\x0a\x09\x09\x09\x09editable:   false,\x0a\x0a\x09\x09\x09\x09library:  wp.media.query( _.defaults({\x0a\x09\x09\x09\x09\x09type: \x27image\x27\x0a\x09\x09\x09\x09}, options.library ) )\x0a\x09\x09\x09}),\x0a\x0a\x09\x09\x09// Embed states.\x0a\x09\x09\x09new wp.media.controller.Embed( { metadata: options.metadata } ),\x0a\x0a\x09\x09\x09new wp.media.controller.EditImage( { model: options.editImage } ),\x0a\x0a\x09\x09\x09// Gallery states.\x0a\x09\x09\x09new wp.media.controller.GalleryEdit({\x0a\x09\x09\x09\x09library: options.selection,\x0a\x09\x09\x09\x09editing: options.editing,\x0a\x09\x09\x09\x09menu:    \x27gallery\x27\x0a\x09\x09\x09}),\x0a\x0a\x09\x09\x09new wp.media.controller.GalleryAdd(),\x0a\x0a\x09\x09\x09new Library({\x0a\x09\x09\x09\x09id:         \x27playlist\x27,\x0a\x09\x09\x09\x09title:      l10n.createPlaylistTitle,\x0a\x09\x09\x09\x09priority:   60,\x0a\x09\x09\x09\x09toolbar:    \x27main-playlist\x27,\x0a\x09\x09\x09\x09filterable: \x27uploaded\x27,\x0a\x09\x09\x09\x09multiple:   \x27add\x27,\x0a\x09\x09\x09\x09editable:   false,\x0a\x0a\x09\x09\x09\x09library:  wp.media.query( _.defaults({\x0a\x09\x09\x09\x09\x09type: \x27audio\x27\x0a\x09\x09\x09\x09}, options.library ) )\x0a\x09\x09\x09}),\x0a\x0a\x09\x09\x09// Playlist states.\x0a\x09\x09\x09new wp.media.controller.CollectionEdit({\x0a\x09\x09\x09\x09type: \x27audio\x27,\x0a\x09\x09\x09\x09collectionType: \x27playlist\x27,\x0a\x09\x09\x09\x09title:          l10n.editPlaylistTitle,\x0a\x09\x09\x09\x09SettingsView:   wp.media.view.Settings.Playlist,\x0a\x09\x09\x09\x09library:        options.selection,\x0a\x09\x09\x09\x09editing:        options.editing,\x0a\x09\x09\x09\x09menu:           \x27playlist\x27,\x0a\x09\x09\x09\x09dragInfoText:   l10n.playlistDragInfo,\x0a\x09\x09\x09\x09dragInfo:       false\x0a\x09\x09\x09}),\x0a\x0a\x09\x09\x09new wp.media.controller.CollectionAdd({\x0a\x09\x09\x09\x09type: \x27audio\x27,\x0a\x09\x09\x09\x09collectionType: \x27playlist\x27,\x0a\x09\x09\x09\x09title: l10n.addToPlaylistTitle\x0a\x09\x09\x09}),\x0a\x0a\x09\x09\x09new Library({\x0a\x09\x09\x09\x09id:         \x27video-playlist\x27,\x0a\x09\x09\x09\x09title:      l10n.createVideoPlaylistTitle,\x0a\x09\x09\x09\x09priority:   60,\x0a\x09\x09\x09\x09toolbar:    \x27main-video-playlist\x27,\x0a\x09\x09\x09\x09filterable: \x27uploaded\x27,\x0a\x09\x09\x09\x09multiple:   \x27add\x27,\x0a\x09\x09\x09\x09editable:   false,\x0a\x0a\x09\x09\x09\x09library:  wp.media.query( _.defaults({\x0a\x09\x09\x09\x09\x09type: \x27video\x27\x0a\x09\x09\x09\x09}, options.library ) )\x0a\x09\x09\x09}),\x0a\x0a\x09\x09\x09new wp.media.controller.CollectionEdit({\x0a\x09\x09\x09\x09type: \x27video\x27,\x0a\x09\x09\x09\x09collectionType: \x27playlist\x27,\x0a\x09\x09\x09\x09title:          l10n.editVideoPlaylistTitle,\x0a\x09\x09\x09\x09SettingsView:   wp.media.view.Settings.Playlist,\x0a\x09\x09\x09\x09library:        options.selection,\x0a\x09\x09\x09\x09editing:        options.editing,\x0a\x09\x09\x09\x09menu:           \x27video-playlist\x27,\x0a\x09\x09\x09\x09dragInfoText:   l10n.videoPlaylistDragInfo,\x0a\x09\x09\x09\x09dragInfo:       false\x0a\x09\x09\x09}),\x0a\x0a\x09\x09\x09new wp.media.controller.CollectionAdd({\x0a\x09\x09\x09\x09type: \x27video\x27,\x0a\x09\x09\x09\x09collectionType: \x27playlist\x27,\x0a\x09\x09\x09\x09title: l10n.addToVideoPlaylistTitle\x0a\x09\x09\x09})\x0a\x09\x09]);\x0a\x0a\x09\x09if ( wp.media.view.settings.post.featuredImageId ) {\x0a\x09\x09\x09this.states.add( new wp.media.controller.FeaturedImage() );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09bindHandlers: function() {\x0a\x09\x09var handlers, checkCounts;\x0a\x0a\x09\x09Select.prototype.bindHandlers.apply( this, arguments );\x0a\x0a\x09\x09this.on( \x27activate\x27, this.activate, this );\x0a\x0a\x09\x09// Only bother checking media type counts if one of the counts is zero\x0a\x09\x09checkCounts = _.find( this.counts, function( type ) {\x0a\x09\x09\x09return type.count === 0;\x0a\x09\x09} );\x0a\x0a\x09\x09if ( typeof checkCounts !== \x27undefined\x27 ) {\x0a\x09\x09\x09this.listenTo( wp.media.model.Attachments.all, \x27change:type\x27, this.mediaTypeCounts );\x0a\x09\x09}\x0a\x0a\x09\x09this.on( \x27menu:create:gallery\x27, this.createMenu, this );\x0a\x09\x09this.on( \x27menu:create:playlist\x27, this.createMenu, this );\x0a\x09\x09this.on( \x27menu:create:video-playlist\x27, this.createMenu, this );\x0a\x09\x09this.on( \x27toolbar:create:main-insert\x27, this.createToolbar, this );\x0a\x09\x09this.on( \x27toolbar:create:main-gallery\x27, this.createToolbar, this );\x0a\x09\x09this.on( \x27toolbar:create:main-playlist\x27, this.createToolbar, this );\x0a\x09\x09this.on( \x27toolbar:create:main-video-playlist\x27, this.createToolbar, this );\x0a\x09\x09this.on( \x27toolbar:create:featured-image\x27, this.featuredImageToolbar, this );\x0a\x09\x09this.on( \x27toolbar:create:main-embed\x27, this.mainEmbedToolbar, this );\x0a\x0a\x09\x09handlers = {\x0a\x09\x09\x09menu: {\x0a\x09\x09\x09\x09\x27default\x27: \x27mainMenu\x27,\x0a\x09\x09\x09\x09\x27gallery\x27: \x27galleryMenu\x27,\x0a\x09\x09\x09\x09\x27playlist\x27: \x27playlistMenu\x27,\x0a\x09\x09\x09\x09\x27video-playlist\x27: \x27videoPlaylistMenu\x27\x0a\x09\x09\x09},\x0a\x0a\x09\x09\x09content: {\x0a\x09\x09\x09\x09\x27embed\x27:          \x27embedContent\x27,\x0a\x09\x09\x09\x09\x27edit-image\x27:     \x27editImageContent\x27,\x0a\x09\x09\x09\x09\x27edit-selection\x27: \x27editSelectionContent\x27\x0a\x09\x09\x09},\x0a\x0a\x09\x09\x09toolbar: {\x0a\x09\x09\x09\x09\x27main-insert\x27:      \x27mainInsertToolbar\x27,\x0a\x09\x09\x09\x09\x27main-gallery\x27:     \x27mainGalleryToolbar\x27,\x0a\x09\x09\x09\x09\x27gallery-edit\x27:     \x27galleryEditToolbar\x27,\x0a\x09\x09\x09\x09\x27gallery-add\x27:      \x27galleryAddToolbar\x27,\x0a\x09\x09\x09\x09\x27main-playlist\x27:\x09\x27mainPlaylistToolbar\x27,\x0a\x09\x09\x09\x09\x27playlist-edit\x27:\x09\x27playlistEditToolbar\x27,\x0a\x09\x09\x09\x09\x27playlist-add\x27:\x09\x09\x27playlistAddToolbar\x27,\x0a\x09\x09\x09\x09\x27main-video-playlist\x27: \x27mainVideoPlaylistToolbar\x27,\x0a\x09\x09\x09\x09\x27video-playlist-edit\x27: \x27videoPlaylistEditToolbar\x27,\x0a\x09\x09\x09\x09\x27video-playlist-add\x27: \x27videoPlaylistAddToolbar\x27\x0a\x09\x09\x09}\x0a\x09\x09};\x0a\x0a\x09\x09_.each( handlers, function( regionHandlers, region ) {\x0a\x09\x09\x09_.each( regionHandlers, function( callback, handler ) {\x0a\x09\x09\x09\x09this.on( region + \x27:render:\x27 + handler, this[ callback ], this );\x0a\x09\x09\x09}, this );\x0a\x09\x09}, this );\x0a\x09},\x0a\x0a\x09activate: function() {\x0a\x09\x09// Hide menu items for states tied to particular media types if there are no items\x0a\x09\x09_.each( this.counts, function( type ) {\x0a\x09\x09\x09if ( type.count \x3c 1 ) {\x0a\x09\x09\x09\x09this.menuItemVisibility( type.state, \x27hide\x27 );\x0a\x09\x09\x09}\x0a\x09\x09}, this );\x0a\x09},\x0a\x0a\x09mediaTypeCounts: function( model, attr ) {\x0a\x09\x09if ( typeof this.counts[ attr ] !== \x27undefined\x27 && this.counts[ attr ].count \x3c 1 ) {\x0a\x09\x09\x09this.counts[ attr ].count++;\x0a\x09\x09\x09this.menuItemVisibility( this.counts[ attr ].state, \x27show\x27 );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09// Menus\x0a\x09/**\x0a\x09 * @param {wp.Backbone.View} view\x0a\x09 */\x0a\x09mainMenu: function( view ) {\x0a\x09\x09view.set({\x0a\x09\x09\x09\x27library-separator\x27: new wp.media.View({\x0a\x09\x09\x09\x09className: \x27separator\x27,\x0a\x09\x09\x09\x09priority: 100\x0a\x09\x09\x09})\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09menuItemVisibility: function( state, visibility ) {\x0a\x09\x09var menu = this.menu.get();\x0a\x09\x09if ( visibility === \x27hide\x27 ) {\x0a\x09\x09\x09menu.hide( state );\x0a\x09\x09} else if ( visibility === \x27show\x27 ) {\x0a\x09\x09\x09menu.show( state );\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @param {wp.Backbone.View} view\x0a\x09 */\x0a\x09galleryMenu: function( view ) {\x0a\x09\x09var lastState = this.lastState(),\x0a\x09\x09\x09previous = lastState && lastState.id,\x0a\x09\x09\x09frame = this;\x0a\x0a\x09\x09view.set({\x0a\x09\x09\x09cancel: {\x0a\x09\x09\x09\x09text:     l10n.cancelGalleryTitle,\x0a\x09\x09\x09\x09priority: 20,\x0a\x09\x09\x09\x09click:    function() {\x0a\x09\x09\x09\x09\x09if ( previous ) {\x0a\x09\x09\x09\x09\x09\x09frame.setState( previous );\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09frame.close();\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09// Keep focus inside media modal\x0a\x09\x09\x09\x09\x09// after canceling a gallery\x0a\x09\x09\x09\x09\x09this.controller.modal.focusManager.focus();\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09},\x0a\x09\x09\x09separateCancel: new wp.media.View({\x0a\x09\x09\x09\x09className: \x27separator\x27,\x0a\x09\x09\x09\x09priority: 40\x0a\x09\x09\x09})\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09playlistMenu: function( view ) {\x0a\x09\x09var lastState = this.lastState(),\x0a\x09\x09\x09previous = lastState && lastState.id,\x0a\x09\x09\x09frame = this;\x0a\x0a\x09\x09view.set({\x0a\x09\x09\x09cancel: {\x0a\x09\x09\x09\x09text:     l10n.cancelPlaylistTitle,\x0a\x09\x09\x09\x09priority: 20,\x0a\x09\x09\x09\x09click:    function() {\x0a\x09\x09\x09\x09\x09if ( previous ) {\x0a\x09\x09\x09\x09\x09\x09frame.setState( previous );\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09frame.close();\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09},\x0a\x09\x09\x09separateCancel: new wp.media.View({\x0a\x09\x09\x09\x09className: \x27separator\x27,\x0a\x09\x09\x09\x09priority: 40\x0a\x09\x09\x09})\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09videoPlaylistMenu: function( view ) {\x0a\x09\x09var lastState = this.lastState(),\x0a\x09\x09\x09previous = lastState && lastState.id,\x0a\x09\x09\x09frame = this;\x0a\x0a\x09\x09view.set({\x0a\x09\x09\x09cancel: {\x0a\x09\x09\x09\x09text:     l10n.cancelVideoPlaylistTitle,\x0a\x09\x09\x09\x09priority: 20,\x0a\x09\x09\x09\x09click:    function() {\x0a\x09\x09\x09\x09\x09if ( previous ) {\x0a\x09\x09\x09\x09\x09\x09frame.setState( previous );\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09frame.close();\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09},\x0a\x09\x09\x09separateCancel: new wp.media.View({\x0a\x09\x09\x09\x09className: \x27separator\x27,\x0a\x09\x09\x09\x09priority: 40\x0a\x09\x09\x09})\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09// Content\x0a\x09embedContent: function() {\x0a\x09\x09var view = new wp.media.view.Embed({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09model:      this.state()\x0a\x09\x09}).render();\x0a\x0a\x09\x09this.content.set( view );\x0a\x0a\x09\x09if ( ! wp.media.isTouchDevice ) {\x0a\x09\x09\x09view.url.focus();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09editSelectionContent: function() {\x0a\x09\x09var state = this.state(),\x0a\x09\x09\x09selection = state.get(\x27selection\x27),\x0a\x09\x09\x09view;\x0a\x0a\x09\x09view = new wp.media.view.AttachmentsBrowser({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09collection: selection,\x0a\x09\x09\x09selection:  selection,\x0a\x09\x09\x09model:      state,\x0a\x09\x09\x09sortable:   true,\x0a\x09\x09\x09search:     false,\x0a\x09\x09\x09date:       false,\x0a\x09\x09\x09dragInfo:   true,\x0a\x0a\x09\x09\x09AttachmentView: wp.media.view.Attachments.EditSelection\x0a\x09\x09}).render();\x0a\x0a\x09\x09view.toolbar.set( \x27backToLibrary\x27, {\x0a\x09\x09\x09text:     l10n.returnToLibrary,\x0a\x09\x09\x09priority: -100,\x0a\x0a\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09this.controller.content.mode(\x27browse\x27);\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x0a\x09\x09// Browse our library of attachments.\x0a\x09\x09this.content.set( view );\x0a\x0a\x09\x09// Trigger the controller to set focus\x0a\x09\x09this.trigger( \x27edit:selection\x27, this );\x0a\x09},\x0a\x0a\x09editImageContent: function() {\x0a\x09\x09var image = this.state().get(\x27image\x27),\x0a\x09\x09\x09view = new wp.media.view.EditImage( { model: image, controller: this } ).render();\x0a\x0a\x09\x09this.content.set( view );\x0a\x0a\x09\x09// after creating the wrapper view, load the actual editor via an ajax call\x0a\x09\x09view.loadEditor();\x0a\x0a\x09},\x0a\x0a\x09// Toolbars\x0a\x0a\x09/**\x0a\x09 * @param {wp.Backbone.View} view\x0a\x09 */\x0a\x09selectionStatusToolbar: function( view ) {\x0a\x09\x09var editable = this.state().get(\x27editable\x27);\x0a\x0a\x09\x09view.set( \x27selection\x27, new wp.media.view.Selection({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09collection: this.state().get(\x27selection\x27),\x0a\x09\x09\x09priority:   -40,\x0a\x0a\x09\x09\x09// If the selection is editable, pass the callback to\x0a\x09\x09\x09// switch the content mode.\x0a\x09\x09\x09editable: editable && function() {\x0a\x09\x09\x09\x09this.controller.content.mode(\x27edit-selection\x27);\x0a\x09\x09\x09}\x0a\x09\x09}).render() );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @param {wp.Backbone.View} view\x0a\x09 */\x0a\x09mainInsertToolbar: function( view ) {\x0a\x09\x09var controller = this;\x0a\x0a\x09\x09this.selectionStatusToolbar( view );\x0a\x0a\x09\x09view.set( \x27insert\x27, {\x0a\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09priority: 80,\x0a\x09\x09\x09text:     l10n.insertIntoPost,\x0a\x09\x09\x09requires: { selection: true },\x0a\x0a\x09\x09\x09/**\x0a\x09\x09\x09 * @ignore\x0a\x09\x09\x09 *\x0a\x09\x09\x09 * @fires wp.media.controller.State#insert\x0a\x09\x09\x09 */\x0a\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09var state = controller.state(),\x0a\x09\x09\x09\x09\x09selection = state.get(\x27selection\x27);\x0a\x0a\x09\x09\x09\x09controller.close();\x0a\x09\x09\x09\x09state.trigger( \x27insert\x27, selection ).reset();\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @param {wp.Backbone.View} view\x0a\x09 */\x0a\x09mainGalleryToolbar: function( view ) {\x0a\x09\x09var controller = this;\x0a\x0a\x09\x09this.selectionStatusToolbar( view );\x0a\x0a\x09\x09view.set( \x27gallery\x27, {\x0a\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09text:     l10n.createNewGallery,\x0a\x09\x09\x09priority: 60,\x0a\x09\x09\x09requires: { selection: true },\x0a\x0a\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09var selection = controller.state().get(\x27selection\x27),\x0a\x09\x09\x09\x09\x09edit = controller.state(\x27gallery-edit\x27),\x0a\x09\x09\x09\x09\x09models = selection.where({ type: \x27image\x27 });\x0a\x0a\x09\x09\x09\x09edit.set( \x27library\x27, new wp.media.model.Selection( models, {\x0a\x09\x09\x09\x09\x09props:    selection.props.toJSON(),\x0a\x09\x09\x09\x09\x09multiple: true\x0a\x09\x09\x09\x09}) );\x0a\x0a\x09\x09\x09\x09this.controller.setState(\x27gallery-edit\x27);\x0a\x0a\x09\x09\x09\x09// Keep focus inside media modal\x0a\x09\x09\x09\x09// after jumping to gallery view\x0a\x09\x09\x09\x09this.controller.modal.focusManager.focus();\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09mainPlaylistToolbar: function( view ) {\x0a\x09\x09var controller = this;\x0a\x0a\x09\x09this.selectionStatusToolbar( view );\x0a\x0a\x09\x09view.set( \x27playlist\x27, {\x0a\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09text:     l10n.createNewPlaylist,\x0a\x09\x09\x09priority: 100,\x0a\x09\x09\x09requires: { selection: true },\x0a\x0a\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09var selection = controller.state().get(\x27selection\x27),\x0a\x09\x09\x09\x09\x09edit = controller.state(\x27playlist-edit\x27),\x0a\x09\x09\x09\x09\x09models = selection.where({ type: \x27audio\x27 });\x0a\x0a\x09\x09\x09\x09edit.set( \x27library\x27, new wp.media.model.Selection( models, {\x0a\x09\x09\x09\x09\x09props:    selection.props.toJSON(),\x0a\x09\x09\x09\x09\x09multiple: true\x0a\x09\x09\x09\x09}) );\x0a\x0a\x09\x09\x09\x09this.controller.setState(\x27playlist-edit\x27);\x0a\x0a\x09\x09\x09\x09// Keep focus inside media modal\x0a\x09\x09\x09\x09// after jumping to playlist view\x0a\x09\x09\x09\x09this.controller.modal.focusManager.focus();\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09mainVideoPlaylistToolbar: function( view ) {\x0a\x09\x09var controller = this;\x0a\x0a\x09\x09this.selectionStatusToolbar( view );\x0a\x0a\x09\x09view.set( \x27video-playlist\x27, {\x0a\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09text:     l10n.createNewVideoPlaylist,\x0a\x09\x09\x09priority: 100,\x0a\x09\x09\x09requires: { selection: true },\x0a\x0a\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09var selection = controller.state().get(\x27selection\x27),\x0a\x09\x09\x09\x09\x09edit = controller.state(\x27video-playlist-edit\x27),\x0a\x09\x09\x09\x09\x09models = selection.where({ type: \x27video\x27 });\x0a\x0a\x09\x09\x09\x09edit.set( \x27library\x27, new wp.media.model.Selection( models, {\x0a\x09\x09\x09\x09\x09props:    selection.props.toJSON(),\x0a\x09\x09\x09\x09\x09multiple: true\x0a\x09\x09\x09\x09}) );\x0a\x0a\x09\x09\x09\x09this.controller.setState(\x27video-playlist-edit\x27);\x0a\x0a\x09\x09\x09\x09// Keep focus inside media modal\x0a\x09\x09\x09\x09// after jumping to video playlist view\x0a\x09\x09\x09\x09this.controller.modal.focusManager.focus();\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09featuredImageToolbar: function( toolbar ) {\x0a\x09\x09this.createSelectToolbar( toolbar, {\x0a\x09\x09\x09text:  l10n.setFeaturedImage,\x0a\x09\x09\x09state: this.options.state\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09mainEmbedToolbar: function( toolbar ) {\x0a\x09\x09toolbar.view = new wp.media.view.Toolbar.Embed({\x0a\x09\x09\x09controller: this\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09galleryEditToolbar: function() {\x0a\x09\x09var editing = this.state().get(\x27editing\x27);\x0a\x09\x09this.toolbar.set( new wp.media.view.Toolbar({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09items: {\x0a\x09\x09\x09\x09insert: {\x0a\x09\x09\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09\x09\x09text:     editing ? l10n.updateGallery : l10n.insertGallery,\x0a\x09\x09\x09\x09\x09priority: 80,\x0a\x09\x09\x09\x09\x09requires: { library: true },\x0a\x0a\x09\x09\x09\x09\x09/**\x0a\x09\x09\x09\x09\x09 * @fires wp.media.controller.State#update\x0a\x09\x09\x09\x09\x09 */\x0a\x09\x09\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09\x09\x09var controller = this.controller,\x0a\x09\x09\x09\x09\x09\x09\x09state = controller.state();\x0a\x0a\x09\x09\x09\x09\x09\x09controller.close();\x0a\x09\x09\x09\x09\x09\x09state.trigger( \x27update\x27, state.get(\x27library\x27) );\x0a\x0a\x09\x09\x09\x09\x09\x09// Restore and reset the default state.\x0a\x09\x09\x09\x09\x09\x09controller.setState( controller.options.state );\x0a\x09\x09\x09\x09\x09\x09controller.reset();\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}) );\x0a\x09},\x0a\x0a\x09galleryAddToolbar: function() {\x0a\x09\x09this.toolbar.set( new wp.media.view.Toolbar({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09items: {\x0a\x09\x09\x09\x09insert: {\x0a\x09\x09\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09\x09\x09text:     l10n.addToGallery,\x0a\x09\x09\x09\x09\x09priority: 80,\x0a\x09\x09\x09\x09\x09requires: { selection: true },\x0a\x0a\x09\x09\x09\x09\x09/**\x0a\x09\x09\x09\x09\x09 * @fires wp.media.controller.State#reset\x0a\x09\x09\x09\x09\x09 */\x0a\x09\x09\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09\x09\x09var controller = this.controller,\x0a\x09\x09\x09\x09\x09\x09\x09state = controller.state(),\x0a\x09\x09\x09\x09\x09\x09\x09edit = controller.state(\x27gallery-edit\x27);\x0a\x0a\x09\x09\x09\x09\x09\x09edit.get(\x27library\x27).add( state.get(\x27selection\x27).models );\x0a\x09\x09\x09\x09\x09\x09state.trigger(\x27reset\x27);\x0a\x09\x09\x09\x09\x09\x09controller.setState(\x27gallery-edit\x27);\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}) );\x0a\x09},\x0a\x0a\x09playlistEditToolbar: function() {\x0a\x09\x09var editing = this.state().get(\x27editing\x27);\x0a\x09\x09this.toolbar.set( new wp.media.view.Toolbar({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09items: {\x0a\x09\x09\x09\x09insert: {\x0a\x09\x09\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09\x09\x09text:     editing ? l10n.updatePlaylist : l10n.insertPlaylist,\x0a\x09\x09\x09\x09\x09priority: 80,\x0a\x09\x09\x09\x09\x09requires: { library: true },\x0a\x0a\x09\x09\x09\x09\x09/**\x0a\x09\x09\x09\x09\x09 * @fires wp.media.controller.State#update\x0a\x09\x09\x09\x09\x09 */\x0a\x09\x09\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09\x09\x09var controller = this.controller,\x0a\x09\x09\x09\x09\x09\x09\x09state = controller.state();\x0a\x0a\x09\x09\x09\x09\x09\x09controller.close();\x0a\x09\x09\x09\x09\x09\x09state.trigger( \x27update\x27, state.get(\x27library\x27) );\x0a\x0a\x09\x09\x09\x09\x09\x09// Restore and reset the default state.\x0a\x09\x09\x09\x09\x09\x09controller.setState( controller.options.state );\x0a\x09\x09\x09\x09\x09\x09controller.reset();\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}) );\x0a\x09},\x0a\x0a\x09playlistAddToolbar: function() {\x0a\x09\x09this.toolbar.set( new wp.media.view.Toolbar({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09items: {\x0a\x09\x09\x09\x09insert: {\x0a\x09\x09\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09\x09\x09text:     l10n.addToPlaylist,\x0a\x09\x09\x09\x09\x09priority: 80,\x0a\x09\x09\x09\x09\x09requires: { selection: true },\x0a\x0a\x09\x09\x09\x09\x09/**\x0a\x09\x09\x09\x09\x09 * @fires wp.media.controller.State#reset\x0a\x09\x09\x09\x09\x09 */\x0a\x09\x09\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09\x09\x09var controller = this.controller,\x0a\x09\x09\x09\x09\x09\x09\x09state = controller.state(),\x0a\x09\x09\x09\x09\x09\x09\x09edit = controller.state(\x27playlist-edit\x27);\x0a\x0a\x09\x09\x09\x09\x09\x09edit.get(\x27library\x27).add( state.get(\x27selection\x27).models );\x0a\x09\x09\x09\x09\x09\x09state.trigger(\x27reset\x27);\x0a\x09\x09\x09\x09\x09\x09controller.setState(\x27playlist-edit\x27);\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}) );\x0a\x09},\x0a\x0a\x09videoPlaylistEditToolbar: function() {\x0a\x09\x09var editing = this.state().get(\x27editing\x27);\x0a\x09\x09this.toolbar.set( new wp.media.view.Toolbar({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09items: {\x0a\x09\x09\x09\x09insert: {\x0a\x09\x09\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09\x09\x09text:     editing ? l10n.updateVideoPlaylist : l10n.insertVideoPlaylist,\x0a\x09\x09\x09\x09\x09priority: 140,\x0a\x09\x09\x09\x09\x09requires: { library: true },\x0a\x0a\x09\x09\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09\x09\x09var controller = this.controller,\x0a\x09\x09\x09\x09\x09\x09\x09state = controller.state(),\x0a\x09\x09\x09\x09\x09\x09\x09library = state.get(\x27library\x27);\x0a\x0a\x09\x09\x09\x09\x09\x09library.type = \x27video\x27;\x0a\x0a\x09\x09\x09\x09\x09\x09controller.close();\x0a\x09\x09\x09\x09\x09\x09state.trigger( \x27update\x27, library );\x0a\x0a\x09\x09\x09\x09\x09\x09// Restore and reset the default state.\x0a\x09\x09\x09\x09\x09\x09controller.setState( controller.options.state );\x0a\x09\x09\x09\x09\x09\x09controller.reset();\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}) );\x0a\x09},\x0a\x0a\x09videoPlaylistAddToolbar: function() {\x0a\x09\x09this.toolbar.set( new wp.media.view.Toolbar({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09items: {\x0a\x09\x09\x09\x09insert: {\x0a\x09\x09\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09\x09\x09text:     l10n.addToVideoPlaylist,\x0a\x09\x09\x09\x09\x09priority: 140,\x0a\x09\x09\x09\x09\x09requires: { selection: true },\x0a\x0a\x09\x09\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09\x09\x09var controller = this.controller,\x0a\x09\x09\x09\x09\x09\x09\x09state = controller.state(),\x0a\x09\x09\x09\x09\x09\x09\x09edit = controller.state(\x27video-playlist-edit\x27);\x0a\x0a\x09\x09\x09\x09\x09\x09edit.get(\x27library\x27).add( state.get(\x27selection\x27).models );\x0a\x09\x09\x09\x09\x09\x09state.trigger(\x27reset\x27);\x0a\x09\x09\x09\x09\x09\x09controller.setState(\x27video-playlist-edit\x27);\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}) );\x0a\x09}\x0a});\x0a\x0amodule.exports = Post;\x0a\x0a\x0a/***/ }),\x0a/* 54 */\x0a/***/ (function(module, exports) {\x0a\x0avar Select = wp.media.view.MediaFrame.Select,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09ImageDetails;\x0a\x0a/**\x0a * wp.media.view.MediaFrame.ImageDetails\x0a *\x0a * A media frame for manipulating an image that\x27s already been inserted\x0a * into a post.\x0a *\x0a * @memberOf wp.media.view.MediaFrame\x0a *\x0a * @class\x0a * @augments wp.media.view.MediaFrame.Select\x0a * @augments wp.media.view.MediaFrame\x0a * @augments wp.media.view.Frame\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a * @mixes wp.media.controller.StateMachine\x0a */\x0aImageDetails = Select.extend(/** @lends wp.media.view.MediaFrame.ImageDetails.prototype */{\x0a\x09defaults: {\x0a\x09\x09id:      \x27image\x27,\x0a\x09\x09url:     \x27\x27,\x0a\x09\x09menu:    \x27image-details\x27,\x0a\x09\x09content: \x27image-details\x27,\x0a\x09\x09toolbar: \x27image-details\x27,\x0a\x09\x09type:    \x27link\x27,\x0a\x09\x09title:    l10n.imageDetailsTitle,\x0a\x09\x09priority: 120\x0a\x09},\x0a\x0a\x09initialize: function( options ) {\x0a\x09\x09this.image = new wp.media.model.PostImage( options.metadata );\x0a\x09\x09this.options.selection = new wp.media.model.Selection( this.image.attachment, { multiple: false } );\x0a\x09\x09Select.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09bindHandlers: function() {\x0a\x09\x09Select.prototype.bindHandlers.apply( this, arguments );\x0a\x09\x09this.on( \x27menu:create:image-details\x27, this.createMenu, this );\x0a\x09\x09this.on( \x27content:create:image-details\x27, this.imageDetailsContent, this );\x0a\x09\x09this.on( \x27content:render:edit-image\x27, this.editImageContent, this );\x0a\x09\x09this.on( \x27toolbar:render:image-details\x27, this.renderImageDetailsToolbar, this );\x0a\x09\x09// override the select toolbar\x0a\x09\x09this.on( \x27toolbar:render:replace\x27, this.renderReplaceImageToolbar, this );\x0a\x09},\x0a\x0a\x09createStates: function() {\x0a\x09\x09this.states.add([\x0a\x09\x09\x09new wp.media.controller.ImageDetails({\x0a\x09\x09\x09\x09image: this.image,\x0a\x09\x09\x09\x09editable: false\x0a\x09\x09\x09}),\x0a\x09\x09\x09new wp.media.controller.ReplaceImage({\x0a\x09\x09\x09\x09id: \x27replace-image\x27,\x0a\x09\x09\x09\x09library: wp.media.query( { type: \x27image\x27 } ),\x0a\x09\x09\x09\x09image: this.image,\x0a\x09\x09\x09\x09multiple:  false,\x0a\x09\x09\x09\x09title:     l10n.imageReplaceTitle,\x0a\x09\x09\x09\x09toolbar: \x27replace\x27,\x0a\x09\x09\x09\x09priority:  80,\x0a\x09\x09\x09\x09displaySettings: true\x0a\x09\x09\x09}),\x0a\x09\x09\x09new wp.media.controller.EditImage( {\x0a\x09\x09\x09\x09image: this.image,\x0a\x09\x09\x09\x09selection: this.options.selection\x0a\x09\x09\x09} )\x0a\x09\x09]);\x0a\x09},\x0a\x0a\x09imageDetailsContent: function( options ) {\x0a\x09\x09options.view = new wp.media.view.ImageDetails({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09model: this.state().image,\x0a\x09\x09\x09attachment: this.state().image.attachment\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09editImageContent: function() {\x0a\x09\x09var state = this.state(),\x0a\x09\x09\x09model = state.get(\x27image\x27),\x0a\x09\x09\x09view;\x0a\x0a\x09\x09if ( ! model ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09view = new wp.media.view.EditImage( { model: model, controller: this } ).render();\x0a\x0a\x09\x09this.content.set( view );\x0a\x0a\x09\x09// after bringing in the frame, load the actual editor via an ajax call\x0a\x09\x09view.loadEditor();\x0a\x0a\x09},\x0a\x0a\x09renderImageDetailsToolbar: function() {\x0a\x09\x09this.toolbar.set( new wp.media.view.Toolbar({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09items: {\x0a\x09\x09\x09\x09select: {\x0a\x09\x09\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09\x09\x09text:     l10n.update,\x0a\x09\x09\x09\x09\x09priority: 80,\x0a\x0a\x09\x09\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09\x09\x09var controller = this.controller,\x0a\x09\x09\x09\x09\x09\x09\x09state = controller.state();\x0a\x0a\x09\x09\x09\x09\x09\x09controller.close();\x0a\x0a\x09\x09\x09\x09\x09\x09// not sure if we want to use wp.media.string.image which will create a shortcode or\x0a\x09\x09\x09\x09\x09\x09// perhaps wp.html.string to at least to build the \x3cimg /\x3e\x0a\x09\x09\x09\x09\x09\x09state.trigger( \x27update\x27, controller.image.toJSON() );\x0a\x0a\x09\x09\x09\x09\x09\x09// Restore and reset the default state.\x0a\x09\x09\x09\x09\x09\x09controller.setState( controller.options.state );\x0a\x09\x09\x09\x09\x09\x09controller.reset();\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}) );\x0a\x09},\x0a\x0a\x09renderReplaceImageToolbar: function() {\x0a\x09\x09var frame = this,\x0a\x09\x09\x09lastState = frame.lastState(),\x0a\x09\x09\x09previous = lastState && lastState.id;\x0a\x0a\x09\x09this.toolbar.set( new wp.media.view.Toolbar({\x0a\x09\x09\x09controller: this,\x0a\x09\x09\x09items: {\x0a\x09\x09\x09\x09back: {\x0a\x09\x09\x09\x09\x09text:     l10n.back,\x0a\x09\x09\x09\x09\x09priority: 20,\x0a\x09\x09\x09\x09\x09click:    function() {\x0a\x09\x09\x09\x09\x09\x09if ( previous ) {\x0a\x09\x09\x09\x09\x09\x09\x09frame.setState( previous );\x0a\x09\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09\x09frame.close();\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09},\x0a\x0a\x09\x09\x09\x09replace: {\x0a\x09\x09\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09\x09\x09text:     l10n.replace,\x0a\x09\x09\x09\x09\x09priority: 80,\x0a\x09\x09\x09\x09\x09requires: { selection: true },\x0a\x0a\x09\x09\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09\x09\x09var controller = this.controller,\x0a\x09\x09\x09\x09\x09\x09\x09state = controller.state(),\x0a\x09\x09\x09\x09\x09\x09\x09selection = state.get( \x27selection\x27 ),\x0a\x09\x09\x09\x09\x09\x09\x09attachment = selection.single();\x0a\x0a\x09\x09\x09\x09\x09\x09controller.close();\x0a\x0a\x09\x09\x09\x09\x09\x09controller.image.changeAttachment( attachment, state.display( attachment ) );\x0a\x0a\x09\x09\x09\x09\x09\x09// not sure if we want to use wp.media.string.image which will create a shortcode or\x0a\x09\x09\x09\x09\x09\x09// perhaps wp.html.string to at least to build the \x3cimg /\x3e\x0a\x09\x09\x09\x09\x09\x09state.trigger( \x27replace\x27, controller.image.toJSON() );\x0a\x0a\x09\x09\x09\x09\x09\x09// Restore and reset the default state.\x0a\x09\x09\x09\x09\x09\x09controller.setState( controller.options.state );\x0a\x09\x09\x09\x09\x09\x09controller.reset();\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}) );\x0a\x09}\x0a\x0a});\x0a\x0amodule.exports = ImageDetails;\x0a\x0a\x0a/***/ }),\x0a/* 55 */\x0a/***/ (function(module, exports) {\x0a\x0avar $ = jQuery,\x0a\x09Modal;\x0a\x0a/**\x0a * wp.media.view.Modal\x0a *\x0a * A modal view, which the media modal uses as its default container.\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aModal = wp.media.View.extend(/** @lends wp.media.view.Modal.prototype */{\x0a\x09tagName:  \x27div\x27,\x0a\x09template: wp.template(\x27media-modal\x27),\x0a\x0a\x09events: {\x0a\x09\x09\x27click .media-modal-backdrop, .media-modal-close\x27: \x27escapeHandler\x27,\x0a\x09\x09\x27keydown\x27: \x27keydown\x27\x0a\x09},\x0a\x0a\x09clickedOpenerEl: null,\x0a\x0a\x09initialize: function() {\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09container:      document.body,\x0a\x09\x09\x09title:          \x27\x27,\x0a\x09\x09\x09propagate:      true,\x0a\x09\x09\x09hasCloseButton: true\x0a\x09\x09});\x0a\x0a\x09\x09this.focusManager = new wp.media.view.FocusManager({\x0a\x09\x09\x09el: this.el\x0a\x09\x09});\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {Object}\x0a\x09 */\x0a\x09prepare: function() {\x0a\x09\x09return {\x0a\x09\x09\x09title:          this.options.title,\x0a\x09\x09\x09hasCloseButton: this.options.hasCloseButton\x0a\x09\x09};\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @returns {wp.media.view.Modal} Returns itself to allow chaining\x0a\x09 */\x0a\x09attach: function() {\x0a\x09\x09if ( this.views.attached ) {\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! this.views.rendered ) {\x0a\x09\x09\x09this.render();\x0a\x09\x09}\x0a\x0a\x09\x09this.$el.appendTo( this.options.container );\x0a\x0a\x09\x09// Manually mark the view as attached and trigger ready.\x0a\x09\x09this.views.attached = true;\x0a\x09\x09this.views.ready();\x0a\x0a\x09\x09return this.propagate(\x27attach\x27);\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @returns {wp.media.view.Modal} Returns itself to allow chaining\x0a\x09 */\x0a\x09detach: function() {\x0a\x09\x09if ( this.$el.is(\x27:visible\x27) ) {\x0a\x09\x09\x09this.close();\x0a\x09\x09}\x0a\x0a\x09\x09this.$el.detach();\x0a\x09\x09this.views.attached = false;\x0a\x09\x09return this.propagate(\x27detach\x27);\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @returns {wp.media.view.Modal} Returns itself to allow chaining\x0a\x09 */\x0a\x09open: function() {\x0a\x09\x09var $el = this.$el,\x0a\x09\x09\x09mceEditor;\x0a\x0a\x09\x09if ( $el.is(\x27:visible\x27) ) {\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x0a\x09\x09this.clickedOpenerEl = document.activeElement;\x0a\x0a\x09\x09if ( ! this.views.attached ) {\x0a\x09\x09\x09this.attach();\x0a\x09\x09}\x0a\x0a\x09\x09// Disable page scrolling.\x0a\x09\x09$( \x27body\x27 ).addClass( \x27modal-open\x27 );\x0a\x0a\x09\x09$el.show();\x0a\x0a\x09\x09// Try to close the onscreen keyboard\x0a\x09\x09if ( \x27ontouchend\x27 in document ) {\x0a\x09\x09\x09if ( ( mceEditor = window.tinymce && window.tinymce.activeEditor ) && ! mceEditor.isHidden() && mceEditor.iframeElement ) {\x0a\x09\x09\x09\x09mceEditor.iframeElement.focus();\x0a\x09\x09\x09\x09mceEditor.iframeElement.blur();\x0a\x0a\x09\x09\x09\x09setTimeout( function() {\x0a\x09\x09\x09\x09\x09mceEditor.iframeElement.blur();\x0a\x09\x09\x09\x09}, 100 );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09// Set initial focus on the content instead of this view element, to avoid page scrolling.\x0a\x09\x09this.$( \x27.media-modal\x27 ).focus();\x0a\x0a\x09\x09// Hide the page content from assistive technologies.\x0a\x09\x09this.focusManager.setAriaHiddenOnBodyChildren( $el );\x0a\x0a\x09\x09return this.propagate(\x27open\x27);\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @param {Object} options\x0a\x09 * @returns {wp.media.view.Modal} Returns itself to allow chaining\x0a\x09 */\x0a\x09close: function( options ) {\x0a\x09\x09if ( ! this.views.attached || ! this.$el.is(\x27:visible\x27) ) {\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x0a\x09\x09// Enable page scrolling.\x0a\x09\x09$( \x27body\x27 ).removeClass( \x27modal-open\x27 );\x0a\x0a\x09\x09// Hide modal and remove restricted media modal tab focus once it\x27s closed\x0a\x09\x09this.$el.hide().undelegate( \x27keydown\x27 );\x0a\x0a\x09\x09/*\x0a\x09\x09 * Make visible again to assistive technologies all body children that\x0a\x09\x09 * have been made hidden when the modal opened.\x0a\x09\x09 */\x0a\x09\x09this.focusManager.removeAriaHiddenFromBodyChildren();\x0a\x0a\x09\x09// Put focus back in useful location once modal is closed.\x0a\x09\x09if ( null !== this.clickedOpenerEl ) {\x0a\x09\x09\x09this.clickedOpenerEl.focus();\x0a\x09\x09} else {\x0a\x09\x09\x09$( \x27#wpbody-content\x27 )\x0a\x09\x09\x09\x09.attr( \x27tabindex\x27, \x27-1\x27 )\x0a\x09\x09\x09\x09.focus();\x0a\x09\x09}\x0a\x0a\x09\x09this.propagate(\x27close\x27);\x0a\x0a\x09\x09if ( options && options.escape ) {\x0a\x09\x09\x09this.propagate(\x27escape\x27);\x0a\x09\x09}\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.Modal} Returns itself to allow chaining\x0a\x09 */\x0a\x09escape: function() {\x0a\x09\x09return this.close({ escape: true });\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09escapeHandler: function( event ) {\x0a\x09\x09event.preventDefault();\x0a\x09\x09this.escape();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @param {Array|Object} content Views to register to \x27.media-modal-content\x27\x0a\x09 * @returns {wp.media.view.Modal} Returns itself to allow chaining\x0a\x09 */\x0a\x09content: function( content ) {\x0a\x09\x09this.views.set( \x27.media-modal-content\x27, content );\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Triggers a modal event and if the `propagate` option is set,\x0a\x09 * forwards events to the modal\x27s controller.\x0a\x09 *\x0a\x09 * @param {string} id\x0a\x09 * @returns {wp.media.view.Modal} Returns itself to allow chaining\x0a\x09 */\x0a\x09propagate: function( id ) {\x0a\x09\x09this.trigger( id );\x0a\x0a\x09\x09if ( this.options.propagate ) {\x0a\x09\x09\x09this.controller.trigger( id );\x0a\x09\x09}\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09keydown: function( event ) {\x0a\x09\x09// Close the modal when escape is pressed.\x0a\x09\x09if ( 27 === event.which && this.$el.is(\x27:visible\x27) ) {\x0a\x09\x09\x09this.escape();\x0a\x09\x09\x09event.stopImmediatePropagation();\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = Modal;\x0a\x0a\x0a/***/ }),\x0a/* 56 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.FocusManager\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar FocusManager = wp.media.View.extend(/** @lends wp.media.view.FocusManager.prototype */{\x0a\x0a\x09events: {\x0a\x09\x09\x27keydown\x27: \x27constrainTabbing\x27\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Moves focus to the first visible menu item in the modal.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09focus: function() {\x0a\x09\x09this.$( \x27.media-menu-item\x27 ).filter( \x27:visible\x27 ).first().focus();\x0a\x09},\x0a\x09/**\x0a\x09 * Constrains navigation with the Tab key within the media view element.\x0a\x09 *\x0a\x09 * @since 4.0.0\x0a\x09 *\x0a\x09 * @param {Object} event A keydown jQuery event.\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09constrainTabbing: function( event ) {\x0a\x09\x09var tabbables;\x0a\x0a\x09\x09// Look for the tab key.\x0a\x09\x09if ( 9 !== event.keyCode ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Skip the file input added by Plupload.\x0a\x09\x09tabbables = this.$( \x27:tabbable\x27 ).not( \x27.moxie-shim input[type=\x22file\x22]\x27 );\x0a\x0a\x09\x09// Keep tab focus within media modal while it\x27s open\x0a\x09\x09if ( tabbables.last()[0] === event.target && ! event.shiftKey ) {\x0a\x09\x09\x09tabbables.first().focus();\x0a\x09\x09\x09return false;\x0a\x09\x09} else if ( tabbables.first()[0] === event.target && event.shiftKey ) {\x0a\x09\x09\x09tabbables.last().focus();\x0a\x09\x09\x09return false;\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Hides from assistive technologies all the body children except the\x0a\x09 * provided element and other elements that should not be hidden.\x0a\x09 *\x0a\x09 * The reason why we use `aria-hidden` is that `aria-modal=\x22true\x22` is buggy\x0a\x09 * in Safari 11.1 and support is spotty in other browsers. In the future we\x0a\x09 * should consider to remove this helper function and only use `aria-modal=\x22true\x22`.\x0a\x09 *\x0a\x09 * @since 5.2.3\x0a\x09 *\x0a\x09 * @param {object} visibleElement The jQuery object representing the element that should not be hidden.\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09setAriaHiddenOnBodyChildren: function( visibleElement ) {\x0a\x09\x09var bodyChildren,\x0a\x09\x09\x09self = this;\x0a\x0a\x09\x09if ( this.isBodyAriaHidden ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Get all the body children.\x0a\x09\x09bodyChildren = document.body.children;\x0a\x0a\x09\x09// Loop through the body children and hide the ones that should be hidden.\x0a\x09\x09_.each( bodyChildren, function( element ) {\x0a\x09\x09\x09// Don\x27t hide the modal element.\x0a\x09\x09\x09if ( element === visibleElement[0] ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Determine the body children to hide.\x0a\x09\x09\x09if ( self.elementShouldBeHidden( element ) ) {\x0a\x09\x09\x09\x09element.setAttribute( \x27aria-hidden\x27, \x27true\x27 );\x0a\x09\x09\x09\x09// Store the hidden elements.\x0a\x09\x09\x09\x09self.ariaHiddenElements.push( element );\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x0a\x09\x09this.isBodyAriaHidden = true;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Makes visible again to assistive technologies all body children\x0a\x09 * previously hidden and stored in this.ariaHiddenElements.\x0a\x09 *\x0a\x09 * @since 5.2.3\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09removeAriaHiddenFromBodyChildren: function() {\x0a\x09\x09_.each( this.ariaHiddenElements, function( element ) {\x0a\x09\x09\x09element.removeAttribute( \x27aria-hidden\x27 );\x0a\x09\x09} );\x0a\x0a\x09\x09this.ariaHiddenElements = [];\x0a\x09\x09this.isBodyAriaHidden   = false;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Determines if the passed element should not be hidden from assistive technologies.\x0a\x09 *\x0a\x09 * @since 5.2.3\x0a\x09 *\x0a\x09 * @param {object} element The DOM element that should be checked.\x0a\x09 *\x0a\x09 * @returns {boolean} Whether the element should not be hidden from assistive technologies.\x0a\x09 */\x0a\x09elementShouldBeHidden: function( element ) {\x0a\x09\x09var role = element.getAttribute( \x27role\x27 ),\x0a\x09\x09\x09liveRegionsRoles = [ \x27alert\x27, \x27status\x27, \x27log\x27, \x27marquee\x27, \x27timer\x27 ];\x0a\x0a\x09\x09/*\x0a\x09\x09 * Don\x27t hide scripts, elements that already have `aria-hidden`, and\x0a\x09\x09 * ARIA live regions.\x0a\x09\x09 */\x0a\x09\x09return ! (\x0a\x09\x09\x09element.tagName === \x27SCRIPT\x27 ||\x0a\x09\x09\x09element.hasAttribute( \x27aria-hidden\x27 ) ||\x0a\x09\x09\x09element.hasAttribute( \x27aria-live\x27 ) ||\x0a\x09\x09\x09liveRegionsRoles.indexOf( role ) !== -1\x0a\x09\x09);\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Whether the body children are hidden from assistive technologies.\x0a\x09 *\x0a\x09 * @since 5.2.3\x0a\x09 */\x0a\x09isBodyAriaHidden: false,\x0a\x0a\x09/**\x0a\x09 * Stores an array of DOM elements that should be hidden from assistive\x0a\x09 * technologies, for example when the media modal dialog opens.\x0a\x09 *\x0a\x09 * @since 5.2.3\x0a\x09 */\x0a\x09ariaHiddenElements: []\x0a});\x0a\x0amodule.exports = FocusManager;\x0a\x0a\x0a/***/ }),\x0a/* 57 */\x0a/***/ (function(module, exports) {\x0a\x0avar $ = jQuery,\x0a\x09UploaderWindow;\x0a\x0a/**\x0a * wp.media.view.UploaderWindow\x0a *\x0a * An uploader window that allows for dragging and dropping media.\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a *\x0a * @param {object} [options]                   Options hash passed to the view.\x0a * @param {object} [options.uploader]          Uploader properties.\x0a * @param {jQuery} [options.uploader.browser]\x0a * @param {jQuery} [options.uploader.dropzone] jQuery collection of the dropzone.\x0a * @param {object} [options.uploader.params]\x0a */\x0aUploaderWindow = wp.media.View.extend(/** @lends wp.media.view.UploaderWindow.prototype */{\x0a\x09tagName:   \x27div\x27,\x0a\x09className: \x27uploader-window\x27,\x0a\x09template:  wp.template(\x27uploader-window\x27),\x0a\x0a\x09initialize: function() {\x0a\x09\x09var uploader;\x0a\x0a\x09\x09this.$browser = $( \x27\x3cbutton type=\x22button\x22 class=\x22browser\x22 /\x3e\x27 ).hide().appendTo( \x27body\x27 );\x0a\x0a\x09\x09uploader = this.options.uploader = _.defaults( this.options.uploader || {}, {\x0a\x09\x09\x09dropzone:  this.$el,\x0a\x09\x09\x09browser:   this.$browser,\x0a\x09\x09\x09params:    {}\x0a\x09\x09});\x0a\x0a\x09\x09// Ensure the dropzone is a jQuery collection.\x0a\x09\x09if ( uploader.dropzone && ! (uploader.dropzone instanceof $) ) {\x0a\x09\x09\x09uploader.dropzone = $( uploader.dropzone );\x0a\x09\x09}\x0a\x0a\x09\x09this.controller.on( \x27activate\x27, this.refresh, this );\x0a\x0a\x09\x09this.controller.on( \x27detach\x27, function() {\x0a\x09\x09\x09this.$browser.remove();\x0a\x09\x09}, this );\x0a\x09},\x0a\x0a\x09refresh: function() {\x0a\x09\x09if ( this.uploader ) {\x0a\x09\x09\x09this.uploader.refresh();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09ready: function() {\x0a\x09\x09var postId = wp.media.view.settings.post.id,\x0a\x09\x09\x09dropzone;\x0a\x0a\x09\x09// If the uploader already exists, bail.\x0a\x09\x09if ( this.uploader ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09if ( postId ) {\x0a\x09\x09\x09this.options.uploader.params.post_id = postId;\x0a\x09\x09}\x0a\x09\x09this.uploader = new wp.Uploader( this.options.uploader );\x0a\x0a\x09\x09dropzone = this.uploader.dropzone;\x0a\x09\x09dropzone.on( \x27dropzone:enter\x27, _.bind( this.show, this ) );\x0a\x09\x09dropzone.on( \x27dropzone:leave\x27, _.bind( this.hide, this ) );\x0a\x0a\x09\x09$( this.uploader ).on( \x27uploader:ready\x27, _.bind( this._ready, this ) );\x0a\x09},\x0a\x0a\x09_ready: function() {\x0a\x09\x09this.controller.trigger( \x27uploader:ready\x27 );\x0a\x09},\x0a\x0a\x09show: function() {\x0a\x09\x09var $el = this.$el.show();\x0a\x0a\x09\x09// Ensure that the animation is triggered by waiting until\x0a\x09\x09// the transparent element is painted into the DOM.\x0a\x09\x09_.defer( function() {\x0a\x09\x09\x09$el.css({ opacity: 1 });\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09hide: function() {\x0a\x09\x09var $el = this.$el.css({ opacity: 0 });\x0a\x0a\x09\x09wp.media.transition( $el ).done( function() {\x0a\x09\x09\x09// Transition end events are subject to race conditions.\x0a\x09\x09\x09// Make sure that the value is set as intended.\x0a\x09\x09\x09if ( \x270\x27 === $el.css(\x27opacity\x27) ) {\x0a\x09\x09\x09\x09$el.hide();\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x0a\x09\x09// https://core.trac.wordpress.org/ticket/27341\x0a\x09\x09_.delay( function() {\x0a\x09\x09\x09if ( \x270\x27 === $el.css(\x27opacity\x27) && $el.is(\x27:visible\x27) ) {\x0a\x09\x09\x09\x09$el.hide();\x0a\x09\x09\x09}\x0a\x09\x09}, 500 );\x0a\x09}\x0a});\x0a\x0amodule.exports = UploaderWindow;\x0a\x0a\x0a/***/ }),\x0a/* 58 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09$ = jQuery,\x0a\x09EditorUploader;\x0a\x0a/**\x0a * Creates a dropzone on WP editor instances (elements with .wp-editor-wrap)\x0a * and relays drag\x27n\x27dropped files to a media workflow.\x0a *\x0a * wp.media.view.EditorUploader\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aEditorUploader = View.extend(/** @lends wp.media.view.EditorUploader.prototype */{\x0a\x09tagName:   \x27div\x27,\x0a\x09className: \x27uploader-editor\x27,\x0a\x09template:  wp.template( \x27uploader-editor\x27 ),\x0a\x0a\x09localDrag: false,\x0a\x09overContainer: false,\x0a\x09overDropzone: false,\x0a\x09draggingFile: null,\x0a\x0a\x09/**\x0a\x09 * Bind drag\x27n\x27drop events to callbacks.\x0a\x09 */\x0a\x09initialize: function() {\x0a\x09\x09this.initialized = false;\x0a\x0a\x09\x09// Bail if not enabled or UA does not support drag\x27n\x27drop or File API.\x0a\x09\x09if ( ! window.tinyMCEPreInit || ! window.tinyMCEPreInit.dragDropUpload || ! this.browserSupport() ) {\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x0a\x09\x09this.$document = $(document);\x0a\x09\x09this.dropzones = [];\x0a\x09\x09this.files = [];\x0a\x0a\x09\x09this.$document.on( \x27drop\x27, \x27.uploader-editor\x27, _.bind( this.drop, this ) );\x0a\x09\x09this.$document.on( \x27dragover\x27, \x27.uploader-editor\x27, _.bind( this.dropzoneDragover, this ) );\x0a\x09\x09this.$document.on( \x27dragleave\x27, \x27.uploader-editor\x27, _.bind( this.dropzoneDragleave, this ) );\x0a\x09\x09this.$document.on( \x27click\x27, \x27.uploader-editor\x27, _.bind( this.click, this ) );\x0a\x0a\x09\x09this.$document.on( \x27dragover\x27, _.bind( this.containerDragover, this ) );\x0a\x09\x09this.$document.on( \x27dragleave\x27, _.bind( this.containerDragleave, this ) );\x0a\x0a\x09\x09this.$document.on( \x27dragstart dragend drop\x27, _.bind( function( event ) {\x0a\x09\x09\x09this.localDrag = event.type === \x27dragstart\x27;\x0a\x0a\x09\x09\x09if ( event.type === \x27drop\x27 ) {\x0a\x09\x09\x09\x09this.containerDragleave();\x0a\x09\x09\x09}\x0a\x09\x09}, this ) );\x0a\x0a\x09\x09this.initialized = true;\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Check browser support for drag\x27n\x27drop.\x0a\x09 *\x0a\x09 * @return Boolean\x0a\x09 */\x0a\x09browserSupport: function() {\x0a\x09\x09var supports = false, div = document.createElement(\x27div\x27);\x0a\x0a\x09\x09supports = ( \x27draggable\x27 in div ) || ( \x27ondragstart\x27 in div && \x27ondrop\x27 in div );\x0a\x09\x09supports = supports && !! ( window.File && window.FileList && window.FileReader );\x0a\x09\x09return supports;\x0a\x09},\x0a\x0a\x09isDraggingFile: function( event ) {\x0a\x09\x09if ( this.draggingFile !== null ) {\x0a\x09\x09\x09return this.draggingFile;\x0a\x09\x09}\x0a\x0a\x09\x09if ( _.isUndefined( event.originalEvent ) || _.isUndefined( event.originalEvent.dataTransfer ) ) {\x0a\x09\x09\x09return false;\x0a\x09\x09}\x0a\x0a\x09\x09this.draggingFile = _.indexOf( event.originalEvent.dataTransfer.types, \x27Files\x27 ) \x3e -1 &&\x0a\x09\x09\x09_.indexOf( event.originalEvent.dataTransfer.types, \x27text/plain\x27 ) === -1;\x0a\x0a\x09\x09return this.draggingFile;\x0a\x09},\x0a\x0a\x09refresh: function( e ) {\x0a\x09\x09var dropzone_id;\x0a\x09\x09for ( dropzone_id in this.dropzones ) {\x0a\x09\x09\x09// Hide the dropzones only if dragging has left the screen.\x0a\x09\x09\x09this.dropzones[ dropzone_id ].toggle( this.overContainer || this.overDropzone );\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! _.isUndefined( e ) ) {\x0a\x09\x09\x09$( e.target ).closest( \x27.uploader-editor\x27 ).toggleClass( \x27droppable\x27, this.overDropzone );\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! this.overContainer && ! this.overDropzone ) {\x0a\x09\x09\x09this.draggingFile = null;\x0a\x09\x09}\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09render: function() {\x0a\x09\x09if ( ! this.initialized ) {\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x0a\x09\x09View.prototype.render.apply( this, arguments );\x0a\x09\x09$( \x27.wp-editor-wrap\x27 ).each( _.bind( this.attach, this ) );\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09attach: function( index, editor ) {\x0a\x09\x09// Attach a dropzone to an editor.\x0a\x09\x09var dropzone = this.$el.clone();\x0a\x09\x09this.dropzones.push( dropzone );\x0a\x09\x09$( editor ).append( dropzone );\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * When a file is dropped on the editor uploader, open up an editor media workflow\x0a\x09 * and upload the file immediately.\x0a\x09 *\x0a\x09 * @param  {jQuery.Event} event The \x27drop\x27 event.\x0a\x09 */\x0a\x09drop: function( event ) {\x0a\x09\x09var $wrap, uploadView;\x0a\x0a\x09\x09this.containerDragleave( event );\x0a\x09\x09this.dropzoneDragleave( event );\x0a\x0a\x09\x09this.files = event.originalEvent.dataTransfer.files;\x0a\x09\x09if ( this.files.length \x3c 1 ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Set the active editor to the drop target.\x0a\x09\x09$wrap = $( event.target ).parents( \x27.wp-editor-wrap\x27 );\x0a\x09\x09if ( $wrap.length \x3e 0 && $wrap[0].id ) {\x0a\x09\x09\x09window.wpActiveEditor = $wrap[0].id.slice( 3, -5 );\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! this.workflow ) {\x0a\x09\x09\x09this.workflow = wp.media.editor.open( window.wpActiveEditor, {\x0a\x09\x09\x09\x09frame:    \x27post\x27,\x0a\x09\x09\x09\x09state:    \x27insert\x27,\x0a\x09\x09\x09\x09title:    l10n.addMedia,\x0a\x09\x09\x09\x09multiple: true\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09uploadView = this.workflow.uploader;\x0a\x0a\x09\x09\x09if ( uploadView.uploader && uploadView.uploader.ready ) {\x0a\x09\x09\x09\x09this.addFiles.apply( this );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09this.workflow.on( \x27uploader:ready\x27, this.addFiles, this );\x0a\x09\x09\x09}\x0a\x09\x09} else {\x0a\x09\x09\x09this.workflow.state().reset();\x0a\x09\x09\x09this.addFiles.apply( this );\x0a\x09\x09\x09this.workflow.open();\x0a\x09\x09}\x0a\x0a\x09\x09return false;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Add the files to the uploader.\x0a\x09 */\x0a\x09addFiles: function() {\x0a\x09\x09if ( this.files.length ) {\x0a\x09\x09\x09this.workflow.uploader.uploader.uploader.addFile( _.toArray( this.files ) );\x0a\x09\x09\x09this.files = [];\x0a\x09\x09}\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09containerDragover: function( event ) {\x0a\x09\x09if ( this.localDrag || ! this.isDraggingFile( event ) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09this.overContainer = true;\x0a\x09\x09this.refresh();\x0a\x09},\x0a\x0a\x09containerDragleave: function() {\x0a\x09\x09this.overContainer = false;\x0a\x0a\x09\x09// Throttle dragleave because it\x27s called when bouncing from some elements to others.\x0a\x09\x09_.delay( _.bind( this.refresh, this ), 50 );\x0a\x09},\x0a\x0a\x09dropzoneDragover: function( event ) {\x0a\x09\x09if ( this.localDrag || ! this.isDraggingFile( event ) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09this.overDropzone = true;\x0a\x09\x09this.refresh( event );\x0a\x09\x09return false;\x0a\x09},\x0a\x0a\x09dropzoneDragleave: function( e ) {\x0a\x09\x09this.overDropzone = false;\x0a\x09\x09_.delay( _.bind( this.refresh, this, e ), 50 );\x0a\x09},\x0a\x0a\x09click: function( e ) {\x0a\x09\x09// In the rare case where the dropzone gets stuck, hide it on click.\x0a\x09\x09this.containerDragleave( e );\x0a\x09\x09this.dropzoneDragleave( e );\x0a\x09\x09this.localDrag = false;\x0a\x09}\x0a});\x0a\x0amodule.exports = EditorUploader;\x0a\x0a\x0a/***/ }),\x0a/* 59 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09UploaderInline;\x0a\x0a/**\x0a * wp.media.view.UploaderInline\x0a *\x0a * The inline uploader that shows up in the \x27Upload Files\x27 tab.\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aUploaderInline = View.extend(/** @lends wp.media.view.UploaderInline.prototype */{\x0a\x09tagName:   \x27div\x27,\x0a\x09className: \x27uploader-inline\x27,\x0a\x09template:  wp.template(\x27uploader-inline\x27),\x0a\x0a\x09events: {\x0a\x09\x09\x27click .close\x27: \x27hide\x27\x0a\x09},\x0a\x0a\x09initialize: function() {\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09message: \x27\x27,\x0a\x09\x09\x09status:  true,\x0a\x09\x09\x09canClose: false\x0a\x09\x09});\x0a\x0a\x09\x09if ( ! this.options.$browser && this.controller.uploader ) {\x0a\x09\x09\x09this.options.$browser = this.controller.uploader.$browser;\x0a\x09\x09}\x0a\x0a\x09\x09if ( _.isUndefined( this.options.postId ) ) {\x0a\x09\x09\x09this.options.postId = wp.media.view.settings.post.id;\x0a\x09\x09}\x0a\x0a\x09\x09if ( this.options.status ) {\x0a\x09\x09\x09this.views.set( \x27.upload-inline-status\x27, new wp.media.view.UploaderStatus({\x0a\x09\x09\x09\x09controller: this.controller\x0a\x09\x09\x09}) );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09prepare: function() {\x0a\x09\x09var suggestedWidth = this.controller.state().get(\x27suggestedWidth\x27),\x0a\x09\x09\x09suggestedHeight = this.controller.state().get(\x27suggestedHeight\x27),\x0a\x09\x09\x09data = {};\x0a\x0a\x09\x09data.message = this.options.message;\x0a\x09\x09data.canClose = this.options.canClose;\x0a\x0a\x09\x09if ( suggestedWidth && suggestedHeight ) {\x0a\x09\x09\x09data.suggestedWidth = suggestedWidth;\x0a\x09\x09\x09data.suggestedHeight = suggestedHeight;\x0a\x09\x09}\x0a\x0a\x09\x09return data;\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.UploaderInline} Returns itself to allow chaining\x0a\x09 */\x0a\x09dispose: function() {\x0a\x09\x09if ( this.disposing ) {\x0a\x09\x09\x09/**\x0a\x09\x09\x09 * call \x27dispose\x27 directly on the parent class\x0a\x09\x09\x09 */\x0a\x09\x09\x09return View.prototype.dispose.apply( this, arguments );\x0a\x09\x09}\x0a\x0a\x09\x09// Run remove on `dispose`, so we can be sure to refresh the\x0a\x09\x09// uploader with a view-less DOM. Track whether we\x27re disposing\x0a\x09\x09// so we don\x27t trigger an infinite loop.\x0a\x09\x09this.disposing = true;\x0a\x09\x09return this.remove();\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.UploaderInline} Returns itself to allow chaining\x0a\x09 */\x0a\x09remove: function() {\x0a\x09\x09/**\x0a\x09\x09 * call \x27remove\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09var result = View.prototype.remove.apply( this, arguments );\x0a\x0a\x09\x09_.defer( _.bind( this.refresh, this ) );\x0a\x09\x09return result;\x0a\x09},\x0a\x0a\x09refresh: function() {\x0a\x09\x09var uploader = this.controller.uploader;\x0a\x0a\x09\x09if ( uploader ) {\x0a\x09\x09\x09uploader.refresh();\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.UploaderInline}\x0a\x09 */\x0a\x09ready: function() {\x0a\x09\x09var $browser = this.options.$browser,\x0a\x09\x09\x09$placeholder;\x0a\x0a\x09\x09if ( this.controller.uploader ) {\x0a\x09\x09\x09$placeholder = this.$(\x27.browser\x27);\x0a\x0a\x09\x09\x09// Check if we\x27ve already replaced the placeholder.\x0a\x09\x09\x09if ( $placeholder[0] === $browser[0] ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09$browser.detach().text( $placeholder.text() );\x0a\x09\x09\x09$browser[0].className = $placeholder[0].className;\x0a\x09\x09\x09$placeholder.replaceWith( $browser.show() );\x0a\x09\x09}\x0a\x0a\x09\x09this.refresh();\x0a\x09\x09return this;\x0a\x09},\x0a\x09show: function() {\x0a\x09\x09this.$el.removeClass( \x27hidden\x27 );\x0a\x09\x09if ( this.controller.$uploaderToggler && this.controller.$uploaderToggler.length ) {\x0a\x09\x09\x09this.controller.$uploaderToggler.attr( \x27aria-expanded\x27, \x27true\x27 );\x0a\x09\x09}\x0a\x09},\x0a\x09hide: function() {\x0a\x09\x09this.$el.addClass( \x27hidden\x27 );\x0a\x09\x09if ( this.controller.$uploaderToggler && this.controller.$uploaderToggler.length ) {\x0a\x09\x09\x09this.controller.$uploaderToggler\x0a\x09\x09\x09\x09.attr( \x27aria-expanded\x27, \x27false\x27 )\x0a\x09\x09\x09\x09// Move focus back to the toggle button when closing the uploader.\x0a\x09\x09\x09\x09.focus();\x0a\x09\x09}\x0a\x09}\x0a\x0a});\x0a\x0amodule.exports = UploaderInline;\x0a\x0a\x0a/***/ }),\x0a/* 60 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09UploaderStatus;\x0a\x0a/**\x0a * wp.media.view.UploaderStatus\x0a *\x0a * An uploader status for on-going uploads.\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aUploaderStatus = View.extend(/** @lends wp.media.view.UploaderStatus.prototype */{\x0a\x09className: \x27media-uploader-status\x27,\x0a\x09template:  wp.template(\x27uploader-status\x27),\x0a\x0a\x09events: {\x0a\x09\x09\x27click .upload-dismiss-errors\x27: \x27dismiss\x27\x0a\x09},\x0a\x0a\x09initialize: function() {\x0a\x09\x09this.queue = wp.Uploader.queue;\x0a\x09\x09this.queue.on( \x27add remove reset\x27, this.visibility, this );\x0a\x09\x09this.queue.on( \x27add remove reset change:percent\x27, this.progress, this );\x0a\x09\x09this.queue.on( \x27add remove reset change:uploading\x27, this.info, this );\x0a\x0a\x09\x09this.errors = wp.Uploader.errors;\x0a\x09\x09this.errors.reset();\x0a\x09\x09this.errors.on( \x27add remove reset\x27, this.visibility, this );\x0a\x09\x09this.errors.on( \x27add\x27, this.error, this );\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.UploaderStatus}\x0a\x09 */\x0a\x09dispose: function() {\x0a\x09\x09wp.Uploader.queue.off( null, null, this );\x0a\x09\x09/**\x0a\x09\x09 * call \x27dispose\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09View.prototype.dispose.apply( this, arguments );\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09visibility: function() {\x0a\x09\x09this.$el.toggleClass( \x27uploading\x27, !! this.queue.length );\x0a\x09\x09this.$el.toggleClass( \x27errors\x27, !! this.errors.length );\x0a\x09\x09this.$el.toggle( !! this.queue.length || !! this.errors.length );\x0a\x09},\x0a\x0a\x09ready: function() {\x0a\x09\x09_.each({\x0a\x09\x09\x09\x27$bar\x27:      \x27.media-progress-bar div\x27,\x0a\x09\x09\x09\x27$index\x27:    \x27.upload-index\x27,\x0a\x09\x09\x09\x27$total\x27:    \x27.upload-total\x27,\x0a\x09\x09\x09\x27$filename\x27: \x27.upload-filename\x27\x0a\x09\x09}, function( selector, key ) {\x0a\x09\x09\x09this[ key ] = this.$( selector );\x0a\x09\x09}, this );\x0a\x0a\x09\x09this.visibility();\x0a\x09\x09this.progress();\x0a\x09\x09this.info();\x0a\x09},\x0a\x0a\x09progress: function() {\x0a\x09\x09var queue = this.queue,\x0a\x09\x09\x09$bar = this.$bar;\x0a\x0a\x09\x09if ( ! $bar || ! queue.length ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09$bar.width( ( queue.reduce( function( memo, attachment ) {\x0a\x09\x09\x09if ( ! attachment.get(\x27uploading\x27) ) {\x0a\x09\x09\x09\x09return memo + 100;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09var percent = attachment.get(\x27percent\x27);\x0a\x09\x09\x09return memo + ( _.isNumber( percent ) ? percent : 100 );\x0a\x09\x09}, 0 ) / queue.length ) + \x27%\x27 );\x0a\x09},\x0a\x0a\x09info: function() {\x0a\x09\x09var queue = this.queue,\x0a\x09\x09\x09index = 0, active;\x0a\x0a\x09\x09if ( ! queue.length ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09active = this.queue.find( function( attachment, i ) {\x0a\x09\x09\x09index = i;\x0a\x09\x09\x09return attachment.get(\x27uploading\x27);\x0a\x09\x09});\x0a\x0a\x09\x09this.$index.text( index + 1 );\x0a\x09\x09this.$total.text( queue.length );\x0a\x09\x09this.$filename.html( active ? this.filename( active.get(\x27filename\x27) ) : \x27\x27 );\x0a\x09},\x0a\x09/**\x0a\x09 * @param {string} filename\x0a\x09 * @returns {string}\x0a\x09 */\x0a\x09filename: function( filename ) {\x0a\x09\x09return _.escape( filename );\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Backbone.Model} error\x0a\x09 */\x0a\x09error: function( error ) {\x0a\x09\x09this.views.add( \x27.upload-errors\x27, new wp.media.view.UploaderStatusError({\x0a\x09\x09\x09filename: this.filename( error.get(\x27file\x27).name ),\x0a\x09\x09\x09message:  error.get(\x27message\x27)\x0a\x09\x09}), { at: 0 });\x0a\x09},\x0a\x0a\x09dismiss: function() {\x0a\x09\x09var errors = this.views.get(\x27.upload-errors\x27);\x0a\x0a\x09\x09if ( errors ) {\x0a\x09\x09\x09_.invoke( errors, \x27remove\x27 );\x0a\x09\x09}\x0a\x09\x09wp.Uploader.errors.reset();\x0a\x09\x09// Keep focus within the modal after the dismiss button gets removed from the DOM.\x0a\x09\x09this.controller.modal.focusManager.focus();\x0a\x09}\x0a});\x0a\x0amodule.exports = UploaderStatus;\x0a\x0a\x0a/***/ }),\x0a/* 61 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.UploaderStatusError\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar UploaderStatusError = wp.media.View.extend(/** @lends wp.media.view.UploaderStatusError.prototype */{\x0a\x09className: \x27upload-error\x27,\x0a\x09template:  wp.template(\x27uploader-status-error\x27)\x0a});\x0a\x0amodule.exports = UploaderStatusError;\x0a\x0a\x0a/***/ }),\x0a/* 62 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09Toolbar;\x0a\x0a/**\x0a * wp.media.view.Toolbar\x0a *\x0a * A toolbar which consists of a primary and a secondary section. Each sections\x0a * can be filled with views.\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aToolbar = View.extend(/** @lends wp.media.view.Toolbar.prototype */{\x0a\x09tagName:   \x27div\x27,\x0a\x09className: \x27media-toolbar\x27,\x0a\x0a\x09initialize: function() {\x0a\x09\x09var state = this.controller.state(),\x0a\x09\x09\x09selection = this.selection = state.get(\x27selection\x27),\x0a\x09\x09\x09library = this.library = state.get(\x27library\x27);\x0a\x0a\x09\x09this._views = {};\x0a\x0a\x09\x09// The toolbar is composed of two `PriorityList` views.\x0a\x09\x09this.primary   = new wp.media.view.PriorityList();\x0a\x09\x09this.secondary = new wp.media.view.PriorityList();\x0a\x09\x09this.primary.$el.addClass(\x27media-toolbar-primary search-form\x27);\x0a\x09\x09this.secondary.$el.addClass(\x27media-toolbar-secondary\x27);\x0a\x0a\x09\x09this.views.set([ this.secondary, this.primary ]);\x0a\x0a\x09\x09if ( this.options.items ) {\x0a\x09\x09\x09this.set( this.options.items, { silent: true });\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! this.options.silent ) {\x0a\x09\x09\x09this.render();\x0a\x09\x09}\x0a\x0a\x09\x09if ( selection ) {\x0a\x09\x09\x09selection.on( \x27add remove reset\x27, this.refresh, this );\x0a\x09\x09}\x0a\x0a\x09\x09if ( library ) {\x0a\x09\x09\x09library.on( \x27add remove reset\x27, this.refresh, this );\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.Toolbar} Returns itsef to allow chaining\x0a\x09 */\x0a\x09dispose: function() {\x0a\x09\x09if ( this.selection ) {\x0a\x09\x09\x09this.selection.off( null, null, this );\x0a\x09\x09}\x0a\x0a\x09\x09if ( this.library ) {\x0a\x09\x09\x09this.library.off( null, null, this );\x0a\x09\x09}\x0a\x09\x09/**\x0a\x09\x09 * call \x27dispose\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09return View.prototype.dispose.apply( this, arguments );\x0a\x09},\x0a\x0a\x09ready: function() {\x0a\x09\x09this.refresh();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @param {string} id\x0a\x09 * @param {Backbone.View|Object} view\x0a\x09 * @param {Object} [options={}]\x0a\x09 * @returns {wp.media.view.Toolbar} Returns itself to allow chaining\x0a\x09 */\x0a\x09set: function( id, view, options ) {\x0a\x09\x09var list;\x0a\x09\x09options = options || {};\x0a\x0a\x09\x09// Accept an object with an `id` : `view` mapping.\x0a\x09\x09if ( _.isObject( id ) ) {\x0a\x09\x09\x09_.each( id, function( view, id ) {\x0a\x09\x09\x09\x09this.set( id, view, { silent: true });\x0a\x09\x09\x09}, this );\x0a\x0a\x09\x09} else {\x0a\x09\x09\x09if ( ! ( view instanceof Backbone.View ) ) {\x0a\x09\x09\x09\x09view.classes = [ \x27media-button-\x27 + id ].concat( view.classes || [] );\x0a\x09\x09\x09\x09view = new wp.media.view.Button( view ).render();\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09view.controller = view.controller || this.controller;\x0a\x0a\x09\x09\x09this._views[ id ] = view;\x0a\x0a\x09\x09\x09list = view.options.priority \x3c 0 ? \x27secondary\x27 : \x27primary\x27;\x0a\x09\x09\x09this[ list ].set( id, view, options );\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! options.silent ) {\x0a\x09\x09\x09this.refresh();\x0a\x09\x09}\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * @param {string} id\x0a\x09 * @returns {wp.media.view.Button}\x0a\x09 */\x0a\x09get: function( id ) {\x0a\x09\x09return this._views[ id ];\x0a\x09},\x0a\x09/**\x0a\x09 * @param {string} id\x0a\x09 * @param {Object} options\x0a\x09 * @returns {wp.media.view.Toolbar} Returns itself to allow chaining\x0a\x09 */\x0a\x09unset: function( id, options ) {\x0a\x09\x09delete this._views[ id ];\x0a\x09\x09this.primary.unset( id, options );\x0a\x09\x09this.secondary.unset( id, options );\x0a\x0a\x09\x09if ( ! options || ! options.silent ) {\x0a\x09\x09\x09this.refresh();\x0a\x09\x09}\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09refresh: function() {\x0a\x09\x09var state = this.controller.state(),\x0a\x09\x09\x09library = state.get(\x27library\x27),\x0a\x09\x09\x09selection = state.get(\x27selection\x27);\x0a\x0a\x09\x09_.each( this._views, function( button ) {\x0a\x09\x09\x09if ( ! button.model || ! button.options || ! button.options.requires ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09var requires = button.options.requires,\x0a\x09\x09\x09\x09disabled = false;\x0a\x0a\x09\x09\x09// Prevent insertion of attachments if any of them are still uploading\x0a\x09\x09\x09if ( selection && selection.models ) {\x0a\x09\x09\x09\x09disabled = _.some( selection.models, function( attachment ) {\x0a\x09\x09\x09\x09\x09return attachment.get(\x27uploading\x27) === true;\x0a\x09\x09\x09\x09});\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( requires.selection && selection && ! selection.length ) {\x0a\x09\x09\x09\x09disabled = true;\x0a\x09\x09\x09} else if ( requires.library && library && ! library.length ) {\x0a\x09\x09\x09\x09disabled = true;\x0a\x09\x09\x09}\x0a\x09\x09\x09button.model.set( \x27disabled\x27, disabled );\x0a\x09\x09});\x0a\x09}\x0a});\x0a\x0amodule.exports = Toolbar;\x0a\x0a\x0a/***/ }),\x0a/* 63 */\x0a/***/ (function(module, exports) {\x0a\x0avar Toolbar = wp.media.view.Toolbar,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09Select;\x0a\x0a/**\x0a * wp.media.view.Toolbar.Select\x0a *\x0a * @memberOf wp.media.view.Toolbar\x0a *\x0a * @class\x0a * @augments wp.media.view.Toolbar\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aSelect = Toolbar.extend(/** @lends wp.media.view.Toolbar.Select.prototype */{\x0a\x09initialize: function() {\x0a\x09\x09var options = this.options;\x0a\x0a\x09\x09_.bindAll( this, \x27clickSelect\x27 );\x0a\x0a\x09\x09_.defaults( options, {\x0a\x09\x09\x09event: \x27select\x27,\x0a\x09\x09\x09state: false,\x0a\x09\x09\x09reset: true,\x0a\x09\x09\x09close: true,\x0a\x09\x09\x09text:  l10n.select,\x0a\x0a\x09\x09\x09// Does the button rely on the selection?\x0a\x09\x09\x09requires: {\x0a\x09\x09\x09\x09selection: true\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x0a\x09\x09options.items = _.defaults( options.items || {}, {\x0a\x09\x09\x09select: {\x0a\x09\x09\x09\x09style:    \x27primary\x27,\x0a\x09\x09\x09\x09text:     options.text,\x0a\x09\x09\x09\x09priority: 80,\x0a\x09\x09\x09\x09click:    this.clickSelect,\x0a\x09\x09\x09\x09requires: options.requires\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09\x09// Call \x27initialize\x27 directly on the parent class.\x0a\x09\x09Toolbar.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09clickSelect: function() {\x0a\x09\x09var options = this.options,\x0a\x09\x09\x09controller = this.controller;\x0a\x0a\x09\x09if ( options.close ) {\x0a\x09\x09\x09controller.close();\x0a\x09\x09}\x0a\x0a\x09\x09if ( options.event ) {\x0a\x09\x09\x09controller.state().trigger( options.event );\x0a\x09\x09}\x0a\x0a\x09\x09if ( options.state ) {\x0a\x09\x09\x09controller.setState( options.state );\x0a\x09\x09}\x0a\x0a\x09\x09if ( options.reset ) {\x0a\x09\x09\x09controller.reset();\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = Select;\x0a\x0a\x0a/***/ }),\x0a/* 64 */\x0a/***/ (function(module, exports) {\x0a\x0avar Select = wp.media.view.Toolbar.Select,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09Embed;\x0a\x0a/**\x0a * wp.media.view.Toolbar.Embed\x0a *\x0a * @memberOf wp.media.view.Toolbar\x0a *\x0a * @class\x0a * @augments wp.media.view.Toolbar.Select\x0a * @augments wp.media.view.Toolbar\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aEmbed = Select.extend(/** @lends wp.media.view.Toolbar.Embed.prototype */{\x0a\x09initialize: function() {\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09text: l10n.insertIntoPost,\x0a\x09\x09\x09requires: false\x0a\x09\x09});\x0a\x09\x09// Call \x27initialize\x27 directly on the parent class.\x0a\x09\x09Select.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09refresh: function() {\x0a\x09\x09var url = this.controller.state().props.get(\x27url\x27);\x0a\x09\x09this.get(\x27select\x27).model.set( \x27disabled\x27, ! url || url === \x27http://\x27 );\x0a\x09\x09/**\x0a\x09\x09 * call \x27refresh\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09Select.prototype.refresh.apply( this, arguments );\x0a\x09}\x0a});\x0a\x0amodule.exports = Embed;\x0a\x0a\x0a/***/ }),\x0a/* 65 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Button\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar Button = wp.media.View.extend(/** @lends wp.media.view.Button.prototype */{\x0a\x09tagName:    \x27button\x27,\x0a\x09className:  \x27media-button\x27,\x0a\x09attributes: { type: \x27button\x27 },\x0a\x0a\x09events: {\x0a\x09\x09\x27click\x27: \x27click\x27\x0a\x09},\x0a\x0a\x09defaults: {\x0a\x09\x09text:     \x27\x27,\x0a\x09\x09style:    \x27\x27,\x0a\x09\x09size:     \x27large\x27,\x0a\x09\x09disabled: false\x0a\x09},\x0a\x0a\x09initialize: function() {\x0a\x09\x09/**\x0a\x09\x09 * Create a model with the provided `defaults`.\x0a\x09\x09 *\x0a\x09\x09 * @member {Backbone.Model}\x0a\x09\x09 */\x0a\x09\x09this.model = new Backbone.Model( this.defaults );\x0a\x0a\x09\x09// If any of the `options` have a key from `defaults`, apply its\x0a\x09\x09// value to the `model` and remove it from the `options object.\x0a\x09\x09_.each( this.defaults, function( def, key ) {\x0a\x09\x09\x09var value = this.options[ key ];\x0a\x09\x09\x09if ( _.isUndefined( value ) ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09this.model.set( key, value );\x0a\x09\x09\x09delete this.options[ key ];\x0a\x09\x09}, this );\x0a\x0a\x09\x09this.listenTo( this.model, \x27change\x27, this.render );\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.Button} Returns itself to allow chaining\x0a\x09 */\x0a\x09render: function() {\x0a\x09\x09var classes = [ \x27button\x27, this.className ],\x0a\x09\x09\x09model = this.model.toJSON();\x0a\x0a\x09\x09if ( model.style ) {\x0a\x09\x09\x09classes.push( \x27button-\x27 + model.style );\x0a\x09\x09}\x0a\x0a\x09\x09if ( model.size ) {\x0a\x09\x09\x09classes.push( \x27button-\x27 + model.size );\x0a\x09\x09}\x0a\x0a\x09\x09classes = _.uniq( classes.concat( this.options.classes ) );\x0a\x09\x09this.el.className = classes.join(\x27 \x27);\x0a\x0a\x09\x09this.$el.attr( \x27disabled\x27, model.disabled );\x0a\x09\x09this.$el.text( this.model.get(\x27text\x27) );\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09click: function( event ) {\x0a\x09\x09if ( \x27#\x27 === this.attributes.href ) {\x0a\x09\x09\x09event.preventDefault();\x0a\x09\x09}\x0a\x0a\x09\x09if ( this.options.click && ! this.model.get(\x27disabled\x27) ) {\x0a\x09\x09\x09this.options.click.apply( this, arguments );\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = Button;\x0a\x0a\x0a/***/ }),\x0a/* 66 */\x0a/***/ (function(module, exports) {\x0a\x0avar $ = Backbone.$,\x0a\x09ButtonGroup;\x0a\x0a/**\x0a * wp.media.view.ButtonGroup\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aButtonGroup = wp.media.View.extend(/** @lends wp.media.view.ButtonGroup.prototype */{\x0a\x09tagName:   \x27div\x27,\x0a\x09className: \x27button-group button-large media-button-group\x27,\x0a\x0a\x09initialize: function() {\x0a\x09\x09/**\x0a\x09\x09 * @member {wp.media.view.Button[]}\x0a\x09\x09 */\x0a\x09\x09this.buttons = _.map( this.options.buttons || [], function( button ) {\x0a\x09\x09\x09if ( button instanceof Backbone.View ) {\x0a\x09\x09\x09\x09return button;\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09return new wp.media.view.Button( button ).render();\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x0a\x09\x09delete this.options.buttons;\x0a\x0a\x09\x09if ( this.options.classes ) {\x0a\x09\x09\x09this.$el.addClass( this.options.classes );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @returns {wp.media.view.ButtonGroup}\x0a\x09 */\x0a\x09render: function() {\x0a\x09\x09this.$el.html( $( _.pluck( this.buttons, \x27el\x27 ) ).detach() );\x0a\x09\x09return this;\x0a\x09}\x0a});\x0a\x0amodule.exports = ButtonGroup;\x0a\x0a\x0a/***/ }),\x0a/* 67 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.PriorityList\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar PriorityList = wp.media.View.extend(/** @lends wp.media.view.PriorityList.prototype */{\x0a\x09tagName:   \x27div\x27,\x0a\x0a\x09initialize: function() {\x0a\x09\x09this._views = {};\x0a\x0a\x09\x09this.set( _.extend( {}, this._views, this.options.views ), { silent: true });\x0a\x09\x09delete this.options.views;\x0a\x0a\x09\x09if ( ! this.options.silent ) {\x0a\x09\x09\x09this.render();\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @param {string} id\x0a\x09 * @param {wp.media.View|Object} view\x0a\x09 * @param {Object} options\x0a\x09 * @returns {wp.media.view.PriorityList} Returns itself to allow chaining\x0a\x09 */\x0a\x09set: function( id, view, options ) {\x0a\x09\x09var priority, views, index;\x0a\x0a\x09\x09options = options || {};\x0a\x0a\x09\x09// Accept an object with an `id` : `view` mapping.\x0a\x09\x09if ( _.isObject( id ) ) {\x0a\x09\x09\x09_.each( id, function( view, id ) {\x0a\x09\x09\x09\x09this.set( id, view );\x0a\x09\x09\x09}, this );\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! (view instanceof Backbone.View) ) {\x0a\x09\x09\x09view = this.toView( view, id, options );\x0a\x09\x09}\x0a\x09\x09view.controller = view.controller || this.controller;\x0a\x0a\x09\x09this.unset( id );\x0a\x0a\x09\x09priority = view.options.priority || 10;\x0a\x09\x09views = this.views.get() || [];\x0a\x0a\x09\x09_.find( views, function( existing, i ) {\x0a\x09\x09\x09if ( existing.options.priority \x3e priority ) {\x0a\x09\x09\x09\x09index = i;\x0a\x09\x09\x09\x09return true;\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x0a\x09\x09this._views[ id ] = view;\x0a\x09\x09this.views.add( view, {\x0a\x09\x09\x09at: _.isNumber( index ) ? index : views.length || 0\x0a\x09\x09});\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * @param {string} id\x0a\x09 * @returns {wp.media.View}\x0a\x09 */\x0a\x09get: function( id ) {\x0a\x09\x09return this._views[ id ];\x0a\x09},\x0a\x09/**\x0a\x09 * @param {string} id\x0a\x09 * @returns {wp.media.view.PriorityList}\x0a\x09 */\x0a\x09unset: function( id ) {\x0a\x09\x09var view = this.get( id );\x0a\x0a\x09\x09if ( view ) {\x0a\x09\x09\x09view.remove();\x0a\x09\x09}\x0a\x0a\x09\x09delete this._views[ id ];\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} options\x0a\x09 * @returns {wp.media.View}\x0a\x09 */\x0a\x09toView: function( options ) {\x0a\x09\x09return new wp.media.View( options );\x0a\x09}\x0a});\x0a\x0amodule.exports = PriorityList;\x0a\x0a\x0a/***/ }),\x0a/* 68 */\x0a/***/ (function(module, exports) {\x0a\x0avar $ = jQuery,\x0a\x09MenuItem;\x0a\x0a/**\x0a * wp.media.view.MenuItem\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aMenuItem = wp.media.View.extend(/** @lends wp.media.view.MenuItem.prototype */{\x0a\x09tagName:   \x27a\x27,\x0a\x09className: \x27media-menu-item\x27,\x0a\x0a\x09attributes: {\x0a\x09\x09href: \x27#\x27\x0a\x09},\x0a\x0a\x09events: {\x0a\x09\x09\x27click\x27: \x27_click\x27\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09_click: function( event ) {\x0a\x09\x09var clickOverride = this.options.click;\x0a\x0a\x09\x09if ( event ) {\x0a\x09\x09\x09event.preventDefault();\x0a\x09\x09}\x0a\x0a\x09\x09if ( clickOverride ) {\x0a\x09\x09\x09clickOverride.call( this );\x0a\x09\x09} else {\x0a\x09\x09\x09this.click();\x0a\x09\x09}\x0a\x0a\x09\x09// When selecting a tab along the left side,\x0a\x09\x09// focus should be transferred into the main panel\x0a\x09\x09if ( ! wp.media.isTouchDevice ) {\x0a\x09\x09\x09$(\x27.media-frame-content input\x27).first().focus();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09click: function() {\x0a\x09\x09var state = this.options.state;\x0a\x0a\x09\x09if ( state ) {\x0a\x09\x09\x09this.controller.setState( state );\x0a\x09\x09\x09this.views.parent.$el.removeClass( \x27visible\x27 ); // TODO: or hide on any click, see below\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.MenuItem} returns itself to allow chaining\x0a\x09 */\x0a\x09render: function() {\x0a\x09\x09var options = this.options;\x0a\x0a\x09\x09if ( options.text ) {\x0a\x09\x09\x09this.$el.text( options.text );\x0a\x09\x09} else if ( options.html ) {\x0a\x09\x09\x09this.$el.html( options.html );\x0a\x09\x09}\x0a\x0a\x09\x09return this;\x0a\x09}\x0a});\x0a\x0amodule.exports = MenuItem;\x0a\x0a\x0a/***/ }),\x0a/* 69 */\x0a/***/ (function(module, exports) {\x0a\x0avar MenuItem = wp.media.view.MenuItem,\x0a\x09PriorityList = wp.media.view.PriorityList,\x0a\x09Menu;\x0a\x0a/**\x0a * wp.media.view.Menu\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.PriorityList\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aMenu = PriorityList.extend(/** @lends wp.media.view.Menu.prototype */{\x0a\x09tagName:   \x27div\x27,\x0a\x09className: \x27media-menu\x27,\x0a\x09property:  \x27state\x27,\x0a\x09ItemView:  MenuItem,\x0a\x09region:    \x27menu\x27,\x0a\x0a\x09/* TODO: alternatively hide on any click anywhere\x0a\x09events: {\x0a\x09\x09\x27click\x27: \x27click\x27\x0a\x09},\x0a\x0a\x09click: function() {\x0a\x09\x09this.$el.removeClass( \x27visible\x27 );\x0a\x09},\x0a\x09*/\x0a\x0a\x09/**\x0a\x09 * @param {Object} options\x0a\x09 * @param {string} id\x0a\x09 * @returns {wp.media.View}\x0a\x09 */\x0a\x09toView: function( options, id ) {\x0a\x09\x09options = options || {};\x0a\x09\x09options[ this.property ] = options[ this.property ] || id;\x0a\x09\x09return new this.ItemView( options ).render();\x0a\x09},\x0a\x0a\x09ready: function() {\x0a\x09\x09/**\x0a\x09\x09 * call \x27ready\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09PriorityList.prototype.ready.apply( this, arguments );\x0a\x09\x09this.visibility();\x0a\x09},\x0a\x0a\x09set: function() {\x0a\x09\x09/**\x0a\x09\x09 * call \x27set\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09PriorityList.prototype.set.apply( this, arguments );\x0a\x09\x09this.visibility();\x0a\x09},\x0a\x0a\x09unset: function() {\x0a\x09\x09/**\x0a\x09\x09 * call \x27unset\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09PriorityList.prototype.unset.apply( this, arguments );\x0a\x09\x09this.visibility();\x0a\x09},\x0a\x0a\x09visibility: function() {\x0a\x09\x09var region = this.region,\x0a\x09\x09\x09view = this.controller[ region ].get(),\x0a\x09\x09\x09views = this.views.get(),\x0a\x09\x09\x09hide = ! views || views.length \x3c 2;\x0a\x0a\x09\x09if ( this === view ) {\x0a\x09\x09\x09this.controller.$el.toggleClass( \x27hide-\x27 + region, hide );\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @param {string} id\x0a\x09 */\x0a\x09select: function( id ) {\x0a\x09\x09var view = this.get( id );\x0a\x0a\x09\x09if ( ! view ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09this.deselect();\x0a\x09\x09view.$el.addClass(\x27active\x27);\x0a\x09},\x0a\x0a\x09deselect: function() {\x0a\x09\x09this.$el.children().removeClass(\x27active\x27);\x0a\x09},\x0a\x0a\x09hide: function( id ) {\x0a\x09\x09var view = this.get( id );\x0a\x0a\x09\x09if ( ! view ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09view.$el.addClass(\x27hidden\x27);\x0a\x09},\x0a\x0a\x09show: function( id ) {\x0a\x09\x09var view = this.get( id );\x0a\x0a\x09\x09if ( ! view ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09view.$el.removeClass(\x27hidden\x27);\x0a\x09}\x0a});\x0a\x0amodule.exports = Menu;\x0a\x0a\x0a/***/ }),\x0a/* 70 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.RouterItem\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.MenuItem\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar RouterItem = wp.media.view.MenuItem.extend(/** @lends wp.media.view.RouterItem.prototype */{\x0a\x09/**\x0a\x09 * On click handler to activate the content region\x27s corresponding mode.\x0a\x09 */\x0a\x09click: function() {\x0a\x09\x09var contentMode = this.options.contentMode;\x0a\x09\x09if ( contentMode ) {\x0a\x09\x09\x09this.controller.content.mode( contentMode );\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = RouterItem;\x0a\x0a\x0a/***/ }),\x0a/* 71 */\x0a/***/ (function(module, exports) {\x0a\x0avar Menu = wp.media.view.Menu,\x0a\x09Router;\x0a\x0a/**\x0a * wp.media.view.Router\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.Menu\x0a * @augments wp.media.view.PriorityList\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aRouter = Menu.extend(/** @lends wp.media.view.Router.prototype */{\x0a\x09tagName:   \x27div\x27,\x0a\x09className: \x27media-router\x27,\x0a\x09property:  \x27contentMode\x27,\x0a\x09ItemView:  wp.media.view.RouterItem,\x0a\x09region:    \x27router\x27,\x0a\x0a\x09initialize: function() {\x0a\x09\x09this.controller.on( \x27content:render\x27, this.update, this );\x0a\x09\x09// Call \x27initialize\x27 directly on the parent class.\x0a\x09\x09Menu.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09update: function() {\x0a\x09\x09var mode = this.controller.content.mode();\x0a\x09\x09if ( mode ) {\x0a\x09\x09\x09this.select( mode );\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = Router;\x0a\x0a\x0a/***/ }),\x0a/* 72 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Sidebar\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.PriorityList\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar Sidebar = wp.media.view.PriorityList.extend(/** @lends wp.media.view.Sidebar.prototype */{\x0a\x09className: \x27media-sidebar\x27\x0a});\x0a\x0amodule.exports = Sidebar;\x0a\x0a\x0a/***/ }),\x0a/* 73 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09$ = jQuery,\x0a\x09Attachment;\x0a\x0a/**\x0a * wp.media.view.Attachment\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aAttachment = View.extend(/** @lends wp.media.view.Attachment.prototype */{\x0a\x09tagName:   \x27li\x27,\x0a\x09className: \x27attachment\x27,\x0a\x09template:  wp.template(\x27attachment\x27),\x0a\x0a\x09attributes: function() {\x0a\x09\x09return {\x0a\x09\x09\x09\x27tabIndex\x27:     0,\x0a\x09\x09\x09\x27role\x27:         \x27checkbox\x27,\x0a\x09\x09\x09\x27aria-label\x27:   this.model.get( \x27title\x27 ),\x0a\x09\x09\x09\x27aria-checked\x27: false,\x0a\x09\x09\x09\x27data-id\x27:      this.model.get( \x27id\x27 )\x0a\x09\x09};\x0a\x09},\x0a\x0a\x09events: {\x0a\x09\x09\x27click\x27:                          \x27toggleSelectionHandler\x27,\x0a\x09\x09\x27change [data-setting]\x27:          \x27updateSetting\x27,\x0a\x09\x09\x27change [data-setting] input\x27:    \x27updateSetting\x27,\x0a\x09\x09\x27change [data-setting] select\x27:   \x27updateSetting\x27,\x0a\x09\x09\x27change [data-setting] textarea\x27: \x27updateSetting\x27,\x0a\x09\x09\x27click .attachment-close\x27:        \x27removeFromLibrary\x27,\x0a\x09\x09\x27click .check\x27:                   \x27checkClickHandler\x27,\x0a\x09\x09\x27keydown\x27:                        \x27toggleSelectionHandler\x27\x0a\x09},\x0a\x0a\x09buttons: {},\x0a\x0a\x09initialize: function() {\x0a\x09\x09var selection = this.options.selection,\x0a\x09\x09\x09options = _.defaults( this.options, {\x0a\x09\x09\x09\x09rerenderOnModelChange: true\x0a\x09\x09\x09} );\x0a\x0a\x09\x09if ( options.rerenderOnModelChange ) {\x0a\x09\x09\x09this.listenTo( this.model, \x27change\x27, this.render );\x0a\x09\x09} else {\x0a\x09\x09\x09this.listenTo( this.model, \x27change:percent\x27, this.progress );\x0a\x09\x09}\x0a\x09\x09this.listenTo( this.model, \x27change:title\x27, this._syncTitle );\x0a\x09\x09this.listenTo( this.model, \x27change:caption\x27, this._syncCaption );\x0a\x09\x09this.listenTo( this.model, \x27change:artist\x27, this._syncArtist );\x0a\x09\x09this.listenTo( this.model, \x27change:album\x27, this._syncAlbum );\x0a\x0a\x09\x09// Update the selection.\x0a\x09\x09this.listenTo( this.model, \x27add\x27, this.select );\x0a\x09\x09this.listenTo( this.model, \x27remove\x27, this.deselect );\x0a\x09\x09if ( selection ) {\x0a\x09\x09\x09selection.on( \x27reset\x27, this.updateSelect, this );\x0a\x09\x09\x09// Update the model\x27s details view.\x0a\x09\x09\x09this.listenTo( this.model, \x27selection:single selection:unsingle\x27, this.details );\x0a\x09\x09\x09this.details( this.model, this.controller.state().get(\x27selection\x27) );\x0a\x09\x09}\x0a\x0a\x09\x09this.listenTo( this.controller, \x27attachment:compat:waiting attachment:compat:ready\x27, this.updateSave );\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.Attachment} Returns itself to allow chaining\x0a\x09 */\x0a\x09dispose: function() {\x0a\x09\x09var selection = this.options.selection;\x0a\x0a\x09\x09// Make sure all settings are saved before removing the view.\x0a\x09\x09this.updateAll();\x0a\x0a\x09\x09if ( selection ) {\x0a\x09\x09\x09selection.off( null, null, this );\x0a\x09\x09}\x0a\x09\x09/**\x0a\x09\x09 * call \x27dispose\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09View.prototype.dispose.apply( this, arguments );\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.Attachment} Returns itself to allow chaining\x0a\x09 */\x0a\x09render: function() {\x0a\x09\x09var options = _.defaults( this.model.toJSON(), {\x0a\x09\x09\x09\x09orientation:   \x27landscape\x27,\x0a\x09\x09\x09\x09uploading:     false,\x0a\x09\x09\x09\x09type:          \x27\x27,\x0a\x09\x09\x09\x09subtype:       \x27\x27,\x0a\x09\x09\x09\x09icon:          \x27\x27,\x0a\x09\x09\x09\x09filename:      \x27\x27,\x0a\x09\x09\x09\x09caption:       \x27\x27,\x0a\x09\x09\x09\x09title:         \x27\x27,\x0a\x09\x09\x09\x09dateFormatted: \x27\x27,\x0a\x09\x09\x09\x09width:         \x27\x27,\x0a\x09\x09\x09\x09height:        \x27\x27,\x0a\x09\x09\x09\x09compat:        false,\x0a\x09\x09\x09\x09alt:           \x27\x27,\x0a\x09\x09\x09\x09description:   \x27\x27\x0a\x09\x09\x09}, this.options );\x0a\x0a\x09\x09options.buttons  = this.buttons;\x0a\x09\x09options.describe = this.controller.state().get(\x27describe\x27);\x0a\x0a\x09\x09if ( \x27image\x27 === options.type ) {\x0a\x09\x09\x09options.size = this.imageSize();\x0a\x09\x09}\x0a\x0a\x09\x09options.can = {};\x0a\x09\x09if ( options.nonces ) {\x0a\x09\x09\x09options.can.remove = !! options.nonces[\x27delete\x27];\x0a\x09\x09\x09options.can.save = !! options.nonces.update;\x0a\x09\x09}\x0a\x0a\x09\x09if ( this.controller.state().get(\x27allowLocalEdits\x27) ) {\x0a\x09\x09\x09options.allowLocalEdits = true;\x0a\x09\x09}\x0a\x0a\x09\x09if ( options.uploading && ! options.percent ) {\x0a\x09\x09\x09options.percent = 0;\x0a\x09\x09}\x0a\x0a\x09\x09this.views.detach();\x0a\x09\x09this.$el.html( this.template( options ) );\x0a\x0a\x09\x09this.$el.toggleClass( \x27uploading\x27, options.uploading );\x0a\x0a\x09\x09if ( options.uploading ) {\x0a\x09\x09\x09this.$bar = this.$(\x27.media-progress-bar div\x27);\x0a\x09\x09} else {\x0a\x09\x09\x09delete this.$bar;\x0a\x09\x09}\x0a\x0a\x09\x09// Check if the model is selected.\x0a\x09\x09this.updateSelect();\x0a\x0a\x09\x09// Update the save status.\x0a\x09\x09this.updateSave();\x0a\x0a\x09\x09this.views.render();\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09progress: function() {\x0a\x09\x09if ( this.$bar && this.$bar.length ) {\x0a\x09\x09\x09this.$bar.width( this.model.get(\x27percent\x27) + \x27%\x27 );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09toggleSelectionHandler: function( event ) {\x0a\x09\x09var method;\x0a\x0a\x09\x09// Don\x27t do anything inside inputs and on the attachment check and remove buttons.\x0a\x09\x09if ( \x27INPUT\x27 === event.target.nodeName || \x27BUTTON\x27 === event.target.nodeName ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Catch arrow events\x0a\x09\x09if ( 37 === event.keyCode || 38 === event.keyCode || 39 === event.keyCode || 40 === event.keyCode ) {\x0a\x09\x09\x09this.controller.trigger( \x27attachment:keydown:arrow\x27, event );\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Catch enter and space events\x0a\x09\x09if ( \x27keydown\x27 === event.type && 13 !== event.keyCode && 32 !== event.keyCode ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09event.preventDefault();\x0a\x0a\x09\x09// In the grid view, bubble up an edit:attachment event to the controller.\x0a\x09\x09if ( this.controller.isModeActive( \x27grid\x27 ) ) {\x0a\x09\x09\x09if ( this.controller.isModeActive( \x27edit\x27 ) ) {\x0a\x09\x09\x09\x09// Pass the current target to restore focus when closing\x0a\x09\x09\x09\x09this.controller.trigger( \x27edit:attachment\x27, this.model, event.currentTarget );\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( this.controller.isModeActive( \x27select\x27 ) ) {\x0a\x09\x09\x09\x09method = \x27toggle\x27;\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09if ( event.shiftKey ) {\x0a\x09\x09\x09method = \x27between\x27;\x0a\x09\x09} else if ( event.ctrlKey || event.metaKey ) {\x0a\x09\x09\x09method = \x27toggle\x27;\x0a\x09\x09}\x0a\x0a\x09\x09this.toggleSelection({\x0a\x09\x09\x09method: method\x0a\x09\x09});\x0a\x0a\x09\x09this.controller.trigger( \x27selection:toggle\x27 );\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} options\x0a\x09 */\x0a\x09toggleSelection: function( options ) {\x0a\x09\x09var collection = this.collection,\x0a\x09\x09\x09selection = this.options.selection,\x0a\x09\x09\x09model = this.model,\x0a\x09\x09\x09method = options && options.method,\x0a\x09\x09\x09single, models, singleIndex, modelIndex;\x0a\x0a\x09\x09if ( ! selection ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09single = selection.single();\x0a\x09\x09method = _.isUndefined( method ) ? selection.multiple : method;\x0a\x0a\x09\x09// If the `method` is set to `between`, select all models that\x0a\x09\x09// exist between the current and the selected model.\x0a\x09\x09if ( \x27between\x27 === method && single && selection.multiple ) {\x0a\x09\x09\x09// If the models are the same, short-circuit.\x0a\x09\x09\x09if ( single === model ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09singleIndex = collection.indexOf( single );\x0a\x09\x09\x09modelIndex  = collection.indexOf( this.model );\x0a\x0a\x09\x09\x09if ( singleIndex \x3c modelIndex ) {\x0a\x09\x09\x09\x09models = collection.models.slice( singleIndex, modelIndex + 1 );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09models = collection.models.slice( modelIndex, singleIndex + 1 );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09selection.add( models );\x0a\x09\x09\x09selection.single( model );\x0a\x09\x09\x09return;\x0a\x0a\x09\x09// If the `method` is set to `toggle`, just flip the selection\x0a\x09\x09// status, regardless of whether the model is the single model.\x0a\x09\x09} else if ( \x27toggle\x27 === method ) {\x0a\x09\x09\x09selection[ this.selected() ? \x27remove\x27 : \x27add\x27 ]( model );\x0a\x09\x09\x09selection.single( model );\x0a\x09\x09\x09return;\x0a\x09\x09} else if ( \x27add\x27 === method ) {\x0a\x09\x09\x09selection.add( model );\x0a\x09\x09\x09selection.single( model );\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Fixes bug that loses focus when selecting a featured image\x0a\x09\x09if ( ! method ) {\x0a\x09\x09\x09method = \x27add\x27;\x0a\x09\x09}\x0a\x0a\x09\x09if ( method !== \x27add\x27 ) {\x0a\x09\x09\x09method = \x27reset\x27;\x0a\x09\x09}\x0a\x0a\x09\x09if ( this.selected() ) {\x0a\x09\x09\x09// If the model is the single model, remove it.\x0a\x09\x09\x09// If it is not the same as the single model,\x0a\x09\x09\x09// it now becomes the single model.\x0a\x09\x09\x09selection[ single === model ? \x27remove\x27 : \x27single\x27 ]( model );\x0a\x09\x09} else {\x0a\x09\x09\x09// If the model is not selected, run the `method` on the\x0a\x09\x09\x09// selection. By default, we `reset` the selection, but the\x0a\x09\x09\x09// `method` can be set to `add` the model to the selection.\x0a\x09\x09\x09selection[ method ]( model );\x0a\x09\x09\x09selection.single( model );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09updateSelect: function() {\x0a\x09\x09this[ this.selected() ? \x27select\x27 : \x27deselect\x27 ]();\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {unresolved|Boolean}\x0a\x09 */\x0a\x09selected: function() {\x0a\x09\x09var selection = this.options.selection;\x0a\x09\x09if ( selection ) {\x0a\x09\x09\x09return !! selection.get( this.model.cid );\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Backbone.Model} model\x0a\x09 * @param {Backbone.Collection} collection\x0a\x09 */\x0a\x09select: function( model, collection ) {\x0a\x09\x09var selection = this.options.selection,\x0a\x09\x09\x09controller = this.controller;\x0a\x0a\x09\x09// Check if a selection exists and if it\x27s the collection provided.\x0a\x09\x09// If they\x27re not the same collection, bail; we\x27re in another\x0a\x09\x09// selection\x27s event loop.\x0a\x09\x09if ( ! selection || ( collection && collection !== selection ) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Bail if the model is already selected.\x0a\x09\x09if ( this.$el.hasClass( \x27selected\x27 ) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Add \x27selected\x27 class to model, set aria-checked to true.\x0a\x09\x09this.$el.addClass( \x27selected\x27 ).attr( \x27aria-checked\x27, true );\x0a\x09\x09//  Make the checkbox tabable, except in media grid (bulk select mode).\x0a\x09\x09if ( ! ( controller.isModeActive( \x27grid\x27 ) && controller.isModeActive( \x27select\x27 ) ) ) {\x0a\x09\x09\x09this.$( \x27.check\x27 ).attr( \x27tabindex\x27, \x270\x27 );\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Backbone.Model} model\x0a\x09 * @param {Backbone.Collection} collection\x0a\x09 */\x0a\x09deselect: function( model, collection ) {\x0a\x09\x09var selection = this.options.selection;\x0a\x0a\x09\x09// Check if a selection exists and if it\x27s the collection provided.\x0a\x09\x09// If they\x27re not the same collection, bail; we\x27re in another\x0a\x09\x09// selection\x27s event loop.\x0a\x09\x09if ( ! selection || ( collection && collection !== selection ) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x09\x09this.$el.removeClass( \x27selected\x27 ).attr( \x27aria-checked\x27, false )\x0a\x09\x09\x09.find( \x27.check\x27 ).attr( \x27tabindex\x27, \x27-1\x27 );\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Backbone.Model} model\x0a\x09 * @param {Backbone.Collection} collection\x0a\x09 */\x0a\x09details: function( model, collection ) {\x0a\x09\x09var selection = this.options.selection,\x0a\x09\x09\x09details;\x0a\x0a\x09\x09if ( selection !== collection ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09details = selection.single();\x0a\x09\x09this.$el.toggleClass( \x27details\x27, details === this.model );\x0a\x09},\x0a\x09/**\x0a\x09 * @param {string} size\x0a\x09 * @returns {Object}\x0a\x09 */\x0a\x09imageSize: function( size ) {\x0a\x09\x09var sizes = this.model.get(\x27sizes\x27), matched = false;\x0a\x0a\x09\x09size = size || \x27medium\x27;\x0a\x0a\x09\x09// Use the provided image size if possible.\x0a\x09\x09if ( sizes ) {\x0a\x09\x09\x09if ( sizes[ size ] ) {\x0a\x09\x09\x09\x09matched = sizes[ size ];\x0a\x09\x09\x09} else if ( sizes.large ) {\x0a\x09\x09\x09\x09matched = sizes.large;\x0a\x09\x09\x09} else if ( sizes.thumbnail ) {\x0a\x09\x09\x09\x09matched = sizes.thumbnail;\x0a\x09\x09\x09} else if ( sizes.full ) {\x0a\x09\x09\x09\x09matched = sizes.full;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if ( matched ) {\x0a\x09\x09\x09\x09return _.clone( matched );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09return {\x0a\x09\x09\x09url:         this.model.get(\x27url\x27),\x0a\x09\x09\x09width:       this.model.get(\x27width\x27),\x0a\x09\x09\x09height:      this.model.get(\x27height\x27),\x0a\x09\x09\x09orientation: this.model.get(\x27orientation\x27)\x0a\x09\x09};\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09updateSetting: function( event ) {\x0a\x09\x09var $setting = $( event.target ).closest(\x27[data-setting]\x27),\x0a\x09\x09\x09setting, value;\x0a\x0a\x09\x09if ( ! $setting.length ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09setting = $setting.data(\x27setting\x27);\x0a\x09\x09value   = event.target.value;\x0a\x0a\x09\x09if ( this.model.get( setting ) !== value ) {\x0a\x09\x09\x09this.save( setting, value );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Pass all the arguments to the model\x27s save method.\x0a\x09 *\x0a\x09 * Records the aggregate status of all save requests and updates the\x0a\x09 * view\x27s classes accordingly.\x0a\x09 */\x0a\x09save: function() {\x0a\x09\x09var view = this,\x0a\x09\x09\x09save = this._save = this._save || { status: \x27ready\x27 },\x0a\x09\x09\x09request = this.model.save.apply( this.model, arguments ),\x0a\x09\x09\x09requests = save.requests ? $.when( request, save.requests ) : request;\x0a\x0a\x09\x09// If we\x27re waiting to remove \x27Saved.\x27, stop.\x0a\x09\x09if ( save.savedTimer ) {\x0a\x09\x09\x09clearTimeout( save.savedTimer );\x0a\x09\x09}\x0a\x0a\x09\x09this.updateSave(\x27waiting\x27);\x0a\x09\x09save.requests = requests;\x0a\x09\x09requests.always( function() {\x0a\x09\x09\x09// If we\x27ve performed another request since this one, bail.\x0a\x09\x09\x09if ( save.requests !== requests ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09view.updateSave( requests.state() === \x27resolved\x27 ? \x27complete\x27 : \x27error\x27 );\x0a\x09\x09\x09save.savedTimer = setTimeout( function() {\x0a\x09\x09\x09\x09view.updateSave(\x27ready\x27);\x0a\x09\x09\x09\x09delete save.savedTimer;\x0a\x09\x09\x09}, 2000 );\x0a\x09\x09});\x0a\x09},\x0a\x09/**\x0a\x09 * @param {string} status\x0a\x09 * @returns {wp.media.view.Attachment} Returns itself to allow chaining\x0a\x09 */\x0a\x09updateSave: function( status ) {\x0a\x09\x09var save = this._save = this._save || { status: \x27ready\x27 };\x0a\x0a\x09\x09if ( status && status !== save.status ) {\x0a\x09\x09\x09this.$el.removeClass( \x27save-\x27 + save.status );\x0a\x09\x09\x09save.status = status;\x0a\x09\x09}\x0a\x0a\x09\x09this.$el.addClass( \x27save-\x27 + save.status );\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09updateAll: function() {\x0a\x09\x09var $settings = this.$(\x27[data-setting]\x27),\x0a\x09\x09\x09model = this.model,\x0a\x09\x09\x09changed;\x0a\x0a\x09\x09changed = _.chain( $settings ).map( function( el ) {\x0a\x09\x09\x09var $input = $(\x27input, textarea, select, [value]\x27, el ),\x0a\x09\x09\x09\x09setting, value;\x0a\x0a\x09\x09\x09if ( ! $input.length ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09setting = $(el).data(\x27setting\x27);\x0a\x09\x09\x09value = $input.val();\x0a\x0a\x09\x09\x09// Record the value if it changed.\x0a\x09\x09\x09if ( model.get( setting ) !== value ) {\x0a\x09\x09\x09\x09return [ setting, value ];\x0a\x09\x09\x09}\x0a\x09\x09}).compact().object().value();\x0a\x0a\x09\x09if ( ! _.isEmpty( changed ) ) {\x0a\x09\x09\x09model.save( changed );\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09removeFromLibrary: function( event ) {\x0a\x09\x09// Catch enter and space events\x0a\x09\x09if ( \x27keydown\x27 === event.type && 13 !== event.keyCode && 32 !== event.keyCode ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Stop propagation so the model isn\x27t selected.\x0a\x09\x09event.stopPropagation();\x0a\x0a\x09\x09this.collection.remove( this.model );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Add the model if it isn\x27t in the selection, if it is in the selection,\x0a\x09 * remove it.\x0a\x09 *\x0a\x09 * @param  {[type]} event [description]\x0a\x09 * @return {[type]}       [description]\x0a\x09 */\x0a\x09checkClickHandler: function ( event ) {\x0a\x09\x09var selection = this.options.selection;\x0a\x09\x09if ( ! selection ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x09\x09event.stopPropagation();\x0a\x09\x09if ( selection.where( { id: this.model.get( \x27id\x27 ) } ).length ) {\x0a\x09\x09\x09selection.remove( this.model );\x0a\x09\x09\x09// Move focus back to the attachment tile (from the check).\x0a\x09\x09\x09this.$el.focus();\x0a\x09\x09} else {\x0a\x09\x09\x09selection.add( this.model );\x0a\x09\x09}\x0a\x0a\x09\x09// Trigger an action button update.\x0a\x09\x09this.controller.trigger( \x27selection:toggle\x27 );\x0a\x09}\x0a});\x0a\x0a// Ensure settings remain in sync between attachment views.\x0a_.each({\x0a\x09caption: \x27_syncCaption\x27,\x0a\x09title:   \x27_syncTitle\x27,\x0a\x09artist:  \x27_syncArtist\x27,\x0a\x09album:   \x27_syncAlbum\x27\x0a}, function( method, setting ) {\x0a\x09/**\x0a\x09 * @function _syncCaption\x0a\x09 * @memberOf wp.media.view.Attachment\x0a\x09 * @instance\x0a\x09 *\x0a\x09 * @param {Backbone.Model} model\x0a\x09 * @param {string} value\x0a\x09 * @returns {wp.media.view.Attachment} Returns itself to allow chaining\x0a\x09 */\x0a\x09/**\x0a\x09 * @function _syncTitle\x0a\x09 * @memberOf wp.media.view.Attachment\x0a\x09 * @instance\x0a\x09 *\x0a\x09 * @param {Backbone.Model} model\x0a\x09 * @param {string} value\x0a\x09 * @returns {wp.media.view.Attachment} Returns itself to allow chaining\x0a\x09 */\x0a\x09/**\x0a\x09 * @function _syncArtist\x0a\x09 * @memberOf wp.media.view.Attachment\x0a\x09 * @instance\x0a\x09 *\x0a\x09 * @param {Backbone.Model} model\x0a\x09 * @param {string} value\x0a\x09 * @returns {wp.media.view.Attachment} Returns itself to allow chaining\x0a\x09 */\x0a\x09/**\x0a\x09 * @function _syncAlbum\x0a\x09 * @memberOf wp.media.view.Attachment\x0a\x09 * @instance\x0a\x09 *\x0a\x09 * @param {Backbone.Model} model\x0a\x09 * @param {string} value\x0a\x09 * @returns {wp.media.view.Attachment} Returns itself to allow chaining\x0a\x09 */\x0a\x09Attachment.prototype[ method ] = function( model, value ) {\x0a\x09\x09var $setting = this.$(\x27[data-setting=\x22\x27 + setting + \x27\x22]\x27);\x0a\x0a\x09\x09if ( ! $setting.length ) {\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x0a\x09\x09// If the updated value is in sync with the value in the DOM, there\x0a\x09\x09// is no need to re-render. If we\x27re currently editing the value,\x0a\x09\x09// it will automatically be in sync, suppressing the re-render for\x0a\x09\x09// the view we\x27re editing, while updating any others.\x0a\x09\x09if ( value === $setting.find(\x27input, textarea, select, [value]\x27).val() ) {\x0a\x09\x09\x09return this;\x0a\x09\x09}\x0a\x0a\x09\x09return this.render();\x0a\x09};\x0a});\x0a\x0amodule.exports = Attachment;\x0a\x0a\x0a/***/ }),\x0a/* 74 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Attachment.Library\x0a *\x0a * @memberOf wp.media.view.Attachment\x0a *\x0a * @class\x0a * @augments wp.media.view.Attachment\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar Library = wp.media.view.Attachment.extend(/** @lends wp.media.view.Attachment.Library.prototype */{\x0a\x09buttons: {\x0a\x09\x09check: true\x0a\x09}\x0a});\x0a\x0amodule.exports = Library;\x0a\x0a\x0a/***/ }),\x0a/* 75 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Attachment.EditLibrary\x0a *\x0a * @memberOf wp.media.view.Attachment\x0a *\x0a * @class\x0a * @augments wp.media.view.Attachment\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar EditLibrary = wp.media.view.Attachment.extend(/** @lends wp.media.view.Attachment.EditLibrary.prototype */{\x0a\x09buttons: {\x0a\x09\x09close: true\x0a\x09}\x0a});\x0a\x0amodule.exports = EditLibrary;\x0a\x0a\x0a/***/ }),\x0a/* 76 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09$ = jQuery,\x0a\x09Attachments;\x0a\x0aAttachments = View.extend(/** @lends wp.media.view.Attachments.prototype */{\x0a\x09tagName:   \x27ul\x27,\x0a\x09className: \x27attachments\x27,\x0a\x0a\x09attributes: {\x0a\x09\x09tabIndex: -1\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Represents the overview of attachments in the Media Library.\x0a\x09 *\x0a\x09 * The constructor binds events to the collection this view represents when\x0a\x09 * adding or removing attachments or resetting the entire collection.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @constructs\x0a\x09 * @memberof wp.media.view\x0a\x09 *\x0a\x09 * @augments wp.media.View\x0a\x09 *\x0a\x09 * @listens collection:add\x0a\x09 * @listens collection:remove\x0a\x09 * @listens collection:reset\x0a\x09 * @listens controller:library:selection:add\x0a\x09 * @listens scrollElement:scroll\x0a\x09 * @listens this:ready\x0a\x09 * @listens controller:open\x0a\x09 */\x0a\x09initialize: function() {\x0a\x09\x09this.el.id = _.uniqueId(\x27__attachments-view-\x27);\x0a\x0a\x09\x09/**\x0a\x09\x09 * @param refreshSensitivity The time in milliseconds to throttle the scroll\x0a\x09\x09 *                           handler.\x0a\x09\x09 * @param refreshThreshold   The amount of pixels that should be scrolled before\x0a\x09\x09 *                           loading more attachments from the server.\x0a\x09\x09 * @param AttachmentView     The view class to be used for models in the\x0a\x09\x09 *                           collection.\x0a\x09\x09 * @param sortable           A jQuery sortable options object\x0a\x09\x09 *                           ( http://api.jqueryui.com/sortable/ ).\x0a\x09\x09 * @param resize             A boolean indicating whether or not to listen to\x0a\x09\x09 *                           resize events.\x0a\x09\x09 * @param idealColumnWidth   The width in pixels which a column should have when\x0a\x09\x09 *                           calculating the total number of columns.\x0a\x09\x09 */\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09refreshSensitivity: wp.media.isTouchDevice ? 300 : 200,\x0a\x09\x09\x09refreshThreshold:   3,\x0a\x09\x09\x09AttachmentView:     wp.media.view.Attachment,\x0a\x09\x09\x09sortable:           false,\x0a\x09\x09\x09resize:             true,\x0a\x09\x09\x09idealColumnWidth:   $( window ).width() \x3c 640 ? 135 : 150\x0a\x09\x09});\x0a\x0a\x09\x09this._viewsByCid = {};\x0a\x09\x09this.$window = $( window );\x0a\x09\x09this.resizeEvent = \x27resize.media-modal-columns\x27;\x0a\x0a\x09\x09this.collection.on( \x27add\x27, function( attachment ) {\x0a\x09\x09\x09this.views.add( this.createAttachmentView( attachment ), {\x0a\x09\x09\x09\x09at: this.collection.indexOf( attachment )\x0a\x09\x09\x09});\x0a\x09\x09}, this );\x0a\x0a\x09\x09/*\x0a\x09\x09 * Find the view to be removed, delete it and call the remove function to clear\x0a\x09\x09 * any set event handlers.\x0a\x09\x09 */\x0a\x09\x09this.collection.on( \x27remove\x27, function( attachment ) {\x0a\x09\x09\x09var view = this._viewsByCid[ attachment.cid ];\x0a\x09\x09\x09delete this._viewsByCid[ attachment.cid ];\x0a\x0a\x09\x09\x09if ( view ) {\x0a\x09\x09\x09\x09view.remove();\x0a\x09\x09\x09}\x0a\x09\x09}, this );\x0a\x0a\x09\x09this.collection.on( \x27reset\x27, this.render, this );\x0a\x0a\x09\x09this.listenTo( this.controller, \x27library:selection:add\x27,    this.attachmentFocus );\x0a\x0a\x09\x09// Throttle the scroll handler and bind this.\x0a\x09\x09this.scroll = _.chain( this.scroll ).bind( this ).throttle( this.options.refreshSensitivity ).value();\x0a\x0a\x09\x09this.options.scrollElement = this.options.scrollElement || this.el;\x0a\x09\x09$( this.options.scrollElement ).on( \x27scroll\x27, this.scroll );\x0a\x0a\x09\x09this.initSortable();\x0a\x0a\x09\x09_.bindAll( this, \x27setColumns\x27 );\x0a\x0a\x09\x09if ( this.options.resize ) {\x0a\x09\x09\x09this.on( \x27ready\x27, this.bindEvents );\x0a\x09\x09\x09this.controller.on( \x27open\x27, this.setColumns );\x0a\x0a\x09\x09\x09/*\x0a\x09\x09\x09 * Call this.setColumns() after this view has been rendered in the\x0a\x09\x09\x09 * DOM so attachments get proper width applied.\x0a\x09\x09\x09 */\x0a\x09\x09\x09_.defer( this.setColumns, this );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Listens to the resizeEvent on the window.\x0a\x09 *\x0a\x09 * Adjusts the amount of columns accordingly. First removes any existing event\x0a\x09 * handlers to prevent duplicate listeners.\x0a\x09 *\x0a\x09 * @since 4.0.0\x0a\x09 *\x0a\x09 * @listens window:resize\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09bindEvents: function() {\x0a\x09\x09this.$window.off( this.resizeEvent ).on( this.resizeEvent, _.debounce( this.setColumns, 50 ) );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Focuses the first item in the collection.\x0a\x09 *\x0a\x09 * @since 4.0.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09attachmentFocus: function() {\x0a\x09\x09this.$( \x27li:first\x27 ).focus();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Restores focus to the selected item in the collection.\x0a\x09 *\x0a\x09 * @since 4.0.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09restoreFocus: function() {\x0a\x09\x09this.$( \x27li.selected:first\x27 ).focus();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Handles events for arrow key presses.\x0a\x09 *\x0a\x09 * Focuses the attachment in the direction of the used arrow key if it exists.\x0a\x09 *\x0a\x09 * @since 4.0.0\x0a\x09 *\x0a\x09 * @param {KeyboardEvent} event The keyboard event that triggered this function.\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09arrowEvent: function( event ) {\x0a\x09\x09var attachments = this.$el.children( \x27li\x27 ),\x0a\x09\x09\x09perRow = this.columns,\x0a\x09\x09\x09index = attachments.filter( \x27:focus\x27 ).index(),\x0a\x09\x09\x09row = ( index + 1 ) \x3c= perRow ? 1 : Math.ceil( ( index + 1 ) / perRow );\x0a\x0a\x09\x09if ( index === -1 ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Left arrow = 37.\x0a\x09\x09if ( 37 === event.keyCode ) {\x0a\x09\x09\x09if ( 0 === index ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x09\x09\x09attachments.eq( index - 1 ).focus();\x0a\x09\x09}\x0a\x0a\x09\x09// Up arrow = 38.\x0a\x09\x09if ( 38 === event.keyCode ) {\x0a\x09\x09\x09if ( 1 === row ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x09\x09\x09attachments.eq( index - perRow ).focus();\x0a\x09\x09}\x0a\x0a\x09\x09// Right arrow = 39.\x0a\x09\x09if ( 39 === event.keyCode ) {\x0a\x09\x09\x09if ( attachments.length === index ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x09\x09\x09attachments.eq( index + 1 ).focus();\x0a\x09\x09}\x0a\x0a\x09\x09// Down arrow = 40.\x0a\x09\x09if ( 40 === event.keyCode ) {\x0a\x09\x09\x09if ( Math.ceil( attachments.length / perRow ) === row ) {\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x09\x09\x09attachments.eq( index + perRow ).focus();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Clears any set event handlers.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09dispose: function() {\x0a\x09\x09this.collection.props.off( null, null, this );\x0a\x09\x09if ( this.options.resize ) {\x0a\x09\x09\x09this.$window.off( this.resizeEvent );\x0a\x09\x09}\x0a\x0a\x09\x09// Call \x27dispose\x27 directly on the parent class.\x0a\x09\x09View.prototype.dispose.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Calculates the amount of columns.\x0a\x09 *\x0a\x09 * Calculates the amount of columns and sets it on the data-columns attribute\x0a\x09 * of .media-frame-content.\x0a\x09 *\x0a\x09 * @since 4.0.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09setColumns: function() {\x0a\x09\x09var prev = this.columns,\x0a\x09\x09\x09width = this.$el.width();\x0a\x0a\x09\x09if ( width ) {\x0a\x09\x09\x09this.columns = Math.min( Math.round( width / this.options.idealColumnWidth ), 12 ) || 1;\x0a\x0a\x09\x09\x09if ( ! prev || prev !== this.columns ) {\x0a\x09\x09\x09\x09this.$el.closest( \x27.media-frame-content\x27 ).attr( \x27data-columns\x27, this.columns );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Initializes jQuery sortable on the attachment list.\x0a\x09 *\x0a\x09 * Fails gracefully if jQuery sortable doesn\x27t exist or isn\x27t passed in the\x0a\x09 * options.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @fires collection:reset\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09initSortable: function() {\x0a\x09\x09var collection = this.collection;\x0a\x0a\x09\x09if ( ! this.options.sortable || ! $.fn.sortable ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09this.$el.sortable( _.extend({\x0a\x09\x09\x09// If the `collection` has a `comparator`, disable sorting.\x0a\x09\x09\x09disabled: !! collection.comparator,\x0a\x0a\x09\x09\x09/*\x0a\x09\x09\x09 * Change the position of the attachment as soon as the mouse pointer overlaps a\x0a\x09\x09\x09 * thumbnail.\x0a\x09\x09\x09 */\x0a\x09\x09\x09tolerance: \x27pointer\x27,\x0a\x0a\x09\x09\x09// Record the initial `index` of the dragged model.\x0a\x09\x09\x09start: function( event, ui ) {\x0a\x09\x09\x09\x09ui.item.data(\x27sortableIndexStart\x27, ui.item.index());\x0a\x09\x09\x09},\x0a\x0a\x09\x09\x09/*\x0a\x09\x09\x09 * Update the model\x27s index in the collection. Do so silently, as the view\x0a\x09\x09\x09 * is already accurate.\x0a\x09\x09\x09 */\x0a\x09\x09\x09update: function( event, ui ) {\x0a\x09\x09\x09\x09var model = collection.at( ui.item.data(\x27sortableIndexStart\x27) ),\x0a\x09\x09\x09\x09\x09comparator = collection.comparator;\x0a\x0a\x09\x09\x09\x09// Temporarily disable the comparator to prevent `add`\x0a\x09\x09\x09\x09// from re-sorting.\x0a\x09\x09\x09\x09delete collection.comparator;\x0a\x0a\x09\x09\x09\x09// Silently shift the model to its new index.\x0a\x09\x09\x09\x09collection.remove( model, {\x0a\x09\x09\x09\x09\x09silent: true\x0a\x09\x09\x09\x09});\x0a\x09\x09\x09\x09collection.add( model, {\x0a\x09\x09\x09\x09\x09silent: true,\x0a\x09\x09\x09\x09\x09at:     ui.item.index()\x0a\x09\x09\x09\x09});\x0a\x0a\x09\x09\x09\x09// Restore the comparator.\x0a\x09\x09\x09\x09collection.comparator = comparator;\x0a\x0a\x09\x09\x09\x09// Fire the `reset` event to ensure other collections sync.\x0a\x09\x09\x09\x09collection.trigger( \x27reset\x27, collection );\x0a\x0a\x09\x09\x09\x09// If the collection is sorted by menu order, update the menu order.\x0a\x09\x09\x09\x09collection.saveMenuOrder();\x0a\x09\x09\x09}\x0a\x09\x09}, this.options.sortable ) );\x0a\x0a\x09\x09/*\x0a\x09\x09 * If the `orderby` property is changed on the `collection`, check to see if we\x0a\x09\x09 * have a `comparator`. If so, disable sorting.\x0a\x09\x09 */\x0a\x09\x09collection.props.on( \x27change:orderby\x27, function() {\x0a\x09\x09\x09this.$el.sortable( \x27option\x27, \x27disabled\x27, !! collection.comparator );\x0a\x09\x09}, this );\x0a\x0a\x09\x09this.collection.props.on( \x27change:orderby\x27, this.refreshSortable, this );\x0a\x09\x09this.refreshSortable();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Disables jQuery sortable if collection has a comparator or collection.orderby\x0a\x09 * equals menuOrder.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09refreshSortable: function() {\x0a\x09\x09if ( ! this.options.sortable || ! $.fn.sortable ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09var collection = this.collection,\x0a\x09\x09\x09orderby = collection.props.get(\x27orderby\x27),\x0a\x09\x09\x09enabled = \x27menuOrder\x27 === orderby || ! collection.comparator;\x0a\x0a\x09\x09this.$el.sortable( \x27option\x27, \x27disabled\x27, ! enabled );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Creates a new view for an attachment and adds it to _viewsByCid.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @param {wp.media.model.Attachment} attachment\x0a\x09 *\x0a\x09 * @returns {wp.media.View} The created view.\x0a\x09 */\x0a\x09createAttachmentView: function( attachment ) {\x0a\x09\x09var view = new this.options.AttachmentView({\x0a\x09\x09\x09controller:           this.controller,\x0a\x09\x09\x09model:                attachment,\x0a\x09\x09\x09collection:           this.collection,\x0a\x09\x09\x09selection:            this.options.selection\x0a\x09\x09});\x0a\x0a\x09\x09return this._viewsByCid[ attachment.cid ] = view;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Prepares view for display.\x0a\x09 *\x0a\x09 * Creates views for every attachment in collection if the collection is not\x0a\x09 * empty, otherwise clears all views and loads more attachments.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09prepare: function() {\x0a\x09\x09if ( this.collection.length ) {\x0a\x09\x09\x09this.views.set( this.collection.map( this.createAttachmentView, this ) );\x0a\x09\x09} else {\x0a\x09\x09\x09this.views.unset();\x0a\x09\x09\x09this.collection.more().done( this.scroll );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Triggers the scroll function to check if we should query for additional\x0a\x09 * attachments right away.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09ready: function() {\x0a\x09\x09this.scroll();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Handles scroll events.\x0a\x09 *\x0a\x09 * Shows the spinner if we\x27re close to the bottom. Loads more attachments from\x0a\x09 * server if we\x27re {refreshThreshold} times away from the bottom.\x0a\x09 *\x0a\x09 * @since 3.5.0\x0a\x09 *\x0a\x09 * @returns {void}\x0a\x09 */\x0a\x09scroll: function() {\x0a\x09\x09var view = this,\x0a\x09\x09\x09el = this.options.scrollElement,\x0a\x09\x09\x09scrollTop = el.scrollTop,\x0a\x09\x09\x09toolbar;\x0a\x0a\x09\x09/*\x0a\x09\x09 * The scroll event occurs on the document, but the element that should be\x0a\x09\x09 * checked is the document body.\x0a\x09\x09 */\x0a\x09\x09if ( el === document ) {\x0a\x09\x09\x09el = document.body;\x0a\x09\x09\x09scrollTop = $(document).scrollTop();\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! $(el).is(\x27:visible\x27) || ! this.collection.hasMore() ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09toolbar = this.views.parent.toolbar;\x0a\x0a\x09\x09// Show the spinner only if we are close to the bottom.\x0a\x09\x09if ( el.scrollHeight - ( scrollTop + el.clientHeight ) \x3c el.clientHeight / 3 ) {\x0a\x09\x09\x09toolbar.get(\x27spinner\x27).show();\x0a\x09\x09}\x0a\x0a\x09\x09if ( el.scrollHeight \x3c scrollTop + ( el.clientHeight * this.options.refreshThreshold ) ) {\x0a\x09\x09\x09this.collection.more().done(function() {\x0a\x09\x09\x09\x09view.scroll();\x0a\x09\x09\x09\x09toolbar.get(\x27spinner\x27).hide();\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = Attachments;\x0a\x0a\x0a/***/ }),\x0a/* 77 */\x0a/***/ (function(module, exports) {\x0a\x0avar l10n = wp.media.view.l10n,\x0a\x09Search;\x0a\x0a/**\x0a * wp.media.view.Search\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aSearch = wp.media.View.extend(/** @lends wp.media.view.Search.prototype */{\x0a\x09tagName:   \x27input\x27,\x0a\x09className: \x27search\x27,\x0a\x09id:        \x27media-search-input\x27,\x0a\x0a\x09attributes: {\x0a\x09\x09type:        \x27search\x27,\x0a\x09\x09placeholder: l10n.searchMediaPlaceholder\x0a\x09},\x0a\x0a\x09events: {\x0a\x09\x09\x27input\x27:  \x27search\x27,\x0a\x09\x09\x27keyup\x27:  \x27search\x27\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @returns {wp.media.view.Search} Returns itself to allow chaining\x0a\x09 */\x0a\x09render: function() {\x0a\x09\x09this.el.value = this.model.escape(\x27search\x27);\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09search: _.debounce( function( event ) {\x0a\x09\x09if ( event.target.value ) {\x0a\x09\x09\x09this.model.set( \x27search\x27, event.target.value );\x0a\x09\x09} else {\x0a\x09\x09\x09this.model.unset(\x27search\x27);\x0a\x09\x09}\x0a\x09}, 300 )\x0a});\x0a\x0amodule.exports = Search;\x0a\x0a\x0a/***/ }),\x0a/* 78 */\x0a/***/ (function(module, exports) {\x0a\x0avar $ = jQuery,\x0a\x09AttachmentFilters;\x0a\x0a/**\x0a * wp.media.view.AttachmentFilters\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aAttachmentFilters = wp.media.View.extend(/** @lends wp.media.view.AttachmentFilters.prototype */{\x0a\x09tagName:   \x27select\x27,\x0a\x09className: \x27attachment-filters\x27,\x0a\x09id:        \x27media-attachment-filters\x27,\x0a\x0a\x09events: {\x0a\x09\x09change: \x27change\x27\x0a\x09},\x0a\x0a\x09keys: [],\x0a\x0a\x09initialize: function() {\x0a\x09\x09this.createFilters();\x0a\x09\x09_.extend( this.filters, this.options.filters );\x0a\x0a\x09\x09// Build `\x3coption\x3e` elements.\x0a\x09\x09this.$el.html( _.chain( this.filters ).map( function( filter, value ) {\x0a\x09\x09\x09return {\x0a\x09\x09\x09\x09el: $( \x27\x3coption\x3e\x3c/option\x3e\x27 ).val( value ).html( filter.text )[0],\x0a\x09\x09\x09\x09priority: filter.priority || 50\x0a\x09\x09\x09};\x0a\x09\x09}, this ).sortBy(\x27priority\x27).pluck(\x27el\x27).value() );\x0a\x0a\x09\x09this.listenTo( this.model, \x27change\x27, this.select );\x0a\x09\x09this.select();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @abstract\x0a\x09 */\x0a\x09createFilters: function() {\x0a\x09\x09this.filters = {};\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * When the selected filter changes, update the Attachment Query properties to match.\x0a\x09 */\x0a\x09change: function() {\x0a\x09\x09var filter = this.filters[ this.el.value ];\x0a\x09\x09if ( filter ) {\x0a\x09\x09\x09this.model.set( filter.props );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09select: function() {\x0a\x09\x09var model = this.model,\x0a\x09\x09\x09value = \x27all\x27,\x0a\x09\x09\x09props = model.toJSON();\x0a\x0a\x09\x09_.find( this.filters, function( filter, id ) {\x0a\x09\x09\x09var equal = _.all( filter.props, function( prop, key ) {\x0a\x09\x09\x09\x09return prop === ( _.isUndefined( props[ key ] ) ? null : props[ key ] );\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09if ( equal ) {\x0a\x09\x09\x09\x09return value = id;\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x0a\x09\x09this.$el.val( value );\x0a\x09}\x0a});\x0a\x0amodule.exports = AttachmentFilters;\x0a\x0a\x0a/***/ }),\x0a/* 79 */\x0a/***/ (function(module, exports) {\x0a\x0avar l10n = wp.media.view.l10n,\x0a\x09DateFilter;\x0a\x0a/**\x0a * A filter dropdown for month/dates.\x0a *\x0a * @memberOf wp.media.view.AttachmentFilters\x0a *\x0a * @class\x0a * @augments wp.media.view.AttachmentFilters\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aDateFilter = wp.media.view.AttachmentFilters.extend(/** @lends wp.media.view.AttachmentFilters.Date.prototype */{\x0a\x09id: \x27media-attachment-date-filters\x27,\x0a\x0a\x09createFilters: function() {\x0a\x09\x09var filters = {};\x0a\x09\x09_.each( wp.media.view.settings.months || {}, function( value, index ) {\x0a\x09\x09\x09filters[ index ] = {\x0a\x09\x09\x09\x09text: value.text,\x0a\x09\x09\x09\x09props: {\x0a\x09\x09\x09\x09\x09year: value.year,\x0a\x09\x09\x09\x09\x09monthnum: value.month\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09};\x0a\x09\x09});\x0a\x09\x09filters.all = {\x0a\x09\x09\x09text:  l10n.allDates,\x0a\x09\x09\x09props: {\x0a\x09\x09\x09\x09monthnum: false,\x0a\x09\x09\x09\x09year:  false\x0a\x09\x09\x09},\x0a\x09\x09\x09priority: 10\x0a\x09\x09};\x0a\x09\x09this.filters = filters;\x0a\x09}\x0a});\x0a\x0amodule.exports = DateFilter;\x0a\x0a\x0a/***/ }),\x0a/* 80 */\x0a/***/ (function(module, exports) {\x0a\x0avar l10n = wp.media.view.l10n,\x0a\x09Uploaded;\x0a\x0a/**\x0a * wp.media.view.AttachmentFilters.Uploaded\x0a *\x0a * @memberOf wp.media.view.AttachmentFilters\x0a *\x0a * @class\x0a * @augments wp.media.view.AttachmentFilters\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aUploaded = wp.media.view.AttachmentFilters.extend(/** @lends wp.media.view.AttachmentFilters.Uploaded.prototype */{\x0a\x09createFilters: function() {\x0a\x09\x09var type = this.model.get(\x27type\x27),\x0a\x09\x09\x09types = wp.media.view.settings.mimeTypes,\x0a\x09\x09\x09uid = window.userSettings ? parseInt( window.userSettings.uid, 10 ) : 0,\x0a\x09\x09\x09text;\x0a\x0a\x09\x09if ( types && type ) {\x0a\x09\x09\x09text = types[ type ];\x0a\x09\x09}\x0a\x0a\x09\x09this.filters = {\x0a\x09\x09\x09all: {\x0a\x09\x09\x09\x09text:  text || l10n.allMediaItems,\x0a\x09\x09\x09\x09props: {\x0a\x09\x09\x09\x09\x09uploadedTo: null,\x0a\x09\x09\x09\x09\x09orderby: \x27date\x27,\x0a\x09\x09\x09\x09\x09order:   \x27DESC\x27,\x0a\x09\x09\x09\x09\x09author:\x09 null\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09priority: 10\x0a\x09\x09\x09},\x0a\x0a\x09\x09\x09uploaded: {\x0a\x09\x09\x09\x09text:  l10n.uploadedToThisPost,\x0a\x09\x09\x09\x09props: {\x0a\x09\x09\x09\x09\x09uploadedTo: wp.media.view.settings.post.id,\x0a\x09\x09\x09\x09\x09orderby: \x27menuOrder\x27,\x0a\x09\x09\x09\x09\x09order:   \x27ASC\x27,\x0a\x09\x09\x09\x09\x09author:\x09 null\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09priority: 20\x0a\x09\x09\x09},\x0a\x0a\x09\x09\x09unattached: {\x0a\x09\x09\x09\x09text:  l10n.unattached,\x0a\x09\x09\x09\x09props: {\x0a\x09\x09\x09\x09\x09uploadedTo: 0,\x0a\x09\x09\x09\x09\x09orderby: \x27menuOrder\x27,\x0a\x09\x09\x09\x09\x09order:   \x27ASC\x27,\x0a\x09\x09\x09\x09\x09author:\x09 null\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09priority: 50\x0a\x09\x09\x09}\x0a\x09\x09};\x0a\x0a\x09\x09if ( uid ) {\x0a\x09\x09\x09this.filters.mine = {\x0a\x09\x09\x09\x09text:  l10n.mine,\x0a\x09\x09\x09\x09props: {\x0a\x09\x09\x09\x09\x09orderby: \x27date\x27,\x0a\x09\x09\x09\x09\x09order:   \x27DESC\x27,\x0a\x09\x09\x09\x09\x09author:  uid\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09priority: 50\x0a\x09\x09\x09};\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = Uploaded;\x0a\x0a\x0a/***/ }),\x0a/* 81 */\x0a/***/ (function(module, exports) {\x0a\x0avar l10n = wp.media.view.l10n,\x0a\x09All;\x0a\x0a/**\x0a * wp.media.view.AttachmentFilters.All\x0a *\x0a * @memberOf wp.media.view.AttachmentFilters\x0a *\x0a * @class\x0a * @augments wp.media.view.AttachmentFilters\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aAll = wp.media.view.AttachmentFilters.extend(/** @lends wp.media.view.AttachmentFilters.All.prototype */{\x0a\x09createFilters: function() {\x0a\x09\x09var filters = {},\x0a\x09\x09\x09uid = window.userSettings ? parseInt( window.userSettings.uid, 10 ) : 0;\x0a\x0a\x09\x09_.each( wp.media.view.settings.mimeTypes || {}, function( text, key ) {\x0a\x09\x09\x09filters[ key ] = {\x0a\x09\x09\x09\x09text: text,\x0a\x09\x09\x09\x09props: {\x0a\x09\x09\x09\x09\x09status:  null,\x0a\x09\x09\x09\x09\x09type:    key,\x0a\x09\x09\x09\x09\x09uploadedTo: null,\x0a\x09\x09\x09\x09\x09orderby: \x27date\x27,\x0a\x09\x09\x09\x09\x09order:   \x27DESC\x27,\x0a\x09\x09\x09\x09\x09author:  null\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09};\x0a\x09\x09});\x0a\x0a\x09\x09filters.all = {\x0a\x09\x09\x09text:  l10n.allMediaItems,\x0a\x09\x09\x09props: {\x0a\x09\x09\x09\x09status:  null,\x0a\x09\x09\x09\x09type:    null,\x0a\x09\x09\x09\x09uploadedTo: null,\x0a\x09\x09\x09\x09orderby: \x27date\x27,\x0a\x09\x09\x09\x09order:   \x27DESC\x27,\x0a\x09\x09\x09\x09author:  null\x0a\x09\x09\x09},\x0a\x09\x09\x09priority: 10\x0a\x09\x09};\x0a\x0a\x09\x09if ( wp.media.view.settings.post.id ) {\x0a\x09\x09\x09filters.uploaded = {\x0a\x09\x09\x09\x09text:  l10n.uploadedToThisPost,\x0a\x09\x09\x09\x09props: {\x0a\x09\x09\x09\x09\x09status:  null,\x0a\x09\x09\x09\x09\x09type:    null,\x0a\x09\x09\x09\x09\x09uploadedTo: wp.media.view.settings.post.id,\x0a\x09\x09\x09\x09\x09orderby: \x27menuOrder\x27,\x0a\x09\x09\x09\x09\x09order:   \x27ASC\x27,\x0a\x09\x09\x09\x09\x09author:  null\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09priority: 20\x0a\x09\x09\x09};\x0a\x09\x09}\x0a\x0a\x09\x09filters.unattached = {\x0a\x09\x09\x09text:  l10n.unattached,\x0a\x09\x09\x09props: {\x0a\x09\x09\x09\x09status:     null,\x0a\x09\x09\x09\x09uploadedTo: 0,\x0a\x09\x09\x09\x09type:       null,\x0a\x09\x09\x09\x09orderby:    \x27menuOrder\x27,\x0a\x09\x09\x09\x09order:      \x27ASC\x27,\x0a\x09\x09\x09\x09author:     null\x0a\x09\x09\x09},\x0a\x09\x09\x09priority: 50\x0a\x09\x09};\x0a\x0a\x09\x09if ( uid ) {\x0a\x09\x09\x09filters.mine = {\x0a\x09\x09\x09\x09text:  l10n.mine,\x0a\x09\x09\x09\x09props: {\x0a\x09\x09\x09\x09\x09status:\x09\x09null,\x0a\x09\x09\x09\x09\x09type:\x09\x09null,\x0a\x09\x09\x09\x09\x09uploadedTo:\x09null,\x0a\x09\x09\x09\x09\x09orderby:\x09\x27date\x27,\x0a\x09\x09\x09\x09\x09order:\x09\x09\x27DESC\x27,\x0a\x09\x09\x09\x09\x09author:\x09\x09uid\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09priority: 50\x0a\x09\x09\x09};\x0a\x09\x09}\x0a\x0a\x09\x09if ( wp.media.view.settings.mediaTrash &&\x0a\x09\x09\x09this.controller.isModeActive( \x27grid\x27 ) ) {\x0a\x0a\x09\x09\x09filters.trash = {\x0a\x09\x09\x09\x09text:  l10n.trash,\x0a\x09\x09\x09\x09props: {\x0a\x09\x09\x09\x09\x09uploadedTo: null,\x0a\x09\x09\x09\x09\x09status:     \x27trash\x27,\x0a\x09\x09\x09\x09\x09type:       null,\x0a\x09\x09\x09\x09\x09orderby:    \x27date\x27,\x0a\x09\x09\x09\x09\x09order:      \x27DESC\x27,\x0a\x09\x09\x09\x09\x09author:     null\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09priority: 50\x0a\x09\x09\x09};\x0a\x09\x09}\x0a\x0a\x09\x09this.filters = filters;\x0a\x09}\x0a});\x0a\x0amodule.exports = All;\x0a\x0a\x0a/***/ }),\x0a/* 82 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09mediaTrash = wp.media.view.settings.mediaTrash,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09$ = jQuery,\x0a\x09AttachmentsBrowser;\x0a\x0a/**\x0a * wp.media.view.AttachmentsBrowser\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a *\x0a * @param {object}         [options]               The options hash passed to the view.\x0a * @param {boolean|string} [options.filters=false] Which filters to show in the browser\x27s toolbar.\x0a *                                                 Accepts \x27uploaded\x27 and \x27all\x27.\x0a * @param {boolean}        [options.search=true]   Whether to show the search interface in the\x0a *                                                 browser\x27s toolbar.\x0a * @param {boolean}        [options.date=true]     Whether to show the date filter in the\x0a *                                                 browser\x27s toolbar.\x0a * @param {boolean}        [options.display=false] Whether to show the attachments display settings\x0a *                                                 view in the sidebar.\x0a * @param {boolean|string} [options.sidebar=true]  Whether to create a sidebar for the browser.\x0a *                                                 Accepts true, false, and \x27errors\x27.\x0a */\x0aAttachmentsBrowser = View.extend(/** @lends wp.media.view.AttachmentsBrowser.prototype */{\x0a\x09tagName:   \x27div\x27,\x0a\x09className: \x27attachments-browser\x27,\x0a\x0a\x09initialize: function() {\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09filters: false,\x0a\x09\x09\x09search:  true,\x0a\x09\x09\x09date:    true,\x0a\x09\x09\x09display: false,\x0a\x09\x09\x09sidebar: true,\x0a\x09\x09\x09AttachmentView: wp.media.view.Attachment.Library\x0a\x09\x09});\x0a\x0a\x09\x09this.controller.on( \x27toggle:upload:attachment\x27, this.toggleUploader, this );\x0a\x09\x09this.controller.on( \x27edit:selection\x27, this.editSelection );\x0a\x0a\x09\x09// In the Media Library, the sidebar is used to display errors before the attachments grid.\x0a\x09\x09if ( this.options.sidebar && \x27errors\x27 === this.options.sidebar ) {\x0a\x09\x09\x09this.createSidebar();\x0a\x09\x09}\x0a\x0a\x09\x09/*\x0a\x09\x09 * For accessibility reasons, place the Inline Uploader before other sections.\x0a\x09\x09 * This way, in the Media Library, it\x27s right after the Add New button, see ticket #37188.\x0a\x09\x09 */\x0a\x09\x09this.createUploader();\x0a\x0a\x09\x09/*\x0a\x09\x09 * Create a multi-purpose toolbar. Used as main toolbar in the Media Library\x0a\x09\x09 * and also for other things, for example the \x22Drag and drop to reorder\x22 and\x0a\x09\x09 * \x22Suggested dimensions\x22 info in the media modal.\x0a\x09\x09 */\x0a\x09\x09this.createToolbar();\x0a\x0a\x09\x09// Add a heading before the attachments list.\x0a\x09\x09this.createAttachmentsHeading();\x0a\x0a\x09\x09// Create the list of attachments.\x0a\x09\x09this.createAttachments();\x0a\x0a\x09\x09// For accessibility reasons, place the normal sidebar after the attachments, see ticket #36909.\x0a\x09\x09if ( this.options.sidebar && \x27errors\x27 !== this.options.sidebar ) {\x0a\x09\x09\x09this.createSidebar();\x0a\x09\x09}\x0a\x0a\x09\x09this.updateContent();\x0a\x0a\x09\x09if ( ! this.options.sidebar || \x27errors\x27 === this.options.sidebar ) {\x0a\x09\x09\x09this.$el.addClass( \x27hide-sidebar\x27 );\x0a\x0a\x09\x09\x09if ( \x27errors\x27 === this.options.sidebar ) {\x0a\x09\x09\x09\x09this.$el.addClass( \x27sidebar-for-errors\x27 );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09this.collection.on( \x27add remove reset\x27, this.updateContent, this );\x0a\x09},\x0a\x0a\x09editSelection: function( modal ) {\x0a\x09\x09modal.$( \x27.media-button-backToLibrary\x27 ).focus();\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @returns {wp.media.view.AttachmentsBrowser} Returns itself to allow chaining\x0a\x09 */\x0a\x09dispose: function() {\x0a\x09\x09this.options.selection.off( null, null, this );\x0a\x09\x09View.prototype.dispose.apply( this, arguments );\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09createToolbar: function() {\x0a\x09\x09var LibraryViewSwitcher, Filters, toolbarOptions;\x0a\x0a\x09\x09toolbarOptions = {\x0a\x09\x09\x09controller: this.controller\x0a\x09\x09};\x0a\x0a\x09\x09if ( this.controller.isModeActive( \x27grid\x27 ) ) {\x0a\x09\x09\x09toolbarOptions.className = \x27media-toolbar wp-filter\x27;\x0a\x09\x09}\x0a\x0a\x09\x09/**\x0a\x09\x09* @member {wp.media.view.Toolbar}\x0a\x09\x09*/\x0a\x09\x09this.toolbar = new wp.media.view.Toolbar( toolbarOptions );\x0a\x0a\x09\x09this.views.add( this.toolbar );\x0a\x0a\x09\x09this.toolbar.set( \x27spinner\x27, new wp.media.view.Spinner({\x0a\x09\x09\x09priority: -60\x0a\x09\x09}) );\x0a\x0a\x09\x09if ( -1 !== $.inArray( this.options.filters, [ \x27uploaded\x27, \x27all\x27 ] ) ) {\x0a\x09\x09\x09// \x22Filters\x22 will return a \x3cselect\x3e, need to render\x0a\x09\x09\x09// screen reader text before\x0a\x09\x09\x09this.toolbar.set( \x27filtersLabel\x27, new wp.media.view.Label({\x0a\x09\x09\x09\x09value: l10n.filterByType,\x0a\x09\x09\x09\x09attributes: {\x0a\x09\x09\x09\x09\x09\x27for\x27:  \x27media-attachment-filters\x27\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09priority:   -80\x0a\x09\x09\x09}).render() );\x0a\x0a\x09\x09\x09if ( \x27uploaded\x27 === this.options.filters ) {\x0a\x09\x09\x09\x09this.toolbar.set( \x27filters\x27, new wp.media.view.AttachmentFilters.Uploaded({\x0a\x09\x09\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09\x09\x09model:      this.collection.props,\x0a\x09\x09\x09\x09\x09priority:   -80\x0a\x09\x09\x09\x09}).render() );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09Filters = new wp.media.view.AttachmentFilters.All({\x0a\x09\x09\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09\x09\x09model:      this.collection.props,\x0a\x09\x09\x09\x09\x09priority:   -80\x0a\x09\x09\x09\x09});\x0a\x0a\x09\x09\x09\x09this.toolbar.set( \x27filters\x27, Filters.render() );\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09// Feels odd to bring the global media library switcher into the Attachment\x0a\x09\x09// browser view. Is this a use case for doAction( \x27add:toolbar-items:attachments-browser\x27, this.toolbar );\x0a\x09\x09// which the controller can tap into and add this view?\x0a\x09\x09if ( this.controller.isModeActive( \x27grid\x27 ) ) {\x0a\x09\x09\x09LibraryViewSwitcher = View.extend({\x0a\x09\x09\x09\x09className: \x27view-switch media-grid-view-switch\x27,\x0a\x09\x09\x09\x09template: wp.template( \x27media-library-view-switcher\x27)\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09this.toolbar.set( \x27libraryViewSwitcher\x27, new LibraryViewSwitcher({\x0a\x09\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09\x09priority: -90\x0a\x09\x09\x09}).render() );\x0a\x0a\x09\x09\x09// DateFilter is a \x3cselect\x3e, screen reader text needs to be rendered before\x0a\x09\x09\x09this.toolbar.set( \x27dateFilterLabel\x27, new wp.media.view.Label({\x0a\x09\x09\x09\x09value: l10n.filterByDate,\x0a\x09\x09\x09\x09attributes: {\x0a\x09\x09\x09\x09\x09\x27for\x27: \x27media-attachment-date-filters\x27\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09priority: -75\x0a\x09\x09\x09}).render() );\x0a\x09\x09\x09this.toolbar.set( \x27dateFilter\x27, new wp.media.view.DateFilter({\x0a\x09\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09\x09model:      this.collection.props,\x0a\x09\x09\x09\x09priority: -75\x0a\x09\x09\x09}).render() );\x0a\x0a\x09\x09\x09// BulkSelection is a \x3cdiv\x3e with subviews, including screen reader text\x0a\x09\x09\x09this.toolbar.set( \x27selectModeToggleButton\x27, new wp.media.view.SelectModeToggleButton({\x0a\x09\x09\x09\x09text: l10n.bulkSelect,\x0a\x09\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09\x09priority: -70\x0a\x09\x09\x09}).render() );\x0a\x0a\x09\x09\x09this.toolbar.set( \x27deleteSelectedButton\x27, new wp.media.view.DeleteSelectedButton({\x0a\x09\x09\x09\x09filters: Filters,\x0a\x09\x09\x09\x09style: \x27primary\x27,\x0a\x09\x09\x09\x09disabled: true,\x0a\x09\x09\x09\x09text: mediaTrash ? l10n.trashSelected : l10n.deletePermanently,\x0a\x09\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09\x09priority: -80,\x0a\x09\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09\x09var changed = [], removed = [],\x0a\x09\x09\x09\x09\x09\x09selection = this.controller.state().get( \x27selection\x27 ),\x0a\x09\x09\x09\x09\x09\x09library = this.controller.state().get( \x27library\x27 );\x0a\x0a\x09\x09\x09\x09\x09if ( ! selection.length ) {\x0a\x09\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09if ( ! mediaTrash && ! window.confirm( l10n.warnBulkDelete ) ) {\x0a\x09\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09if ( mediaTrash &&\x0a\x09\x09\x09\x09\x09\x09\x27trash\x27 !== selection.at( 0 ).get( \x27status\x27 ) &&\x0a\x09\x09\x09\x09\x09\x09! window.confirm( l10n.warnBulkTrash ) ) {\x0a\x0a\x09\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09selection.each( function( model ) {\x0a\x09\x09\x09\x09\x09\x09if ( ! model.get( \x27nonces\x27 )[\x27delete\x27] ) {\x0a\x09\x09\x09\x09\x09\x09\x09removed.push( model );\x0a\x09\x09\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09if ( mediaTrash && \x27trash\x27 === model.get( \x27status\x27 ) ) {\x0a\x09\x09\x09\x09\x09\x09\x09model.set( \x27status\x27, \x27inherit\x27 );\x0a\x09\x09\x09\x09\x09\x09\x09changed.push( model.save() );\x0a\x09\x09\x09\x09\x09\x09\x09removed.push( model );\x0a\x09\x09\x09\x09\x09\x09} else if ( mediaTrash ) {\x0a\x09\x09\x09\x09\x09\x09\x09model.set( \x27status\x27, \x27trash\x27 );\x0a\x09\x09\x09\x09\x09\x09\x09changed.push( model.save() );\x0a\x09\x09\x09\x09\x09\x09\x09removed.push( model );\x0a\x09\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09\x09model.destroy({wait: true});\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09} );\x0a\x0a\x09\x09\x09\x09\x09if ( changed.length ) {\x0a\x09\x09\x09\x09\x09\x09selection.remove( removed );\x0a\x0a\x09\x09\x09\x09\x09\x09$.when.apply( null, changed ).then( _.bind( function() {\x0a\x09\x09\x09\x09\x09\x09\x09library._requery( true );\x0a\x09\x09\x09\x09\x09\x09\x09this.controller.trigger( \x27selection:action:done\x27 );\x0a\x09\x09\x09\x09\x09\x09}, this ) );\x0a\x09\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09\x09this.controller.trigger( \x27selection:action:done\x27 );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}).render() );\x0a\x0a\x09\x09\x09if ( mediaTrash ) {\x0a\x09\x09\x09\x09this.toolbar.set( \x27deleteSelectedPermanentlyButton\x27, new wp.media.view.DeleteSelectedPermanentlyButton({\x0a\x09\x09\x09\x09\x09filters: Filters,\x0a\x09\x09\x09\x09\x09style: \x27link button-link-delete\x27,\x0a\x09\x09\x09\x09\x09disabled: true,\x0a\x09\x09\x09\x09\x09text: l10n.deletePermanently,\x0a\x09\x09\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09\x09\x09priority: -55,\x0a\x09\x09\x09\x09\x09click: function() {\x0a\x09\x09\x09\x09\x09\x09var removed = [],\x0a\x09\x09\x09\x09\x09\x09\x09destroy = [],\x0a\x09\x09\x09\x09\x09\x09\x09selection = this.controller.state().get( \x27selection\x27 );\x0a\x0a\x09\x09\x09\x09\x09\x09if ( ! selection.length || ! window.confirm( l10n.warnBulkDelete ) ) {\x0a\x09\x09\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09selection.each( function( model ) {\x0a\x09\x09\x09\x09\x09\x09\x09if ( ! model.get( \x27nonces\x27 )[\x27delete\x27] ) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09removed.push( model );\x0a\x09\x09\x09\x09\x09\x09\x09\x09return;\x0a\x09\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09\x09destroy.push( model );\x0a\x09\x09\x09\x09\x09\x09} );\x0a\x0a\x09\x09\x09\x09\x09\x09if ( removed.length ) {\x0a\x09\x09\x09\x09\x09\x09\x09selection.remove( removed );\x0a\x09\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09\x09if ( destroy.length ) {\x0a\x09\x09\x09\x09\x09\x09\x09$.when.apply( null, destroy.map( function (item) {\x0a\x09\x09\x09\x09\x09\x09\x09\x09return item.destroy();\x0a\x09\x09\x09\x09\x09\x09\x09} ) ).then( _.bind( function() {\x0a\x09\x09\x09\x09\x09\x09\x09\x09this.controller.trigger( \x27selection:action:done\x27 );\x0a\x09\x09\x09\x09\x09\x09\x09}, this ) );\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}).render() );\x0a\x09\x09\x09}\x0a\x0a\x09\x09} else if ( this.options.date ) {\x0a\x09\x09\x09// DateFilter is a \x3cselect\x3e, screen reader text needs to be rendered before\x0a\x09\x09\x09this.toolbar.set( \x27dateFilterLabel\x27, new wp.media.view.Label({\x0a\x09\x09\x09\x09value: l10n.filterByDate,\x0a\x09\x09\x09\x09attributes: {\x0a\x09\x09\x09\x09\x09\x27for\x27: \x27media-attachment-date-filters\x27\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09priority: -75\x0a\x09\x09\x09}).render() );\x0a\x09\x09\x09this.toolbar.set( \x27dateFilter\x27, new wp.media.view.DateFilter({\x0a\x09\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09\x09model:      this.collection.props,\x0a\x09\x09\x09\x09priority: -75\x0a\x09\x09\x09}).render() );\x0a\x09\x09}\x0a\x0a\x09\x09if ( this.options.search ) {\x0a\x09\x09\x09// Search is an input, screen reader text needs to be rendered before\x0a\x09\x09\x09this.toolbar.set( \x27searchLabel\x27, new wp.media.view.Label({\x0a\x09\x09\x09\x09value: l10n.searchMediaLabel,\x0a\x09\x09\x09\x09attributes: {\x0a\x09\x09\x09\x09\x09\x27for\x27: \x27media-search-input\x27\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09priority:   60\x0a\x09\x09\x09}).render() );\x0a\x09\x09\x09this.toolbar.set( \x27search\x27, new wp.media.view.Search({\x0a\x09\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09\x09model:      this.collection.props,\x0a\x09\x09\x09\x09priority:   60\x0a\x09\x09\x09}).render() );\x0a\x09\x09}\x0a\x0a\x09\x09if ( this.options.dragInfo ) {\x0a\x09\x09\x09this.toolbar.set( \x27dragInfo\x27, new View({\x0a\x09\x09\x09\x09el: $( \x27\x3cdiv class=\x22instructions\x22\x3e\x27 + l10n.dragInfo + \x27\x3c/div\x3e\x27 )[0],\x0a\x09\x09\x09\x09priority: -40\x0a\x09\x09\x09}) );\x0a\x09\x09}\x0a\x0a\x09\x09if ( this.options.suggestedWidth && this.options.suggestedHeight ) {\x0a\x09\x09\x09this.toolbar.set( \x27suggestedDimensions\x27, new View({\x0a\x09\x09\x09\x09el: $( \x27\x3cdiv class=\x22instructions\x22\x3e\x27 + l10n.suggestedDimensions.replace( \x27%1$s\x27, this.options.suggestedWidth ).replace( \x27%2$s\x27, this.options.suggestedHeight ) + \x27\x3c/div\x3e\x27 )[0],\x0a\x09\x09\x09\x09priority: -40\x0a\x09\x09\x09}) );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09updateContent: function() {\x0a\x09\x09var view = this,\x0a\x09\x09\x09noItemsView;\x0a\x0a\x09\x09if ( this.controller.isModeActive( \x27grid\x27 ) ) {\x0a\x09\x09\x09noItemsView = view.attachmentsNoResults;\x0a\x09\x09} else {\x0a\x09\x09\x09noItemsView = view.uploader;\x0a\x09\x09}\x0a\x0a\x09\x09if ( ! this.collection.length ) {\x0a\x09\x09\x09this.toolbar.get( \x27spinner\x27 ).show();\x0a\x09\x09\x09this.dfd = this.collection.more().done( function() {\x0a\x09\x09\x09\x09if ( ! view.collection.length ) {\x0a\x09\x09\x09\x09\x09noItemsView.$el.removeClass( \x27hidden\x27 );\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09noItemsView.$el.addClass( \x27hidden\x27 );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09view.toolbar.get( \x27spinner\x27 ).hide();\x0a\x09\x09\x09} );\x0a\x09\x09} else {\x0a\x09\x09\x09noItemsView.$el.addClass( \x27hidden\x27 );\x0a\x09\x09\x09view.toolbar.get( \x27spinner\x27 ).hide();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09createUploader: function() {\x0a\x09\x09this.uploader = new wp.media.view.UploaderInline({\x0a\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09status:     false,\x0a\x09\x09\x09message:    this.controller.isModeActive( \x27grid\x27 ) ? \x27\x27 : l10n.noItemsFound,\x0a\x09\x09\x09canClose:   this.controller.isModeActive( \x27grid\x27 )\x0a\x09\x09});\x0a\x0a\x09\x09this.uploader.$el.addClass( \x27hidden\x27 );\x0a\x09\x09this.views.add( this.uploader );\x0a\x09},\x0a\x0a\x09toggleUploader: function() {\x0a\x09\x09if ( this.uploader.$el.hasClass( \x27hidden\x27 ) ) {\x0a\x09\x09\x09this.uploader.show();\x0a\x09\x09} else {\x0a\x09\x09\x09this.uploader.hide();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09createAttachments: function() {\x0a\x09\x09this.attachments = new wp.media.view.Attachments({\x0a\x09\x09\x09controller:           this.controller,\x0a\x09\x09\x09collection:           this.collection,\x0a\x09\x09\x09selection:            this.options.selection,\x0a\x09\x09\x09model:                this.model,\x0a\x09\x09\x09sortable:             this.options.sortable,\x0a\x09\x09\x09scrollElement:        this.options.scrollElement,\x0a\x09\x09\x09idealColumnWidth:     this.options.idealColumnWidth,\x0a\x0a\x09\x09\x09// The single `Attachment` view to be used in the `Attachments` view.\x0a\x09\x09\x09AttachmentView: this.options.AttachmentView\x0a\x09\x09});\x0a\x0a\x09\x09// Add keydown listener to the instance of the Attachments view\x0a\x09\x09this.controller.on( \x27attachment:keydown:arrow\x27,     _.bind( this.attachments.arrowEvent, this.attachments ) );\x0a\x09\x09this.controller.on( \x27attachment:details:shift-tab\x27, _.bind( this.attachments.restoreFocus, this.attachments ) );\x0a\x0a\x09\x09this.views.add( this.attachments );\x0a\x0a\x0a\x09\x09if ( this.controller.isModeActive( \x27grid\x27 ) ) {\x0a\x09\x09\x09this.attachmentsNoResults = new View({\x0a\x09\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09\x09tagName: \x27p\x27\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09this.attachmentsNoResults.$el.addClass( \x27hidden no-media\x27 );\x0a\x09\x09\x09this.attachmentsNoResults.$el.html( l10n.noMedia );\x0a\x0a\x09\x09\x09this.views.add( this.attachmentsNoResults );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09createAttachmentsHeading: function() {\x0a\x09\x09this.attachmentsHeading = new wp.media.view.Heading( {\x0a\x09\x09\x09text: l10n.attachmentsList,\x0a\x09\x09\x09level: \x27h2\x27,\x0a\x09\x09\x09className: \x27media-views-heading screen-reader-text\x27\x0a\x09\x09} );\x0a\x09\x09this.views.add( this.attachmentsHeading );\x0a\x09},\x0a\x0a\x09createSidebar: function() {\x0a\x09\x09var options = this.options,\x0a\x09\x09\x09selection = options.selection,\x0a\x09\x09\x09sidebar = this.sidebar = new wp.media.view.Sidebar({\x0a\x09\x09\x09\x09controller: this.controller\x0a\x09\x09\x09});\x0a\x0a\x09\x09this.views.add( sidebar );\x0a\x0a\x09\x09if ( this.controller.uploader ) {\x0a\x09\x09\x09sidebar.set( \x27uploads\x27, new wp.media.view.UploaderStatus({\x0a\x09\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09\x09priority:   40\x0a\x09\x09\x09}) );\x0a\x09\x09}\x0a\x0a\x09\x09selection.on( \x27selection:single\x27, this.createSingle, this );\x0a\x09\x09selection.on( \x27selection:unsingle\x27, this.disposeSingle, this );\x0a\x0a\x09\x09if ( selection.single() ) {\x0a\x09\x09\x09this.createSingle();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09createSingle: function() {\x0a\x09\x09var sidebar = this.sidebar,\x0a\x09\x09\x09single = this.options.selection.single();\x0a\x0a\x09\x09sidebar.set( \x27details\x27, new wp.media.view.Attachment.Details({\x0a\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09model:      single,\x0a\x09\x09\x09priority:   80\x0a\x09\x09}) );\x0a\x0a\x09\x09sidebar.set( \x27compat\x27, new wp.media.view.AttachmentCompat({\x0a\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09model:      single,\x0a\x09\x09\x09priority:   120\x0a\x09\x09}) );\x0a\x0a\x09\x09if ( this.options.display ) {\x0a\x09\x09\x09sidebar.set( \x27display\x27, new wp.media.view.Settings.AttachmentDisplay({\x0a\x09\x09\x09\x09controller:   this.controller,\x0a\x09\x09\x09\x09model:        this.model.display( single ),\x0a\x09\x09\x09\x09attachment:   single,\x0a\x09\x09\x09\x09priority:     160,\x0a\x09\x09\x09\x09userSettings: this.model.get(\x27displayUserSettings\x27)\x0a\x09\x09\x09}) );\x0a\x09\x09}\x0a\x0a\x09\x09// Show the sidebar on mobile\x0a\x09\x09if ( this.model.id === \x27insert\x27 ) {\x0a\x09\x09\x09sidebar.$el.addClass( \x27visible\x27 );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09disposeSingle: function() {\x0a\x09\x09var sidebar = this.sidebar;\x0a\x09\x09sidebar.unset(\x27details\x27);\x0a\x09\x09sidebar.unset(\x27compat\x27);\x0a\x09\x09sidebar.unset(\x27display\x27);\x0a\x09\x09// Hide the sidebar on mobile\x0a\x09\x09sidebar.$el.removeClass( \x27visible\x27 );\x0a\x09}\x0a});\x0a\x0amodule.exports = AttachmentsBrowser;\x0a\x0a\x0a/***/ }),\x0a/* 83 */\x0a/***/ (function(module, exports) {\x0a\x0avar l10n = wp.media.view.l10n,\x0a\x09Selection;\x0a\x0a/**\x0a * wp.media.view.Selection\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aSelection = wp.media.View.extend(/** @lends wp.media.view.Selection.prototype */{\x0a\x09tagName:   \x27div\x27,\x0a\x09className: \x27media-selection\x27,\x0a\x09template:  wp.template(\x27media-selection\x27),\x0a\x0a\x09events: {\x0a\x09\x09\x27click .edit-selection\x27:  \x27edit\x27,\x0a\x09\x09\x27click .clear-selection\x27: \x27clear\x27\x0a\x09},\x0a\x0a\x09initialize: function() {\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09editable:  false,\x0a\x09\x09\x09clearable: true\x0a\x09\x09});\x0a\x0a\x09\x09/**\x0a\x09\x09 * @member {wp.media.view.Attachments.Selection}\x0a\x09\x09 */\x0a\x09\x09this.attachments = new wp.media.view.Attachments.Selection({\x0a\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09collection: this.collection,\x0a\x09\x09\x09selection:  this.collection,\x0a\x09\x09\x09model:      new Backbone.Model()\x0a\x09\x09});\x0a\x0a\x09\x09this.views.set( \x27.selection-view\x27, this.attachments );\x0a\x09\x09this.collection.on( \x27add remove reset\x27, this.refresh, this );\x0a\x09\x09this.controller.on( \x27content:activate\x27, this.refresh, this );\x0a\x09},\x0a\x0a\x09ready: function() {\x0a\x09\x09this.refresh();\x0a\x09},\x0a\x0a\x09refresh: function() {\x0a\x09\x09// If the selection hasn\x27t been rendered, bail.\x0a\x09\x09if ( ! this.$el.children().length ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09var collection = this.collection,\x0a\x09\x09\x09editing = \x27edit-selection\x27 === this.controller.content.mode();\x0a\x0a\x09\x09// If nothing is selected, display nothing.\x0a\x09\x09this.$el.toggleClass( \x27empty\x27, ! collection.length );\x0a\x09\x09this.$el.toggleClass( \x27one\x27, 1 === collection.length );\x0a\x09\x09this.$el.toggleClass( \x27editing\x27, editing );\x0a\x0a\x09\x09this.$(\x27.count\x27).text( l10n.selected.replace(\x27%d\x27, collection.length) );\x0a\x09},\x0a\x0a\x09edit: function( event ) {\x0a\x09\x09event.preventDefault();\x0a\x09\x09if ( this.options.editable ) {\x0a\x09\x09\x09this.options.editable.call( this, this.collection );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09clear: function( event ) {\x0a\x09\x09event.preventDefault();\x0a\x09\x09this.collection.reset();\x0a\x0a\x09\x09// Keep focus inside media modal\x0a\x09\x09// after clear link is selected\x0a\x09\x09this.controller.modal.focusManager.focus();\x0a\x09}\x0a});\x0a\x0amodule.exports = Selection;\x0a\x0a\x0a/***/ }),\x0a/* 84 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Attachment.Selection\x0a *\x0a * @memberOf wp.media.view.Attachment\x0a *\x0a * @class\x0a * @augments wp.media.view.Attachment\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar Selection = wp.media.view.Attachment.extend(/** @lends wp.media.view.Attachment.Selection.prototype */{\x0a\x09className: \x27attachment selection\x27,\x0a\x0a\x09// On click, just select the model, instead of removing the model from\x0a\x09// the selection.\x0a\x09toggleSelection: function() {\x0a\x09\x09this.options.selection.single( this.model );\x0a\x09}\x0a});\x0a\x0amodule.exports = Selection;\x0a\x0a\x0a/***/ }),\x0a/* 85 */\x0a/***/ (function(module, exports) {\x0a\x0avar Attachments = wp.media.view.Attachments,\x0a\x09Selection;\x0a\x0a/**\x0a * wp.media.view.Attachments.Selection\x0a *\x0a * @memberOf wp.media.view.Attachments\x0a *\x0a * @class\x0a * @augments wp.media.view.Attachments\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aSelection = Attachments.extend(/** @lends wp.media.view.Attachments.Selection.prototype */{\x0a\x09events: {},\x0a\x09initialize: function() {\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09sortable:   false,\x0a\x09\x09\x09resize:     false,\x0a\x0a\x09\x09\x09// The single `Attachment` view to be used in the `Attachments` view.\x0a\x09\x09\x09AttachmentView: wp.media.view.Attachment.Selection\x0a\x09\x09});\x0a\x09\x09// Call \x27initialize\x27 directly on the parent class.\x0a\x09\x09return Attachments.prototype.initialize.apply( this, arguments );\x0a\x09}\x0a});\x0a\x0amodule.exports = Selection;\x0a\x0a\x0a/***/ }),\x0a/* 86 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Attachment.EditSelection\x0a *\x0a * @memberOf wp.media.view.Attachment\x0a *\x0a * @class\x0a * @augments wp.media.view.Attachment.Selection\x0a * @augments wp.media.view.Attachment\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar EditSelection = wp.media.view.Attachment.Selection.extend(/** @lends wp.media.view.Attachment.EditSelection.prototype */{\x0a\x09buttons: {\x0a\x09\x09close: true\x0a\x09}\x0a});\x0a\x0amodule.exports = EditSelection;\x0a\x0a\x0a/***/ }),\x0a/* 87 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09$ = Backbone.$,\x0a\x09Settings;\x0a\x0a/**\x0a * wp.media.view.Settings\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aSettings = View.extend(/** @lends wp.media.view.Settings.prototype */{\x0a\x09events: {\x0a\x09\x09\x27click button\x27:    \x27updateHandler\x27,\x0a\x09\x09\x27change input\x27:    \x27updateHandler\x27,\x0a\x09\x09\x27change select\x27:   \x27updateHandler\x27,\x0a\x09\x09\x27change textarea\x27: \x27updateHandler\x27\x0a\x09},\x0a\x0a\x09initialize: function() {\x0a\x09\x09this.model = this.model || new Backbone.Model();\x0a\x09\x09this.listenTo( this.model, \x27change\x27, this.updateChanges );\x0a\x09},\x0a\x0a\x09prepare: function() {\x0a\x09\x09return _.defaults({\x0a\x09\x09\x09model: this.model.toJSON()\x0a\x09\x09}, this.options );\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.Settings} Returns itself to allow chaining\x0a\x09 */\x0a\x09render: function() {\x0a\x09\x09View.prototype.render.apply( this, arguments );\x0a\x09\x09// Select the correct values.\x0a\x09\x09_( this.model.attributes ).chain().keys().each( this.update, this );\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * @param {string} key\x0a\x09 */\x0a\x09update: function( key ) {\x0a\x09\x09var value = this.model.get( key ),\x0a\x09\x09\x09$setting = this.$(\x27[data-setting=\x22\x27 + key + \x27\x22]\x27),\x0a\x09\x09\x09$buttons, $value;\x0a\x0a\x09\x09// Bail if we didn\x27t find a matching setting.\x0a\x09\x09if ( ! $setting.length ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Attempt to determine how the setting is rendered and update\x0a\x09\x09// the selected value.\x0a\x0a\x09\x09// Handle dropdowns.\x0a\x09\x09if ( $setting.is(\x27select\x27) ) {\x0a\x09\x09\x09$value = $setting.find(\x27[value=\x22\x27 + value + \x27\x22]\x27);\x0a\x0a\x09\x09\x09if ( $value.length ) {\x0a\x09\x09\x09\x09$setting.find(\x27option\x27).prop( \x27selected\x27, false );\x0a\x09\x09\x09\x09$value.prop( \x27selected\x27, true );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09// If we can\x27t find the desired value, record what *is* selected.\x0a\x09\x09\x09\x09this.model.set( key, $setting.find(\x27:selected\x27).val() );\x0a\x09\x09\x09}\x0a\x0a\x09\x09// Handle button groups.\x0a\x09\x09} else if ( $setting.hasClass(\x27button-group\x27) ) {\x0a\x09\x09\x09$buttons = $setting.find(\x27button\x27).removeClass(\x27active\x27);\x0a\x09\x09\x09$buttons.filter( \x27[value=\x22\x27 + value + \x27\x22]\x27 ).addClass(\x27active\x27);\x0a\x0a\x09\x09// Handle text inputs and textareas.\x0a\x09\x09} else if ( $setting.is(\x27input[type=\x22text\x22], textarea\x27) ) {\x0a\x09\x09\x09if ( ! $setting.is(\x27:focus\x27) ) {\x0a\x09\x09\x09\x09$setting.val( value );\x0a\x09\x09\x09}\x0a\x09\x09// Handle checkboxes.\x0a\x09\x09} else if ( $setting.is(\x27input[type=\x22checkbox\x22]\x27) ) {\x0a\x09\x09\x09$setting.prop( \x27checked\x27, !! value && \x27false\x27 !== value );\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09updateHandler: function( event ) {\x0a\x09\x09var $setting = $( event.target ).closest(\x27[data-setting]\x27),\x0a\x09\x09\x09value = event.target.value,\x0a\x09\x09\x09userSetting;\x0a\x0a\x09\x09event.preventDefault();\x0a\x0a\x09\x09if ( ! $setting.length ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Use the correct value for checkboxes.\x0a\x09\x09if ( $setting.is(\x27input[type=\x22checkbox\x22]\x27) ) {\x0a\x09\x09\x09value = $setting[0].checked;\x0a\x09\x09}\x0a\x0a\x09\x09// Update the corresponding setting.\x0a\x09\x09this.model.set( $setting.data(\x27setting\x27), value );\x0a\x0a\x09\x09// If the setting has a corresponding user setting,\x0a\x09\x09// update that as well.\x0a\x09\x09if ( userSetting = $setting.data(\x27userSetting\x27) ) {\x0a\x09\x09\x09window.setUserSetting( userSetting, value );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09updateChanges: function( model ) {\x0a\x09\x09if ( model.hasChanged() ) {\x0a\x09\x09\x09_( model.changed ).chain().keys().each( this.update, this );\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = Settings;\x0a\x0a\x0a/***/ }),\x0a/* 88 */\x0a/***/ (function(module, exports) {\x0a\x0avar Settings = wp.media.view.Settings,\x0a\x09AttachmentDisplay;\x0a\x0a/**\x0a * wp.media.view.Settings.AttachmentDisplay\x0a *\x0a * @memberOf wp.media.view.Settings\x0a *\x0a * @class\x0a * @augments wp.media.view.Settings\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aAttachmentDisplay = Settings.extend(/** @lends wp.media.view.Settings.AttachmentDisplay.prototype */{\x0a\x09className: \x27attachment-display-settings\x27,\x0a\x09template:  wp.template(\x27attachment-display-settings\x27),\x0a\x0a\x09initialize: function() {\x0a\x09\x09var attachment = this.options.attachment;\x0a\x0a\x09\x09_.defaults( this.options, {\x0a\x09\x09\x09userSettings: false\x0a\x09\x09});\x0a\x09\x09// Call \x27initialize\x27 directly on the parent class.\x0a\x09\x09Settings.prototype.initialize.apply( this, arguments );\x0a\x09\x09this.listenTo( this.model, \x27change:link\x27, this.updateLinkTo );\x0a\x0a\x09\x09if ( attachment ) {\x0a\x09\x09\x09attachment.on( \x27change:uploading\x27, this.render, this );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09dispose: function() {\x0a\x09\x09var attachment = this.options.attachment;\x0a\x09\x09if ( attachment ) {\x0a\x09\x09\x09attachment.off( null, null, this );\x0a\x09\x09}\x0a\x09\x09/**\x0a\x09\x09 * call \x27dispose\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09Settings.prototype.dispose.apply( this, arguments );\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.AttachmentDisplay} Returns itself to allow chaining\x0a\x09 */\x0a\x09render: function() {\x0a\x09\x09var attachment = this.options.attachment;\x0a\x09\x09if ( attachment ) {\x0a\x09\x09\x09_.extend( this.options, {\x0a\x09\x09\x09\x09sizes: attachment.get(\x27sizes\x27),\x0a\x09\x09\x09\x09type:  attachment.get(\x27type\x27)\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x09\x09/**\x0a\x09\x09 * call \x27render\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09Settings.prototype.render.call( this );\x0a\x09\x09this.updateLinkTo();\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09updateLinkTo: function() {\x0a\x09\x09var linkTo = this.model.get(\x27link\x27),\x0a\x09\x09\x09$input = this.$(\x27.link-to-custom\x27),\x0a\x09\x09\x09attachment = this.options.attachment;\x0a\x0a\x09\x09if ( \x27none\x27 === linkTo || \x27embed\x27 === linkTo || ( ! attachment && \x27custom\x27 !== linkTo ) ) {\x0a\x09\x09\x09$input.addClass( \x27hidden\x27 );\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09if ( attachment ) {\x0a\x09\x09\x09if ( \x27post\x27 === linkTo ) {\x0a\x09\x09\x09\x09$input.val( attachment.get(\x27link\x27) );\x0a\x09\x09\x09} else if ( \x27file\x27 === linkTo ) {\x0a\x09\x09\x09\x09$input.val( attachment.get(\x27url\x27) );\x0a\x09\x09\x09} else if ( ! this.model.get(\x27linkUrl\x27) ) {\x0a\x09\x09\x09\x09$input.val(\x27http://\x27);\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09$input.prop( \x27readonly\x27, \x27custom\x27 !== linkTo );\x0a\x09\x09}\x0a\x0a\x09\x09$input.removeClass( \x27hidden\x27 );\x0a\x0a\x09\x09// If the input is visible, focus and select its contents.\x0a\x09\x09if ( ! wp.media.isTouchDevice && $input.is(\x27:visible\x27) ) {\x0a\x09\x09\x09$input.focus()[0].select();\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = AttachmentDisplay;\x0a\x0a\x0a/***/ }),\x0a/* 89 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Settings.Gallery\x0a *\x0a * @memberOf wp.media.view.Settings\x0a *\x0a * @class\x0a * @augments wp.media.view.Settings\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar Gallery = wp.media.view.Settings.extend(/** @lends wp.media.view.Settings.Gallery.prototype */{\x0a\x09className: \x27collection-settings gallery-settings\x27,\x0a\x09template:  wp.template(\x27gallery-settings\x27)\x0a});\x0a\x0amodule.exports = Gallery;\x0a\x0a\x0a/***/ }),\x0a/* 90 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Settings.Playlist\x0a *\x0a * @memberOf wp.media.view.Settings\x0a *\x0a * @class\x0a * @augments wp.media.view.Settings\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar Playlist = wp.media.view.Settings.extend(/** @lends wp.media.view.Settings.Playlist.prototype */{\x0a\x09className: \x27collection-settings playlist-settings\x27,\x0a\x09template:  wp.template(\x27playlist-settings\x27)\x0a});\x0a\x0amodule.exports = Playlist;\x0a\x0a\x0a/***/ }),\x0a/* 91 */\x0a/***/ (function(module, exports) {\x0a\x0avar Attachment = wp.media.view.Attachment,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09Details;\x0a\x0a/**\x0a * wp.media.view.Attachment.Details\x0a *\x0a * @memberOf wp.media.view.Attachment\x0a *\x0a * @class\x0a * @augments wp.media.view.Attachment\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aDetails = Attachment.extend(/** @lends wp.media.view.Attachment.Details.prototype */{\x0a\x09tagName:   \x27div\x27,\x0a\x09className: \x27attachment-details\x27,\x0a\x09template:  wp.template(\x27attachment-details\x27),\x0a\x0a\x09/*\x0a\x09 * Reset all the attributes inherited from Attachment including role=checkbox,\x0a\x09 * tabindex, etc., as they are inappropriate for this view. See #47458 and [30483] / #30390.\x0a\x09 */\x0a\x09attributes: {},\x0a\x0a\x09events: {\x0a\x09\x09\x27change [data-setting]\x27:          \x27updateSetting\x27,\x0a\x09\x09\x27change [data-setting] input\x27:    \x27updateSetting\x27,\x0a\x09\x09\x27change [data-setting] select\x27:   \x27updateSetting\x27,\x0a\x09\x09\x27change [data-setting] textarea\x27: \x27updateSetting\x27,\x0a\x09\x09\x27click .delete-attachment\x27:       \x27deleteAttachment\x27,\x0a\x09\x09\x27click .trash-attachment\x27:        \x27trashAttachment\x27,\x0a\x09\x09\x27click .untrash-attachment\x27:      \x27untrashAttachment\x27,\x0a\x09\x09\x27click .edit-attachment\x27:         \x27editAttachment\x27,\x0a\x09\x09\x27keydown\x27:                        \x27toggleSelectionHandler\x27\x0a\x09},\x0a\x0a\x09initialize: function() {\x0a\x09\x09this.options = _.defaults( this.options, {\x0a\x09\x09\x09rerenderOnModelChange: false\x0a\x09\x09});\x0a\x0a\x09\x09// Call \x27initialize\x27 directly on the parent class.\x0a\x09\x09Attachment.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09deleteAttachment: function( event ) {\x0a\x09\x09event.preventDefault();\x0a\x0a\x09\x09if ( window.confirm( l10n.warnDelete ) ) {\x0a\x09\x09\x09this.model.destroy();\x0a\x09\x09\x09// Keep focus inside media modal\x0a\x09\x09\x09// after image is deleted\x0a\x09\x09\x09this.controller.modal.focusManager.focus();\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09trashAttachment: function( event ) {\x0a\x09\x09var library = this.controller.library;\x0a\x09\x09event.preventDefault();\x0a\x0a\x09\x09if ( wp.media.view.settings.mediaTrash &&\x0a\x09\x09\x09\x27edit-metadata\x27 === this.controller.content.mode() ) {\x0a\x0a\x09\x09\x09this.model.set( \x27status\x27, \x27trash\x27 );\x0a\x09\x09\x09this.model.save().done( function() {\x0a\x09\x09\x09\x09library._requery( true );\x0a\x09\x09\x09} );\x0a\x09\x09}  else {\x0a\x09\x09\x09this.model.destroy();\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09untrashAttachment: function( event ) {\x0a\x09\x09var library = this.controller.library;\x0a\x09\x09event.preventDefault();\x0a\x0a\x09\x09this.model.set( \x27status\x27, \x27inherit\x27 );\x0a\x09\x09this.model.save().done( function() {\x0a\x09\x09\x09library._requery( true );\x0a\x09\x09} );\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09editAttachment: function( event ) {\x0a\x09\x09var editState = this.controller.states.get( \x27edit-image\x27 );\x0a\x09\x09if ( window.imageEdit && editState ) {\x0a\x09\x09\x09event.preventDefault();\x0a\x0a\x09\x09\x09editState.set( \x27image\x27, this.model );\x0a\x09\x09\x09this.controller.setState( \x27edit-image\x27 );\x0a\x09\x09} else {\x0a\x09\x09\x09this.$el.addClass(\x27needs-refresh\x27);\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * When reverse tabbing(shift+tab) out of the right details panel, deliver\x0a\x09 * the focus to the item in the list that was being edited.\x0a\x09 *\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09toggleSelectionHandler: function( event ) {\x0a\x09\x09if ( \x27keydown\x27 === event.type && 9 === event.keyCode && event.shiftKey && event.target === this.$( \x27:tabbable\x27 ).get( 0 ) ) {\x0a\x09\x09\x09this.controller.trigger( \x27attachment:details:shift-tab\x27, event );\x0a\x09\x09\x09return false;\x0a\x09\x09}\x0a\x0a\x09\x09if ( 37 === event.keyCode || 38 === event.keyCode || 39 === event.keyCode || 40 === event.keyCode ) {\x0a\x09\x09\x09this.controller.trigger( \x27attachment:keydown:arrow\x27, event );\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = Details;\x0a\x0a\x0a/***/ }),\x0a/* 92 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09AttachmentCompat;\x0a\x0a/**\x0a * wp.media.view.AttachmentCompat\x0a *\x0a * A view to display fields added via the `attachment_fields_to_edit` filter.\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aAttachmentCompat = View.extend(/** @lends wp.media.view.AttachmentCompat.prototype */{\x0a\x09tagName:   \x27form\x27,\x0a\x09className: \x27compat-item\x27,\x0a\x0a\x09events: {\x0a\x09\x09\x27submit\x27:          \x27preventDefault\x27,\x0a\x09\x09\x27change input\x27:    \x27save\x27,\x0a\x09\x09\x27change select\x27:   \x27save\x27,\x0a\x09\x09\x27change textarea\x27: \x27save\x27\x0a\x09},\x0a\x0a\x09initialize: function() {\x0a\x09\x09this.listenTo( this.model, \x27change:compat\x27, this.render );\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.AttachmentCompat} Returns itself to allow chaining\x0a\x09 */\x0a\x09dispose: function() {\x0a\x09\x09if ( this.$(\x27:focus\x27).length ) {\x0a\x09\x09\x09this.save();\x0a\x09\x09}\x0a\x09\x09/**\x0a\x09\x09 * call \x27dispose\x27 directly on the parent class\x0a\x09\x09 */\x0a\x09\x09return View.prototype.dispose.apply( this, arguments );\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.AttachmentCompat} Returns itself to allow chaining\x0a\x09 */\x0a\x09render: function() {\x0a\x09\x09var compat = this.model.get(\x27compat\x27);\x0a\x09\x09if ( ! compat || ! compat.item ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09this.views.detach();\x0a\x09\x09this.$el.html( compat.item );\x0a\x09\x09this.views.render();\x0a\x09\x09return this;\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09preventDefault: function( event ) {\x0a\x09\x09event.preventDefault();\x0a\x09},\x0a\x09/**\x0a\x09 * @param {Object} event\x0a\x09 */\x0a\x09save: function( event ) {\x0a\x09\x09var data = {};\x0a\x0a\x09\x09if ( event ) {\x0a\x09\x09\x09event.preventDefault();\x0a\x09\x09}\x0a\x0a\x09\x09_.each( this.$el.serializeArray(), function( pair ) {\x0a\x09\x09\x09data[ pair.name ] = pair.value;\x0a\x09\x09});\x0a\x0a\x09\x09this.controller.trigger( \x27attachment:compat:waiting\x27, [\x27waiting\x27] );\x0a\x09\x09this.model.saveCompat( data ).always( _.bind( this.postSave, this ) );\x0a\x09},\x0a\x0a\x09postSave: function() {\x0a\x09\x09this.controller.trigger( \x27attachment:compat:ready\x27, [\x27ready\x27] );\x0a\x09}\x0a});\x0a\x0amodule.exports = AttachmentCompat;\x0a\x0a\x0a/***/ }),\x0a/* 93 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Iframe\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar Iframe = wp.media.View.extend(/** @lends wp.media.view.Iframe.prototype */{\x0a\x09className: \x27media-iframe\x27,\x0a\x09/**\x0a\x09 * @returns {wp.media.view.Iframe} Returns itself to allow chaining\x0a\x09 */\x0a\x09render: function() {\x0a\x09\x09this.views.detach();\x0a\x09\x09this.$el.html( \x27\x3ciframe src=\x22\x27 + this.controller.state().get(\x27src\x27) + \x27\x22 /\x3e\x27 );\x0a\x09\x09this.views.render();\x0a\x09\x09return this;\x0a\x09}\x0a});\x0a\x0amodule.exports = Iframe;\x0a\x0a\x0a/***/ }),\x0a/* 94 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Embed\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar Embed = wp.media.View.extend(/** @lends wp.media.view.Ember.prototype */{\x0a\x09className: \x27media-embed\x27,\x0a\x0a\x09initialize: function() {\x0a\x09\x09/**\x0a\x09\x09 * @member {wp.media.view.EmbedUrl}\x0a\x09\x09 */\x0a\x09\x09this.url = new wp.media.view.EmbedUrl({\x0a\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09model:      this.model.props\x0a\x09\x09}).render();\x0a\x0a\x09\x09this.views.set([ this.url ]);\x0a\x09\x09this.refresh();\x0a\x09\x09this.listenTo( this.model, \x27change:type\x27, this.refresh );\x0a\x09\x09this.listenTo( this.model, \x27change:loading\x27, this.loading );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * @param {Object} view\x0a\x09 */\x0a\x09settings: function( view ) {\x0a\x09\x09if ( this._settings ) {\x0a\x09\x09\x09this._settings.remove();\x0a\x09\x09}\x0a\x09\x09this._settings = view;\x0a\x09\x09this.views.add( view );\x0a\x09},\x0a\x0a\x09refresh: function() {\x0a\x09\x09var type = this.model.get(\x27type\x27),\x0a\x09\x09\x09constructor;\x0a\x0a\x09\x09if ( \x27image\x27 === type ) {\x0a\x09\x09\x09constructor = wp.media.view.EmbedImage;\x0a\x09\x09} else if ( \x27link\x27 === type ) {\x0a\x09\x09\x09constructor = wp.media.view.EmbedLink;\x0a\x09\x09} else {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09this.settings( new constructor({\x0a\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09model:      this.model.props,\x0a\x09\x09\x09priority:   40\x0a\x09\x09}) );\x0a\x09},\x0a\x0a\x09loading: function() {\x0a\x09\x09this.$el.toggleClass( \x27embed-loading\x27, this.model.get(\x27loading\x27) );\x0a\x09}\x0a});\x0a\x0amodule.exports = Embed;\x0a\x0a\x0a/***/ }),\x0a/* 95 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Label\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar Label = wp.media.View.extend(/** @lends wp.media.view.Label.prototype */{\x0a\x09tagName: \x27label\x27,\x0a\x09className: \x27screen-reader-text\x27,\x0a\x0a\x09initialize: function() {\x0a\x09\x09this.value = this.options.value;\x0a\x09},\x0a\x0a\x09render: function() {\x0a\x09\x09this.$el.html( this.value );\x0a\x0a\x09\x09return this;\x0a\x09}\x0a});\x0a\x0amodule.exports = Label;\x0a\x0a\x0a/***/ }),\x0a/* 96 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09$ = jQuery,\x0a\x09EmbedUrl;\x0a\x0a/**\x0a * wp.media.view.EmbedUrl\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aEmbedUrl = View.extend(/** @lends wp.media.view.EmbedUrl.prototype */{\x0a\x09tagName:   \x27label\x27,\x0a\x09className: \x27embed-url\x27,\x0a\x0a\x09events: {\x0a\x09\x09\x27input\x27:  \x27url\x27,\x0a\x09\x09\x27keyup\x27:  \x27url\x27,\x0a\x09\x09\x27change\x27: \x27url\x27\x0a\x09},\x0a\x0a\x09initialize: function() {\x0a\x09\x09this.$input = $(\x27\x3cinput id=\x22embed-url-field\x22 type=\x22url\x22 /\x3e\x27).val( this.model.get(\x27url\x27) );\x0a\x09\x09this.input = this.$input[0];\x0a\x0a\x09\x09this.spinner = $(\x27\x3cspan class=\x22spinner\x22 /\x3e\x27)[0];\x0a\x09\x09this.$el.append([ this.input, this.spinner ]);\x0a\x0a\x09\x09this.listenTo( this.model, \x27change:url\x27, this.render );\x0a\x0a\x09\x09if ( this.model.get( \x27url\x27 ) ) {\x0a\x09\x09\x09_.delay( _.bind( function () {\x0a\x09\x09\x09\x09this.model.trigger( \x27change:url\x27 );\x0a\x09\x09\x09}, this ), 500 );\x0a\x09\x09}\x0a\x09},\x0a\x09/**\x0a\x09 * @returns {wp.media.view.EmbedUrl} Returns itself to allow chaining\x0a\x09 */\x0a\x09render: function() {\x0a\x09\x09var $input = this.$input;\x0a\x0a\x09\x09if ( $input.is(\x27:focus\x27) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09this.input.value = this.model.get(\x27url\x27) || \x27http://\x27;\x0a\x09\x09/**\x0a\x09\x09 * Call `render` directly on parent class with passed arguments\x0a\x09\x09 */\x0a\x09\x09View.prototype.render.apply( this, arguments );\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09ready: function() {\x0a\x09\x09if ( ! wp.media.isTouchDevice ) {\x0a\x09\x09\x09this.focus();\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09url: function( event ) {\x0a\x09\x09this.model.set( \x27url\x27, $.trim( event.target.value ) );\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * If the input is visible, focus and select its contents.\x0a\x09 */\x0a\x09focus: function() {\x0a\x09\x09var $input = this.$input;\x0a\x09\x09if ( $input.is(\x27:visible\x27) ) {\x0a\x09\x09\x09$input.focus()[0].select();\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = EmbedUrl;\x0a\x0a\x0a/***/ }),\x0a/* 97 */\x0a/***/ (function(module, exports) {\x0a\x0avar $ = jQuery,\x0a\x09EmbedLink;\x0a\x0a/**\x0a * wp.media.view.EmbedLink\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.Settings\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aEmbedLink = wp.media.view.Settings.extend(/** @lends wp.media.view.EmbedLink.prototype */{\x0a\x09className: \x27embed-link-settings\x27,\x0a\x09template:  wp.template(\x27embed-link-settings\x27),\x0a\x0a\x09initialize: function() {\x0a\x09\x09this.listenTo( this.model, \x27change:url\x27, this.updateoEmbed );\x0a\x09},\x0a\x0a\x09updateoEmbed: _.debounce( function() {\x0a\x09\x09var url = this.model.get( \x27url\x27 );\x0a\x0a\x09\x09// clear out previous results\x0a\x09\x09this.$(\x27.embed-container\x27).hide().find(\x27.embed-preview\x27).empty();\x0a\x09\x09this.$( \x27.setting\x27 ).hide();\x0a\x0a\x09\x09// only proceed with embed if the field contains more than 11 characters\x0a\x09\x09// Example: http://a.io is 11 chars\x0a\x09\x09if ( url && ( url.length \x3c 11 || ! url.match(/^http(s)?:\x5c/\x5c//) ) ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09this.fetch();\x0a\x09}, wp.media.controller.Embed.sensitivity ),\x0a\x0a\x09fetch: function() {\x0a\x09\x09var url = this.model.get( \x27url\x27 ), re, youTubeEmbedMatch;\x0a\x0a\x09\x09// check if they haven\x27t typed in 500 ms\x0a\x09\x09if ( $(\x27#embed-url-field\x27).val() !== url ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09if ( this.dfd && \x27pending\x27 === this.dfd.state() ) {\x0a\x09\x09\x09this.dfd.abort();\x0a\x09\x09}\x0a\x0a\x09\x09// Support YouTube embed urls, since they work once in the editor.\x0a\x09\x09re = /https?:\x5c/\x5c/www\x5c.youtube\x5c.com\x5c/embed\x5c/([^/]+)/;\x0a\x09\x09youTubeEmbedMatch = re.exec( url );\x0a\x09\x09if ( youTubeEmbedMatch ) {\x0a\x09\x09\x09url = \x27https://www.youtube.com/watch?v=\x27 + youTubeEmbedMatch[ 1 ];\x0a\x09\x09}\x0a\x0a\x09\x09this.dfd = wp.apiRequest({\x0a\x09\x09\x09url: wp.media.view.settings.oEmbedProxyUrl,\x0a\x09\x09\x09data: {\x0a\x09\x09\x09\x09url: url,\x0a\x09\x09\x09\x09maxwidth: this.model.get( \x27width\x27 ),\x0a\x09\x09\x09\x09maxheight: this.model.get( \x27height\x27 )\x0a\x09\x09\x09},\x0a\x09\x09\x09type: \x27GET\x27,\x0a\x09\x09\x09dataType: \x27json\x27,\x0a\x09\x09\x09context: this\x0a\x09\x09})\x0a\x09\x09\x09.done( function( response ) {\x0a\x09\x09\x09\x09this.renderoEmbed( {\x0a\x09\x09\x09\x09\x09data: {\x0a\x09\x09\x09\x09\x09\x09body: response.html || \x27\x27\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09} );\x0a\x09\x09\x09} )\x0a\x09\x09\x09.fail( this.renderFail );\x0a\x09},\x0a\x0a\x09renderFail: function ( response, status ) {\x0a\x09\x09if ( \x27abort\x27 === status ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x09\x09this.$( \x27.link-text\x27 ).show();\x0a\x09},\x0a\x0a\x09renderoEmbed: function( response ) {\x0a\x09\x09var html = ( response && response.data && response.data.body ) || \x27\x27;\x0a\x0a\x09\x09if ( html ) {\x0a\x09\x09\x09this.$(\x27.embed-container\x27).show().find(\x27.embed-preview\x27).html( html );\x0a\x09\x09} else {\x0a\x09\x09\x09this.renderFail();\x0a\x09\x09}\x0a\x09}\x0a});\x0a\x0amodule.exports = EmbedLink;\x0a\x0a\x0a/***/ }),\x0a/* 98 */\x0a/***/ (function(module, exports) {\x0a\x0avar AttachmentDisplay = wp.media.view.Settings.AttachmentDisplay,\x0a\x09EmbedImage;\x0a\x0a/**\x0a * wp.media.view.EmbedImage\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.Settings.AttachmentDisplay\x0a * @augments wp.media.view.Settings\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aEmbedImage = AttachmentDisplay.extend(/** @lends wp.media.view.EmbedImage.prototype */{\x0a\x09className: \x27embed-media-settings\x27,\x0a\x09template:  wp.template(\x27embed-image-settings\x27),\x0a\x0a\x09initialize: function() {\x0a\x09\x09/**\x0a\x09\x09 * Call `initialize` directly on parent class with passed arguments\x0a\x09\x09 */\x0a\x09\x09AttachmentDisplay.prototype.initialize.apply( this, arguments );\x0a\x09\x09this.listenTo( this.model, \x27change:url\x27, this.updateImage );\x0a\x09},\x0a\x0a\x09updateImage: function() {\x0a\x09\x09this.$(\x27img\x27).attr( \x27src\x27, this.model.get(\x27url\x27) );\x0a\x09}\x0a});\x0a\x0amodule.exports = EmbedImage;\x0a\x0a\x0a/***/ }),\x0a/* 99 */\x0a/***/ (function(module, exports) {\x0a\x0avar AttachmentDisplay = wp.media.view.Settings.AttachmentDisplay,\x0a\x09$ = jQuery,\x0a\x09ImageDetails;\x0a\x0a/**\x0a * wp.media.view.ImageDetails\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.Settings.AttachmentDisplay\x0a * @augments wp.media.view.Settings\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aImageDetails = AttachmentDisplay.extend(/** @lends wp.media.view.ImageDetails.prototype */{\x0a\x09className: \x27image-details\x27,\x0a\x09template:  wp.template(\x27image-details\x27),\x0a\x09events: _.defaults( AttachmentDisplay.prototype.events, {\x0a\x09\x09\x27click .edit-attachment\x27: \x27editAttachment\x27,\x0a\x09\x09\x27click .replace-attachment\x27: \x27replaceAttachment\x27,\x0a\x09\x09\x27click .advanced-toggle\x27: \x27onToggleAdvanced\x27,\x0a\x09\x09\x27change [data-setting=\x22customWidth\x22]\x27: \x27onCustomSize\x27,\x0a\x09\x09\x27change [data-setting=\x22customHeight\x22]\x27: \x27onCustomSize\x27,\x0a\x09\x09\x27keyup [data-setting=\x22customWidth\x22]\x27: \x27onCustomSize\x27,\x0a\x09\x09\x27keyup [data-setting=\x22customHeight\x22]\x27: \x27onCustomSize\x27\x0a\x09} ),\x0a\x09initialize: function() {\x0a\x09\x09// used in AttachmentDisplay.prototype.updateLinkTo\x0a\x09\x09this.options.attachment = this.model.attachment;\x0a\x09\x09this.listenTo( this.model, \x27change:url\x27, this.updateUrl );\x0a\x09\x09this.listenTo( this.model, \x27change:link\x27, this.toggleLinkSettings );\x0a\x09\x09this.listenTo( this.model, \x27change:size\x27, this.toggleCustomSize );\x0a\x0a\x09\x09AttachmentDisplay.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09prepare: function() {\x0a\x09\x09var attachment = false;\x0a\x0a\x09\x09if ( this.model.attachment ) {\x0a\x09\x09\x09attachment = this.model.attachment.toJSON();\x0a\x09\x09}\x0a\x09\x09return _.defaults({\x0a\x09\x09\x09model: this.model.toJSON(),\x0a\x09\x09\x09attachment: attachment\x0a\x09\x09}, this.options );\x0a\x09},\x0a\x0a\x09render: function() {\x0a\x09\x09var args = arguments;\x0a\x0a\x09\x09if ( this.model.attachment && \x27pending\x27 === this.model.dfd.state() ) {\x0a\x09\x09\x09this.model.dfd\x0a\x09\x09\x09\x09.done( _.bind( function() {\x0a\x09\x09\x09\x09\x09AttachmentDisplay.prototype.render.apply( this, args );\x0a\x09\x09\x09\x09\x09this.postRender();\x0a\x09\x09\x09\x09}, this ) )\x0a\x09\x09\x09\x09.fail( _.bind( function() {\x0a\x09\x09\x09\x09\x09this.model.attachment = false;\x0a\x09\x09\x09\x09\x09AttachmentDisplay.prototype.render.apply( this, args );\x0a\x09\x09\x09\x09\x09this.postRender();\x0a\x09\x09\x09\x09}, this ) );\x0a\x09\x09} else {\x0a\x09\x09\x09AttachmentDisplay.prototype.render.apply( this, arguments );\x0a\x09\x09\x09this.postRender();\x0a\x09\x09}\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09postRender: function() {\x0a\x09\x09setTimeout( _.bind( this.resetFocus, this ), 10 );\x0a\x09\x09this.toggleLinkSettings();\x0a\x09\x09if ( window.getUserSetting( \x27advImgDetails\x27 ) === \x27show\x27 ) {\x0a\x09\x09\x09this.toggleAdvanced( true );\x0a\x09\x09}\x0a\x09\x09this.trigger( \x27post-render\x27 );\x0a\x09},\x0a\x0a\x09resetFocus: function() {\x0a\x09\x09this.$( \x27.link-to-custom\x27 ).blur();\x0a\x09\x09this.$( \x27.embed-media-settings\x27 ).scrollTop( 0 );\x0a\x09},\x0a\x0a\x09updateUrl: function() {\x0a\x09\x09this.$( \x27.image img\x27 ).attr( \x27src\x27, this.model.get( \x27url\x27 ) );\x0a\x09\x09this.$( \x27.url\x27 ).val( this.model.get( \x27url\x27 ) );\x0a\x09},\x0a\x0a\x09toggleLinkSettings: function() {\x0a\x09\x09if ( this.model.get( \x27link\x27 ) === \x27none\x27 ) {\x0a\x09\x09\x09this.$( \x27.link-settings\x27 ).addClass(\x27hidden\x27);\x0a\x09\x09} else {\x0a\x09\x09\x09this.$( \x27.link-settings\x27 ).removeClass(\x27hidden\x27);\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09toggleCustomSize: function() {\x0a\x09\x09if ( this.model.get( \x27size\x27 ) !== \x27custom\x27 ) {\x0a\x09\x09\x09this.$( \x27.custom-size\x27 ).addClass(\x27hidden\x27);\x0a\x09\x09} else {\x0a\x09\x09\x09this.$( \x27.custom-size\x27 ).removeClass(\x27hidden\x27);\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09onCustomSize: function( event ) {\x0a\x09\x09var dimension = $( event.target ).data(\x27setting\x27),\x0a\x09\x09\x09num = $( event.target ).val(),\x0a\x09\x09\x09value;\x0a\x0a\x09\x09// Ignore bogus input\x0a\x09\x09if ( ! /^\x5cd+/.test( num ) || parseInt( num, 10 ) \x3c 1 ) {\x0a\x09\x09\x09event.preventDefault();\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09if ( dimension === \x27customWidth\x27 ) {\x0a\x09\x09\x09value = Math.round( 1 / this.model.get( \x27aspectRatio\x27 ) * num );\x0a\x09\x09\x09this.model.set( \x27customHeight\x27, value, { silent: true } );\x0a\x09\x09\x09this.$( \x27[data-setting=\x22customHeight\x22]\x27 ).val( value );\x0a\x09\x09} else {\x0a\x09\x09\x09value = Math.round( this.model.get( \x27aspectRatio\x27 ) * num );\x0a\x09\x09\x09this.model.set( \x27customWidth\x27, value, { silent: true  } );\x0a\x09\x09\x09this.$( \x27[data-setting=\x22customWidth\x22]\x27 ).val( value );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09onToggleAdvanced: function( event ) {\x0a\x09\x09event.preventDefault();\x0a\x09\x09this.toggleAdvanced();\x0a\x09},\x0a\x0a\x09toggleAdvanced: function( show ) {\x0a\x09\x09var $advanced = this.$el.find( \x27.advanced-section\x27 ),\x0a\x09\x09\x09mode;\x0a\x0a\x09\x09if ( $advanced.hasClass(\x27advanced-visible\x27) || show === false ) {\x0a\x09\x09\x09$advanced.removeClass(\x27advanced-visible\x27);\x0a\x09\x09\x09$advanced.find(\x27.advanced-settings\x27).addClass(\x27hidden\x27);\x0a\x09\x09\x09mode = \x27hide\x27;\x0a\x09\x09} else {\x0a\x09\x09\x09$advanced.addClass(\x27advanced-visible\x27);\x0a\x09\x09\x09$advanced.find(\x27.advanced-settings\x27).removeClass(\x27hidden\x27);\x0a\x09\x09\x09mode = \x27show\x27;\x0a\x09\x09}\x0a\x0a\x09\x09window.setUserSetting( \x27advImgDetails\x27, mode );\x0a\x09},\x0a\x0a\x09editAttachment: function( event ) {\x0a\x09\x09var editState = this.controller.states.get( \x27edit-image\x27 );\x0a\x0a\x09\x09if ( window.imageEdit && editState ) {\x0a\x09\x09\x09event.preventDefault();\x0a\x09\x09\x09editState.set( \x27image\x27, this.model.attachment );\x0a\x09\x09\x09this.controller.setState( \x27edit-image\x27 );\x0a\x09\x09}\x0a\x09},\x0a\x0a\x09replaceAttachment: function( event ) {\x0a\x09\x09event.preventDefault();\x0a\x09\x09this.controller.setState( \x27replace-image\x27 );\x0a\x09}\x0a});\x0a\x0amodule.exports = ImageDetails;\x0a\x0a\x0a/***/ }),\x0a/* 100 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09UploaderStatus = wp.media.view.UploaderStatus,\x0a\x09l10n = wp.media.view.l10n,\x0a\x09$ = jQuery,\x0a\x09Cropper;\x0a\x0a/**\x0a * wp.media.view.Cropper\x0a *\x0a * Uses the imgAreaSelect plugin to allow a user to crop an image.\x0a *\x0a * Takes imgAreaSelect options from\x0a * wp.customize.HeaderControl.calculateImageSelectOptions via\x0a * wp.customize.HeaderControl.openMM.\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aCropper = View.extend(/** @lends wp.media.view.Cropper.prototype */{\x0a\x09className: \x27crop-content\x27,\x0a\x09template: wp.template(\x27crop-content\x27),\x0a\x09initialize: function() {\x0a\x09\x09_.bindAll(this, \x27onImageLoad\x27);\x0a\x09},\x0a\x09ready: function() {\x0a\x09\x09this.controller.frame.on(\x27content:error:crop\x27, this.onError, this);\x0a\x09\x09this.$image = this.$el.find(\x27.crop-image\x27);\x0a\x09\x09this.$image.on(\x27load\x27, this.onImageLoad);\x0a\x09\x09$(window).on(\x27resize.cropper\x27, _.debounce(this.onImageLoad, 250));\x0a\x09},\x0a\x09remove: function() {\x0a\x09\x09$(window).off(\x27resize.cropper\x27);\x0a\x09\x09this.$el.remove();\x0a\x09\x09this.$el.off();\x0a\x09\x09View.prototype.remove.apply(this, arguments);\x0a\x09},\x0a\x09prepare: function() {\x0a\x09\x09return {\x0a\x09\x09\x09title: l10n.cropYourImage,\x0a\x09\x09\x09url: this.options.attachment.get(\x27url\x27)\x0a\x09\x09};\x0a\x09},\x0a\x09onImageLoad: function() {\x0a\x09\x09var imgOptions = this.controller.get(\x27imgSelectOptions\x27),\x0a\x09\x09\x09imgSelect;\x0a\x0a\x09\x09if (typeof imgOptions === \x27function\x27) {\x0a\x09\x09\x09imgOptions = imgOptions(this.options.attachment, this.controller);\x0a\x09\x09}\x0a\x0a\x09\x09imgOptions = _.extend(imgOptions, {\x0a\x09\x09\x09parent: this.$el,\x0a\x09\x09\x09onInit: function() {\x0a\x0a\x09\x09\x09\x09// Store the set ratio.\x0a\x09\x09\x09\x09var setRatio = imgSelect.getOptions().aspectRatio;\x0a\x0a\x09\x09\x09\x09// On mousedown, if no ratio is set and the Shift key is down, use a 1:1 ratio.\x0a\x09\x09\x09\x09this.parent.children().on( \x27mousedown touchstart\x27, function( e ) {\x0a\x0a\x09\x09\x09\x09\x09// If no ratio is set and the shift key is down, use a 1:1 ratio.\x0a\x09\x09\x09\x09\x09if ( ! setRatio && e.shiftKey ) {\x0a\x09\x09\x09\x09\x09\x09imgSelect.setOptions( {\x0a\x09\x09\x09\x09\x09\x09\x09aspectRatio: \x271:1\x27\x0a\x09\x09\x09\x09\x09\x09} );\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09} );\x0a\x0a\x09\x09\x09\x09this.parent.children().on( \x27mouseup touchend\x27, function() {\x0a\x0a\x09\x09\x09\x09\x09// Restore the set ratio.\x0a\x09\x09\x09\x09\x09imgSelect.setOptions( {\x0a\x09\x09\x09\x09\x09\x09aspectRatio: setRatio ? setRatio : false\x0a\x09\x09\x09\x09\x09} );\x0a\x09\x09\x09\x09} );\x0a\x09\x09\x09}\x0a\x09\x09} );\x0a\x09\x09this.trigger(\x27image-loaded\x27);\x0a\x09\x09imgSelect = this.controller.imgSelect = this.$image.imgAreaSelect(imgOptions);\x0a\x09},\x0a\x09onError: function() {\x0a\x09\x09var filename = this.options.attachment.get(\x27filename\x27);\x0a\x0a\x09\x09this.views.add( \x27.upload-errors\x27, new wp.media.view.UploaderStatusError({\x0a\x09\x09\x09filename: UploaderStatus.prototype.filename(filename),\x0a\x09\x09\x09message: window._wpMediaViewsL10n.cropError\x0a\x09\x09}), { at: 0 });\x0a\x09}\x0a});\x0a\x0amodule.exports = Cropper;\x0a\x0a\x0a/***/ }),\x0a/* 101 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.view,\x0a\x09SiteIconCropper;\x0a\x0a/**\x0a * wp.media.view.SiteIconCropper\x0a *\x0a * Uses the imgAreaSelect plugin to allow a user to crop a Site Icon.\x0a *\x0a * Takes imgAreaSelect options from\x0a * wp.customize.SiteIconControl.calculateImageSelectOptions.\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.view.Cropper\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aSiteIconCropper = View.Cropper.extend(/** @lends wp.media.view.SiteIconCropper.prototype */{\x0a\x09className: \x27crop-content site-icon\x27,\x0a\x0a\x09ready: function () {\x0a\x09\x09View.Cropper.prototype.ready.apply( this, arguments );\x0a\x0a\x09\x09this.$( \x27.crop-image\x27 ).on( \x27load\x27, _.bind( this.addSidebar, this ) );\x0a\x09},\x0a\x0a\x09addSidebar: function() {\x0a\x09\x09this.sidebar = new wp.media.view.Sidebar({\x0a\x09\x09\x09controller: this.controller\x0a\x09\x09});\x0a\x0a\x09\x09this.sidebar.set( \x27preview\x27, new wp.media.view.SiteIconPreview({\x0a\x09\x09\x09controller: this.controller,\x0a\x09\x09\x09attachment: this.options.attachment\x0a\x09\x09}) );\x0a\x0a\x09\x09this.controller.cropperView.views.add( this.sidebar );\x0a\x09}\x0a});\x0a\x0amodule.exports = SiteIconCropper;\x0a\x0a\x0a/***/ }),\x0a/* 102 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09$ = jQuery,\x0a\x09SiteIconPreview;\x0a\x0a/**\x0a * wp.media.view.SiteIconPreview\x0a *\x0a * Shows a preview of the Site Icon as a favicon and app icon while cropping.\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aSiteIconPreview = View.extend(/** @lends wp.media.view.SiteIconPreview.prototype */{\x0a\x09className: \x27site-icon-preview\x27,\x0a\x09template: wp.template( \x27site-icon-preview\x27 ),\x0a\x0a\x09ready: function() {\x0a\x09\x09this.controller.imgSelect.setOptions({\x0a\x09\x09\x09onInit: this.updatePreview,\x0a\x09\x09\x09onSelectChange: this.updatePreview\x0a\x09\x09});\x0a\x09},\x0a\x0a\x09prepare: function() {\x0a\x09\x09return {\x0a\x09\x09\x09url: this.options.attachment.get( \x27url\x27 )\x0a\x09\x09};\x0a\x09},\x0a\x0a\x09updatePreview: function( img, coords ) {\x0a\x09\x09var rx = 64 / coords.width,\x0a\x09\x09\x09ry = 64 / coords.height,\x0a\x09\x09\x09preview_rx = 16 / coords.width,\x0a\x09\x09\x09preview_ry = 16 / coords.height;\x0a\x0a\x09\x09$( \x27#preview-app-icon\x27 ).css({\x0a\x09\x09\x09width: Math.round(rx * this.imageWidth ) + \x27px\x27,\x0a\x09\x09\x09height: Math.round(ry * this.imageHeight ) + \x27px\x27,\x0a\x09\x09\x09marginLeft: \x27-\x27 + Math.round(rx * coords.x1) + \x27px\x27,\x0a\x09\x09\x09marginTop: \x27-\x27 + Math.round(ry * coords.y1) + \x27px\x27\x0a\x09\x09});\x0a\x0a\x09\x09$( \x27#preview-favicon\x27 ).css({\x0a\x09\x09\x09width: Math.round( preview_rx * this.imageWidth ) + \x27px\x27,\x0a\x09\x09\x09height: Math.round( preview_ry * this.imageHeight ) + \x27px\x27,\x0a\x09\x09\x09marginLeft: \x27-\x27 + Math.round( preview_rx * coords.x1 ) + \x27px\x27,\x0a\x09\x09\x09marginTop: \x27-\x27 + Math.floor( preview_ry* coords.y1 ) + \x27px\x27\x0a\x09\x09});\x0a\x09}\x0a});\x0a\x0amodule.exports = SiteIconPreview;\x0a\x0a\x0a/***/ }),\x0a/* 103 */\x0a/***/ (function(module, exports) {\x0a\x0avar View = wp.media.View,\x0a\x09EditImage;\x0a\x0a/**\x0a * wp.media.view.EditImage\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0aEditImage = View.extend(/** @lends wp.media.view.EditImage.prototype */{\x0a\x09className: \x27image-editor\x27,\x0a\x09template: wp.template(\x27image-editor\x27),\x0a\x0a\x09initialize: function( options ) {\x0a\x09\x09this.editor = window.imageEdit;\x0a\x09\x09this.controller = options.controller;\x0a\x09\x09View.prototype.initialize.apply( this, arguments );\x0a\x09},\x0a\x0a\x09prepare: function() {\x0a\x09\x09return this.model.toJSON();\x0a\x09},\x0a\x0a\x09loadEditor: function() {\x0a\x09\x09var dfd = this.editor.open( this.model.get(\x27id\x27), this.model.get(\x27nonces\x27).edit, this );\x0a\x09\x09dfd.done( _.bind( this.focus, this ) );\x0a\x09},\x0a\x0a\x09focus: function() {\x0a\x09\x09this.$( \x27.imgedit-submit .button\x27 ).eq( 0 ).focus();\x0a\x09},\x0a\x0a\x09back: function() {\x0a\x09\x09var lastState = this.controller.lastState();\x0a\x09\x09this.controller.setState( lastState );\x0a\x09},\x0a\x0a\x09refresh: function() {\x0a\x09\x09this.model.fetch();\x0a\x09},\x0a\x0a\x09save: function() {\x0a\x09\x09var lastState = this.controller.lastState();\x0a\x0a\x09\x09this.model.fetch().done( _.bind( function() {\x0a\x09\x09\x09this.controller.setState( lastState );\x0a\x09\x09}, this ) );\x0a\x09}\x0a\x0a});\x0a\x0amodule.exports = EditImage;\x0a\x0a\x0a/***/ }),\x0a/* 104 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Spinner\x0a *\x0a * Represents a spinner in the Media Library.\x0a *\x0a * @since 3.9.0\x0a *\x0a * @memberOf wp.media.view\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar Spinner = wp.media.View.extend(/** @lends wp.media.view.Spinner.prototype */{\x0a\x09tagName:   \x27span\x27,\x0a\x09className: \x27spinner\x27,\x0a\x09spinnerTimeout: false,\x0a\x09delay: 400,\x0a\x0a\x09/**\x0a\x09 * Shows the spinner. Delays the visibility by the configured amount.\x0a\x09 *\x0a\x09 * @since 3.9.0\x0a\x09 *\x0a\x09 * @return {wp.media.view.Spinner} The spinner.\x0a\x09 */\x0a\x09show: function() {\x0a\x09\x09if ( ! this.spinnerTimeout ) {\x0a\x09\x09\x09this.spinnerTimeout = _.delay(function( $el ) {\x0a\x09\x09\x09\x09$el.addClass( \x27is-active\x27 );\x0a\x09\x09\x09}, this.delay, this.$el );\x0a\x09\x09}\x0a\x0a\x09\x09return this;\x0a\x09},\x0a\x0a\x09/**\x0a\x09 * Hides the spinner.\x0a\x09 *\x0a\x09 * @since 3.9.0\x0a\x09 *\x0a\x09 * @return {wp.media.view.Spinner} The spinner.\x0a\x09 */\x0a\x09hide: function() {\x0a\x09\x09this.$el.removeClass( \x27is-active\x27 );\x0a\x09\x09this.spinnerTimeout = clearTimeout( this.spinnerTimeout );\x0a\x0a\x09\x09return this;\x0a\x09}\x0a});\x0a\x0amodule.exports = Spinner;\x0a\x0a\x0a/***/ }),\x0a/* 105 */\x0a/***/ (function(module, exports) {\x0a\x0a/**\x0a * wp.media.view.Heading\x0a *\x0a * A reusable heading component for the media library\x0a *\x0a * Used to add accessibility friendly headers in the media library/modal.\x0a *\x0a * @class\x0a * @augments wp.media.View\x0a * @augments wp.Backbone.View\x0a * @augments Backbone.View\x0a */\x0avar Heading = wp.media.View.extend( {\x0a\x09tagName: function() {\x0a\x09\x09return this.options.level || \x27h1\x27;\x0a\x09},\x0a\x09className: \x27media-views-heading\x27,\x0a\x0a\x09initialize: function() {\x0a\x0a\x09\x09if ( this.options.className ) {\x0a\x09\x09\x09this.$el.addClass( this.options.className );\x0a\x09\x09}\x0a\x0a\x09\x09this.text = this.options.text;\x0a\x09},\x0a\x0a\x09render: function() {\x0a\x09\x09this.$el.html( this.text );\x0a\x09\x09return this;\x0a\x09}\x0a} );\x0a\x0amodule.exports = Heading;\x0a\x0a\x0a/***/ })\x0a/******/ ]));'}