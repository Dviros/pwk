var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 14:53:12 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Thu, 28 Jun 2018 02:30:15 GMT\x0aETag: \x2228cf-56faa82e93bc0-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-2951/2952\x0aContent-Length: 2952\x0aKeep-Alive: timeout=5, max=66\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/**\x0a * @output wp-includes/js/wp-custom-header.js\x0a */\x0a\x0a/* global YT */\x0a(function( window, settings ) {\x0a\x0a\x09var NativeHandler, YouTubeHandler;\x0a\x0a\x09/** @namespace wp */\x0a\x09window.wp = window.wp || {};\x0a\x0a\x09// Fail gracefully in unsupported browsers.\x0a\x09if ( ! ( \x27addEventListener\x27 in window ) ) {\x0a\x09\x09return;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Trigger an event.\x0a\x09 *\x0a\x09 * @param {Element} target HTML element to dispatch the event on.\x0a\x09 * @param {string} name Event name.\x0a\x09 */\x0a\x09function trigger( target, name ) {\x0a\x09\x09var evt;\x0a\x0a\x09\x09if ( \x27function\x27 === typeof window.Event ) {\x0a\x09\x09\x09evt = new Event( name );\x0a\x09\x09} else {\x0a\x09\x09\x09evt = document.createEvent( \x27Event\x27 );\x0a\x09\x09\x09evt.initEvent( name, true, true );\x0a\x09\x09}\x0a\x0a\x09\x09target.dispatchEvent( evt );\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Create a custom header instance.\x0a\x09 *\x0a\x09 * @memberOf wp\x0a\x09 *\x0a\x09 * @class\x0a\x09 */\x0a\x09function CustomHeader() {\x0a\x09\x09this.handlers = {\x0a\x09\x09\x09nativeVideo: new NativeHandler(),\x0a\x09\x09\x09youtube: new YouTubeHandler()\x0a\x09\x09};\x0a\x09}\x0a\x0a\x09CustomHeader.prototype = {\x0a\x09\x09/**\x0a\x09\x09 * Initalize the custom header.\x0a\x09\x09 *\x0a\x09\x09 * If the environment supports video, loops through registered handlers\x0a\x09\x09 * until one is found that can handle the video.\x0a\x09\x09 */\x0a\x09\x09initialize: function() {\x0a\x09\x09\x09if ( this.supportsVideo() ) {\x0a\x09\x09\x09\x09for ( var id in this.handlers ) {\x0a\x09\x09\x09\x09\x09var handler = this.handlers[ id ];\x0a\x0a\x09\x09\x09\x09\x09if ( \x27test\x27 in handler && handler.test( settings ) ) {\x0a\x09\x09\x09\x09\x09\x09this.activeHandler = handler.initialize.call( handler, settings );\x0a\x0a\x09\x09\x09\x09\x09\x09// Dispatch custom event when the video is loaded.\x0a\x09\x09\x09\x09\x09\x09trigger( document, \x27wp-custom-header-video-loaded\x27 );\x0a\x09\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Determines if the current environment supports video.\x0a\x09\x09 *\x0a\x09\x09 * Themes and plugins can override this method to change the criteria.\x0a\x09\x09 *\x0a\x09\x09 * @return {boolean}\x0a\x09\x09 */\x0a\x09\x09supportsVideo: function() {\x0a\x09\x09\x09// Don\x27t load video on small screens. @todo: consider bandwidth and other factors.\x0a\x09\x09\x09if ( window.innerWidth \x3c settings.minWidth || window.innerHeight \x3c settings.minHeight ) {\x0a\x09\x09\x09\x09return false;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return true;\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Base handler for custom handlers to extend.\x0a\x09\x09 *\x0a\x09\x09 * @type {BaseHandler}\x0a\x09\x09 */\x0a\x09\x09BaseVideoHandler: BaseHandler\x0a\x09};\x0a\x0a\x09/**\x0a\x09 * Create a video handler instance.\x0a\x09 *\x0a\x09 * @memberOf wp\x0a\x09 *\x0a\x09 * @class\x0a\x09 */\x0a\x09function BaseHandler() {}\x0a\x0a\x09BaseHandler.prototype = {\x0a\x09\x09/**\x0a\x09\x09 * Initialize the video handler.\x0a\x09\x09 *\x0a\x09\x09 * @param {object} settings Video settings.\x0a\x09\x09 */\x0a\x09\x09initialize: function( settings ) {\x0a\x09\x09\x09var handler = this,\x0a\x09\x09\x09\x09button = document.createElement( \x27button\x27 );\x0a\x0a\x09\x09\x09this.settings = settings;\x0a\x09\x09\x09this.container = document.getElementById( \x27wp-custom-header\x27 );\x0a\x09\x09\x09this.button = button;\x0a\x0a\x09\x09\x09button.setAttribute( \x27type\x27, \x27button\x27 );\x0a\x09\x09\x09button.setAttribute( \x27id\x27, \x27wp-custom-header-video-button\x27 );\x0a\x09\x09\x09button.setAttribute( \x27class\x27, \x27wp-custom-header-video-button wp-custom-header-video-play\x27 );\x0a\x09\x09\x09button.innerHTML = settings.l10n.play;\x0a\x0a\x09\x09\x09// Toggle video playback when the button is clicked.\x0a\x09\x09\x09button.addEventListener( \x27click\x27, function() {\x0a\x09\x09\x09\x09if ( handler.isPaused() ) {\x0a\x09\x09\x09\x09\x09handler.play();\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09handler.pause();\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09// Update the button class and text when the video state changes.\x0a\x09\x09\x09this.container.addEventListener( \x27play\x27, function() {\x0a\x09\x09\x09\x09button.className = \x27wp-custom-header-video-button wp-custom-header-video-play\x27;\x0a\x09\x09\x09\x09button.innerHTML = settings.l10n.pause;\x0a\x09\x09\x09\x09if ( \x27a11y\x27 in window.wp ) {\x0a\x09\x09\x09\x09\x09window.wp.a11y.speak( settings.l10n.playSpeak);\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09this.container.addEventListener( \x27pause\x27, function() {\x0a\x09\x09\x09\x09button.className = \x27wp-custom-header-video-button wp-custom-header-video-pause\x27;\x0a\x09\x09\x09\x09button.innerHTML = settings.l10n.play;\x0a\x09\x09\x09\x09if ( \x27a11y\x27 in window.wp ) {\x0a\x09\x09\x09\x09\x09window.wp.a11y.speak( settings.l10n.pauseSpeak);\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09this.ready();\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Ready method called after a handler is initialized.\x0a\x09\x09 *\x0a\x09\x09 * @abstract\x0a\x09\x09 */\x0a\x09\x09ready: function() {},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Whether the video is paused.\x0a\x09\x09 *\x0a\x09\x09 * @abstract\x0a\x09\x09 * @return {boolean}\x0a\x09\x09 */\x0a\x09\x09isPaused: function() {},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Pause the video.\x0a\x09\x09 *\x0a\x09\x09 * @abstract\x0a\x09\x09 */\x0a\x09\x09pause: function() {},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Play the video.\x0a\x09\x09 *\x0a\x09\x09 * @abstract\x0a\x09\x09 */\x0a\x09\x09play: function() {},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Append a video node to the header container.\x0a\x09\x09 *\x0a\x09\x09 * @param {Element} node HTML element.\x0a\x09\x09 */\x0a\x09\x09setVideo: function( node ) {\x0a\x09\x09\x09var editShortcutNode,\x0a\x09\x09\x09\x09editShortcut = this.container.getElementsByClassName( \x27customize-partial-edit-shortcut\x27 );\x0a\x0a\x09\x09\x09if ( editShortcut.length ) {\x0a\x09\x09\x09\x09editShortcutNode = this.container.removeChild( editShortcut[0] );\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09this.container.innerHTML = \x27\x27;\x0a\x09\x09\x09this.container.appendChild( node );\x0a\x0a\x09\x09\x09if ( editShortcutNode ) {\x0a\x09\x09\x09\x09this.container.appendChild( editShortcutNode );\x0a\x09\x09\x09}\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Show the video controls.\x0a\x09\x09 *\x0a\x09\x09 * Appends a play/pause button to header container.\x0a\x09\x09 */\x0a\x09\x09showControls: function() {\x0a\x09\x09\x09if ( ! this.container.contains( this.button ) ) {\x0a\x09\x09\x09\x09this.container.appendChild( this.button );\x0a\x09\x09\x09}\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Whether the handler can process a video.\x0a\x09\x09 *\x0a\x09\x09 * @abstract\x0a\x09\x09 * @param {object} settings Video settings.\x0a\x09\x09 * @return {boolean}\x0a\x09\x09 */\x0a\x09\x09test: function() {\x0a\x09\x09\x09return false;\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Trigger an event on the header container.\x0a\x09\x09 *\x0a\x09\x09 * @param {string} name Event name.\x0a\x09\x09 */\x0a\x09\x09trigger: function( name ) {\x0a\x09\x09\x09trigger( this.container, name );\x0a\x09\x09}\x0a\x09};\x0a\x0a\x09/**\x0a\x09 * Create a custom handler.\x0a\x09 *\x0a\x09 * @memberOf wp\x0a\x09 *\x0a\x09 * @param {object} protoProps Properties to apply to the prototype.\x0a\x09 * @return CustomHandler The subclass.\x0a\x09 */\x0a\x09BaseHandler.extend = function( protoProps ) {\x0a\x09\x09var prop;\x0a\x0a\x09\x09function CustomHandler() {\x0a\x09\x09\x09var result = BaseHandler.apply( this, arguments );\x0a\x09\x09\x09return result;\x0a\x09\x09}\x0a\x0a\x09\x09CustomHandler.prototype = Object.create( BaseHandler.prototype );\x0a\x09\x09CustomHandler.prototype.constructor = CustomHandler;\x0a\x0a\x09\x09for ( prop in protoProps ) {\x0a\x09\x09\x09CustomHandler.prototype[ prop ] = protoProps[ prop ];\x0a\x09\x09}\x0a\x0a\x09\x09return CustomHandler;\x0a\x09};\x0a\x0a\x09/**\x0a\x09 * Native video handler.\x0a\x09 *\x0a\x09 * @memberOf wp\x0a\x09 *\x0a\x09 * @class\x0a\x09 */\x0a\x09NativeHandler = BaseHandler.extend(/** @lends wp.NativeHandler.prototype */{\x0a\x09\x09/**\x0a\x09\x09 * Whether the native handler supports a video.\x0a\x09\x09 *\x0a\x09\x09 * @param {object} settings Video settings.\x0a\x09\x09 * @return {boolean}\x0a\x09\x09 */\x0a\x09\x09test: function( settings ) {\x0a\x09\x09\x09var video = document.createElement( \x27video\x27 );\x0a\x09\x09\x09return video.canPlayType( settings.mimeType );\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Set up a native video element.\x0a\x09\x09 */\x0a\x09\x09ready: function() {\x0a\x09\x09\x09var handler = this,\x0a\x09\x09\x09\x09video = document.createElement( \x27video\x27 );\x0a\x0a\x09\x09\x09video.id = \x27wp-custom-header-video\x27;\x0a\x09\x09\x09video.autoplay = \x27autoplay\x27;\x0a\x09\x09\x09video.loop = \x27loop\x27;\x0a\x09\x09\x09video.muted = \x27muted\x27;\x0a\x09\x09\x09video.width = this.settings.width;\x0a\x09\x09\x09video.height = this.settings.height;\x0a\x0a\x09\x09\x09video.addEventListener( \x27play\x27, function() {\x0a\x09\x09\x09\x09handler.trigger( \x27play\x27 );\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09video.addEventListener( \x27pause\x27, function() {\x0a\x09\x09\x09\x09handler.trigger( \x27pause\x27 );\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09video.addEventListener( \x27canplay\x27, function() {\x0a\x09\x09\x09\x09handler.showControls();\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09this.video = video;\x0a\x09\x09\x09handler.setVideo( video );\x0a\x09\x09\x09video.src = this.settings.videoUrl;\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Whether the video is paused.\x0a\x09\x09 *\x0a\x09\x09 * @return {boolean}\x0a\x09\x09 */\x0a\x09\x09isPaused: function() {\x0a\x09\x09\x09return this.video.paused;\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Pause the video.\x0a\x09\x09 */\x0a\x09\x09pause: function() {\x0a\x09\x09\x09this.video.pause();\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Play the video.\x0a\x09\x09 */\x0a\x09\x09play: function() {\x0a\x09\x09\x09this.video.play();\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09/**\x0a\x09 * YouTube video handler.\x0a\x09 *\x0a\x09 * @memberOf wp\x0a\x09 *\x0a\x09 * @class wp.YouTubeHandler\x0a\x09 */\x0a\x09YouTubeHandler = BaseHandler.extend(/** @lends wp.YouTubeHandler.prototype */{\x0a\x09\x09/**\x0a\x09\x09 * Whether the handler supports a video.\x0a\x09\x09 *\x0a\x09\x09 * @param {object} settings Video settings.\x0a\x09\x09 * @return {boolean}\x0a\x09\x09 */\x0a\x09\x09test: function( settings ) {\x0a\x09\x09\x09return \x27video/x-youtube\x27 === settings.mimeType;\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Set up a YouTube iframe.\x0a\x09\x09 *\x0a\x09\x09 * Loads the YouTube IFrame API if the \x27YT\x27 global doesn\x27t exist.\x0a\x09\x09 */\x0a\x09\x09ready: function() {\x0a\x09\x09\x09var handler = this;\x0a\x0a\x09\x09\x09if ( \x27YT\x27 in window ) {\x0a\x09\x09\x09\x09YT.ready( handler.loadVideo.bind( handler ) );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09var tag = document.createElement( \x27script\x27 );\x0a\x09\x09\x09\x09tag.src = \x27https://www.youtube.com/iframe_api\x27;\x0a\x09\x09\x09\x09tag.onload = function () {\x0a\x09\x09\x09\x09\x09YT.ready( handler.loadVideo.bind( handler ) );\x0a\x09\x09\x09\x09};\x0a\x0a\x09\x09\x09\x09document.getElementsByTagName( \x27head\x27 )[0].appendChild( tag );\x0a\x09\x09\x09}\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Load a YouTube video.\x0a\x09\x09 */\x0a\x09\x09loadVideo: function() {\x0a\x09\x09\x09var handler = this,\x0a\x09\x09\x09\x09video = document.createElement( \x27div\x27 ),\x0a\x09\x09\x09\x09// @link http://stackoverflow.com/a/27728417\x0a\x09\x09\x09\x09VIDEO_ID_REGEX = /^.*(?:(?:youtu\x5c.be\x5c/|v\x5c/|vi\x5c/|u\x5c/\x5cw\x5c/|embed\x5c/)|(?:(?:watch)?\x5c?v(?:i)?=|\x5c&v(?:i)?=))([^#\x5c&\x5c?]*).*/;\x0a\x0a\x09\x09\x09video.id = \x27wp-custom-header-video\x27;\x0a\x09\x09\x09handler.setVideo( video );\x0a\x0a\x09\x09\x09handler.player = new YT.Player( video, {\x0a\x09\x09\x09\x09height: this.settings.height,\x0a\x09\x09\x09\x09width: this.settings.width,\x0a\x09\x09\x09\x09videoId: this.settings.videoUrl.match( VIDEO_ID_REGEX )[1],\x0a\x09\x09\x09\x09events: {\x0a\x09\x09\x09\x09\x09onReady: function( e ) {\x0a\x09\x09\x09\x09\x09\x09e.target.mute();\x0a\x09\x09\x09\x09\x09\x09handler.showControls();\x0a\x09\x09\x09\x09\x09},\x0a\x09\x09\x09\x09\x09onStateChange: function( e ) {\x0a\x09\x09\x09\x09\x09\x09if ( YT.PlayerState.PLAYING === e.data ) {\x0a\x09\x09\x09\x09\x09\x09\x09handler.trigger( \x27play\x27 );\x0a\x09\x09\x09\x09\x09\x09} else if ( YT.PlayerState.PAUSED === e.data ) {\x0a\x09\x09\x09\x09\x09\x09\x09handler.trigger( \x27pause\x27 );\x0a\x09\x09\x09\x09\x09\x09} else if ( YT.PlayerState.ENDED === e.data ) {\x0a\x09\x09\x09\x09\x09\x09\x09e.target.playVideo();\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09},\x0a\x09\x09\x09\x09playerVars: {\x0a\x09\x09\x09\x09\x09autoplay: 1,\x0a\x09\x09\x09\x09\x09controls: 0,\x0a\x09\x09\x09\x09\x09disablekb: 1,\x0a\x09\x09\x09\x09\x09fs: 0,\x0a\x09\x09\x09\x09\x09iv_load_policy: 3,\x0a\x09\x09\x09\x09\x09loop: 1,\x0a\x09\x09\x09\x09\x09modestbranding: 1,\x0a\x09\x09\x09\x09\x09playsinline: 1,\x0a\x09\x09\x09\x09\x09rel: 0,\x0a\x09\x09\x09\x09\x09showinfo: 0\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09});\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Whether the video is paused.\x0a\x09\x09 *\x0a\x09\x09 * @return {boolean}\x0a\x09\x09 */\x0a\x09\x09isPaused: function() {\x0a\x09\x09\x09return YT.PlayerState.PAUSED === this.player.getPlayerState();\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Pause the video.\x0a\x09\x09 */\x0a\x09\x09pause: function() {\x0a\x09\x09\x09this.player.pauseVideo();\x0a\x09\x09},\x0a\x0a\x09\x09/**\x0a\x09\x09 * Play the video.\x0a\x09\x09 */\x0a\x09\x09play: function() {\x0a\x09\x09\x09this.player.playVideo();\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09// Initialize the custom header when the DOM is ready.\x0a\x09window.wp.customHeader = new CustomHeader();\x0a\x09document.addEventListener( \x27DOMContentLoaded\x27, window.wp.customHeader.initialize.bind( window.wp.customHeader ), false );\x0a\x0a\x09// Selective refresh support in the Customizer.\x0a\x09if ( \x27customize\x27 in window.wp ) {\x0a\x09\x09window.wp.customize.selectiveRefresh.bind( \x27render-partials-response\x27, function( response ) {\x0a\x09\x09\x09if ( \x27custom_header_settings\x27 in response ) {\x0a\x09\x09\x09\x09settings = response.custom_header_settings;\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x0a\x09\x09window.wp.customize.selectiveRefresh.bind( \x27partial-content-rendered\x27, function( placement ) {\x0a\x09\x09\x09if ( \x27custom_header\x27 === placement.partial.id ) {\x0a\x09\x09\x09\x09window.wp.customHeader.initialize();\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09}\x0a\x0a})( window, window._wpCustomHeaderSettings || {} );\x0a'}