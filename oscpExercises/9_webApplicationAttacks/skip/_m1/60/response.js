var res = {'data':'HTTP/1.1 200 OK\x0aDate: Sun, 20 Sep 2020 15:06:00 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Thu, 30 May 2019 15:48:56 GMT\x0aETag: \x228a932-58a1cd5e7aa00-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aKeep-Alive: timeout=5, max=13\x0aConnection: Keep-Alive\x0aTransfer-Encoding: chunked\x0aContent-Type: application/javascript\x0a\x0athis[\x22wp\x22] = this[\x22wp\x22] || {}; this[\x22wp\x22][\x22editor\x22] =\x0a/******/ (function(modules) { // webpackBootstrap\x0a/******/ \x09// The module cache\x0a/******/ \x09var installedModules = {};\x0a/******/\x0a/******/ \x09// The require function\x0a/******/ \x09function __webpack_require__(moduleId) {\x0a/******/\x0a/******/ \x09\x09// Check if module is in cache\x0a/******/ \x09\x09if(installedModules[moduleId]) {\x0a/******/ \x09\x09\x09return installedModules[moduleId].exports;\x0a/******/ \x09\x09}\x0a/******/ \x09\x09// Create a new module (and put it into the cache)\x0a/******/ \x09\x09var module = installedModules[moduleId] = {\x0a/******/ \x09\x09\x09i: moduleId,\x0a/******/ \x09\x09\x09l: false,\x0a/******/ \x09\x09\x09exports: {}\x0a/******/ \x09\x09};\x0a/******/\x0a/******/ \x09\x09// Execute the module function\x0a/******/ \x09\x09modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\x0a/******/\x0a/******/ \x09\x09// Flag the module as loaded\x0a/******/ \x09\x09module.l = true;\x0a/******/\x0a/******/ \x09\x09// Return the exports of the module\x0a/******/ \x09\x09return module.exports;\x0a/******/ \x09}\x0a/******/\x0a/******/\x0a/******/ \x09// expose the modules object (__webpack_modules__)\x0a/******/ \x09__webpack_require__.m = modules;\x0a/******/\x0a/******/ \x09// expose the module cache\x0a/******/ \x09__webpack_require__.c = installedModules;\x0a/******/\x0a/******/ \x09// define getter function for harmony exports\x0a/******/ \x09__webpack_require__.d = function(exports, name, getter) {\x0a/******/ \x09\x09if(!__webpack_require__.o(exports, name)) {\x0a/******/ \x09\x09\x09Object.defineProperty(exports, name, { enumerable: true, get: getter });\x0a/******/ \x09\x09}\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// define __esModule on exports\x0a/******/ \x09__webpack_require__.r = function(exports) {\x0a/******/ \x09\x09if(typeof Symbol !== \x27undefined\x27 && Symbol.toStringTag) {\x0a/******/ \x09\x09\x09Object.defineProperty(exports, Symbol.toStringTag, { value: \x27Module\x27 });\x0a/******/ \x09\x09}\x0a/******/ \x09\x09Object.defineProperty(exports, \x27__esModule\x27, { value: true });\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// create a fake namespace object\x0a/******/ \x09// mode & 1: value is a module id, require it\x0a/******/ \x09// mode & 2: merge all properties of value into the ns\x0a/******/ \x09// mode & 4: return value when already ns object\x0a/******/ \x09// mode & 8|1: behave like require\x0a/******/ \x09__webpack_require__.t = function(value, mode) {\x0a/******/ \x09\x09if(mode & 1) value = __webpack_require__(value);\x0a/******/ \x09\x09if(mode & 8) return value;\x0a/******/ \x09\x09if((mode & 4) && typeof value === \x27object\x27 && value && value.__esModule) return value;\x0a/******/ \x09\x09var ns = Object.create(null);\x0a/******/ \x09\x09__webpack_require__.r(ns);\x0a/******/ \x09\x09Object.defineProperty(ns, \x27default\x27, { enumerable: true, value: value });\x0a/******/ \x09\x09if(mode & 2 && typeof value != \x27string\x27) for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\x0a/******/ \x09\x09return ns;\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// getDefaultExport function for compatibility with non-harmony modules\x0a/******/ \x09__webpack_require__.n = function(module) {\x0a/******/ \x09\x09var getter = module && module.__esModule ?\x0a/******/ \x09\x09\x09function getDefault() { return module[\x27default\x27]; } :\x0a/******/ \x09\x09\x09function getModuleExports() { return module; };\x0a/******/ \x09\x09__webpack_require__.d(getter, \x27a\x27, getter);\x0a/******/ \x09\x09return getter;\x0a/******/ \x09};\x0a/******/\x0a/******/ \x09// Object.prototype.hasOwnProperty.call\x0a/******/ \x09__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\x0a/******/\x0a/******/ \x09// __webpack_public_path__\x0a/******/ \x09__webpack_require__.p = \x22\x22;\x0a/******/\x0a/******/\x0a/******/ \x09// Load entry module and return exports\x0a/******/ \x09return __webpack_require__(__webpack_require__.s = 358);\x0a/******/ })\x0a/************************************************************************/\x0a/******/ ({\x0a\x0a/***/ 0:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22element\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 1:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22i18n\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 10:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _classCallCheck; });\x0afunction _classCallCheck(instance, Constructor) {\x0a  if (!(instance instanceof Constructor)) {\x0a    throw new TypeError(\x22Cannot call a class as a function\x22);\x0a  }\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 109:\x0a/***/ (function(module, exports) {\x0a\x0aif (typeof Object.create === \x27function\x27) {\x0a  // implementation from standard node.js \x27util\x27 module\x0a  module.exports = function inherits(ctor, superCtor) {\x0a    ctor.super_ = superCtor\x0a    ctor.prototype = Object.create(superCtor.prototype, {\x0a      constructor: {\x0a        value: ctor,\x0a        enumerable: false,\x0a        writable: true,\x0a        configurable: true\x0a      }\x0a    });\x0a  };\x0a} else {\x0a  // old school shim for old browsers\x0a  module.exports = function inherits(ctor, superCtor) {\x0a    ctor.super_ = superCtor\x0a    var TempCtor = function () {}\x0a    TempCtor.prototype = superCtor.prototype\x0a    ctor.prototype = new TempCtor()\x0a    ctor.prototype.constructor = ctor\x0a  }\x0a}\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 11:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _possibleConstructorReturn; });\x0a/* harmony import */ var _helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32);\x0a/* harmony import */ var _assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\x0a\x0a\x0afunction _possibleConstructorReturn(self, call) {\x0a  if (call && (Object(_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__[/* default */ \x22a\x22])(call) === \x22object\x22 || typeof call === \x22function\x22)) {\x0a    return call;\x0a  }\x0a\x0a  return Object(_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__[/* default */ \x22a\x22])(self);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 111:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0avar __extends = (this && this.__extends) || (function () {\x0a    var extendStatics = Object.setPrototypeOf ||\x0a        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\x0a        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\x0a    return function (d, b) {\x0a        extendStatics(d, b);\x0a        function __() { this.constructor = d; }\x0a        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\x0a    };\x0a})();\x0avar __assign = (this && this.__assign) || Object.assign || function(t) {\x0a    for (var s, i = 1, n = arguments.length; i \x3c n; i++) {\x0a        s = arguments[i];\x0a        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\x0a            t[p] = s[p];\x0a    }\x0a    return t;\x0a};\x0avar __rest = (this && this.__rest) || function (s, e) {\x0a    var t = {};\x0a    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) \x3c 0)\x0a        t[p] = s[p];\x0a    if (s != null && typeof Object.getOwnPropertySymbols === \x22function\x22)\x0a        for (var i = 0, p = Object.getOwnPropertySymbols(s); i \x3c p.length; i++) if (e.indexOf(p[i]) \x3c 0)\x0a            t[p[i]] = s[p[i]];\x0a    return t;\x0a};\x0aexports.__esModule = true;\x0avar React = __webpack_require__(27);\x0avar PropTypes = __webpack_require__(31);\x0avar autosize = __webpack_require__(112);\x0avar _getLineHeight = __webpack_require__(113);\x0avar getLineHeight = _getLineHeight;\x0avar UPDATE = \x27autosize:update\x27;\x0avar DESTROY = \x27autosize:destroy\x27;\x0avar RESIZED = \x27autosize:resized\x27;\x0a/**\x0a * A light replacement for built-in textarea component\x0a * which automaticaly adjusts its height to match the content\x0a */\x0avar TextareaAutosize = /** @class */ (function (_super) {\x0a    __extends(TextareaAutosize, _super);\x0a    function TextareaAutosize() {\x0a        var _this = _super !== null && _super.apply(this, arguments) || this;\x0a        _this.state = {\x0a            lineHeight: null\x0a        };\x0a        _this.dispatchEvent = function (EVENT_TYPE) {\x0a            var event = document.createEvent(\x27Event\x27);\x0a            event.initEvent(EVENT_TYPE, true, false);\x0a            _this.textarea.dispatchEvent(event);\x0a        };\x0a        _this.updateLineHeight = function () {\x0a            _this.setState({\x0a                lineHeight: getLineHeight(_this.textarea)\x0a            });\x0a        };\x0a        _this.onChange = function (e) {\x0a            var onChange = _this.props.onChange;\x0a            _this.currentValue = e.currentTarget.value;\x0a            onChange && onChange(e);\x0a        };\x0a        _this.saveDOMNodeRef = function (ref) {\x0a            var innerRef = _this.props.innerRef;\x0a            if (innerRef) {\x0a                innerRef(ref);\x0a            }\x0a            _this.textarea = ref;\x0a        };\x0a        _this.getLocals = function () {\x0a            var _a = _this, _b = _a.props, onResize = _b.onResize, maxRows = _b.maxRows, onChange = _b.onChange, style = _b.style, innerRef = _b.innerRef, props = __rest(_b, [\x22onResize\x22, \x22maxRows\x22, \x22onChange\x22, \x22style\x22, \x22innerRef\x22]), lineHeight = _a.state.lineHeight, saveDOMNodeRef = _a.saveDOMNodeRef;\x0a            var maxHeight = maxRows && lineHeight ? lineHeight * maxRows : null;\x0a            return __assign({}, props, { saveDOMNodeRef: saveDOMNodeRef, style: maxHeight ? __assign({}, style, { maxHeight: maxHeight }) : style, onChange: _this.onChange });\x0a        };\x0a        return _this;\x0a    }\x0a    TextareaAutosize.prototype.componentDidMount = function () {\x0a        var _this = this;\x0a        var _a = this.props, onResize = _a.onResize, maxRows = _a.maxRows;\x0a        if (typeof maxRows === \x27number\x27) {\x0a            this.updateLineHeight();\x0a        }\x0a        /*\x0a          the defer is needed to:\x0a            - force \x22autosize\x22 to activate the scrollbar when this.props.maxRows is passed\x0a            - support StyledComponents (see #71)\x0a        */\x0a        setTimeout(function () { return autosize(_this.textarea); });\x0a        if (onResize) {\x0a            this.textarea.addEventListener(RESIZED, onResize);\x0a        }\x0a    };\x0a    TextareaAutosize.prototype.componentWillUnmount = function () {\x0a        var onResize = this.props.onResize;\x0a        if (onResize) {\x0a            this.textarea.removeEventListener(RESIZED, onResize);\x0a        }\x0a        this.dispatchEvent(DESTROY);\x0a    };\x0a    TextareaAutosize.prototype.render = function () {\x0a        var _a = this.getLocals(), children = _a.children, saveDOMNodeRef = _a.saveDOMNodeRef, locals = __rest(_a, [\x22children\x22, \x22saveDOMNodeRef\x22]);\x0a        return (React.createElement(\x22textarea\x22, __assign({}, locals, { ref: saveDOMNodeRef }), children));\x0a    };\x0a    TextareaAutosize.prototype.componentDidUpdate = function (prevProps) {\x0a        if (this.props.value !== this.currentValue || this.props.rows !== prevProps.rows) {\x0a            this.dispatchEvent(UPDATE);\x0a        }\x0a    };\x0a    TextareaAutosize.defaultProps = {\x0a        rows: 1\x0a    };\x0a    TextareaAutosize.propTypes = {\x0a        rows: PropTypes.number,\x0a        maxRows: PropTypes.number,\x0a        onResize: PropTypes.func,\x0a        innerRef: PropTypes.func\x0a    };\x0a    return TextareaAutosize;\x0a}(React.Component));\x0aexports[\x22default\x22] = TextareaAutosize;\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 112:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0avar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\x0a\x09autosize 4.0.2\x0a\x09license: MIT\x0a\x09http://www.jacklmoore.com/autosize\x0a*/\x0a(function (global, factory) {\x0a\x09if (true) {\x0a\x09\x09!(__WEBPACK_AMD_DEFINE_ARRAY__ = [module, exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\x0a\x09\x09\x09\x09__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \x27function\x27 ?\x0a\x09\x09\x09\x09(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\x0a\x09\x09\x09\x09__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\x0a\x09} else { var mod; }\x0a})(this, function (module, exports) {\x0a\x09\x27use strict\x27;\x0a\x0a\x09var map = typeof Map === \x22function\x22 ? new Map() : function () {\x0a\x09\x09var keys = [];\x0a\x09\x09var values = [];\x0a\x0a\x09\x09return {\x0a\x09\x09\x09has: function has(key) {\x0a\x09\x09\x09\x09return keys.indexOf(key) \x3e -1;\x0a\x09\x09\x09},\x0a\x09\x09\x09get: function get(key) {\x0a\x09\x09\x09\x09return values[keys.indexOf(key)];\x0a\x09\x09\x09},\x0a\x09\x09\x09set: function set(key, value) {\x0a\x09\x09\x09\x09if (keys.indexOf(key) === -1) {\x0a\x09\x09\x09\x09\x09keys.push(key);\x0a\x09\x09\x09\x09\x09values.push(value);\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09},\x0a\x09\x09\x09delete: function _delete(key) {\x0a\x09\x09\x09\x09var index = keys.indexOf(key);\x0a\x09\x09\x09\x09if (index \x3e -1) {\x0a\x09\x09\x09\x09\x09keys.splice(index, 1);\x0a\x09\x09\x09\x09\x09values.splice(index, 1);\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09};\x0a\x09}();\x0a\x0a\x09var createEvent = function createEvent(name) {\x0a\x09\x09return new Event(name, { bubbles: true });\x0a\x09};\x0a\x09try {\x0a\x09\x09new Event(\x27test\x27);\x0a\x09} catch (e) {\x0a\x09\x09// IE does not support `new Event()`\x0a\x09\x09createEvent = function createEvent(name) {\x0a\x09\x09\x09var evt = document.createEvent(\x27Event\x27);\x0a\x09\x09\x09evt.initEvent(name, true, false);\x0a\x09\x09\x09return evt;\x0a\x09\x09};\x0a\x09}\x0a\x0a\x09function assign(ta) {\x0a\x09\x09if (!ta || !ta.nodeName || ta.nodeName !== \x27TEXTAREA\x27 || map.has(ta)) return;\x0a\x0a\x09\x09var heightOffset = null;\x0a\x09\x09var clientWidth = null;\x0a\x09\x09var cachedHeight = null;\x0a\x0a\x09\x09function init() {\x0a\x09\x09\x09var style = window.getComputedStyle(ta, null);\x0a\x0a\x09\x09\x09if (style.resize === \x27vertical\x27) {\x0a\x09\x09\x09\x09ta.style.resize = \x27none\x27;\x0a\x09\x09\x09} else if (style.resize === \x27both\x27) {\x0a\x09\x09\x09\x09ta.style.resize = \x27horizontal\x27;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if (style.boxSizing === \x27content-box\x27) {\x0a\x09\x09\x09\x09heightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09heightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\x0a\x09\x09\x09}\x0a\x09\x09\x09// Fix when a textarea is not on document body and heightOffset is Not a Number\x0a\x09\x09\x09if (isNaN(heightOffset)) {\x0a\x09\x09\x09\x09heightOffset = 0;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09update();\x0a\x09\x09}\x0a\x0a\x09\x09function changeOverflow(value) {\x0a\x09\x09\x09{\x0a\x09\x09\x09\x09// Chrome/Safari-specific fix:\x0a\x09\x09\x09\x09// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space\x0a\x09\x09\x09\x09// made available by removing the scrollbar. The following forces the necessary text reflow.\x0a\x09\x09\x09\x09var width = ta.style.width;\x0a\x09\x09\x09\x09ta.style.width = \x270px\x27;\x0a\x09\x09\x09\x09// Force reflow:\x0a\x09\x09\x09\x09/* jshint ignore:start */\x0a\x09\x09\x09\x09ta.offsetWidth;\x0a\x09\x09\x09\x09/* jshint ignore:end */\x0a\x09\x09\x09\x09ta.style.width = width;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09ta.style.overflowY = value;\x0a\x09\x09}\x0a\x0a\x09\x09function getParentOverflows(el) {\x0a\x09\x09\x09var arr = [];\x0a\x0a\x09\x09\x09while (el && el.parentNode && el.parentNode instanceof Element) {\x0a\x09\x09\x09\x09if (el.parentNode.scrollTop) {\x0a\x09\x09\x09\x09\x09arr.push({\x0a\x09\x09\x09\x09\x09\x09node: el.parentNode,\x0a\x09\x09\x09\x09\x09\x09scrollTop: el.parentNode.scrollTop\x0a\x09\x09\x09\x09\x09});\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09\x09el = el.parentNode;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return arr;\x0a\x09\x09}\x0a\x0a\x09\x09function resize() {\x0a\x09\x09\x09if (ta.scrollHeight === 0) {\x0a\x09\x09\x09\x09// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.\x0a\x09\x09\x09\x09return;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09var overflows = getParentOverflows(ta);\x0a\x09\x09\x09var docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)\x0a\x0a\x09\x09\x09ta.style.height = \x27\x27;\x0a\x09\x09\x09ta.style.height = ta.scrollHeight + heightOffset + \x27px\x27;\x0a\x0a\x09\x09\x09// used to check if an update is actually necessary on window.resize\x0a\x09\x09\x09clientWidth = ta.clientWidth;\x0a\x0a\x09\x09\x09// prevents scroll-position jumping\x0a\x09\x09\x09overflows.forEach(function (el) {\x0a\x09\x09\x09\x09el.node.scrollTop = el.scrollTop;\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09if (docTop) {\x0a\x09\x09\x09\x09document.documentElement.scrollTop = docTop;\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09function update() {\x0a\x09\x09\x09resize();\x0a\x0a\x09\x09\x09var styleHeight = Math.round(parseFloat(ta.style.height));\x0a\x09\x09\x09var computed = window.getComputedStyle(ta, null);\x0a\x0a\x09\x09\x09// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box\x0a\x09\x09\x09var actualHeight = computed.boxSizing === \x27content-box\x27 ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;\x0a\x0a\x09\x09\x09// The actual height not matching the style height (set via the resize method) indicates that \x0a\x09\x09\x09// the max-height has been exceeded, in which case the overflow should be allowed.\x0a\x09\x09\x09if (actualHeight \x3c styleHeight) {\x0a\x09\x09\x09\x09if (computed.overflowY === \x27hidden\x27) {\x0a\x09\x09\x09\x09\x09changeOverflow(\x27scroll\x27);\x0a\x09\x09\x09\x09\x09resize();\x0a\x09\x09\x09\x09\x09actualHeight = computed.boxSizing === \x27content-box\x27 ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.\x0a\x09\x09\x09\x09if (computed.overflowY !== \x27hidden\x27) {\x0a\x09\x09\x09\x09\x09changeOverflow(\x27hidden\x27);\x0a\x09\x09\x09\x09\x09resize();\x0a\x09\x09\x09\x09\x09actualHeight = computed.boxSizing === \x27content-box\x27 ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09if (cachedHeight !== actualHeight) {\x0a\x09\x09\x09\x09cachedHeight = actualHeight;\x0a\x09\x09\x09\x09var evt = createEvent(\x27autosize:resized\x27);\x0a\x09\x09\x09\x09try {\x0a\x09\x09\x09\x09\x09ta.dispatchEvent(evt);\x0a\x09\x09\x09\x09} catch (err) {\x0a\x09\x09\x09\x09\x09// Firefox will throw an error on dispatchEvent for a detached element\x0a\x09\x09\x09\x09\x09// https://bugzilla.mozilla.org/show_bug.cgi?id=889376\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09var pageResize = function pageResize() {\x0a\x09\x09\x09if (ta.clientWidth !== clientWidth) {\x0a\x09\x09\x09\x09update();\x0a\x09\x09\x09}\x0a\x09\x09};\x0a\x0a\x09\x09var destroy = function (style) {\x0a\x09\x09\x09window.removeEventListener(\x27resize\x27, pageResize, false);\x0a\x09\x09\x09ta.removeEventListener(\x27input\x27, update, false);\x0a\x09\x09\x09ta.removeEventListener(\x27keyup\x27, update, false);\x0a\x09\x09\x09ta.removeEventListener(\x27autosize:destroy\x27, destroy, false);\x0a\x09\x09\x09ta.removeEventListener(\x27autosize:update\x27, update, false);\x0a\x0a\x09\x09\x09Object.keys(style).forEach(function (key) {\x0a\x09\x09\x09\x09ta.style[key] = style[key];\x0a\x09\x09\x09});\x0a\x0a\x09\x09\x09map.delete(ta);\x0a\x09\x09}.bind(ta, {\x0a\x09\x09\x09height: ta.style.height,\x0a\x09\x09\x09resize: ta.style.resize,\x0a\x09\x09\x09overflowY: ta.style.overflowY,\x0a\x09\x09\x09overflowX: ta.style.overflowX,\x0a\x09\x09\x09wordWrap: ta.style.wordWrap\x0a\x09\x09});\x0a\x0a\x09\x09ta.addEventListener(\x27autosize:destroy\x27, destroy, false);\x0a\x0a\x09\x09// IE9 does not fire onpropertychange or oninput for deletions,\x0a\x09\x09// so binding to onkeyup to catch most of those events.\x0a\x09\x09// There is no way that I know of to detect something like \x27cut\x27 in IE9.\x0a\x09\x09if (\x27onpropertychange\x27 in ta && \x27oninput\x27 in ta) {\x0a\x09\x09\x09ta.addEventListener(\x27keyup\x27, update, false);\x0a\x09\x09}\x0a\x0a\x09\x09window.addEventListener(\x27resize\x27, pageResize, false);\x0a\x09\x09ta.addEventListener(\x27input\x27, update, false);\x0a\x09\x09ta.addEventListener(\x27autosize:update\x27, update, false);\x0a\x09\x09ta.style.overflowX = \x27hidden\x27;\x0a\x09\x09ta.style.wordWrap = \x27break-word\x27;\x0a\x0a\x09\x09map.set(ta, {\x0a\x09\x09\x09destroy: destroy,\x0a\x09\x09\x09update: update\x0a\x09\x09});\x0a\x0a\x09\x09init();\x0a\x09}\x0a\x0a\x09function destroy(ta) {\x0a\x09\x09var methods = map.get(ta);\x0a\x09\x09if (methods) {\x0a\x09\x09\x09methods.destroy();\x0a\x09\x09}\x0a\x09}\x0a\x0a\x09function update(ta) {\x0a\x09\x09var methods = map.get(ta);\x0a\x09\x09if (methods) {\x0a\x09\x09\x09methods.update();\x0a\x09\x09}\x0a\x09}\x0a\x0a\x09var autosize = null;\x0a\x0a\x09// Do nothing in Node.js environment and IE8 (or lower)\x0a\x09if (typeof window === \x27undefined\x27 || typeof window.getComputedStyle !== \x27function\x27) {\x0a\x09\x09autosize = function autosize(el) {\x0a\x09\x09\x09return el;\x0a\x09\x09};\x0a\x09\x09autosize.destroy = function (el) {\x0a\x09\x09\x09return el;\x0a\x09\x09};\x0a\x09\x09autosize.update = function (el) {\x0a\x09\x09\x09return el;\x0a\x09\x09};\x0a\x09} else {\x0a\x09\x09autosize = function autosize(el, options) {\x0a\x09\x09\x09if (el) {\x0a\x09\x09\x09\x09Array.prototype.forEach.call(el.length ? el : [el], function (x) {\x0a\x09\x09\x09\x09\x09return assign(x, options);\x0a\x09\x09\x09\x09});\x0a\x09\x09\x09}\x0a\x09\x09\x09return el;\x0a\x09\x09};\x0a\x09\x09autosize.destroy = function (el) {\x0a\x09\x09\x09if (el) {\x0a\x09\x09\x09\x09Array.prototype.forEach.call(el.length ? el : [el], destroy);\x0a\x09\x09\x09}\x0a\x09\x09\x09return el;\x0a\x09\x09};\x0a\x09\x09autosize.update = function (el) {\x0a\x09\x09\x09if (el) {\x0a\x09\x09\x09\x09Array.prototype.forEach.call(el.length ? el : [el], update);\x0a\x09\x09\x09}\x0a\x09\x09\x09return el;\x0a\x09\x09};\x0a\x09}\x0a\x0a\x09exports.default = autosize;\x0a\x09module.exports = exports[\x27default\x27];\x0a});\x0a\x0a/***/ }),\x0a\x0a/***/ 113:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a// Load in dependencies\x0avar computedStyle = __webpack_require__(114);\x0a\x0a/**\x0a * Calculate the `line-height` of a given node\x0a * @param {HTMLElement} node Element to calculate line height of. Must be in the DOM.\x0a * @returns {Number} `line-height` of the element in pixels\x0a */\x0afunction lineHeight(node) {\x0a  // Grab the line-height via style\x0a  var lnHeightStr = computedStyle(node, \x27line-height\x27);\x0a  var lnHeight = parseFloat(lnHeightStr, 10);\x0a\x0a  // If the lineHeight did not contain a unit (i.e. it was numeric), convert it to ems (e.g. \x272.3\x27 === \x272.3em\x27)\x0a  if (lnHeightStr === lnHeight + \x27\x27) {\x0a    // Save the old lineHeight style and update the em unit to the element\x0a    var _lnHeightStyle = node.style.lineHeight;\x0a    node.style.lineHeight = lnHeightStr + \x27em\x27;\x0a\x0a    // Calculate the em based height\x0a    lnHeightStr = computedStyle(node, \x27line-height\x27);\x0a    lnHeight = parseFloat(lnHeightStr, 10);\x0a\x0a    // Revert the lineHeight style\x0a    if (_lnHeightStyle) {\x0a      node.style.lineHeight = _lnHeightStyle;\x0a    } else {\x0a      delete node.style.lineHeight;\x0a    }\x0a  }\x0a\x0a  // If the lineHeight is in `pt`, convert it to pixels (4px for 3pt)\x0a  // DEV: `em` units are converted to `pt` in IE6\x0a  // Conversion ratio from https://developer.mozilla.org/en-US/docs/Web/CSS/length\x0a  if (lnHeightStr.indexOf(\x27pt\x27) !== -1) {\x0a    lnHeight *= 4;\x0a    lnHeight /= 3;\x0a  // Otherwise, if the lineHeight is in `mm`, convert it to pixels (96px for 25.4mm)\x0a  } else if (lnHeightStr.indexOf(\x27mm\x27) !== -1) {\x0a    lnHeight *= 96;\x0a    lnHeight /= 25.4;\x0a  // Otherwise, if the lineHeight is in `cm`, convert it to pixels (96px for 2.54cm)\x0a  } else if (lnHeightStr.indexOf(\x27cm\x27) !== -1) {\x0a    lnHeight *= 96;\x0a    lnHeight /= 2.54;\x0a  // Otherwise, if the lineHeight is in `in`, convert it to pixels (96px for 1in)\x0a  } else if (lnHeightStr.indexOf(\x27in\x27) !== -1) {\x0a    lnHeight *= 96;\x0a  // Otherwise, if the lineHeight is in `pc`, convert it to pixels (12pt for 1pc)\x0a  } else if (lnHeightStr.indexOf(\x27pc\x27) !== -1) {\x0a    lnHeight *= 16;\x0a  }\x0a\x0a  // Continue our computation\x0a  lnHeight = Math.round(lnHeight);\x0a\x0a  // If the line-height is \x22normal\x22, calculate by font-size\x0a  if (lnHeightStr === \x27normal\x27) {\x0a    // Create a temporary node\x0a    var nodeName = node.nodeName;\x0a    var _node = document.createElement(nodeName);\x0a    _node.innerHTML = \x27&nbsp;\x27;\x0a\x0a    // If we have a text area, reset it to only 1 row\x0a    // https://github.com/twolfson/line-height/issues/4\x0a    if (nodeName.toUpperCase() === \x27TEXTAREA\x27) {\x0a      _node.setAttribute(\x27rows\x27, \x271\x27);\x0a    }\x0a\x0a    // Set the font-size of the element\x0a    var fontSizeStr = computedStyle(node, \x27font-size\x27);\x0a    _node.style.fontSize = fontSizeStr;\x0a\x0a    // Remove default padding/border which can affect offset height\x0a    // https://github.com/twolfson/line-height/issues/4\x0a    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight\x0a    _node.style.padding = \x270px\x27;\x0a    _node.style.border = \x270px\x27;\x0a\x0a    // Append it to the body\x0a    var body = document.body;\x0a    body.appendChild(_node);\x0a\x0a    // Assume the line height of the element is the height\x0a    var height = _node.offsetHeight;\x0a    lnHeight = height;\x0a\x0a    // Remove our child from the DOM\x0a    body.removeChild(_node);\x0a  }\x0a\x0a  // Return the calculated height\x0a  return lnHeight;\x0a}\x0a\x0a// Export lineHeight\x0amodule.exports = lineHeight;\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 114:\x0a/***/ (function(module, exports) {\x0a\x0a// This code has been refactored for 140 bytes\x0a// You can see the original here: https://github.com/twolfson/computedStyle/blob/04cd1da2e30fa45844f95f5cb1ac898e9b9ef050/lib/computedStyle.js\x0avar computedStyle = function (el, prop, getComputedStyle) {\x0a  getComputedStyle = window.getComputedStyle;\x0a\x0a  // In one fell swoop\x0a  return (\x0a    // If we have getComputedStyle\x0a    getComputedStyle ?\x0a      // Query it\x0a      // TODO: From CSS-Query notes, we might need (node, null) for FF\x0a      getComputedStyle(el) :\x0a\x0a    // Otherwise, we are in IE and use currentStyle\x0a      el.currentStyle\x0a  )[\x0a    // Switch to camelCase for CSSOM\x0a    // DEV: Grabbed from jQuery\x0a    // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\x0a    // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\x0a    prop.replace(/-(\x5cw)/gi, function (word, letter) {\x0a      return letter.toUpperCase();\x0a    })\x0a  ];\x0a};\x0a\x0amodule.exports = computedStyle;\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 117:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */\x0a;(function(root) {\x0a\x0a\x09/** Detect free variables */\x0a\x09var freeExports =  true && exports &&\x0a\x09\x09!exports.nodeType && exports;\x0a\x09var freeModule =  true && module &&\x0a\x09\x09!module.nodeType && module;\x0a\x09var freeGlobal = typeof global == \x27object\x27 && global;\x0a\x09if (\x0a\x09\x09freeGlobal.global === freeGlobal ||\x0a\x09\x09freeGlobal.window === freeGlobal ||\x0a\x09\x09freeGlobal.self === freeGlobal\x0a\x09) {\x0a\x09\x09root = freeGlobal;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * The `punycode` object.\x0a\x09 * @name punycode\x0a\x09 * @type Object\x0a\x09 */\x0a\x09var punycode,\x0a\x0a\x09/** Highest positive signed 32-bit float value */\x0a\x09maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\x0a\x0a\x09/** Bootstring parameters */\x0a\x09base = 36,\x0a\x09tMin = 1,\x0a\x09tMax = 26,\x0a\x09skew = 38,\x0a\x09damp = 700,\x0a\x09initialBias = 72,\x0a\x09initialN = 128, // 0x80\x0a\x09delimiter = \x27-\x27, // \x27\x5cx2D\x27\x0a\x0a\x09/** Regular expressions */\x0a\x09regexPunycode = /^xn--/,\x0a\x09regexNonASCII = /[^\x5cx20-\x5cx7E]/, // unprintable ASCII chars + non-ASCII chars\x0a\x09regexSeparators = /[\x5cx2E\x5cu3002\x5cuFF0E\x5cuFF61]/g, // RFC 3490 separators\x0a\x0a\x09/** Error messages */\x0a\x09errors = {\x0a\x09\x09\x27overflow\x27: \x27Overflow: input needs wider integers to process\x27,\x0a\x09\x09\x27not-basic\x27: \x27Illegal input \x3e= 0x80 (not a basic code point)\x27,\x0a\x09\x09\x27invalid-input\x27: \x27Invalid input\x27\x0a\x09},\x0a\x0a\x09/** Convenience shortcuts */\x0a\x09baseMinusTMin = base - tMin,\x0a\x09floor = Math.floor,\x0a\x09stringFromCharCode = String.fromCharCode,\x0a\x0a\x09/** Temporary variable */\x0a\x09key;\x0a\x0a\x09/*--------------------------------------------------------------------------*/\x0a\x0a\x09/**\x0a\x09 * A generic error utility function.\x0a\x09 * @private\x0a\x09 * @param {String} type The error type.\x0a\x09 * @returns {Error} Throws a `RangeError` with the applicable error message.\x0a\x09 */\x0a\x09function error(type) {\x0a\x09\x09throw new RangeError(errors[type]);\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * A generic `Array#map` utility function.\x0a\x09 * @private\x0a\x09 * @param {Array} array The array to iterate over.\x0a\x09 * @param {Function} callback The function that gets called for every array\x0a\x09 * item.\x0a\x09 * @returns {Array} A new array of values returned by the callback function.\x0a\x09 */\x0a\x09function map(array, fn) {\x0a\x09\x09var length = array.length;\x0a\x09\x09var result = [];\x0a\x09\x09while (length--) {\x0a\x09\x09\x09result[length] = fn(array[length]);\x0a\x09\x09}\x0a\x09\x09return result;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * A simple `Array#map`-like wrapper to work with domain name strings or email\x0a\x09 * addresses.\x0a\x09 * @private\x0a\x09 * @param {String} domain The domain name or email address.\x0a\x09 * @param {Function} callback The function that gets called for every\x0a\x09 * character.\x0a\x09 * @returns {Array} A new string of characters returned by the callback\x0a\x09 * function.\x0a\x09 */\x0a\x09function mapDomain(string, fn) {\x0a\x09\x09var parts = string.split(\x27@\x27);\x0a\x09\x09var result = \x27\x27;\x0a\x09\x09if (parts.length \x3e 1) {\x0a\x09\x09\x09// In email addresses, only the domain name should be punycoded. Leave\x0a\x09\x09\x09// the local part (i.e. everything up to `@`) intact.\x0a\x09\x09\x09result = parts[0] + \x27@\x27;\x0a\x09\x09\x09string = parts[1];\x0a\x09\x09}\x0a\x09\x09// Avoid `split(regex)` for IE8 compatibility. See #17.\x0a\x09\x09string = string.replace(regexSeparators, \x27\x5cx2E\x27);\x0a\x09\x09var labels = string.split(\x27.\x27);\x0a\x09\x09var encoded = map(labels, fn).join(\x27.\x27);\x0a\x09\x09return result + encoded;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Creates an array containing the numeric code points of each Unicode\x0a\x09 * character in the string. While JavaScript uses UCS-2 internally,\x0a\x09 * this function will convert a pair of surrogate halves (each of which\x0a\x09 * UCS-2 exposes as separate characters) into a single code point,\x0a\x09 * matching UTF-16.\x0a\x09 * @see `punycode.ucs2.encode`\x0a\x09 * @see \x3chttps://mathiasbynens.be/notes/javascript-encoding\x3e\x0a\x09 * @memberOf punycode.ucs2\x0a\x09 * @name decode\x0a\x09 * @param {String} string The Unicode input string (UCS-2).\x0a\x09 * @returns {Array} The new array of code points.\x0a\x09 */\x0a\x09function ucs2decode(string) {\x0a\x09\x09var output = [],\x0a\x09\x09    counter = 0,\x0a\x09\x09    length = string.length,\x0a\x09\x09    value,\x0a\x09\x09    extra;\x0a\x09\x09while (counter \x3c length) {\x0a\x09\x09\x09value = string.charCodeAt(counter++);\x0a\x09\x09\x09if (value \x3e= 0xD800 && value \x3c= 0xDBFF && counter \x3c length) {\x0a\x09\x09\x09\x09// high surrogate, and there is a next character\x0a\x09\x09\x09\x09extra = string.charCodeAt(counter++);\x0a\x09\x09\x09\x09if ((extra & 0xFC00) == 0xDC00) { // low surrogate\x0a\x09\x09\x09\x09\x09output.push(((value & 0x3FF) \x3c\x3c 10) + (extra & 0x3FF) + 0x10000);\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09// unmatched surrogate; only append this code unit, in case the next\x0a\x09\x09\x09\x09\x09// code unit is the high surrogate of a surrogate pair\x0a\x09\x09\x09\x09\x09output.push(value);\x0a\x09\x09\x09\x09\x09counter--;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09output.push(value);\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09\x09return output;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Creates a string based on an array of numeric code points.\x0a\x09 * @see `punycode.ucs2.decode`\x0a\x09 * @memberOf punycode.ucs2\x0a\x09 * @name encode\x0a\x09 * @param {Array} codePoints The array of numeric code points.\x0a\x09 * @returns {String} The new Unicode string (UCS-2).\x0a\x09 */\x0a\x09function ucs2encode(array) {\x0a\x09\x09return map(array, function(value) {\x0a\x09\x09\x09var output = \x27\x27;\x0a\x09\x09\x09if (value \x3e 0xFFFF) {\x0a\x09\x09\x09\x09value -= 0x10000;\x0a\x09\x09\x09\x09output += stringFromCharCode(value \x3e\x3e\x3e 10 & 0x3FF | 0xD800);\x0a\x09\x09\x09\x09value = 0xDC00 | value & 0x3FF;\x0a\x09\x09\x09}\x0a\x09\x09\x09output += stringFromCharCode(value);\x0a\x09\x09\x09return output;\x0a\x09\x09}).join(\x27\x27);\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a basic code point into a digit/integer.\x0a\x09 * @see `digitToBasic()`\x0a\x09 * @private\x0a\x09 * @param {Number} codePoint The basic numeric code point value.\x0a\x09 * @returns {Number} The numeric value of a basic code point (for use in\x0a\x09 * representing integers) in the range `0` to `base - 1`, or `base` if\x0a\x09 * the code point does not represent a value.\x0a\x09 */\x0a\x09function basicToDigit(codePoint) {\x0a\x09\x09if (codePoint - 48 \x3c 10) {\x0a\x09\x09\x09return codePoint - 22;\x0a\x09\x09}\x0a\x09\x09if (codePoint - 65 \x3c 26) {\x0a\x09\x09\x09return codePoint - 65;\x0a\x09\x09}\x0a\x09\x09if (codePoint - 97 \x3c 26) {\x0a\x09\x09\x09return codePoint - 97;\x0a\x09\x09}\x0a\x09\x09return base;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a digit/integer into a basic code point.\x0a\x09 * @see `basicToDigit()`\x0a\x09 * @private\x0a\x09 * @param {Number} digit The numeric value of a basic code point.\x0a\x09 * @returns {Number} The basic code point whose value (when used for\x0a\x09 * representing integers) is `digit`, which needs to be in the range\x0a\x09 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\x0a\x09 * used; else, the lowercase form is used. The behavior is undefined\x0a\x09 * if `flag` is non-zero and `digit` has no uppercase form.\x0a\x09 */\x0a\x09function digitToBasic(digit, flag) {\x0a\x09\x09//  0..25 map to ASCII a..z or A..Z\x0a\x09\x09// 26..35 map to ASCII 0..9\x0a\x09\x09return digit + 22 + 75 * (digit \x3c 26) - ((flag != 0) \x3c\x3c 5);\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Bias adaptation function as per section 3.4 of RFC 3492.\x0a\x09 * https://tools.ietf.org/html/rfc3492#section-3.4\x0a\x09 * @private\x0a\x09 */\x0a\x09function adapt(delta, numPoints, firstTime) {\x0a\x09\x09var k = 0;\x0a\x09\x09delta = firstTime ? floor(delta / damp) : delta \x3e\x3e 1;\x0a\x09\x09delta += floor(delta / numPoints);\x0a\x09\x09for (/* no initialization */; delta \x3e baseMinusTMin * tMax \x3e\x3e 1; k += base) {\x0a\x09\x09\x09delta = floor(delta / baseMinusTMin);\x0a\x09\x09}\x0a\x09\x09return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a Punycode string of ASCII-only symbols to a string of Unicode\x0a\x09 * symbols.\x0a\x09 * @memberOf punycode\x0a\x09 * @param {String} input The Punycode string of ASCII-only symbols.\x0a\x09 * @returns {String} The resulting string of Unicode symbols.\x0a\x09 */\x0a\x09function decode(input) {\x0a\x09\x09// Don\x27t use UCS-2\x0a\x09\x09var output = [],\x0a\x09\x09    inputLength = input.length,\x0a\x09\x09    out,\x0a\x09\x09    i = 0,\x0a\x09\x09    n = initialN,\x0a\x09\x09    bias = initialBias,\x0a\x09\x09    basic,\x0a\x09\x09    j,\x0a\x09\x09    index,\x0a\x09\x09    oldi,\x0a\x09\x09    w,\x0a\x09\x09    k,\x0a\x09\x09    digit,\x0a\x09\x09    t,\x0a\x09\x09    /** Cached calculation results */\x0a\x09\x09    baseMinusT;\x0a\x0a\x09\x09// Handle the basic code points: let `basic` be the number of input code\x0a\x09\x09// points before the last delimiter, or `0` if there is none, then copy\x0a\x09\x09// the first basic code points to the output.\x0a\x0a\x09\x09basic = input.lastIndexOf(delimiter);\x0a\x09\x09if (basic \x3c 0) {\x0a\x09\x09\x09basic = 0;\x0a\x09\x09}\x0a\x0a\x09\x09for (j = 0; j \x3c basic; ++j) {\x0a\x09\x09\x09// if it\x27s not a basic code point\x0a\x09\x09\x09if (input.charCodeAt(j) \x3e= 0x80) {\x0a\x09\x09\x09\x09error(\x27not-basic\x27);\x0a\x09\x09\x09}\x0a\x09\x09\x09output.push(input.charCodeAt(j));\x0a\x09\x09}\x0a\x0a\x09\x09// Main decoding loop: start just after the last delimiter if any basic code\x0a\x09\x09// points were copied; start at the beginning otherwise.\x0a\x0a\x09\x09for (index = basic \x3e 0 ? basic + 1 : 0; index \x3c inputLength; /* no final expression */) {\x0a\x0a\x09\x09\x09// `index` is the index of the next character to be consumed.\x0a\x09\x09\x09// Decode a generalized variable-length integer into `delta`,\x0a\x09\x09\x09// which gets added to `i`. The overflow checking is easier\x0a\x09\x09\x09// if we increase `i` as we go, then subtract off its starting\x0a\x09\x09\x09// value at the end to obtain `delta`.\x0a\x09\x09\x09for (oldi = i, w = 1, k = base; /* no condition */; k += base) {\x0a\x0a\x09\x09\x09\x09if (index \x3e= inputLength) {\x0a\x09\x09\x09\x09\x09error(\x27invalid-input\x27);\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09digit = basicToDigit(input.charCodeAt(index++));\x0a\x0a\x09\x09\x09\x09if (digit \x3e= base || digit \x3e floor((maxInt - i) / w)) {\x0a\x09\x09\x09\x09\x09error(\x27overflow\x27);\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09i += digit * w;\x0a\x09\x09\x09\x09t = k \x3c= bias ? tMin : (k \x3e= bias + tMax ? tMax : k - bias);\x0a\x0a\x09\x09\x09\x09if (digit \x3c t) {\x0a\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09baseMinusT = base - t;\x0a\x09\x09\x09\x09if (w \x3e floor(maxInt / baseMinusT)) {\x0a\x09\x09\x09\x09\x09error(\x27overflow\x27);\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09w *= baseMinusT;\x0a\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09out = output.length + 1;\x0a\x09\x09\x09bias = adapt(i - oldi, out, oldi == 0);\x0a\x0a\x09\x09\x09// `i` was supposed to wrap around from `out` to `0`,\x0a\x09\x09\x09// incrementing `n` each time, so we\x27ll fix that now:\x0a\x09\x09\x09if (floor(i / out) \x3e maxInt - n) {\x0a\x09\x09\x09\x09error(\x27overflow\x27);\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09n += floor(i / out);\x0a\x09\x09\x09i %= out;\x0a\x0a\x09\x09\x09// Insert `n` at position `i` of the output\x0a\x09\x09\x09output.splice(i++, 0, n);\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return ucs2encode(output);\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a string of Unicode symbols (e.g. a domain name label) to a\x0a\x09 * Punycode string of ASCII-only symbols.\x0a\x09 * @memberOf punycode\x0a\x09 * @param {String} input The string of Unicode symbols.\x0a\x09 * @returns {String} The resulting Punycode string of ASCII-only symbols.\x0a\x09 */\x0a\x09function encode(input) {\x0a\x09\x09var n,\x0a\x09\x09    delta,\x0a\x09\x09    handledCPCount,\x0a\x09\x09    basicLength,\x0a\x09\x09    bias,\x0a\x09\x09    j,\x0a\x09\x09    m,\x0a\x09\x09    q,\x0a\x09\x09    k,\x0a\x09\x09    t,\x0a\x09\x09    currentValue,\x0a\x09\x09    output = [],\x0a\x09\x09    /** `inputLength` will hold the number of code points in `input`. */\x0a\x09\x09    inputLength,\x0a\x09\x09    /** Cached calculation results */\x0a\x09\x09    handledCPCountPlusOne,\x0a\x09\x09    baseMinusT,\x0a\x09\x09    qMinusT;\x0a\x0a\x09\x09// Convert the input in UCS-2 to Unicode\x0a\x09\x09input = ucs2decode(input);\x0a\x0a\x09\x09// Cache the length\x0a\x09\x09inputLength = input.length;\x0a\x0a\x09\x09// Initialize the state\x0a\x09\x09n = initialN;\x0a\x09\x09delta = 0;\x0a\x09\x09bias = initialBias;\x0a\x0a\x09\x09// Handle the basic code points\x0a\x09\x09for (j = 0; j \x3c inputLength; ++j) {\x0a\x09\x09\x09currentValue = input[j];\x0a\x09\x09\x09if (currentValue \x3c 0x80) {\x0a\x09\x09\x09\x09output.push(stringFromCharCode(currentValue));\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09handledCPCount = basicLength = output.length;\x0a\x0a\x09\x09// `handledCPCount` is the number of code points that have been handled;\x0a\x09\x09// `basicLength` is the number of basic code points.\x0a\x0a\x09\x09// Finish the basic string - if it is not empty - with a delimiter\x0a\x09\x09if (basicLength) {\x0a\x09\x09\x09output.push(delimiter);\x0a\x09\x09}\x0a\x0a\x09\x09// Main encoding loop:\x0a\x09\x09while (handledCPCount \x3c inputLength) {\x0a\x0a\x09\x09\x09// All non-basic code points \x3c n have been handled already. Find the next\x0a\x09\x09\x09// larger one:\x0a\x09\x09\x09for (m = maxInt, j = 0; j \x3c inputLength; ++j) {\x0a\x09\x09\x09\x09currentValue = input[j];\x0a\x09\x09\x09\x09if (currentValue \x3e= n && currentValue \x3c m) {\x0a\x09\x09\x09\x09\x09m = currentValue;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Increase `delta` enough to advance the decoder\x27s \x3cn,i\x3e state to \x3cm,0\x3e,\x0a\x09\x09\x09// but guard against overflow\x0a\x09\x09\x09handledCPCountPlusOne = handledCPCount + 1;\x0a\x09\x09\x09if (m - n \x3e floor((maxInt - delta) / handledCPCountPlusOne)) {\x0a\x09\x09\x09\x09error(\x27overflow\x27);\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09delta += (m - n) * handledCPCountPlusOne;\x0a\x09\x09\x09n = m;\x0a\x0a\x09\x09\x09for (j = 0; j \x3c inputLength; ++j) {\x0a\x09\x09\x09\x09currentValue = input[j];\x0a\x0a\x09\x09\x09\x09if (currentValue \x3c n && ++delta \x3e maxInt) {\x0a\x09\x09\x09\x09\x09error(\x27overflow\x27);\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09if (currentValue == n) {\x0a\x09\x09\x09\x09\x09// Represent delta as a generalized variable-length integer\x0a\x09\x09\x09\x09\x09for (q = delta, k = base; /* no condition */; k += base) {\x0a\x09\x09\x09\x09\x09\x09t = k \x3c= bias ? tMin : (k \x3e= bias + tMax ? tMax : k - bias);\x0a\x09\x09\x09\x09\x09\x09if (q \x3c t) {\x0a\x09\x09\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09\x09\x09qMinusT = q - t;\x0a\x09\x09\x09\x09\x09\x09baseMinusT = base - t;\x0a\x09\x09\x09\x09\x09\x09output.push(\x0a\x09\x09\x09\x09\x09\x09\x09stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\x0a\x09\x09\x09\x09\x09\x09);\x0a\x09\x09\x09\x09\x09\x09q = floor(qMinusT / baseMinusT);\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09output.push(stringFromCharCode(digitToBasic(q, 0)));\x0a\x09\x09\x09\x09\x09bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\x0a\x09\x09\x09\x09\x09delta = 0;\x0a\x09\x09\x09\x09\x09++handledCPCount;\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09++delta;\x0a\x09\x09\x09++n;\x0a\x0a\x09\x09}\x0a\x09\x09return output.join(\x27\x27);\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a Punycode string representing a domain name or an email address\x0a\x09 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\x0a\x09 * it doesn\x27t matter if you call it on a string that has already been\x0a\x09 * converted to Unicode.\x0a\x09 * @memberOf punycode\x0a\x09 * @param {String} input The Punycoded domain name or email address to\x0a\x09 * convert to Unicode.\x0a\x09 * @returns {String} The Unicode representation of the given Punycode\x0a\x09 * string.\x0a\x09 */\x0a\x09function toUnicode(input) {\x0a\x09\x09return mapDomain(input, function(string) {\x0a\x09\x09\x09return regexPunycode.test(string)\x0a\x09\x09\x09\x09? decode(string.slice(4).toLowerCase())\x0a\x09\x09\x09\x09: string;\x0a\x09\x09});\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Converts a Unicode string representing a domain name or an email address to\x0a\x09 * Punycode. Only the non-ASCII parts of the domain name will be converted,\x0a\x09 * i.e. it doesn\x27t matter if you call it with a domain that\x27s already in\x0a\x09 * ASCII.\x0a\x09 * @memberOf punycode\x0a\x09 * @param {String} input The domain name or email address to convert, as a\x0a\x09 * Unicode string.\x0a\x09 * @returns {String} The Punycode representation of the given domain name or\x0a\x09 * email address.\x0a\x09 */\x0a\x09function toASCII(input) {\x0a\x09\x09return mapDomain(input, function(string) {\x0a\x09\x09\x09return regexNonASCII.test(string)\x0a\x09\x09\x09\x09? \x27xn--\x27 + encode(string)\x0a\x09\x09\x09\x09: string;\x0a\x09\x09});\x0a\x09}\x0a\x0a\x09/*--------------------------------------------------------------------------*/\x0a\x0a\x09/** Define the public API */\x0a\x09punycode = {\x0a\x09\x09/**\x0a\x09\x09 * A string representing the current Punycode.js version number.\x0a\x09\x09 * @memberOf punycode\x0a\x09\x09 * @type String\x0a\x09\x09 */\x0a\x09\x09\x27version\x27: \x271.4.1\x27,\x0a\x09\x09/**\x0a\x09\x09 * An object of methods to convert from JavaScript\x27s internal character\x0a\x09\x09 * representation (UCS-2) to Unicode code points, and back.\x0a\x09\x09 * @see \x3chttps://mathiasbynens.be/notes/javascript-encoding\x3e\x0a\x09\x09 * @memberOf punycode\x0a\x09\x09 * @type Object\x0a\x09\x09 */\x0a\x09\x09\x27ucs2\x27: {\x0a\x09\x09\x09\x27decode\x27: ucs2decode,\x0a\x09\x09\x09\x27encode\x27: ucs2encode\x0a\x09\x09},\x0a\x09\x09\x27decode\x27: decode,\x0a\x09\x09\x27encode\x27: encode,\x0a\x09\x09\x27toASCII\x27: toASCII,\x0a\x09\x09\x27toUnicode\x27: toUnicode\x0a\x09};\x0a\x0a\x09/** Expose `punycode` */\x0a\x09// Some AMD build optimizers, like r.js, check for specific condition patterns\x0a\x09// like the following:\x0a\x09if (\x0a\x09\x09true\x0a\x09) {\x0a\x09\x09!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\x0a\x09\x09\x09return punycode;\x0a\x09\x09}).call(exports, __webpack_require__, exports, module),\x0a\x09\x09\x09\x09__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\x0a\x09} else {}\x0a\x0a}(this));\x0a\x0a/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(118)(module), __webpack_require__(59)))\x0a\x0a/***/ }),\x0a\x0a/***/ 118:\x0a/***/ (function(module, exports) {\x0a\x0amodule.exports = function(module) {\x0a\x09if (!module.webpackPolyfill) {\x0a\x09\x09module.deprecate = function() {};\x0a\x09\x09module.paths = [];\x0a\x09\x09// module.parent = undefined by default\x0a\x09\x09if (!module.children) module.children = [];\x0a\x09\x09Object.defineProperty(module, \x22loaded\x22, {\x0a\x09\x09\x09enumerable: true,\x0a\x09\x09\x09get: function() {\x0a\x09\x09\x09\x09return module.l;\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09\x09Object.defineProperty(module, \x22id\x22, {\x0a\x09\x09\x09enumerable: true,\x0a\x09\x09\x09get: function() {\x0a\x09\x09\x09\x09return module.i;\x0a\x09\x09\x09}\x0a\x09\x09});\x0a\x09\x09module.webpackPolyfill = 1;\x0a\x09}\x0a\x09return module;\x0a};\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 119:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a\x0amodule.exports = {\x0a  isString: function(arg) {\x0a    return typeof(arg) === \x27string\x27;\x0a  },\x0a  isObject: function(arg) {\x0a    return typeof(arg) === \x27object\x27 && arg !== null;\x0a  },\x0a  isNull: function(arg) {\x0a    return arg === null;\x0a  },\x0a  isNullOrUndefined: function(arg) {\x0a    return arg == null;\x0a  }\x0a};\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 12:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _getPrototypeOf; });\x0afunction _getPrototypeOf(o) {\x0a  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\x0a    return o.__proto__ || Object.getPrototypeOf(o);\x0a  };\x0a  return _getPrototypeOf(o);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 120:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a\x0aexports.decode = exports.parse = __webpack_require__(121);\x0aexports.encode = exports.stringify = __webpack_require__(122);\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 121:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a// Copyright Joyent, Inc. and other Node contributors.\x0a//\x0a// Permission is hereby granted, free of charge, to any person obtaining a\x0a// copy of this software and associated documentation files (the\x0a// \x22Software\x22), to deal in the Software without restriction, including\x0a// without limitation the rights to use, copy, modify, merge, publish,\x0a// distribute, sublicense, and/or sell copies of the Software, and to permit\x0a// persons to whom the Software is furnished to do so, subject to the\x0a// following conditions:\x0a//\x0a// The above copyright notice and this permission notice shall be included\x0a// in all copies or substantial portions of the Software.\x0a//\x0a// THE SOFTWARE IS PROVIDED \x22AS IS\x22, WITHOUT WARRANTY OF ANY KIND, EXPRESS\x0a// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0a// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0a// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\x0a// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\x0a// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0a// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0a\x0a\x0a\x0a// If obj.hasOwnProperty has been overridden, then calling\x0a// obj.hasOwnProperty(prop) will break.\x0a// See: https://github.com/joyent/node/issues/1707\x0afunction hasOwnProperty(obj, prop) {\x0a  return Object.prototype.hasOwnProperty.call(obj, prop);\x0a}\x0a\x0amodule.exports = function(qs, sep, eq, options) {\x0a  sep = sep || \x27&\x27;\x0a  eq = eq || \x27=\x27;\x0a  var obj = {};\x0a\x0a  if (typeof qs !== \x27string\x27 || qs.length === 0) {\x0a    return obj;\x0a  }\x0a\x0a  var regexp = /\x5c+/g;\x0a  qs = qs.split(sep);\x0a\x0a  var maxKeys = 1000;\x0a  if (options && typeof options.maxKeys === \x27number\x27) {\x0a    maxKeys = options.maxKeys;\x0a  }\x0a\x0a  var len = qs.length;\x0a  // maxKeys \x3c= 0 means that we should not limit keys count\x0a  if (maxKeys \x3e 0 && len \x3e maxKeys) {\x0a    len = maxKeys;\x0a  }\x0a\x0a  for (var i = 0; i \x3c len; ++i) {\x0a    var x = qs[i].replace(regexp, \x27%20\x27),\x0a        idx = x.indexOf(eq),\x0a        kstr, vstr, k, v;\x0a\x0a    if (idx \x3e= 0) {\x0a      kstr = x.substr(0, idx);\x0a      vstr = x.substr(idx + 1);\x0a    } else {\x0a      kstr = x;\x0a      vstr = \x27\x27;\x0a    }\x0a\x0a    k = decodeURIComponent(kstr);\x0a    v = decodeURIComponent(vstr);\x0a\x0a    if (!hasOwnProperty(obj, k)) {\x0a      obj[k] = v;\x0a    } else if (isArray(obj[k])) {\x0a      obj[k].push(v);\x0a    } else {\x0a      obj[k] = [obj[k], v];\x0a    }\x0a  }\x0a\x0a  return obj;\x0a};\x0a\x0avar isArray = Array.isArray || function (xs) {\x0a  return Object.prototype.toString.call(xs) === \x27[object Array]\x27;\x0a};\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 122:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a// Copyright Joyent, Inc. and other Node contributors.\x0a//\x0a// Permission is hereby granted, free of charge, to any person obtaining a\x0a// copy of this software and associated documentation files (the\x0a// \x22Software\x22), to deal in the Software without restriction, including\x0a// without limitation the rights to use, copy, modify, merge, publish,\x0a// distribute, sublicense, and/or sell copies of the Software, and to permit\x0a// persons to whom the Software is furnished to do so, subject to the\x0a// following conditions:\x0a//\x0a// The above copyright notice and this permission notice shall be included\x0a// in all copies or substantial portions of the Software.\x0a//\x0a// THE SOFTWARE IS PROVIDED \x22AS IS\x22, WITHOUT WARRANTY OF ANY KIND, EXPRESS\x0a// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0a// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0a// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\x0a// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\x0a// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0a// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0a\x0a\x0a\x0avar stringifyPrimitive = function(v) {\x0a  switch (typeof v) {\x0a    case \x27string\x27:\x0a      return v;\x0a\x0a    case \x27boolean\x27:\x0a      return v ? \x27true\x27 : \x27false\x27;\x0a\x0a    case \x27number\x27:\x0a      return isFinite(v) ? v : \x27\x27;\x0a\x0a    default:\x0a      return \x27\x27;\x0a  }\x0a};\x0a\x0amodule.exports = function(obj, sep, eq, name) {\x0a  sep = sep || \x27&\x27;\x0a  eq = eq || \x27=\x27;\x0a  if (obj === null) {\x0a    obj = undefined;\x0a  }\x0a\x0a  if (typeof obj === \x27object\x27) {\x0a    return map(objectKeys(obj), function(k) {\x0a      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\x0a      if (isArray(obj[k])) {\x0a        return map(obj[k], function(v) {\x0a          return ks + encodeURIComponent(stringifyPrimitive(v));\x0a        }).join(sep);\x0a      } else {\x0a        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\x0a      }\x0a    }).join(sep);\x0a\x0a  }\x0a\x0a  if (!name) return \x27\x27;\x0a  return encodeURIComponent(stringifyPrimitive(name)) + eq +\x0a         encodeURIComponent(stringifyPrimitive(obj));\x0a};\x0a\x0avar isArray = Array.isArray || function (xs) {\x0a  return Object.prototype.toString.call(xs) === \x27[object Array]\x27;\x0a};\x0a\x0afunction map (xs, f) {\x0a  if (xs.map) return xs.map(f);\x0a  var res = [];\x0a  for (var i = 0; i \x3c xs.length; i++) {\x0a    res.push(f(xs[i], i));\x0a  }\x0a  return res;\x0a}\x0a\x0avar objectKeys = Object.keys || function (obj) {\x0a  var res = [];\x0a  for (var key in obj) {\x0a    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\x0a  }\x0a  return res;\x0a};\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 13:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\x0afunction _setPrototypeOf(o, p) {\x0a  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\x0a    o.__proto__ = p;\x0a    return o;\x0a  };\x0a\x0a  return _setPrototypeOf(o, p);\x0a}\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _inherits; });\x0a\x0afunction _inherits(subClass, superClass) {\x0a  if (typeof superClass !== \x22function\x22 && superClass !== null) {\x0a    throw new TypeError(\x22Super expression must either be null or a function\x22);\x0a  }\x0a\x0a  subClass.prototype = Object.create(superClass && superClass.prototype, {\x0a    constructor: {\x0a      value: subClass,\x0a      writable: true,\x0a      configurable: true\x0a    }\x0a  });\x0a  if (superClass) _setPrototypeOf(subClass, superClass);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 133:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22notices\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 14:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22blocks\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 15:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _defineProperty; });\x0afunction _defineProperty(obj, key, value) {\x0a  if (key in obj) {\x0a    Object.defineProperty(obj, key, {\x0a      value: value,\x0a      enumerable: true,\x0a      configurable: true,\x0a      writable: true\x0a    });\x0a  } else {\x0a    obj[key] = value;\x0a  }\x0a\x0a  return obj;\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 16:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0avar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\x0a  Copyright (c) 2017 Jed Watson.\x0a  Licensed under the MIT License (MIT), see\x0a  http://jedwatson.github.io/classnames\x0a*/\x0a/* global define */\x0a\x0a(function () {\x0a\x09\x27use strict\x27;\x0a\x0a\x09var hasOwn = {}.hasOwnProperty;\x0a\x0a\x09function classNames () {\x0a\x09\x09var classes = [];\x0a\x0a\x09\x09for (var i = 0; i \x3c arguments.length; i++) {\x0a\x09\x09\x09var arg = arguments[i];\x0a\x09\x09\x09if (!arg) continue;\x0a\x0a\x09\x09\x09var argType = typeof arg;\x0a\x0a\x09\x09\x09if (argType === \x27string\x27 || argType === \x27number\x27) {\x0a\x09\x09\x09\x09classes.push(arg);\x0a\x09\x09\x09} else if (Array.isArray(arg) && arg.length) {\x0a\x09\x09\x09\x09var inner = classNames.apply(null, arg);\x0a\x09\x09\x09\x09if (inner) {\x0a\x09\x09\x09\x09\x09classes.push(inner);\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09} else if (argType === \x27object\x27) {\x0a\x09\x09\x09\x09for (var key in arg) {\x0a\x09\x09\x09\x09\x09if (hasOwn.call(arg, key) && arg[key]) {\x0a\x09\x09\x09\x09\x09\x09classes.push(key);\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09return classes.join(\x27 \x27);\x0a\x09}\x0a\x0a\x09if ( true && module.exports) {\x0a\x09\x09classNames.default = classNames;\x0a\x09\x09module.exports = classNames;\x0a\x09} else if (true) {\x0a\x09\x09// register as \x27classnames\x27, consistent with npm package name\x0a\x09\x09!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\x0a\x09\x09\x09return classNames;\x0a\x09\x09}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\x0a\x09\x09\x09\x09__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\x0a\x09} else {}\x0a}());\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 17:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js\x0afunction _arrayWithoutHoles(arr) {\x0a  if (Array.isArray(arr)) {\x0a    for (var i = 0, arr2 = new Array(arr.length); i \x3c arr.length; i++) {\x0a      arr2[i] = arr[i];\x0a    }\x0a\x0a    return arr2;\x0a  }\x0a}\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js\x0avar iterableToArray = __webpack_require__(34);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js\x0afunction _nonIterableSpread() {\x0a  throw new TypeError(\x22Invalid attempt to spread non-iterable instance\x22);\x0a}\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _toConsumableArray; });\x0a\x0a\x0a\x0afunction _toConsumableArray(arr) {\x0a  return _arrayWithoutHoles(arr) || Object(iterableToArray[\x22a\x22 /* default */])(arr) || _nonIterableSpread();\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 18:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22keycodes\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 19:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _extends; });\x0afunction _extends() {\x0a  _extends = Object.assign || function (target) {\x0a    for (var i = 1; i \x3c arguments.length; i++) {\x0a      var source = arguments[i];\x0a\x0a      for (var key in source) {\x0a        if (Object.prototype.hasOwnProperty.call(source, key)) {\x0a          target[key] = source[key];\x0a        }\x0a      }\x0a    }\x0a\x0a    return target;\x0a  };\x0a\x0a  return _extends.apply(this, arguments);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 2:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22lodash\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 20:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22richText\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 21:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\x0afunction _objectWithoutPropertiesLoose(source, excluded) {\x0a  if (source == null) return {};\x0a  var target = {};\x0a  var sourceKeys = Object.keys(source);\x0a  var key, i;\x0a\x0a  for (i = 0; i \x3c sourceKeys.length; i++) {\x0a    key = sourceKeys[i];\x0a    if (excluded.indexOf(key) \x3e= 0) continue;\x0a    target[key] = source[key];\x0a  }\x0a\x0a  return target;\x0a}\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _objectWithoutProperties; });\x0a\x0afunction _objectWithoutProperties(source, excluded) {\x0a  if (source == null) return {};\x0a  var target = _objectWithoutPropertiesLoose(source, excluded);\x0a  var key, i;\x0a\x0a  if (Object.getOwnPropertySymbols) {\x0a    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\x0a\x0a    for (i = 0; i \x3c sourceSymbolKeys.length; i++) {\x0a      key = sourceSymbolKeys[i];\x0a      if (excluded.indexOf(key) \x3e= 0) continue;\x0a      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\x0a      target[key] = source[key];\x0a    }\x0a  }\x0a\x0a  return target;\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 227:\x0a/***/ (function(module, exports) {\x0a\x0avar traverse = module.exports = function (obj) {\x0a    return new Traverse(obj);\x0a};\x0a\x0afunction Traverse (obj) {\x0a    this.value = obj;\x0a}\x0a\x0aTraverse.prototype.get = function (ps) {\x0a    var node = this.value;\x0a    for (var i = 0; i \x3c ps.length; i ++) {\x0a        var key = ps[i];\x0a        if (!node || !hasOwnProperty.call(node, key)) {\x0a            node = undefined;\x0a            break;\x0a        }\x0a        node = node[key];\x0a    }\x0a    return node;\x0a};\x0a\x0aTraverse.prototype.has = function (ps) {\x0a    var node = this.value;\x0a    for (var i = 0; i \x3c ps.length; i ++) {\x0a        var key = ps[i];\x0a        if (!node || !hasOwnProperty.call(node, key)) {\x0a            return false;\x0a        }\x0a        node = node[key];\x0a    }\x0a    return true;\x0a};\x0a\x0aTraverse.prototype.set = function (ps, value) {\x0a    var node = this.value;\x0a    for (var i = 0; i \x3c ps.length - 1; i ++) {\x0a        var key = ps[i];\x0a        if (!hasOwnProperty.call(node, key)) node[key] = {};\x0a        node = node[key];\x0a    }\x0a    node[ps[i]] = value;\x0a    return value;\x0a};\x0a\x0aTraverse.prototype.map = function (cb) {\x0a    return walk(this.value, cb, true);\x0a};\x0a\x0aTraverse.prototype.forEach = function (cb) {\x0a    this.value = walk(this.value, cb, false);\x0a    return this.value;\x0a};\x0a\x0aTraverse.prototype.reduce = function (cb, init) {\x0a    var skip = arguments.length === 1;\x0a    var acc = skip ? this.value : init;\x0a    this.forEach(function (x) {\x0a        if (!this.isRoot || !skip) {\x0a            acc = cb.call(this, acc, x);\x0a        }\x0a    });\x0a    return acc;\x0a};\x0a\x0aTraverse.prototype.paths = function () {\x0a    var acc = [];\x0a    this.forEach(function (x) {\x0a        acc.push(this.path); \x0a    });\x0a    return acc;\x0a};\x0a\x0aTraverse.prototype.nodes = function () {\x0a    var acc = [];\x0a    this.forEach(function (x) {\x0a        acc.push(this.node);\x0a    });\x0a    return acc;\x0a};\x0a\x0aTraverse.prototype.clone = function () {\x0a    var parents = [], nodes = [];\x0a    \x0a    return (function clone (src) {\x0a        for (var i = 0; i \x3c parents.length; i++) {\x0a            if (parents[i] === src) {\x0a                return nodes[i];\x0a            }\x0a        }\x0a        \x0a        if (typeof src === \x27object\x27 && src !== null) {\x0a            var dst = copy(src);\x0a            \x0a            parents.push(src);\x0a            nodes.push(dst);\x0a            \x0a            forEach(objectKeys(src), function (key) {\x0a                dst[key] = clone(src[key]);\x0a            });\x0a            \x0a            parents.pop();\x0a            nodes.pop();\x0a            return dst;\x0a        }\x0a        else {\x0a            return src;\x0a        }\x0a    })(this.value);\x0a};\x0a\x0afunction walk (root, cb, immutable) {\x0a    var path = [];\x0a    var parents = [];\x0a    var alive = true;\x0a    \x0a    return (function walker (node_) {\x0a        var node = immutable ? copy(node_) : node_;\x0a        var modifiers = {};\x0a        \x0a        var keepGoing = true;\x0a        \x0a        var state = {\x0a            node : node,\x0a            node_ : node_,\x0a            path : [].concat(path),\x0a            parent : parents[parents.length - 1],\x0a            parents : parents,\x0a            key : path.slice(-1)[0],\x0a            isRoot : path.length === 0,\x0a            level : path.length,\x0a            circular : null,\x0a            update : function (x, stopHere) {\x0a                if (!state.isRoot) {\x0a                    state.parent.node[state.key] = x;\x0a                }\x0a                state.node = x;\x0a                if (stopHere) keepGoing = false;\x0a            },\x0a            \x27delete\x27 : function (stopHere) {\x0a                delete state.parent.node[state.key];\x0a                if (stopHere) keepGoing = false;\x0a            },\x0a            remove : function (stopHere) {\x0a                if (isArray(state.parent.node)) {\x0a                    state.parent.node.splice(state.key, 1);\x0a                }\x0a                else {\x0a                    delete state.parent.node[state.key];\x0a                }\x0a                if (stopHere) keepGoing = false;\x0a            },\x0a            keys : null,\x0a            before : function (f) { modifiers.before = f },\x0a            after : function (f) { modifiers.after = f },\x0a            pre : function (f) { modifiers.pre = f },\x0a            post : function (f) { modifiers.post = f },\x0a            stop : function () { alive = false },\x0a            block : function () { keepGoing = false }\x0a        };\x0a        \x0a        if (!alive) return state;\x0a        \x0a        function updateState() {\x0a            if (typeof state.node === \x27object\x27 && state.node !== null) {\x0a                if (!state.keys || state.node_ !== state.node) {\x0a                    state.keys = objectKeys(state.node)\x0a                }\x0a                \x0a                state.isLeaf = state.keys.length == 0;\x0a                \x0a                for (var i = 0; i \x3c parents.length; i++) {\x0a                    if (parents[i].node_ === node_) {\x0a                        state.circular = parents[i];\x0a                        break;\x0a                    }\x0a                }\x0a            }\x0a            else {\x0a                state.isLeaf = true;\x0a                state.keys = null;\x0a            }\x0a            \x0a            state.notLeaf = !state.isLeaf;\x0a            state.notRoot = !state.isRoot;\x0a        }\x0a        \x0a        updateState();\x0a        \x0a        // use return values to update if defined\x0a        var ret = cb.call(state, state.node);\x0a        if (ret !== undefined && state.update) state.update(ret);\x0a        \x0a        if (modifiers.before) modifiers.before.call(state, state.node);\x0a        \x0a        if (!keepGoing) return state;\x0a        \x0a        if (typeof state.node == \x27object\x27\x0a        && state.node !== null && !state.circular) {\x0a            parents.push(state);\x0a            \x0a            updateState();\x0a            \x0a            forEach(state.keys, function (key, i) {\x0a                path.push(key);\x0a                \x0a                if (modifiers.pre) modifiers.pre.call(state, state.node[key], key);\x0a                \x0a                var child = walker(state.node[key]);\x0a                if (immutable && hasOwnProperty.call(state.node, key)) {\x0a                    state.node[key] = child.node;\x0a                }\x0a                \x0a                child.isLast = i == state.keys.length - 1;\x0a                child.isFirst = i == 0;\x0a                \x0a                if (modifiers.post) modifiers.post.call(state, child);\x0a                \x0a                path.pop();\x0a            });\x0a            parents.pop();\x0a        }\x0a        \x0a        if (modifiers.after) modifiers.after.call(state, state.node);\x0a        \x0a        return state;\x0a    })(root).node;\x0a}\x0a\x0afunction copy (src) {\x0a    if (typeof src === \x27object\x27 && src !== null) {\x0a        var dst;\x0a        \x0a        if (isArray(src)) {\x0a            dst = [];\x0a        }\x0a        else if (isDate(src)) {\x0a            dst = new Date(src.getTime ? src.getTime() : src);\x0a        }\x0a        else if (isRegExp(src)) {\x0a            dst = new RegExp(src);\x0a        }\x0a        else if (isError(src)) {\x0a            dst = { message: src.message };\x0a        }\x0a        else if (isBoolean(src)) {\x0a            dst = new Boolean(src);\x0a        }\x0a        else if (isNumber(src)) {\x0a            dst = new Number(src);\x0a        }\x0a        else if (isString(src)) {\x0a            dst = new String(src);\x0a        }\x0a        else if (Object.create && Object.getPrototypeOf) {\x0a            dst = Object.create(Object.getPrototypeOf(src));\x0a        }\x0a        else if (src.constructor === Object) {\x0a            dst = {};\x0a        }\x0a        else {\x0a            var proto =\x0a                (src.constructor && src.constructor.prototype)\x0a                || src.__proto__\x0a                || {}\x0a            ;\x0a            var T = function () {};\x0a            T.prototype = proto;\x0a            dst = new T;\x0a        }\x0a        \x0a        forEach(objectKeys(src), function (key) {\x0a            dst[key] = src[key];\x0a        });\x0a        return dst;\x0a    }\x0a    else return src;\x0a}\x0a\x0avar objectKeys = Object.keys || function keys (obj) {\x0a    var res = [];\x0a    for (var key in obj) res.push(key)\x0a    return res;\x0a};\x0a\x0afunction toS (obj) { return Object.prototype.toString.call(obj) }\x0afunction isDate (obj) { return toS(obj) === \x27[object Date]\x27 }\x0afunction isRegExp (obj) { return toS(obj) === \x27[object RegExp]\x27 }\x0afunction isError (obj) { return toS(obj) === \x27[object Error]\x27 }\x0afunction isBoolean (obj) { return toS(obj) === \x27[object Boolean]\x27 }\x0afunction isNumber (obj) { return toS(obj) === \x27[object Number]\x27 }\x0afunction isString (obj) { return toS(obj) === \x27[object String]\x27 }\x0a\x0avar isArray = Array.isArray || function isArray (xs) {\x0a    return Object.prototype.toString.call(xs) === \x27[object Array]\x27;\x0a};\x0a\x0avar forEach = function (xs, fn) {\x0a    if (xs.forEach) return xs.forEach(fn)\x0a    else for (var i = 0; i \x3c xs.length; i++) {\x0a        fn(xs[i], i, xs);\x0a    }\x0a};\x0a\x0aforEach(objectKeys(Traverse.prototype), function (key) {\x0a    traverse[key] = function (obj) {\x0a        var args = [].slice.call(arguments, 1);\x0a        var t = new Traverse(obj);\x0a        return t[key].apply(t, args);\x0a    };\x0a});\x0a\x0avar hasOwnProperty = Object.hasOwnProperty || function (obj, key) {\x0a    return key in obj;\x0a};\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 23:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0amodule.exports = __webpack_require__(54);\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 25:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22url\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 26:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22hooks\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 27:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22React\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 28:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\x0avar arrayWithHoles = __webpack_require__(37);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\x0afunction _iterableToArrayLimit(arr, i) {\x0a  var _arr = [];\x0a  var _n = true;\x0a  var _d = false;\x0a  var _e = undefined;\x0a\x0a  try {\x0a    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\x0a      _arr.push(_s.value);\x0a\x0a      if (i && _arr.length === i) break;\x0a    }\x0a  } catch (err) {\x0a    _d = true;\x0a    _e = err;\x0a  } finally {\x0a    try {\x0a      if (!_n && _i[\x22return\x22] != null) _i[\x22return\x22]();\x0a    } finally {\x0a      if (_d) throw _e;\x0a    }\x0a  }\x0a\x0a  return _arr;\x0a}\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\x0avar nonIterableRest = __webpack_require__(38);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _slicedToArray; });\x0a\x0a\x0a\x0afunction _slicedToArray(arr, i) {\x0a  return Object(arrayWithHoles[\x22a\x22 /* default */])(arr) || _iterableToArrayLimit(arr, i) || Object(nonIterableRest[\x22a\x22 /* default */])();\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 3:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _assertThisInitialized; });\x0afunction _assertThisInitialized(self) {\x0a  if (self === void 0) {\x0a    throw new ReferenceError(\x22this hasn\x27t been initialised - super() hasn\x27t been called\x22);\x0a  }\x0a\x0a  return self;\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 30:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a\x0avar LEAF_KEY, hasWeakMap;\x0a\x0a/**\x0a * Arbitrary value used as key for referencing cache object in WeakMap tree.\x0a *\x0a * @type {Object}\x0a */\x0aLEAF_KEY = {};\x0a\x0a/**\x0a * Whether environment supports WeakMap.\x0a *\x0a * @type {boolean}\x0a */\x0ahasWeakMap = typeof WeakMap !== \x27undefined\x27;\x0a\x0a/**\x0a * Returns the first argument as the sole entry in an array.\x0a *\x0a * @param {*} value Value to return.\x0a *\x0a * @return {Array} Value returned as entry in array.\x0a */\x0afunction arrayOf( value ) {\x0a\x09return [ value ];\x0a}\x0a\x0a/**\x0a * Returns true if the value passed is object-like, or false otherwise. A value\x0a * is object-like if it can support property assignment, e.g. object or array.\x0a *\x0a * @param {*} value Value to test.\x0a *\x0a * @return {boolean} Whether value is object-like.\x0a */\x0afunction isObjectLike( value ) {\x0a\x09return !! value && \x27object\x27 === typeof value;\x0a}\x0a\x0a/**\x0a * Creates and returns a new cache object.\x0a *\x0a * @return {Object} Cache object.\x0a */\x0afunction createCache() {\x0a\x09var cache = {\x0a\x09\x09clear: function() {\x0a\x09\x09\x09cache.head = null;\x0a\x09\x09},\x0a\x09};\x0a\x0a\x09return cache;\x0a}\x0a\x0a/**\x0a * Returns true if entries within the two arrays are strictly equal by\x0a * reference from a starting index.\x0a *\x0a * @param {Array}  a         First array.\x0a * @param {Array}  b         Second array.\x0a * @param {number} fromIndex Index from which to start comparison.\x0a *\x0a * @return {boolean} Whether arrays are shallowly equal.\x0a */\x0afunction isShallowEqual( a, b, fromIndex ) {\x0a\x09var i;\x0a\x0a\x09if ( a.length !== b.length ) {\x0a\x09\x09return false;\x0a\x09}\x0a\x0a\x09for ( i = fromIndex; i \x3c a.length; i++ ) {\x0a\x09\x09if ( a[ i ] !== b[ i ] ) {\x0a\x09\x09\x09return false;\x0a\x09\x09}\x0a\x09}\x0a\x0a\x09return true;\x0a}\x0a\x0a/**\x0a * Returns a memoized selector function. The getDependants function argument is\x0a * called before the memoized selector and is expected to return an immutable\x0a * reference or array of references on which the selector depends for computing\x0a * its own return value. The memoize cache is preserved only as long as those\x0a * dependant references remain the same. If getDependants returns a different\x0a * reference(s), the cache is cleared and the selector value regenerated.\x0a *\x0a * @param {Function} selector      Selector function.\x0a * @param {Function} getDependants Dependant getter returning an immutable\x0a *                                 reference or array of reference used in\x0a *                                 cache bust consideration.\x0a *\x0a * @return {Function} Memoized selector.\x0a */\x0a/* harmony default export */ __webpack_exports__[\x22a\x22] = (function( selector, getDependants ) {\x0a\x09var rootCache, getCache;\x0a\x0a\x09// Use object source as dependant if getter not provided\x0a\x09if ( ! getDependants ) {\x0a\x09\x09getDependants = arrayOf;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Returns the root cache. If WeakMap is supported, this is assigned to the\x0a\x09 * root WeakMap cache set, otherwise it is a shared instance of the default\x0a\x09 * cache object.\x0a\x09 *\x0a\x09 * @return {(WeakMap|Object)} Root cache object.\x0a\x09 */\x0a\x09function getRootCache() {\x0a\x09\x09return rootCache;\x0a\x09}\x0a\x0a\x09/**\x0a\x09 * Returns the cache for a given dependants array. When possible, a WeakMap\x0a\x09 * will be used to create a unique cache for each set of dependants. This\x0a\x09 * is feasible due to the nature of WeakMap in allowing garbage collection\x0a\x09 * to occur on entries where the key object is no longer referenced. Since\x0a\x09 * WeakMap requires the key to be an object, this is only possible when the\x0a\x09 * dependant is object-like. The root cache is created as a hierarchy where\x0a\x09 * each top-level key is the first entry in a dependants set, the value a\x0a\x09 * WeakMap where each key is the next dependant, and so on. This continues\x0a\x09 * so long as the dependants are object-like. If no dependants are object-\x0a\x09 * like, then the cache is shared across all invocations.\x0a\x09 *\x0a\x09 * @see isObjectLike\x0a\x09 *\x0a\x09 * @param {Array} dependants Selector dependants.\x0a\x09 *\x0a\x09 * @return {Object} Cache object.\x0a\x09 */\x0a\x09function getWeakMapCache( dependants ) {\x0a\x09\x09var caches = rootCache,\x0a\x09\x09\x09isUniqueByDependants = true,\x0a\x09\x09\x09i, dependant, map, cache;\x0a\x0a\x09\x09for ( i = 0; i \x3c dependants.length; i++ ) {\x0a\x09\x09\x09dependant = dependants[ i ];\x0a\x0a\x09\x09\x09// Can only compose WeakMap from object-like key.\x0a\x09\x09\x09if ( ! isObjectLike( dependant ) ) {\x0a\x09\x09\x09\x09isUniqueByDependants = false;\x0a\x09\x09\x09\x09break;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Does current segment of cache already have a WeakMap?\x0a\x09\x09\x09if ( caches.has( dependant ) ) {\x0a\x09\x09\x09\x09// Traverse into nested WeakMap.\x0a\x09\x09\x09\x09caches = caches.get( dependant );\x0a\x09\x09\x09} else {\x0a\x09\x09\x09\x09// Create, set, and traverse into a new one.\x0a\x09\x09\x09\x09map = new WeakMap();\x0a\x09\x09\x09\x09caches.set( dependant, map );\x0a\x09\x09\x09\x09caches = map;\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x0a\x09\x09// We use an arbitrary (but consistent) object as key for the last item\x0a\x09\x09// in the WeakMap to serve as our running cache.\x0a\x09\x09if ( ! caches.has( LEAF_KEY ) ) {\x0a\x09\x09\x09cache = createCache();\x0a\x09\x09\x09cache.isUniqueByDependants = isUniqueByDependants;\x0a\x09\x09\x09caches.set( LEAF_KEY, cache );\x0a\x09\x09}\x0a\x0a\x09\x09return caches.get( LEAF_KEY );\x0a\x09}\x0a\x0a\x09// Assign cache handler by availability of WeakMap\x0a\x09getCache = hasWeakMap ? getWeakMapCache : getRootCache;\x0a\x0a\x09/**\x0a\x09 * Resets root memoization cache.\x0a\x09 */\x0a\x09function clear() {\x0a\x09\x09rootCache = hasWeakMap ? new WeakMap() : createCache();\x0a\x09}\x0a\x0a\x09// eslint-disable-next-line jsdoc/check-param-names\x0a\x09/**\x0a\x09 * The augmented selector call, considering first whether dependants have\x0a\x09 * changed before passing it to underlying memoize function.\x0a\x09 *\x0a\x09 * @param {Object} source    Source object for derivation.\x0a\x09 * @param {...*}   extraArgs Additional arguments to pass to selector.\x0a\x09 *\x0a\x09 * @return {*} Selector result.\x0a\x09 */\x0a\x09function callSelector( /* source, ...extraArgs */ ) {\x0a\x09\x09var len = arguments.length,\x0a\x09\x09\x09cache, node, i, args, dependants;\x0a\x0a\x09\x09// Create copy of arguments (avoid leaking deoptimization).\x0a\x09\x09args = new Array( len );\x0a\x09\x09for ( i = 0; i \x3c len; i++ ) {\x0a\x09\x09\x09args[ i ] = arguments[ i ];\x0a\x09\x09}\x0a\x0a\x09\x09dependants = getDependants.apply( null, args );\x0a\x09\x09cache = getCache( dependants );\x0a\x0a\x09\x09// If not guaranteed uniqueness by dependants (primitive type or lack\x0a\x09\x09// of WeakMap support), shallow compare against last dependants and, if\x0a\x09\x09// references have changed, destroy cache to recalculate result.\x0a\x09\x09if ( ! cache.isUniqueByDependants ) {\x0a\x09\x09\x09if ( cache.lastDependants && ! isShallowEqual( dependants, cache.lastDependants, 0 ) ) {\x0a\x09\x09\x09\x09cache.clear();\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09cache.lastDependants = dependants;\x0a\x09\x09}\x0a\x0a\x09\x09node = cache.head;\x0a\x09\x09while ( node ) {\x0a\x09\x09\x09// Check whether node arguments match arguments\x0a\x09\x09\x09if ( ! isShallowEqual( node.args, args, 1 ) ) {\x0a\x09\x09\x09\x09node = node.next;\x0a\x09\x09\x09\x09continue;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// At this point we can assume we\x27ve found a match\x0a\x0a\x09\x09\x09// Surface matched node to head if not already\x0a\x09\x09\x09if ( node !== cache.head ) {\x0a\x09\x09\x09\x09// Adjust siblings to point to each other.\x0a\x09\x09\x09\x09node.prev.next = node.next;\x0a\x09\x09\x09\x09if ( node.next ) {\x0a\x09\x09\x09\x09\x09node.next.prev = node.prev;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09node.next = cache.head;\x0a\x09\x09\x09\x09node.prev = null;\x0a\x09\x09\x09\x09cache.head.prev = node;\x0a\x09\x09\x09\x09cache.head = node;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Return immediately\x0a\x09\x09\x09return node.val;\x0a\x09\x09}\x0a\x0a\x09\x09// No cached value found. Continue to insertion phase:\x0a\x0a\x09\x09node = {\x0a\x09\x09\x09// Generate the result from original function\x0a\x09\x09\x09val: selector.apply( null, args ),\x0a\x09\x09};\x0a\x0a\x09\x09// Avoid including the source object in the cache.\x0a\x09\x09args[ 0 ] = null;\x0a\x09\x09node.args = args;\x0a\x0a\x09\x09// Don\x27t need to check whether node is already head, since it would\x0a\x09\x09// have been returned above already if it was\x0a\x0a\x09\x09// Shift existing head down list\x0a\x09\x09if ( cache.head ) {\x0a\x09\x09\x09cache.head.prev = node;\x0a\x09\x09\x09node.next = cache.head;\x0a\x09\x09}\x0a\x0a\x09\x09cache.head = node;\x0a\x0a\x09\x09return node.val;\x0a\x09}\x0a\x0a\x09callSelector.getDependants = getDependants;\x0a\x09callSelector.clear = clear;\x0a\x09clear();\x0a\x0a\x09return callSelector;\x0a});\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 31:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a/**\x0a * Copyright (c) 2013-present, Facebook, Inc.\x0a *\x0a * This source code is licensed under the MIT license found in the\x0a * LICENSE file in the root directory of this source tree.\x0a */\x0a\x0aif (false) { var throwOnDirectAccess, isValidElement, REACT_ELEMENT_TYPE; } else {\x0a  // By explicitly using `prop-types` you are opting into new production behavior.\x0a  // http://fb.me/prop-types-in-prod\x0a  module.exports = __webpack_require__(89)();\x0a}\x0a\x0a\x0a/***/ }),\x0a\x0a/***/ 32:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _typeof; });\x0afunction _typeof2(obj) { if (typeof Symbol === \x22function\x22 && typeof Symbol.iterator === \x22symbol\x22) { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \x22function\x22 && obj.constructor === Symbol && obj !== Symbol.prototype ? \x22symbol\x22 : typeof obj; }; } return _typeof2(obj); }\x0a\x0afunction _typeof(obj) {\x0a  if (typeof Symbol === \x22function\x22 && _typeof2(Symbol.iterator) === \x22symbol\x22) {\x0a    _typeof = function _typeof(obj) {\x0a      return _typeof2(obj);\x0a    };\x0a  } else {\x0a    _typeof = function _typeof(obj) {\x0a      return obj && typeof Symbol === \x22function\x22 && obj.constructor === Symbol && obj !== Symbol.prototype ? \x22symbol\x22 : _typeof2(obj);\x0a    };\x0a  }\x0a\x0a  return _typeof(obj);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 33:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22apiFetch\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 34:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \x22a\x22, function() { return _iterableToArray; });\x0afunction _iterableToArray(iter) {\x0a  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \x22[object Arguments]\x22) return Array.from(iter);\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 341:\x0a/***/ (function(module, exports, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a\x0a\x0avar _extends = Object.assign || function (target) { for (var i = 1; i \x3c arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\x0a\x0afunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) \x3e= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\x0a\x0avar BEGIN = \x27BEGIN\x27;\x0avar COMMIT = \x27COMMIT\x27;\x0avar REVERT = \x27REVERT\x27;\x0a// Array({transactionID: string or null, beforeState: {object}, action: {object}}\x0avar INITIAL_OPTIMIST = [];\x0a\x0amodule.exports = optimist;\x0amodule.exports.BEGIN = BEGIN;\x0amodule.exports.COMMIT = COMMIT;\x0amodule.exports.REVERT = REVERT;\x0afunction optimist(fn) {\x0a  function beginReducer(state, action) {\x0a    var _separateState = separateState(state);\x0a\x0a    var optimist = _separateState.optimist;\x0a    var innerState = _separateState.innerState;\x0a\x0a    optimist = optimist.concat([{ beforeState: innerState, action: action }]);\x0a    innerState = fn(innerState, action);\x0a    validateState(innerState, action);\x0a    return _extends({ optimist: optimist }, innerState);\x0a  }\x0a  function commitReducer(state, action) {\x0a    var _separateState2 = separateState(state);\x0a\x0a    var optimist = _separateState2.optimist;\x0a    var innerState = _separateState2.innerState;\x0a\x0a    var newOptimist = [],\x0a        started = false,\x0a        committed = false;\x0a    optimist.forEach(function (entry) {\x0a      if (started) {\x0a        if (entry.beforeState && matchesTransaction(entry.action, action.optimist.id)) {\x0a          committed = true;\x0a          newOptimist.push({ action: entry.action });\x0a        } else {\x0a          newOptimist.push(entry);\x0a        }\x0a      } else if (entry.beforeState && !matchesTransaction(entry.action, action.optimist.id)) {\x0a        started = true;\x0a        newOptimist.push(entry);\x0a      } else if (entry.beforeState && matchesTransaction(entry.action, action.optimist.id)) {\x0a        committed = true;\x0a      }\x0a    });\x0a    if (!committed) {\x0a      console.error(\x27Cannot commit transaction with id \x22\x27 + action.optimist.id + \x27\x22 because it does not exist\x27);\x0a    }\x0a    optimist = newOptimist;\x0a    return baseReducer(optimist, innerState, action);\x0a  }\x0a  function revertReducer(state, action) {\x0a    var _separateState3 = separateState(state);\x0a\x0a    var optimist = _separateState3.optimist;\x0a    var innerState = _separateState3.innerState;\x0a\x0a    var newOptimist = [],\x0a        started = false,\x0a        gotInitialState = false,\x0a        currentState = innerState;\x0a    optimist.forEach(function (entry) {\x0a      if (entry.beforeState && matchesTransaction(entry.action, action.optimist.id)) {\x0a        currentState = entry.beforeState;\x0a        gotInitialState = true;\x0a      }\x0a      if (!matchesTransaction(entry.action, action.optimist.id)) {\x0a        if (entry.beforeState) {\x0a          started = true;\x0a        }\x0a        if (started) {\x0a          if (gotInitialState && entry.beforeState) {\x0a            newOptimist.push({\x0a              beforeState: currentState,\x0a              action: entry.action\x0a            });\x0a          } else {\x0a            newOptimist.push(entry);\x0a          }\x0a        }\x0a        if (gotInitialState) {\x0a          currentState = fn(currentState, entry.action);\x0a          validateState(innerState, action);\x0a        }\x0a      }\x0a    });\x0a    if (!gotInitialState) {\x0a      console.error(\x27Cannot revert transaction with id \x22\x27 + action.optimist.id + \x27\x22 because it does not exist\x27);\x0a    }\x0a    optimist = newOptimist;\x0a    return baseReducer(optimist, currentState, action);\x0a  }\x0a  function baseReducer(optimist, innerState, action) {\x0a    if (optimist.length) {\x0a      optimist = optimist.concat([{ action: action }]);\x0a    }\x0a    innerState = fn(innerState, action);\x0a    validateState(innerState, action);\x0a    return _extends({ optimist: optimist }, innerState);\x0a  }\x0a  return function (state, action) {\x0a    if (action.optimist) {\x0a      switch (action.optimist.type) {\x0a        case BEGIN:\x0a          return beginReducer(state, action);\x0a        case COMMIT:\x0a          return commitReducer(state, action);\x0a        case REVERT:\x0a          return revertReducer(state, action);\x0a      }\x0a    }\x0a\x0a    var _separateState4 = separateState(state);\x0a\x0a    var optimist = _separateState4.optimist;\x0a    var innerState = _separateState4.innerState;\x0a\x0a    if (state && !optimist.length) {\x0a      var nextState = fn(innerState, action);\x0a      if (nextState === innerState) {\x0a        return state;\x0a      }\x0a      validateState(nextState, action);\x0a      return _extends({ optimist: optimist }, nextState);\x0a    }\x0a    return baseReducer(optimist, innerState, action);\x0a  };\x0a}\x0a\x0afunction matchesTransaction(action, id) {\x0a  return action.optimist && action.optimist.id === id;\x0a}\x0a\x0afunction validateState(newState, action) {\x0a  if (!newState || typeof newState !== \x27object\x27 || Array.isArray(newState)) {\x0a    throw new TypeError(\x27Error while handling \x22\x27 + action.type + \x27\x22: Optimist requires that state is always a plain object.\x27);\x0a  }\x0a}\x0a\x0afunction separateState(state) {\x0a  if (!state) {\x0a    return { optimist: INITIAL_OPTIMIST, innerState: state };\x0a  } else {\x0a    var _state$optimist = state.optimist;\x0a\x0a    var _optimist = _state$optimist === undefined ? INITIAL_OPTIMIST : _state$optimist;\x0a\x0a    var innerState = _objectWithoutProperties(state, [\x27optimist\x27]);\x0a\x0a    return { optimist: _optimist, innerState: innerState };\x0a  }\x0a}\x0a\x0a/***/ }),\x0a\x0a/***/ 35:\x0a/***/ (function(module, exports) {\x0a\x0a(function() { module.exports = this[\x22wp\x22][\x22blob\x22]; }());\x0a\x0a/***/ }),\x0a\x0a/***/ 358:\x0a/***/ (function(module, __webpack_exports__, __webpack_require__) {\x0a\x0a\x22use strict\x22;\x0a__webpack_require__.r(__webpack_exports__);\x0avar actions_namespaceObject = {};\x0a__webpack_require__.r(actions_namespaceObject);\x0a__webpack_require__.d(actions_namespaceObject, \x22setupEditor\x22, function() { return setupEditor; });\x0a__webpack_require__.d(actions_namespaceObject, \x22resetPost\x22, function() { return resetPost; });\x0a__webpack_require__.d(actions_namespaceObject, \x22resetAutosave\x22, function() { return resetAutosave; });\x0a__webpack_require__.d(actions_namespaceObject, \x22__experimentalRequestPostUpdateStart\x22, function() { return __experimentalRequestPostUpdateStart; });\x0a__webpack_require__.d(actions_namespaceObject, \x22__experimentalRequestPostUpdateSuccess\x22, function() { return __experimentalRequestPostUpdateSuccess; });\x0a__webpack_require__.d(actions_namespaceObject, \x22__experimentalRequestPostUpdateFailure\x22, function() { return __experimentalRequestPostUpdateFailure; });\x0a__webpack_require__.d(actions_namespaceObject, \x22updatePost\x22, function() { return updatePost; });\x0a__webpack_require__.d(actions_namespaceObject, \x22setupEditorState\x22, function() { return setupEditorState; });\x0a__webpack_require__.d(actions_namespaceObject, \x22editPost\x22, function() { return actions_editPost; });\x0a__webpack_require__.d(actions_namespaceObject, \x22__experimentalOptimisticUpdatePost\x22, function() { return __experimentalOptimisticUpdatePost; });\x0a__webpack_require__.d(actions_namespaceObject, \x22savePost\x22, function() { return savePost; });\x0a__webpack_require__.d(actions_namespaceObject, \x22refreshPost\x22, function() { return refreshPost; });\x0a__webpack_require__.d(actions_namespaceObject, \x22trashPost\x22, function() { return trashPost; });\x0a__webpack_require__.d(actions_namespaceObject, \x22autosave\x22, function() { return actions_autosave; });\x0a__webpack_require__.d(actions_namespaceObject, \x22redo\x22, function() { return actions_redo; });\x0a__webpack_require__.d(actions_namespaceObject, \x22undo\x22, function() { return actions_undo; });\x0a__webpack_require__.d(actions_namespaceObject, \x22createUndoLevel\x22, function() { return createUndoLevel; });\x0a__webpack_require__.d(actions_namespaceObject, \x22updatePostLock\x22, function() { return updatePostLock; });\x0a__webpack_require__.d(actions_namespaceObject, \x22__experimentalFetchReusableBlocks\x22, function() { return __experimentalFetchReusableBlocks; });\x0a__webpack_require__.d(actions_namespaceObject, \x22__experimentalReceiveReusableBlocks\x22, function() { return __experimentalReceiveReusableBlocks; });\x0a__webpack_require__.d(actions_namespaceObject, \x22__experimentalSaveReusableBlock\x22, function() { return __experimentalSaveReusableBlock; });\x0a__webpack_require__.d(actions_namespaceObject, \x22__experimentalDeleteReusableBlock\x22, function() { return __experimentalDeleteReusableBlock; });\x0a__webpack_require__.d(actions_namespaceObject, \x22__experimentalUpdateReusableBlockTitle\x22, function() { return __experimentalUpdateReusableBlockTitle; });\x0a__webpack_require__.d(actions_namespaceObject, \x22__experimentalConvertBlockToStatic\x22, function() { return __experimentalConvertBlockToStatic; });\x0a__webpack_require__.d(actions_namespaceObject, \x22__experimentalConvertBlockToReusable\x22, function() { return __experimentalConvertBlockToReusable; });\x0a__webpack_require__.d(actions_namespaceObject, \x22enablePublishSidebar\x22, function() { return enablePublishSidebar; });\x0a__webpack_require__.d(actions_namespaceObject, \x22disablePublishSidebar\x22, function() { return disablePublishSidebar; });\x0a__webpack_require__.d(actions_namespaceObject, \x22lockPostSaving\x22, function() { return lockPostSaving; });\x0a__webpack_require__.d(actions_namespaceObject, \x22unlockPostSaving\x22, function() { return unlockPostSaving; });\x0a__webpack_require__.d(actions_namespaceObject, \x22resetEditorBlocks\x22, function() { return actions_resetEditorBlocks; });\x0a__webpack_require__.d(actions_namespaceObject, \x22updateEditorSettings\x22, function() { return updateEditorSettings; });\x0a__webpack_require__.d(actions_namespaceObject, \x22resetBlocks\x22, function() { return resetBlocks; });\x0a__webpack_require__.d(actions_namespaceObject, \x22receiveBlocks\x22, function() { return receiveBlocks; });\x0a__webpack_require__.d(actions_namespaceObject, \x22updateBlock\x22, function() { return updateBlock; });\x0a__webpack_require__.d(actions_namespaceObject, \x22updateBlockAttributes\x22, function() { return updateBlockAttributes; });\x0a__webpack_require__.d(actions_namespaceObject, \x22selectBlock\x22, function() { return selectBlock; });\x0a__webpack_require__.d(actions_namespaceObject, \x22startMultiSelect\x22, function() { return startMultiSelect; });\x0a__webpack_require__.d(actions_namespaceObject, \x22stopMultiSelect\x22, function() { return stopMultiSelect; });\x0a__webpack_require__.d(actions_namespaceObject, \x22multiSelect\x22, function() { return multiSelect; });\x0a__webpack_require__.d(actions_namespaceObject, \x22clearSelectedBlock\x22, function() { return clearSelectedBlock; });\x0a__webpack_require__.d(actions_namespaceObject, \x22toggleSelection\x22, function() { return toggleSelection; });\x0a__webpack_require__.d(actions_namespaceObject, \x22replaceBlocks\x22, function() { return replaceBlocks; });\x0a__webpack_require__.d(actions_namespaceObject, \x22replaceBlock\x22, function() { return replaceBlock; });\x0a__webpack_require__.d(actions_namespaceObject, \x22moveBlocksDown\x22, function() { return moveBlocksDown; });\x0a__webpack_require__.d(actions_namespaceObject, \x22moveBlocksUp\x22, function() { return moveBlocksUp; });\x0a__webpack_require__.d(actions_namespaceObject, \x22moveBlockToPosition\x22, function() { return moveBlockToPosition; });\x0a__webpack_require__.d(actions_namespaceObject, \x22insertBlock\x22, function() { return insertBlock; });\x0a__webpack_require__.d(actions_namespaceObject, \x22insertBlocks\x22, function() { return insertBlocks; });\x0a__webpack_require__.d(actions_namespaceObject, \x22showInsertionPoint\x22, function() { return showInsertionPoint; });\x0a__webpack_require__.d(actions_namespaceObject, \x22hideInsertionPoint\x22, function() { return hideInsertionPoint; });\x0a__webpack_require__.d(actions_namespaceObject, \x22setTemplateValidity\x22, function() { return setTemplateValidity; });\x0a__webpack_require__.d(actions_namespaceObject, \x22synchronizeTemplate\x22, function() { return synchronizeTemplate; });\x0a__webpack_require__.d(actions_namespaceObject, \x22mergeBlocks\x22, function() { return mergeBlocks; });\x0a__webpack_require__.d(actions_namespaceObject, \x22removeBlocks\x22, function() { return removeBlocks; });\x0a__webpack_require__.d(actions_namespaceObject, \x22removeBlock\x22, function() { return removeBlock; });\x0a__webpack_require__.d(actions_namespaceObject, \x22toggleBlockMode\x22, function() { return toggleBlockMode; });\x0a__webpack_require__.d(actions_namespaceObject, \x22startTyping\x22, function() { return startTyping; });\x0a__webpack_require__.d(actions_namespaceObject, \x22stopTyping\x22, function() { return stopTyping; });\x0a__webpack_require__.d(actions_namespaceObject, \x22enterFormattedText\x22, function() { return enterFormattedText; });\x0a__webpack_require__.d(actions_namespaceObject, \x22exitFormattedText\x22, function() { return exitFormattedText; });\x0a__webpack_require__.d(actions_namespaceObject, \x22insertDefaultBlock\x22, function() { return insertDefaultBlock; });\x0a__webpack_require__.d(actions_namespaceObject, \x22updateBlockListSettings\x22, function() { return updateBlockListSettings; });\x0avar selectors_namespaceObject = {};\x0a__webpack_require__.r(selectors_namespaceObject);\x0a__webpack_require__.d(selectors_namespaceObject, \x22hasEditorUndo\x22, function() { return hasEditorUndo; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22hasEditorRedo\x22, function() { return hasEditorRedo; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditedPostNew\x22, function() { return selectors_isEditedPostNew; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22hasChangedContent\x22, function() { return hasChangedContent; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditedPostDirty\x22, function() { return selectors_isEditedPostDirty; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isCleanNewPost\x22, function() { return selectors_isCleanNewPost; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getCurrentPost\x22, function() { return selectors_getCurrentPost; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getCurrentPostType\x22, function() { return selectors_getCurrentPostType; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getCurrentPostId\x22, function() { return selectors_getCurrentPostId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getCurrentPostRevisionsCount\x22, function() { return getCurrentPostRevisionsCount; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getCurrentPostLastRevisionId\x22, function() { return getCurrentPostLastRevisionId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getPostEdits\x22, function() { return getPostEdits; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getReferenceByDistinctEdits\x22, function() { return getReferenceByDistinctEdits; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getCurrentPostAttribute\x22, function() { return selectors_getCurrentPostAttribute; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getEditedPostAttribute\x22, function() { return selectors_getEditedPostAttribute; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getAutosaveAttribute\x22, function() { return getAutosaveAttribute; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getEditedPostVisibility\x22, function() { return selectors_getEditedPostVisibility; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isCurrentPostPending\x22, function() { return isCurrentPostPending; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isCurrentPostPublished\x22, function() { return selectors_isCurrentPostPublished; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isCurrentPostScheduled\x22, function() { return selectors_isCurrentPostScheduled; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditedPostPublishable\x22, function() { return selectors_isEditedPostPublishable; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditedPostSaveable\x22, function() { return selectors_isEditedPostSaveable; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditedPostEmpty\x22, function() { return isEditedPostEmpty; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditedPostAutosaveable\x22, function() { return selectors_isEditedPostAutosaveable; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getAutosave\x22, function() { return getAutosave; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22hasAutosave\x22, function() { return hasAutosave; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditedPostBeingScheduled\x22, function() { return selectors_isEditedPostBeingScheduled; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isEditedPostDateFloating\x22, function() { return isEditedPostDateFloating; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isSavingPost\x22, function() { return selectors_isSavingPost; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22didPostSaveRequestSucceed\x22, function() { return didPostSaveRequestSucceed; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22didPostSaveRequestFail\x22, function() { return didPostSaveRequestFail; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isAutosavingPost\x22, function() { return selectors_isAutosavingPost; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isPreviewingPost\x22, function() { return isPreviewingPost; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getEditedPostPreviewLink\x22, function() { return selectors_getEditedPostPreviewLink; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getSuggestedPostFormat\x22, function() { return selectors_getSuggestedPostFormat; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlocksForSerialization\x22, function() { return getBlocksForSerialization; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getEditedPostContent\x22, function() { return getEditedPostContent; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22__experimentalGetReusableBlock\x22, function() { return __experimentalGetReusableBlock; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22__experimentalIsSavingReusableBlock\x22, function() { return __experimentalIsSavingReusableBlock; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22__experimentalIsFetchingReusableBlock\x22, function() { return __experimentalIsFetchingReusableBlock; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22__experimentalGetReusableBlocks\x22, function() { return __experimentalGetReusableBlocks; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getStateBeforeOptimisticTransaction\x22, function() { return getStateBeforeOptimisticTransaction; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isPublishingPost\x22, function() { return selectors_isPublishingPost; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isPermalinkEditable\x22, function() { return selectors_isPermalinkEditable; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getPermalink\x22, function() { return getPermalink; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getPermalinkParts\x22, function() { return selectors_getPermalinkParts; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22inSomeHistory\x22, function() { return inSomeHistory; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isPostLocked\x22, function() { return isPostLocked; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isPostSavingLocked\x22, function() { return selectors_isPostSavingLocked; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isPostLockTakeover\x22, function() { return isPostLockTakeover; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getPostLockUser\x22, function() { return getPostLockUser; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getActivePostLock\x22, function() { return getActivePostLock; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22canUserUseUnfilteredHTML\x22, function() { return canUserUseUnfilteredHTML; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isPublishSidebarEnabled\x22, function() { return selectors_isPublishSidebarEnabled; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getEditorBlocks\x22, function() { return getEditorBlocks; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22__unstableIsEditorReady\x22, function() { return __unstableIsEditorReady; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getEditorSettings\x22, function() { return selectors_getEditorSettings; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockDependantsCacheBust\x22, function() { return getBlockDependantsCacheBust; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockName\x22, function() { return selectors_getBlockName; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isBlockValid\x22, function() { return isBlockValid; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockAttributes\x22, function() { return getBlockAttributes; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlock\x22, function() { return getBlock; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlocks\x22, function() { return selectors_getBlocks; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22__unstableGetBlockWithoutInnerBlocks\x22, function() { return __unstableGetBlockWithoutInnerBlocks; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getClientIdsOfDescendants\x22, function() { return getClientIdsOfDescendants; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getClientIdsWithDescendants\x22, function() { return getClientIdsWithDescendants; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getGlobalBlockCount\x22, function() { return getGlobalBlockCount; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlocksByClientId\x22, function() { return getBlocksByClientId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockCount\x22, function() { return getBlockCount; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockSelectionStart\x22, function() { return getBlockSelectionStart; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockSelectionEnd\x22, function() { return getBlockSelectionEnd; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getSelectedBlockCount\x22, function() { return getSelectedBlockCount; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22hasSelectedBlock\x22, function() { return hasSelectedBlock; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getSelectedBlockClientId\x22, function() { return selectors_getSelectedBlockClientId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getSelectedBlock\x22, function() { return getSelectedBlock; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockRootClientId\x22, function() { return getBlockRootClientId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockHierarchyRootClientId\x22, function() { return getBlockHierarchyRootClientId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getAdjacentBlockClientId\x22, function() { return getAdjacentBlockClientId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getPreviousBlockClientId\x22, function() { return getPreviousBlockClientId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getNextBlockClientId\x22, function() { return getNextBlockClientId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getSelectedBlocksInitialCaretPosition\x22, function() { return getSelectedBlocksInitialCaretPosition; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getMultiSelectedBlockClientIds\x22, function() { return getMultiSelectedBlockClientIds; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getMultiSelectedBlocks\x22, function() { return getMultiSelectedBlocks; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getFirstMultiSelectedBlockClientId\x22, function() { return getFirstMultiSelectedBlockClientId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getLastMultiSelectedBlockClientId\x22, function() { return getLastMultiSelectedBlockClientId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isFirstMultiSelectedBlock\x22, function() { return isFirstMultiSelectedBlock; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isBlockMultiSelected\x22, function() { return isBlockMultiSelected; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isAncestorMultiSelected\x22, function() { return isAncestorMultiSelected; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getMultiSelectedBlocksStartClientId\x22, function() { return getMultiSelectedBlocksStartClientId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getMultiSelectedBlocksEndClientId\x22, function() { return getMultiSelectedBlocksEndClientId; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockOrder\x22, function() { return getBlockOrder; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockIndex\x22, function() { return getBlockIndex; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isBlockSelected\x22, function() { return isBlockSelected; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22hasSelectedInnerBlock\x22, function() { return hasSelectedInnerBlock; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isBlockWithinSelection\x22, function() { return isBlockWithinSelection; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22hasMultiSelection\x22, function() { return hasMultiSelection; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isMultiSelecting\x22, function() { return isMultiSelecting; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isSelectionEnabled\x22, function() { return isSelectionEnabled; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockMode\x22, function() { return getBlockMode; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isTyping\x22, function() { return selectors_isTyping; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isCaretWithinFormattedText\x22, function() { return selectors_isCaretWithinFormattedText; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockInsertionPoint\x22, function() { return getBlockInsertionPoint; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isBlockInsertionPointVisible\x22, function() { return isBlockInsertionPointVisible; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22isValidTemplate\x22, function() { return isValidTemplate; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getTemplate\x22, function() { return getTemplate; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getTemplateLock\x22, function() { return getTemplateLock; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22canInsertBlockType\x22, function() { return canInsertBlockType; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getInserterItems\x22, function() { return selectors_getInserterItems; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22hasInserterItems\x22, function() { return hasInserterItems; });\x0a__webpack_require__.d(selectors_namespaceObject, \x22getBlockListSettings\x22, function() { return getBlockListSettings; });\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22blockEditor\x22]}\x0avar external_this_wp_blockEditor_ = __webpack_require__(8);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22blocks\x22]}\x0avar external_this_wp_blocks_ = __webpack_require__(14);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22coreData\x22]}\x0avar external_this_wp_coreData_ = __webpack_require__(72);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22notices\x22]}\x0avar external_this_wp_notices_ = __webpack_require__(133);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22nux\x22]}\x0avar external_this_wp_nux_ = __webpack_require__(60);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22richText\x22]}\x0avar external_this_wp_richText_ = __webpack_require__(20);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22viewport\x22]}\x0avar external_this_wp_viewport_ = __webpack_require__(40);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22data\x22]}\x0avar external_this_wp_data_ = __webpack_require__(5);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\x0avar slicedToArray = __webpack_require__(28);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\x0avar defineProperty = __webpack_require__(15);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread.js\x0avar objectSpread = __webpack_require__(7);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js\x0avar esm_typeof = __webpack_require__(32);\x0a\x0a// EXTERNAL MODULE: ./node_modules/redux-optimist/index.js\x0avar redux_optimist = __webpack_require__(62);\x0avar redux_optimist_default = /*#__PURE__*/__webpack_require__.n(redux_optimist);\x0a\x0a// EXTERNAL MODULE: external \x22lodash\x22\x0avar external_lodash_ = __webpack_require__(2);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22url\x22]}\x0avar external_this_wp_url_ = __webpack_require__(25);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/store/defaults.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0avar PREFERENCES_DEFAULTS = {\x0a  isPublishSidebarEnabled: true\x0a};\x0a/**\x0a * Default initial edits state.\x0a *\x0a * @type {Object}\x0a */\x0a\x0avar INITIAL_EDITS_DEFAULTS = {};\x0a/**\x0a * The default post editor settings\x0a *\x0a *  allowedBlockTypes  boolean|Array Allowed block types\x0a *  richEditingEnabled boolean       Whether rich editing is enabled or not\x0a *  enableCustomFields boolean       Whether the WordPress custom fields are enabled or not\x0a *  autosaveInterval   number        Autosave Interval\x0a *  availableTemplates array?        The available post templates\x0a *  disablePostFormats boolean       Whether or not the post formats are disabled\x0a *  allowedMimeTypes   array?        List of allowed mime types and file extensions\x0a *  maxUploadFileSize  number        Maximum upload file size\x0a */\x0a\x0avar EDITOR_SETTINGS_DEFAULTS = Object(objectSpread[\x22a\x22 /* default */])({}, external_this_wp_blockEditor_[\x22SETTINGS_DEFAULTS\x22], {\x0a  richEditingEnabled: true,\x0a  enableCustomFields: false\x0a});\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/store/constants.js\x0a/**\x0a * Set of post properties for which edits should assume a merging behavior,\x0a * assuming an object value.\x0a *\x0a * @type {Set}\x0a */\x0avar EDIT_MERGE_PROPERTIES = new Set([\x27meta\x27]);\x0a/**\x0a * Constant for the store module (or reducer) key.\x0a * @type {string}\x0a */\x0a\x0avar STORE_KEY = \x27core/editor\x27;\x0avar POST_UPDATE_TRANSACTION_ID = \x27post-update\x27;\x0avar SAVE_POST_NOTICE_ID = \x27SAVE_POST_NOTICE_ID\x27;\x0avar TRASH_POST_NOTICE_ID = \x27TRASH_POST_NOTICE_ID\x27;\x0avar PERMALINK_POSTNAME_REGEX = /%(?:postname|pagename)%/;\x0avar ONE_MINUTE_IN_MS = 60 * 1000;\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/utils/with-change-detection/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * Higher-order reducer creator for tracking changes to state over time. The\x0a * returned reducer will include a `isDirty` property on the object reflecting\x0a * whether the original reference of the reducer has changed.\x0a *\x0a * @param {?Object} options             Optional options.\x0a * @param {?Array}  options.ignoreTypes Action types upon which to skip check.\x0a * @param {?Array}  options.resetTypes  Action types upon which to reset dirty.\x0a *\x0a * @return {Function} Higher-order reducer.\x0a */\x0a\x0avar with_change_detection_withChangeDetection = function withChangeDetection() {\x0a  var options = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a  return function (reducer) {\x0a    return function (state, action) {\x0a      var nextState = reducer(state, action); // Reset at:\x0a      //  - Initial state\x0a      //  - Reset types\x0a\x0a      var isReset = state === undefined || Object(external_lodash_[\x22includes\x22])(options.resetTypes, action.type);\x0a      var isChanging = state !== nextState; // If not intending to update dirty flag, return early and avoid clone.\x0a\x0a      if (!isChanging && !isReset) {\x0a        return state;\x0a      } // Avoid mutating state, unless it\x27s already changing by original\x0a      // reducer and not initial.\x0a\x0a\x0a      if (!isChanging || state === undefined) {\x0a        nextState = Object(objectSpread[\x22a\x22 /* default */])({}, nextState);\x0a      }\x0a\x0a      var isIgnored = Object(external_lodash_[\x22includes\x22])(options.ignoreTypes, action.type);\x0a\x0a      if (isIgnored) {\x0a        // Preserve the original value if ignored.\x0a        nextState.isDirty = state.isDirty;\x0a      } else {\x0a        nextState.isDirty = !isReset && isChanging;\x0a      }\x0a\x0a      return nextState;\x0a    };\x0a  };\x0a};\x0a\x0a/* harmony default export */ var with_change_detection = (with_change_detection_withChangeDetection);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules\x0avar toConsumableArray = __webpack_require__(17);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/utils/with-history/index.js\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * Default options for withHistory reducer enhancer. Refer to withHistory\x0a * documentation for options explanation.\x0a *\x0a * @see withHistory\x0a *\x0a * @type {Object}\x0a */\x0a\x0avar DEFAULT_OPTIONS = {\x0a  resetTypes: [],\x0a  ignoreTypes: [],\x0a  shouldOverwriteState: function shouldOverwriteState() {\x0a    return false;\x0a  }\x0a};\x0a/**\x0a * Higher-order reducer creator which transforms the result of the original\x0a * reducer into an object tracking its own history (past, present, future).\x0a *\x0a * @param {?Object}   options                      Optional options.\x0a * @param {?Array}    options.resetTypes           Action types upon which to\x0a *                                                 clear past.\x0a * @param {?Array}    options.ignoreTypes          Action types upon which to\x0a *                                                 avoid history tracking.\x0a * @param {?Function} options.shouldOverwriteState Function receiving last and\x0a *                                                 current actions, returning\x0a *                                                 boolean indicating whether\x0a *                                                 present should be merged,\x0a *                                                 rather than add undo level.\x0a *\x0a * @return {Function} Higher-order reducer.\x0a */\x0a\x0avar with_history_withHistory = function withHistory() {\x0a  var options = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a  return function (reducer) {\x0a    options = Object(objectSpread[\x22a\x22 /* default */])({}, DEFAULT_OPTIONS, options); // `ignoreTypes` is simply a convenience for `shouldOverwriteState`\x0a\x0a    options.shouldOverwriteState = Object(external_lodash_[\x22overSome\x22])([options.shouldOverwriteState, function (action) {\x0a      return Object(external_lodash_[\x22includes\x22])(options.ignoreTypes, action.type);\x0a    }]);\x0a    var initialState = {\x0a      past: [],\x0a      present: reducer(undefined, {}),\x0a      future: [],\x0a      lastAction: null,\x0a      shouldCreateUndoLevel: false\x0a    };\x0a    var _options = options,\x0a        _options$resetTypes = _options.resetTypes,\x0a        resetTypes = _options$resetTypes === void 0 ? [] : _options$resetTypes,\x0a        _options$shouldOverwr = _options.shouldOverwriteState,\x0a        shouldOverwriteState = _options$shouldOverwr === void 0 ? function () {\x0a      return false;\x0a    } : _options$shouldOverwr;\x0a    return function () {\x0a      var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : initialState;\x0a      var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a      var past = state.past,\x0a          present = state.present,\x0a          future = state.future,\x0a          lastAction = state.lastAction,\x0a          shouldCreateUndoLevel = state.shouldCreateUndoLevel;\x0a      var previousAction = lastAction;\x0a\x0a      switch (action.type) {\x0a        case \x27UNDO\x27:\x0a          // Can\x27t undo if no past.\x0a          if (!past.length) {\x0a            return state;\x0a          }\x0a\x0a          return {\x0a            past: Object(external_lodash_[\x22dropRight\x22])(past),\x0a            present: Object(external_lodash_[\x22last\x22])(past),\x0a            future: [present].concat(Object(toConsumableArray[\x22a\x22 /* default */])(future)),\x0a            lastAction: null,\x0a            shouldCreateUndoLevel: false\x0a          };\x0a\x0a        case \x27REDO\x27:\x0a          // Can\x27t redo if no future.\x0a          if (!future.length) {\x0a            return state;\x0a          }\x0a\x0a          return {\x0a            past: [].concat(Object(toConsumableArray[\x22a\x22 /* default */])(past), [present]),\x0a            present: Object(external_lodash_[\x22first\x22])(future),\x0a            future: Object(external_lodash_[\x22drop\x22])(future),\x0a            lastAction: null,\x0a            shouldCreateUndoLevel: false\x0a          };\x0a\x0a        case \x27CREATE_UNDO_LEVEL\x27:\x0a          return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a            lastAction: null,\x0a            shouldCreateUndoLevel: true\x0a          });\x0a      }\x0a\x0a      var nextPresent = reducer(present, action);\x0a\x0a      if (Object(external_lodash_[\x22includes\x22])(resetTypes, action.type)) {\x0a        return {\x0a          past: [],\x0a          present: nextPresent,\x0a          future: [],\x0a          lastAction: null,\x0a          shouldCreateUndoLevel: false\x0a        };\x0a      }\x0a\x0a      if (present === nextPresent) {\x0a        return state;\x0a      }\x0a\x0a      var nextPast = past; // The `lastAction` property is used to compare actions in the\x0a      // `shouldOverwriteState` option. If an action should be ignored, do not\x0a      // submit that action as the last action, otherwise the ability to\x0a      // compare subsequent actions will break.\x0a\x0a      var lastActionToSubmit = previousAction;\x0a\x0a      if (shouldCreateUndoLevel || !past.length || !shouldOverwriteState(action, previousAction)) {\x0a        nextPast = [].concat(Object(toConsumableArray[\x22a\x22 /* default */])(past), [present]);\x0a        lastActionToSubmit = action;\x0a      }\x0a\x0a      return {\x0a        past: nextPast,\x0a        present: nextPresent,\x0a        future: [],\x0a        shouldCreateUndoLevel: false,\x0a        lastAction: lastActionToSubmit\x0a      };\x0a    };\x0a  };\x0a};\x0a\x0a/* harmony default export */ var with_history = (with_history_withHistory);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/store/reducer.js\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Returns a post attribute value, flattening nested rendered content using its\x0a * raw value in place of its original object form.\x0a *\x0a * @param {*} value Original value.\x0a *\x0a * @return {*} Raw value.\x0a */\x0a\x0afunction getPostRawValue(value) {\x0a  if (value && \x27object\x27 === Object(esm_typeof[\x22a\x22 /* default */])(value) && \x27raw\x27 in value) {\x0a    return value.raw;\x0a  }\x0a\x0a  return value;\x0a}\x0a/**\x0a * Returns an object against which it is safe to perform mutating operations,\x0a * given the original object and its current working copy.\x0a *\x0a * @param {Object} original Original object.\x0a * @param {Object} working  Working object.\x0a *\x0a * @return {Object} Mutation-safe object.\x0a */\x0a\x0afunction getMutateSafeObject(original, working) {\x0a  if (original === working) {\x0a    return Object(objectSpread[\x22a\x22 /* default */])({}, original);\x0a  }\x0a\x0a  return working;\x0a}\x0a/**\x0a * Returns true if the two object arguments have the same keys, or false\x0a * otherwise.\x0a *\x0a * @param {Object} a First object.\x0a * @param {Object} b Second object.\x0a *\x0a * @return {boolean} Whether the two objects have the same keys.\x0a */\x0a\x0a\x0afunction hasSameKeys(a, b) {\x0a  return Object(external_lodash_[\x22isEqual\x22])(Object(external_lodash_[\x22keys\x22])(a), Object(external_lodash_[\x22keys\x22])(b));\x0a}\x0a/**\x0a * Returns true if, given the currently dispatching action and the previously\x0a * dispatched action, the two actions are editing the same post property, or\x0a * false otherwise.\x0a *\x0a * @param {Object} action         Currently dispatching action.\x0a * @param {Object} previousAction Previously dispatched action.\x0a *\x0a * @return {boolean} Whether actions are updating the same post property.\x0a */\x0a\x0afunction isUpdatingSamePostProperty(action, previousAction) {\x0a  return action.type === \x27EDIT_POST\x27 && hasSameKeys(action.edits, previousAction.edits);\x0a}\x0a/**\x0a * Returns true if, given the currently dispatching action and the previously\x0a * dispatched action, the two actions are modifying the same property such that\x0a * undo history should be batched.\x0a *\x0a * @param {Object} action         Currently dispatching action.\x0a * @param {Object} previousAction Previously dispatched action.\x0a *\x0a * @return {boolean} Whether to overwrite present state.\x0a */\x0a\x0afunction reducer_shouldOverwriteState(action, previousAction) {\x0a  if (action.type === \x27RESET_EDITOR_BLOCKS\x27) {\x0a    return !action.shouldCreateUndoLevel;\x0a  }\x0a\x0a  if (!previousAction || action.type !== previousAction.type) {\x0a    return false;\x0a  }\x0a\x0a  return isUpdatingSamePostProperty(action, previousAction);\x0a}\x0a/**\x0a * Undoable reducer returning the editor post state, including blocks parsed\x0a * from current HTML markup.\x0a *\x0a * Handles the following state keys:\x0a *  - edits: an object describing changes to be made to the current post, in\x0a *           the format accepted by the WP REST API\x0a *  - blocks: post content blocks\x0a *\x0a * @param {Object} state  Current state.\x0a * @param {Object} action Dispatched action.\x0a *\x0a * @returns {Object} Updated state.\x0a */\x0a\x0avar editor = Object(external_lodash_[\x22flow\x22])([external_this_wp_data_[\x22combineReducers\x22], with_history({\x0a  resetTypes: [\x27SETUP_EDITOR_STATE\x27],\x0a  ignoreTypes: [\x27RESET_POST\x27, \x27UPDATE_POST\x27],\x0a  shouldOverwriteState: reducer_shouldOverwriteState\x0a})])({\x0a  // Track whether changes exist, resetting at each post save. Relies on\x0a  // editor initialization firing post reset as an effect.\x0a  blocks: with_change_detection({\x0a    resetTypes: [\x27SETUP_EDITOR_STATE\x27, \x27REQUEST_POST_UPDATE_START\x27]\x0a  })(function () {\x0a    var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {\x0a      value: []\x0a    };\x0a    var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a    switch (action.type) {\x0a      case \x27RESET_EDITOR_BLOCKS\x27:\x0a        if (action.blocks === state.value) {\x0a          return state;\x0a        }\x0a\x0a        return {\x0a          value: action.blocks\x0a        };\x0a    }\x0a\x0a    return state;\x0a  }),\x0a  edits: function edits() {\x0a    var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a    var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a    switch (action.type) {\x0a      case \x27EDIT_POST\x27:\x0a        return Object(external_lodash_[\x22reduce\x22])(action.edits, function (result, value, key) {\x0a          // Only assign into result if not already same value\x0a          if (value !== state[key]) {\x0a            result = getMutateSafeObject(state, result);\x0a\x0a            if (EDIT_MERGE_PROPERTIES.has(key)) {\x0a              // Merge properties should assign to current value.\x0a              result[key] = Object(objectSpread[\x22a\x22 /* default */])({}, result[key], value);\x0a            } else {\x0a              // Otherwise override.\x0a              result[key] = value;\x0a            }\x0a          }\x0a\x0a          return result;\x0a        }, state);\x0a\x0a      case \x27UPDATE_POST\x27:\x0a      case \x27RESET_POST\x27:\x0a        var getCanonicalValue = action.type === \x27UPDATE_POST\x27 ? function (key) {\x0a          return action.edits[key];\x0a        } : function (key) {\x0a          return getPostRawValue(action.post[key]);\x0a        };\x0a        return Object(external_lodash_[\x22reduce\x22])(state, function (result, value, key) {\x0a          if (!Object(external_lodash_[\x22isEqual\x22])(value, getCanonicalValue(key))) {\x0a            return result;\x0a          }\x0a\x0a          result = getMutateSafeObject(state, result);\x0a          delete result[key];\x0a          return result;\x0a        }, state);\x0a\x0a      case \x27RESET_EDITOR_BLOCKS\x27:\x0a        if (\x27content\x27 in state) {\x0a          return Object(external_lodash_[\x22omit\x22])(state, \x27content\x27);\x0a        }\x0a\x0a        return state;\x0a    }\x0a\x0a    return state;\x0a  }\x0a});\x0a/**\x0a * Reducer returning the initial edits state. With matching shape to that of\x0a * `editor.edits`, the initial edits are those applied programmatically, are\x0a * not considered in prompting the user for unsaved changes, and are included\x0a * in (and reset by) the next save payload.\x0a *\x0a * @param {Object} state  Current state.\x0a * @param {Object} action Action object.\x0a *\x0a * @return {Object} Next state.\x0a */\x0a\x0afunction initialEdits() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_EDITS_DEFAULTS;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27SETUP_EDITOR\x27:\x0a      if (!action.edits) {\x0a        break;\x0a      }\x0a\x0a      return action.edits;\x0a\x0a    case \x27SETUP_EDITOR_STATE\x27:\x0a      if (\x27content\x27 in state) {\x0a        return Object(external_lodash_[\x22omit\x22])(state, \x27content\x27);\x0a      }\x0a\x0a      return state;\x0a\x0a    case \x27UPDATE_POST\x27:\x0a      return Object(external_lodash_[\x22reduce\x22])(action.edits, function (result, value, key) {\x0a        if (!result.hasOwnProperty(key)) {\x0a          return result;\x0a        }\x0a\x0a        result = getMutateSafeObject(state, result);\x0a        delete result[key];\x0a        return result;\x0a      }, state);\x0a\x0a    case \x27RESET_POST\x27:\x0a      return INITIAL_EDITS_DEFAULTS;\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning the last-known state of the current post, in the format\x0a * returned by the WP REST API.\x0a *\x0a * @param {Object} state  Current state.\x0a * @param {Object} action Dispatched action.\x0a *\x0a * @return {Object} Updated state.\x0a */\x0a\x0afunction currentPost() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27SETUP_EDITOR_STATE\x27:\x0a    case \x27RESET_POST\x27:\x0a    case \x27UPDATE_POST\x27:\x0a      var post;\x0a\x0a      if (action.post) {\x0a        post = action.post;\x0a      } else if (action.edits) {\x0a        post = Object(objectSpread[\x22a\x22 /* default */])({}, state, action.edits);\x0a      } else {\x0a        return state;\x0a      }\x0a\x0a      return Object(external_lodash_[\x22mapValues\x22])(post, getPostRawValue);\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning typing state.\x0a *\x0a * @param {boolean} state  Current state.\x0a * @param {Object}  action Dispatched action.\x0a *\x0a * @return {boolean} Updated state.\x0a */\x0a\x0afunction isTyping() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : false;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27START_TYPING\x27:\x0a      return true;\x0a\x0a    case \x27STOP_TYPING\x27:\x0a      return false;\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning whether the caret is within formatted text.\x0a *\x0a * @param {boolean} state  Current state.\x0a * @param {Object}  action Dispatched action.\x0a *\x0a * @return {boolean} Updated state.\x0a */\x0a\x0afunction isCaretWithinFormattedText() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : false;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27ENTER_FORMATTED_TEXT\x27:\x0a      return true;\x0a\x0a    case \x27EXIT_FORMATTED_TEXT\x27:\x0a      return false;\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning the block selection\x27s state.\x0a *\x0a * @param {Object} state  Current state.\x0a * @param {Object} action Dispatched action.\x0a *\x0a * @return {Object} Updated state.\x0a */\x0a\x0afunction blockSelection() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {\x0a    start: null,\x0a    end: null,\x0a    isMultiSelecting: false,\x0a    isEnabled: true,\x0a    initialPosition: null\x0a  };\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27CLEAR_SELECTED_BLOCK\x27:\x0a      if (state.start === null && state.end === null && !state.isMultiSelecting) {\x0a        return state;\x0a      }\x0a\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a        start: null,\x0a        end: null,\x0a        isMultiSelecting: false,\x0a        initialPosition: null\x0a      });\x0a\x0a    case \x27START_MULTI_SELECT\x27:\x0a      if (state.isMultiSelecting) {\x0a        return state;\x0a      }\x0a\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a        isMultiSelecting: true,\x0a        initialPosition: null\x0a      });\x0a\x0a    case \x27STOP_MULTI_SELECT\x27:\x0a      if (!state.isMultiSelecting) {\x0a        return state;\x0a      }\x0a\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a        isMultiSelecting: false,\x0a        initialPosition: null\x0a      });\x0a\x0a    case \x27MULTI_SELECT\x27:\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a        start: action.start,\x0a        end: action.end,\x0a        initialPosition: null\x0a      });\x0a\x0a    case \x27SELECT_BLOCK\x27:\x0a      if (action.clientId === state.start && action.clientId === state.end) {\x0a        return state;\x0a      }\x0a\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a        start: action.clientId,\x0a        end: action.clientId,\x0a        initialPosition: action.initialPosition\x0a      });\x0a\x0a    case \x27INSERT_BLOCKS\x27:\x0a      {\x0a        if (action.updateSelection) {\x0a          return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a            start: action.blocks[0].clientId,\x0a            end: action.blocks[0].clientId,\x0a            initialPosition: null,\x0a            isMultiSelecting: false\x0a          });\x0a        }\x0a\x0a        return state;\x0a      }\x0a\x0a    case \x27REMOVE_BLOCKS\x27:\x0a      if (!action.clientIds || !action.clientIds.length || action.clientIds.indexOf(state.start) === -1) {\x0a        return state;\x0a      }\x0a\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a        start: null,\x0a        end: null,\x0a        initialPosition: null,\x0a        isMultiSelecting: false\x0a      });\x0a\x0a    case \x27REPLACE_BLOCKS\x27:\x0a      if (action.clientIds.indexOf(state.start) === -1) {\x0a        return state;\x0a      } // If there are replacement blocks, assign last block as the next\x0a      // selected block, otherwise set to null.\x0a\x0a\x0a      var lastBlock = Object(external_lodash_[\x22last\x22])(action.blocks);\x0a      var nextSelectedBlockClientId = lastBlock ? lastBlock.clientId : null;\x0a\x0a      if (nextSelectedBlockClientId === state.start && nextSelectedBlockClientId === state.end) {\x0a        return state;\x0a      }\x0a\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a        start: nextSelectedBlockClientId,\x0a        end: nextSelectedBlockClientId,\x0a        initialPosition: null,\x0a        isMultiSelecting: false\x0a      });\x0a\x0a    case \x27TOGGLE_SELECTION\x27:\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a        isEnabled: action.isSelectionEnabled\x0a      });\x0a  }\x0a\x0a  return state;\x0a}\x0afunction blocksMode() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  if (action.type === \x27TOGGLE_BLOCK_MODE\x27) {\x0a    var clientId = action.clientId;\x0a    return Object(objectSpread[\x22a\x22 /* default */])({}, state, Object(defineProperty[\x22a\x22 /* default */])({}, clientId, state[clientId] && state[clientId] === \x27html\x27 ? \x27visual\x27 : \x27html\x27));\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning the block insertion point visibility, either null if there\x0a * is not an explicit insertion point assigned, or an object of its `index` and\x0a * `rootClientId`.\x0a *\x0a * @param {Object} state  Current state.\x0a * @param {Object} action Dispatched action.\x0a *\x0a * @return {Object} Updated state.\x0a */\x0a\x0afunction insertionPoint() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : null;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27SHOW_INSERTION_POINT\x27:\x0a      var rootClientId = action.rootClientId,\x0a          index = action.index;\x0a      return {\x0a        rootClientId: rootClientId,\x0a        index: index\x0a      };\x0a\x0a    case \x27HIDE_INSERTION_POINT\x27:\x0a      return null;\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning whether the post blocks match the defined template or not.\x0a *\x0a * @param {Object} state  Current state.\x0a * @param {Object} action Dispatched action.\x0a *\x0a * @return {boolean} Updated state.\x0a */\x0a\x0afunction reducer_template() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {\x0a    isValid: true\x0a  };\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27SET_TEMPLATE_VALIDITY\x27:\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a        isValid: action.isValid\x0a      });\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning the user preferences.\x0a *\x0a * @param {Object}  state                 Current state.\x0a * @param {Object}  action                Dispatched action.\x0a *\x0a * @return {string} Updated state.\x0a */\x0a\x0afunction preferences() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : PREFERENCES_DEFAULTS;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27ENABLE_PUBLISH_SIDEBAR\x27:\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a        isPublishSidebarEnabled: true\x0a      });\x0a\x0a    case \x27DISABLE_PUBLISH_SIDEBAR\x27:\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, {\x0a        isPublishSidebarEnabled: false\x0a      });\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning current network request state (whether a request to\x0a * the WP REST API is in progress, successful, or failed).\x0a *\x0a * @param {Object} state  Current state.\x0a * @param {Object} action Dispatched action.\x0a *\x0a * @return {Object} Updated state.\x0a */\x0a\x0afunction saving() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27REQUEST_POST_UPDATE_START\x27:\x0a      return {\x0a        requesting: true,\x0a        successful: false,\x0a        error: null,\x0a        options: action.options || {}\x0a      };\x0a\x0a    case \x27REQUEST_POST_UPDATE_SUCCESS\x27:\x0a      return {\x0a        requesting: false,\x0a        successful: true,\x0a        error: null,\x0a        options: action.options || {}\x0a      };\x0a\x0a    case \x27REQUEST_POST_UPDATE_FAILURE\x27:\x0a      return {\x0a        requesting: false,\x0a        successful: false,\x0a        error: action.error,\x0a        options: action.options || {}\x0a      };\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Post Lock State.\x0a *\x0a * @typedef {Object} PostLockState\x0a *\x0a * @property {boolean} isLocked       Whether the post is locked.\x0a * @property {?boolean} isTakeover     Whether the post editing has been taken over.\x0a * @property {?boolean} activePostLock Active post lock value.\x0a * @property {?Object}  user           User that took over the post.\x0a */\x0a\x0a/**\x0a * Reducer returning the post lock status.\x0a *\x0a * @param {PostLockState} state  Current state.\x0a * @param {Object} action Dispatched action.\x0a *\x0a * @return {PostLockState} Updated state.\x0a */\x0a\x0afunction postLock() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {\x0a    isLocked: false\x0a  };\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27UPDATE_POST_LOCK\x27:\x0a      return action.lock;\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Post saving lock.\x0a *\x0a * When post saving is locked, the post cannot be published or updated.\x0a *\x0a * @param {PostSavingLockState} state  Current state.\x0a * @param {Object}              action Dispatched action.\x0a *\x0a * @return {PostLockState} Updated state.\x0a */\x0a\x0afunction postSavingLock() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27LOCK_POST_SAVING\x27:\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, Object(defineProperty[\x22a\x22 /* default */])({}, action.lockName, true));\x0a\x0a    case \x27UNLOCK_POST_SAVING\x27:\x0a      return Object(external_lodash_[\x22omit\x22])(state, action.lockName);\x0a  }\x0a\x0a  return state;\x0a}\x0avar reducer_reusableBlocks = Object(external_this_wp_data_[\x22combineReducers\x22])({\x0a  data: function data() {\x0a    var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a    var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a    switch (action.type) {\x0a      case \x27RECEIVE_REUSABLE_BLOCKS\x27:\x0a        {\x0a          return Object(external_lodash_[\x22reduce\x22])(action.results, function (nextState, result) {\x0a            var _result$reusableBlock = result.reusableBlock,\x0a                id = _result$reusableBlock.id,\x0a                title = _result$reusableBlock.title;\x0a            var clientId = result.parsedBlock.clientId;\x0a            var value = {\x0a              clientId: clientId,\x0a              title: title\x0a            };\x0a\x0a            if (!Object(external_lodash_[\x22isEqual\x22])(nextState[id], value)) {\x0a              nextState = getMutateSafeObject(state, nextState);\x0a              nextState[id] = value;\x0a            }\x0a\x0a            return nextState;\x0a          }, state);\x0a        }\x0a\x0a      case \x27UPDATE_REUSABLE_BLOCK_TITLE\x27:\x0a        {\x0a          var id = action.id,\x0a              title = action.title;\x0a\x0a          if (!state[id] || state[id].title === title) {\x0a            return state;\x0a          }\x0a\x0a          return Object(objectSpread[\x22a\x22 /* default */])({}, state, Object(defineProperty[\x22a\x22 /* default */])({}, id, Object(objectSpread[\x22a\x22 /* default */])({}, state[id], {\x0a            title: title\x0a          })));\x0a        }\x0a\x0a      case \x27SAVE_REUSABLE_BLOCK_SUCCESS\x27:\x0a        {\x0a          var _id = action.id,\x0a              updatedId = action.updatedId; // If a temporary reusable block is saved, we swap the temporary id with the final one\x0a\x0a          if (_id === updatedId) {\x0a            return state;\x0a          }\x0a\x0a          var value = state[_id];\x0a          return Object(objectSpread[\x22a\x22 /* default */])({}, Object(external_lodash_[\x22omit\x22])(state, _id), Object(defineProperty[\x22a\x22 /* default */])({}, updatedId, value));\x0a        }\x0a\x0a      case \x27REMOVE_REUSABLE_BLOCK\x27:\x0a        {\x0a          var _id2 = action.id;\x0a          return Object(external_lodash_[\x22omit\x22])(state, _id2);\x0a        }\x0a    }\x0a\x0a    return state;\x0a  },\x0a  isFetching: function isFetching() {\x0a    var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a    var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a    switch (action.type) {\x0a      case \x27FETCH_REUSABLE_BLOCKS\x27:\x0a        {\x0a          var id = action.id;\x0a\x0a          if (!id) {\x0a            return state;\x0a          }\x0a\x0a          return Object(objectSpread[\x22a\x22 /* default */])({}, state, Object(defineProperty[\x22a\x22 /* default */])({}, id, true));\x0a        }\x0a\x0a      case \x27FETCH_REUSABLE_BLOCKS_SUCCESS\x27:\x0a      case \x27FETCH_REUSABLE_BLOCKS_FAILURE\x27:\x0a        {\x0a          var _id3 = action.id;\x0a          return Object(external_lodash_[\x22omit\x22])(state, _id3);\x0a        }\x0a    }\x0a\x0a    return state;\x0a  },\x0a  isSaving: function isSaving() {\x0a    var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a    var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a    switch (action.type) {\x0a      case \x27SAVE_REUSABLE_BLOCK\x27:\x0a        return Object(objectSpread[\x22a\x22 /* default */])({}, state, Object(defineProperty[\x22a\x22 /* default */])({}, action.id, true));\x0a\x0a      case \x27SAVE_REUSABLE_BLOCK_SUCCESS\x27:\x0a      case \x27SAVE_REUSABLE_BLOCK_FAILURE\x27:\x0a        {\x0a          var id = action.id;\x0a          return Object(external_lodash_[\x22omit\x22])(state, id);\x0a        }\x0a    }\x0a\x0a    return state;\x0a  }\x0a});\x0a/**\x0a * Reducer returning an object where each key is a block client ID, its value\x0a * representing the settings for its nested blocks.\x0a *\x0a * @param {Object} state  Current state.\x0a * @param {Object} action Dispatched action.\x0a *\x0a * @return {Object} Updated state.\x0a */\x0a\x0avar reducer_blockListSettings = function blockListSettings() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    // Even if the replaced blocks have the same client ID, our logic\x0a    // should correct the state.\x0a    case \x27REPLACE_BLOCKS\x27:\x0a    case \x27REMOVE_BLOCKS\x27:\x0a      {\x0a        return Object(external_lodash_[\x22omit\x22])(state, action.clientIds);\x0a      }\x0a\x0a    case \x27UPDATE_BLOCK_LIST_SETTINGS\x27:\x0a      {\x0a        var clientId = action.clientId;\x0a\x0a        if (!action.settings) {\x0a          if (state.hasOwnProperty(clientId)) {\x0a            return Object(external_lodash_[\x22omit\x22])(state, clientId);\x0a          }\x0a\x0a          return state;\x0a        }\x0a\x0a        if (Object(external_lodash_[\x22isEqual\x22])(state[clientId], action.settings)) {\x0a          return state;\x0a        }\x0a\x0a        return Object(objectSpread[\x22a\x22 /* default */])({}, state, Object(defineProperty[\x22a\x22 /* default */])({}, clientId, action.settings));\x0a      }\x0a  }\x0a\x0a  return state;\x0a};\x0a/**\x0a * Reducer returning the most recent autosave.\x0a *\x0a * @param  {Object} state  The autosave object.\x0a * @param  {Object} action Dispatched action.\x0a *\x0a * @return {Object} Updated state.\x0a */\x0a\x0afunction autosave() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : null;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27RESET_AUTOSAVE\x27:\x0a      var post = action.post;\x0a\x0a      var _map = [\x27title\x27, \x27excerpt\x27, \x27content\x27].map(function (field) {\x0a        return getPostRawValue(post[field]);\x0a      }),\x0a          _map2 = Object(slicedToArray[\x22a\x22 /* default */])(_map, 3),\x0a          title = _map2[0],\x0a          excerpt = _map2[1],\x0a          content = _map2[2];\x0a\x0a      return {\x0a        title: title,\x0a        excerpt: excerpt,\x0a        content: content\x0a      };\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning the post preview link.\x0a *\x0a * @param {string?} state  The preview link\x0a * @param {Object}  action Dispatched action.\x0a *\x0a * @return {string?} Updated state.\x0a */\x0a\x0afunction reducer_previewLink() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : null;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27REQUEST_POST_UPDATE_SUCCESS\x27:\x0a      if (action.post.preview_link) {\x0a        return action.post.preview_link;\x0a      } else if (action.post.link) {\x0a        return Object(external_this_wp_url_[\x22addQueryArgs\x22])(action.post.link, {\x0a          preview: true\x0a        });\x0a      }\x0a\x0a      return state;\x0a\x0a    case \x27REQUEST_POST_UPDATE_START\x27:\x0a      // Invalidate known preview link when autosave starts.\x0a      if (state && action.options.isPreview) {\x0a        return null;\x0a      }\x0a\x0a      break;\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning whether the editor is ready to be rendered.\x0a * The editor is considered ready to be rendered once\x0a * the post object is loaded properly and the initial blocks parsed.\x0a *\x0a * @param {boolean} state\x0a * @param {Object} action\x0a *\x0a * @return {boolean} Updated state.\x0a */\x0a\x0afunction reducer_isReady() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : false;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27SETUP_EDITOR_STATE\x27:\x0a      return true;\x0a  }\x0a\x0a  return state;\x0a}\x0a/**\x0a * Reducer returning the post editor setting.\x0a *\x0a * @param {Object} state  Current state.\x0a * @param {Object} action Dispatched action.\x0a *\x0a * @return {Object} Updated state.\x0a */\x0a\x0afunction reducer_editorSettings() {\x0a  var state = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : EDITOR_SETTINGS_DEFAULTS;\x0a  var action = arguments.length \x3e 1 ? arguments[1] : undefined;\x0a\x0a  switch (action.type) {\x0a    case \x27UPDATE_EDITOR_SETTINGS\x27:\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, state, action.settings);\x0a  }\x0a\x0a  return state;\x0a}\x0a/* harmony default export */ var store_reducer = (redux_optimist_default()(Object(external_this_wp_data_[\x22combineReducers\x22])({\x0a  editor: editor,\x0a  initialEdits: initialEdits,\x0a  currentPost: currentPost,\x0a  preferences: preferences,\x0a  saving: saving,\x0a  postLock: postLock,\x0a  reusableBlocks: reducer_reusableBlocks,\x0a  template: reducer_template,\x0a  autosave: autosave,\x0a  previewLink: reducer_previewLink,\x0a  postSavingLock: postSavingLock,\x0a  isReady: reducer_isReady,\x0a  editorSettings: reducer_editorSettings\x0a})));\x0a\x0a// EXTERNAL MODULE: ./node_modules/refx/refx.js\x0avar refx = __webpack_require__(70);\x0avar refx_default = /*#__PURE__*/__webpack_require__.n(refx);\x0a\x0a// EXTERNAL MODULE: ./node_modules/redux-multi/lib/index.js\x0avar lib = __webpack_require__(97);\x0avar lib_default = /*#__PURE__*/__webpack_require__.n(lib);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\x0avar regenerator = __webpack_require__(23);\x0avar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22apiFetch\x22]}\x0avar external_this_wp_apiFetch_ = __webpack_require__(33);\x0avar external_this_wp_apiFetch_default = /*#__PURE__*/__webpack_require__.n(external_this_wp_apiFetch_);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/store/controls.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/**\x0a * Dispatches a control action for triggering an api fetch call.\x0a *\x0a * @param {Object} request Arguments for the fetch request.\x0a *\x0a * @return {Object} control descriptor.\x0a */\x0a\x0afunction apiFetch(request) {\x0a  return {\x0a    type: \x27API_FETCH\x27,\x0a    request: request\x0a  };\x0a}\x0a/**\x0a * Dispatches a control action for triggering a registry select.\x0a *\x0a * @param {string} storeKey\x0a * @param {string} selectorName\x0a * @param {Array}  args Arguments for the select.\x0a *\x0a * @return {Object} control descriptor.\x0a */\x0a\x0afunction controls_select(storeKey, selectorName) {\x0a  for (var _len = arguments.length, args = new Array(_len \x3e 2 ? _len - 2 : 0), _key = 2; _key \x3c _len; _key++) {\x0a    args[_key - 2] = arguments[_key];\x0a  }\x0a\x0a  return {\x0a    type: \x27SELECT\x27,\x0a    storeKey: storeKey,\x0a    selectorName: selectorName,\x0a    args: args\x0a  };\x0a}\x0a/**\x0a * Dispatches a control action for triggering a registry select that has a\x0a * resolver.\x0a *\x0a * @param {string}  storeKey\x0a * @param {string}  selectorName\x0a * @param {Array}   args  Arguments for the select.\x0a *\x0a * @return {Object} control descriptor.\x0a */\x0a\x0afunction resolveSelect(storeKey, selectorName) {\x0a  for (var _len2 = arguments.length, args = new Array(_len2 \x3e 2 ? _len2 - 2 : 0), _key2 = 2; _key2 \x3c _len2; _key2++) {\x0a    args[_key2 - 2] = arguments[_key2];\x0a  }\x0a\x0a  return {\x0a    type: \x27RESOLVE_SELECT\x27,\x0a    storeKey: storeKey,\x0a    selectorName: selectorName,\x0a    args: args\x0a  };\x0a}\x0a/**\x0a * Dispatches a control action for triggering a registry dispatch.\x0a *\x0a * @param {string} storeKey\x0a * @param {string} actionName\x0a * @param {Array} args  Arguments for the dispatch action.\x0a *\x0a * @return {Object}  control descriptor.\x0a */\x0a\x0afunction controls_dispatch(storeKey, actionName) {\x0a  for (var _len3 = arguments.length, args = new Array(_len3 \x3e 2 ? _len3 - 2 : 0), _key3 = 2; _key3 \x3c _len3; _key3++) {\x0a    args[_key3 - 2] = arguments[_key3];\x0a  }\x0a\x0a  return {\x0a    type: \x27DISPATCH\x27,\x0a    storeKey: storeKey,\x0a    actionName: actionName,\x0a    args: args\x0a  };\x0a}\x0a/* harmony default export */ var controls = ({\x0a  API_FETCH: function API_FETCH(_ref) {\x0a    var request = _ref.request;\x0a    return external_this_wp_apiFetch_default()(request);\x0a  },\x0a  SELECT: Object(external_this_wp_data_[\x22createRegistryControl\x22])(function (registry) {\x0a    return function (_ref2) {\x0a      var _registry$select;\x0a\x0a      var storeKey = _ref2.storeKey,\x0a          selectorName = _ref2.selectorName,\x0a          args = _ref2.args;\x0a      return (_registry$select = registry.select(storeKey))[selectorName].apply(_registry$select, Object(toConsumableArray[\x22a\x22 /* default */])(args));\x0a    };\x0a  }),\x0a  DISPATCH: Object(external_this_wp_data_[\x22createRegistryControl\x22])(function (registry) {\x0a    return function (_ref3) {\x0a      var _registry$dispatch;\x0a\x0a      var storeKey = _ref3.storeKey,\x0a          actionName = _ref3.actionName,\x0a          args = _ref3.args;\x0a      return (_registry$dispatch = registry.dispatch(storeKey))[actionName].apply(_registry$dispatch, Object(toConsumableArray[\x22a\x22 /* default */])(args));\x0a    };\x0a  }),\x0a  RESOLVE_SELECT: Object(external_this_wp_data_[\x22createRegistryControl\x22])(function (registry) {\x0a    return function (_ref4) {\x0a      var storeKey = _ref4.storeKey,\x0a          selectorName = _ref4.selectorName,\x0a          args = _ref4.args;\x0a      return new Promise(function (resolve) {\x0a        var hasFinished = function hasFinished() {\x0a          return registry.select(\x27core/data\x27).hasFinishedResolution(storeKey, selectorName, args);\x0a        };\x0a\x0a        var getResult = function getResult() {\x0a          return registry.select(storeKey)[selectorName].apply(null, args);\x0a        }; // trigger the selector (to trigger the resolver)\x0a\x0a\x0a        var result = getResult();\x0a\x0a        if (hasFinished()) {\x0a          return resolve(result);\x0a        }\x0a\x0a        var unsubscribe = registry.subscribe(function () {\x0a          if (hasFinished()) {\x0a            unsubscribe();\x0a            resolve(getResult());\x0a          }\x0a        });\x0a      });\x0a    };\x0a  })\x0a});\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22i18n\x22]}\x0avar external_this_wp_i18n_ = __webpack_require__(1);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/store/utils/notice-builder.js\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a\x0a/**\x0a * Builds the arguments for a success notification dispatch.\x0a *\x0a * @param {Object} data Incoming data to build the arguments from.\x0a *\x0a * @return {Array} Arguments for dispatch. An empty array signals no\x0a *                 notification should be sent.\x0a */\x0a\x0afunction getNotificationArgumentsForSaveSuccess(data) {\x0a  var previousPost = data.previousPost,\x0a      post = data.post,\x0a      postType = data.postType; // Autosaves are neither shown a notice nor redirected.\x0a\x0a  if (Object(external_lodash_[\x22get\x22])(data.options, [\x27isAutosave\x27])) {\x0a    return [];\x0a  }\x0a\x0a  var publishStatus = [\x27publish\x27, \x27private\x27, \x27future\x27];\x0a  var isPublished = Object(external_lodash_[\x22includes\x22])(publishStatus, previousPost.status);\x0a  var willPublish = Object(external_lodash_[\x22includes\x22])(publishStatus, post.status);\x0a  var noticeMessage;\x0a  var shouldShowLink = Object(external_lodash_[\x22get\x22])(postType, [\x27viewable\x27], false);\x0a\x0a  if (!isPublished && !willPublish) {\x0a    // If saving a non-published post, don\x27t show notice.\x0a    noticeMessage = null;\x0a  } else if (isPublished && !willPublish) {\x0a    // If undoing publish status, show specific notice\x0a    noticeMessage = postType.labels.item_reverted_to_draft;\x0a    shouldShowLink = false;\x0a  } else if (!isPublished && willPublish) {\x0a    // If publishing or scheduling a post, show the corresponding\x0a    // publish message\x0a    noticeMessage = {\x0a      publish: postType.labels.item_published,\x0a      private: postType.labels.item_published_privately,\x0a      future: postType.labels.item_scheduled\x0a    }[post.status];\x0a  } else {\x0a    // Generic fallback notice\x0a    noticeMessage = postType.labels.item_updated;\x0a  }\x0a\x0a  if (noticeMessage) {\x0a    var actions = [];\x0a\x0a    if (shouldShowLink) {\x0a      actions.push({\x0a        label: postType.labels.view_item,\x0a        url: post.link\x0a      });\x0a    }\x0a\x0a    return [noticeMessage, {\x0a      id: SAVE_POST_NOTICE_ID,\x0a      actions: actions\x0a    }];\x0a  }\x0a\x0a  return [];\x0a}\x0a/**\x0a * Builds the fail notification arguments for dispatch.\x0a *\x0a * @param {Object} data Incoming data to build the arguments with.\x0a *\x0a * @return {Array} Arguments for dispatch. An empty array signals no\x0a *                 notification should be sent.\x0a */\x0a\x0afunction getNotificationArgumentsForSaveFail(data) {\x0a  var post = data.post,\x0a      edits = data.edits,\x0a      error = data.error;\x0a\x0a  if (error && \x27rest_autosave_no_changes\x27 === error.code) {\x0a    // Autosave requested a new autosave, but there were no changes. This shouldn\x27t\x0a    // result in an error notice for the user.\x0a    return [];\x0a  }\x0a\x0a  var publishStatus = [\x27publish\x27, \x27private\x27, \x27future\x27];\x0a  var isPublished = publishStatus.indexOf(post.status) !== -1; // If the post was being published, we show the corresponding publish error message\x0a  // Unless we publish an \x22updating failed\x22 message\x0a\x0a  var messages = {\x0a    publish: Object(external_this_wp_i18n_[\x22__\x22])(\x27Publishing failed\x27),\x0a    private: Object(external_this_wp_i18n_[\x22__\x22])(\x27Publishing failed\x27),\x0a    future: Object(external_this_wp_i18n_[\x22__\x22])(\x27Scheduling failed\x27)\x0a  };\x0a  var noticeMessage = !isPublished && publishStatus.indexOf(edits.status) !== -1 ? messages[edits.status] : Object(external_this_wp_i18n_[\x22__\x22])(\x27Updating failed\x27);\x0a  return [noticeMessage, {\x0a    id: SAVE_POST_NOTICE_ID\x0a  }];\x0a}\x0a/**\x0a * Builds the trash fail notification arguments for dispatch.\x0a *\x0a * @param {Object} data\x0a *\x0a * @return {Array} Arguments for dispatch.\x0a */\x0a\x0afunction getNotificationArgumentsForTrashFail(data) {\x0a  return [data.error.message && data.error.code !== \x27unknown_error\x27 ? data.error.message : Object(external_this_wp_i18n_[\x22__\x22])(\x27Trashing failed\x27), {\x0a    id: TRASH_POST_NOTICE_ID\x0a  }];\x0a}\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/store/actions.js\x0a\x0a\x0a\x0a\x0avar _marked =\x0a/*#__PURE__*/\x0aregenerator_default.a.mark(savePost),\x0a    _marked2 =\x0a/*#__PURE__*/\x0aregenerator_default.a.mark(refreshPost),\x0a    _marked3 =\x0a/*#__PURE__*/\x0aregenerator_default.a.mark(trashPost),\x0a    _marked4 =\x0a/*#__PURE__*/\x0aregenerator_default.a.mark(actions_autosave);\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Returns an action object used in signalling that editor has initialized with\x0a * the specified post object and editor settings.\x0a *\x0a * @param {Object} post      Post object.\x0a * @param {Object} edits     Initial edited attributes object.\x0a * @param {Array?} template  Block Template.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction setupEditor(post, edits, template) {\x0a  return {\x0a    type: \x27SETUP_EDITOR\x27,\x0a    post: post,\x0a    edits: edits,\x0a    template: template\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that the latest version of the\x0a * post has been received, either by initialization or save.\x0a *\x0a * @param {Object} post Post object.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction resetPost(post) {\x0a  return {\x0a    type: \x27RESET_POST\x27,\x0a    post: post\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that the latest autosave of the\x0a * post has been received, by initialization or autosave.\x0a *\x0a * @param {Object} post Autosave post object.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction resetAutosave(post) {\x0a  return {\x0a    type: \x27RESET_AUTOSAVE\x27,\x0a    post: post\x0a  };\x0a}\x0a/**\x0a * Optimistic action for dispatching that a post update request has started.\x0a *\x0a * @param {Object} options\x0a *\x0a * @return {Object} An action object\x0a */\x0a\x0afunction __experimentalRequestPostUpdateStart() {\x0a  var options = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a  return {\x0a    type: \x27REQUEST_POST_UPDATE_START\x27,\x0a    optimist: {\x0a      type: redux_optimist[\x22BEGIN\x22],\x0a      id: POST_UPDATE_TRANSACTION_ID\x0a    },\x0a    options: options\x0a  };\x0a}\x0a/**\x0a * Optimistic action for indicating that the request post update has completed\x0a * successfully.\x0a *\x0a * @param {Object}  data                The data for the action.\x0a * @param {Object}  data.previousPost   The previous post prior to update.\x0a * @param {Object}  data.post           The new post after update\x0a * @param {boolean} data.isRevision     Whether the post is a revision or not.\x0a * @param {Object}  data.options        Options passed through from the original\x0a *                                      action dispatch.\x0a * @param {Object}  data.postType       The post type object.\x0a *\x0a * @return {Object}\x09Action object.\x0a */\x0a\x0afunction __experimentalRequestPostUpdateSuccess(_ref) {\x0a  var previousPost = _ref.previousPost,\x0a      post = _ref.post,\x0a      isRevision = _ref.isRevision,\x0a      options = _ref.options,\x0a      postType = _ref.postType;\x0a  return {\x0a    type: \x27REQUEST_POST_UPDATE_SUCCESS\x27,\x0a    previousPost: previousPost,\x0a    post: post,\x0a    optimist: {\x0a      // Note: REVERT is not a failure case here. Rather, it\x0a      // is simply reversing the assumption that the updates\x0a      // were applied to the post proper, such that the post\x0a      // treated as having unsaved changes.\x0a      type: isRevision ? redux_optimist[\x22REVERT\x22] : redux_optimist[\x22COMMIT\x22],\x0a      id: POST_UPDATE_TRANSACTION_ID\x0a    },\x0a    options: options,\x0a    postType: postType\x0a  };\x0a}\x0a/**\x0a * Optimistic action for indicating that the request post update has completed\x0a * with a failure.\x0a *\x0a * @param {Object}  data          The data for the action\x0a * @param {Object}  data.post     The post that failed updating.\x0a * @param {Object}  data.edits    The fields that were being updated.\x0a * @param {*}       data.error    The error from the failed call.\x0a * @param {Object}  data.options  Options passed through from the original\x0a *                                action dispatch.\x0a * @return {Object} An action object\x0a */\x0a\x0afunction __experimentalRequestPostUpdateFailure(_ref2) {\x0a  var post = _ref2.post,\x0a      edits = _ref2.edits,\x0a      error = _ref2.error,\x0a      options = _ref2.options;\x0a  return {\x0a    type: \x27REQUEST_POST_UPDATE_FAILURE\x27,\x0a    optimist: {\x0a      type: redux_optimist[\x22REVERT\x22],\x0a      id: POST_UPDATE_TRANSACTION_ID\x0a    },\x0a    post: post,\x0a    edits: edits,\x0a    error: error,\x0a    options: options\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that a patch of updates for the\x0a * latest version of the post have been received.\x0a *\x0a * @param {Object} edits Updated post fields.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction updatePost(edits) {\x0a  return {\x0a    type: \x27UPDATE_POST\x27,\x0a    edits: edits\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to setup the editor state when first opening\x0a * an editor.\x0a *\x0a * @param {Object} post   Post object.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction setupEditorState(post) {\x0a  return {\x0a    type: \x27SETUP_EDITOR_STATE\x27,\x0a    post: post\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that attributes of the post have\x0a * been edited.\x0a *\x0a * @param {Object} edits Post attributes to edit.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction actions_editPost(edits) {\x0a  return {\x0a    type: \x27EDIT_POST\x27,\x0a    edits: edits\x0a  };\x0a}\x0a/**\x0a * Returns action object produced by the updatePost creator augmented by\x0a * an optimist option that signals optimistically applying updates.\x0a *\x0a * @param {Object} edits  Updated post fields.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction __experimentalOptimisticUpdatePost(edits) {\x0a  return Object(objectSpread[\x22a\x22 /* default */])({}, updatePost(edits), {\x0a    optimist: {\x0a      id: POST_UPDATE_TRANSACTION_ID\x0a    }\x0a  });\x0a}\x0a/**\x0a * Action generator for saving the current post in the editor.\x0a *\x0a * @param {Object} options\x0a */\x0a\x0afunction savePost() {\x0a  var options,\x0a      isEditedPostSaveable,\x0a      edits,\x0a      isAutosave,\x0a      isEditedPostNew,\x0a      post,\x0a      editedPostContent,\x0a      toSend,\x0a      currentPostType,\x0a      postType,\x0a      path,\x0a      method,\x0a      autoSavePost,\x0a      newPost,\x0a      resetAction,\x0a      notifySuccessArgs,\x0a      notifyFailArgs,\x0a      _args = arguments;\x0a  return regenerator_default.a.wrap(function savePost$(_context) {\x0a    while (1) {\x0a      switch (_context.prev = _context.next) {\x0a        case 0:\x0a          options = _args.length \x3e 0 && _args[0] !== undefined ? _args[0] : {};\x0a          _context.next = 3;\x0a          return controls_select(STORE_KEY, \x27isEditedPostSaveable\x27);\x0a\x0a        case 3:\x0a          isEditedPostSaveable = _context.sent;\x0a\x0a          if (isEditedPostSaveable) {\x0a            _context.next = 6;\x0a            break;\x0a          }\x0a\x0a          return _context.abrupt(\x22return\x22);\x0a\x0a        case 6:\x0a          _context.next = 8;\x0a          return controls_select(STORE_KEY, \x27getPostEdits\x27);\x0a\x0a        case 8:\x0a          edits = _context.sent;\x0a          isAutosave = !!options.isAutosave;\x0a\x0a          if (isAutosave) {\x0a            edits = Object(external_lodash_[\x22pick\x22])(edits, [\x27title\x27, \x27content\x27, \x27excerpt\x27]);\x0a          }\x0a\x0a          _context.next = 13;\x0a          return controls_select(STORE_KEY, \x27isEditedPostNew\x27);\x0a\x0a        case 13:\x0a          isEditedPostNew = _context.sent;\x0a\x0a          // New posts (with auto-draft status) must be explicitly assigned draft\x0a          // status if there is not already a status assigned in edits (publish).\x0a          // Otherwise, they are wrongly left as auto-draft. Status is not always\x0a          // respected for autosaves, so it cannot simply be included in the pick\x0a          // above. This behavior relies on an assumption that an auto-draft post\x0a          // would never be saved by anyone other than the owner of the post, per\x0a          // logic within autosaves REST controller to save status field only for\x0a          // draft/auto-draft by current user.\x0a          //\x0a          // See: https://core.trac.wordpress.org/ticket/43316#comment:88\x0a          // See: https://core.trac.wordpress.org/ticket/43316#comment:89\x0a          if (isEditedPostNew) {\x0a            edits = Object(objectSpread[\x22a\x22 /* default */])({\x0a              status: \x27draft\x27\x0a            }, edits);\x0a          }\x0a\x0a          _context.next = 17;\x0a          return controls_select(STORE_KEY, \x27getCurrentPost\x27);\x0a\x0a        case 17:\x0a          post = _context.sent;\x0a          _context.next = 20;\x0a          return controls_select(STORE_KEY, \x27getEditedPostContent\x27);\x0a\x0a        case 20:\x0a          editedPostContent = _context.sent;\x0a          toSend = Object(objectSpread[\x22a\x22 /* default */])({}, edits, {\x0a            content: editedPostContent,\x0a            id: post.id\x0a          });\x0a          _context.next = 24;\x0a          return controls_select(STORE_KEY, \x27getCurrentPostType\x27);\x0a\x0a        case 24:\x0a          currentPostType = _context.sent;\x0a          _context.next = 27;\x0a          return resolveSelect(\x27core\x27, \x27getPostType\x27, currentPostType);\x0a\x0a        case 27:\x0a          postType = _context.sent;\x0a          _context.next = 30;\x0a          return controls_dispatch(STORE_KEY, \x27__experimentalRequestPostUpdateStart\x27, options);\x0a\x0a        case 30:\x0a          _context.next = 32;\x0a          return controls_dispatch(STORE_KEY, \x27__experimentalOptimisticUpdatePost\x27, toSend);\x0a\x0a        case 32:\x0a          path = \x22/wp/v2/\x22.concat(postType.rest_base, \x22/\x22).concat(post.id);\x0a          method = \x27PUT\x27;\x0a\x0a          if (!isAutosave) {\x0a            _context.next = 43;\x0a            break;\x0a          }\x0a\x0a          _context.next = 37;\x0a          return controls_select(STORE_KEY, \x27getAutosave\x27);\x0a\x0a        case 37:\x0a          autoSavePost = _context.sent;\x0a          // Ensure autosaves contain all expected fields, using autosave or\x0a          // post values as fallback if not otherwise included in edits.\x0a          toSend = Object(objectSpread[\x22a\x22 /* default */])({}, Object(external_lodash_[\x22pick\x22])(post, [\x27title\x27, \x27content\x27, \x27excerpt\x27]), autoSavePost, toSend);\x0a          path += \x27/autosaves\x27;\x0a          method = \x27POST\x27;\x0a          _context.next = 47;\x0a          break;\x0a\x0a        case 43:\x0a          _context.next = 45;\x0a          return controls_dispatch(\x27core/notices\x27, \x27removeNotice\x27, SAVE_POST_NOTICE_ID);\x0a\x0a        case 45:\x0a          _context.next = 47;\x0a          return controls_dispatch(\x27core/notices\x27, \x27removeNotice\x27, \x27autosave-exists\x27);\x0a\x0a        case 47:\x0a          _context.prev = 47;\x0a          _context.next = 50;\x0a          return apiFetch({\x0a            path: path,\x0a            method: method,\x0a            data: toSend\x0a          });\x0a\x0a        case 50:\x0a          newPost = _context.sent;\x0a          resetAction = isAutosave ? \x27resetAutosave\x27 : \x27resetPost\x27;\x0a          _context.next = 54;\x0a          return controls_dispatch(STORE_KEY, resetAction, newPost);\x0a\x0a        case 54:\x0a          _context.next = 56;\x0a          return controls_dispatch(STORE_KEY, \x27__experimentalRequestPostUpdateSuccess\x27, {\x0a            previousPost: post,\x0a            post: newPost,\x0a            options: options,\x0a            postType: postType,\x0a            // An autosave may be processed by the server as a regular save\x0a            // when its update is requested by the author and the post was\x0a            // draft or auto-draft.\x0a            isRevision: newPost.id !== post.id\x0a          });\x0a\x0a        case 56:\x0a          notifySuccessArgs = getNotificationArgumentsForSaveSuccess({\x0a            previousPost: post,\x0a            post: newPost,\x0a            postType: postType,\x0a            options: options\x0a          });\x0a\x0a          if (!(notifySuccessArgs.length \x3e 0)) {\x0a            _context.next = 60;\x0a            break;\x0a          }\x0a\x0a          _context.next = 60;\x0a          return controls_dispatch.apply(void 0, [\x27core/notices\x27, \x27createSuccessNotice\x27].concat(Object(toConsumableArray[\x22a\x22 /* default */])(notifySuccessArgs)));\x0a\x0a        case 60:\x0a          _context.next = 70;\x0a          break;\x0a\x0a        case 62:\x0a          _context.prev = 62;\x0a          _context.t0 = _context[\x22catch\x22](47);\x0a          _context.next = 66;\x0a          return controls_dispatch(STORE_KEY, \x27__experimentalRequestPostUpdateFailure\x27, {\x0a            post: post,\x0a            edits: edits,\x0a            error: _context.t0,\x0a            options: options\x0a          });\x0a\x0a        case 66:\x0a          notifyFailArgs = getNotificationArgumentsForSaveFail({\x0a            post: post,\x0a            edits: edits,\x0a            error: _context.t0\x0a          });\x0a\x0a          if (!(notifyFailArgs.length \x3e 0)) {\x0a            _context.next = 70;\x0a            break;\x0a          }\x0a\x0a          _context.next = 70;\x0a          return controls_dispatch.apply(void 0, [\x27core/notices\x27, \x27createErrorNotice\x27].concat(Object(toConsumableArray[\x22a\x22 /* default */])(notifyFailArgs)));\x0a\x0a        case 70:\x0a        case \x22end\x22:\x0a          return _context.stop();\x0a      }\x0a    }\x0a  }, _marked, this, [[47, 62]]);\x0a}\x0a/**\x0a * Action generator for handling refreshing the current post.\x0a */\x0a\x0afunction refreshPost() {\x0a  var post, postTypeSlug, postType, newPost;\x0a  return regenerator_default.a.wrap(function refreshPost$(_context2) {\x0a    while (1) {\x0a      switch (_context2.prev = _context2.next) {\x0a        case 0:\x0a          _context2.next = 2;\x0a          return controls_select(STORE_KEY, \x27getCurrentPost\x27);\x0a\x0a        case 2:\x0a          post = _context2.sent;\x0a          _context2.next = 5;\x0a          return controls_select(STORE_KEY, \x27getCurrentPostType\x27);\x0a\x0a        case 5:\x0a          postTypeSlug = _context2.sent;\x0a          _context2.next = 8;\x0a          return resolveSelect(\x27core\x27, \x27getPostType\x27, postTypeSlug);\x0a\x0a        case 8:\x0a          postType = _context2.sent;\x0a          _context2.next = 11;\x0a          return apiFetch({\x0a            // Timestamp arg allows caller to bypass browser caching, which is\x0a            // expected for this specific function.\x0a            path: \x22/wp/v2/\x22.concat(postType.rest_base, \x22/\x22).concat(post.id) + \x22?context=edit&_timestamp=\x22.concat(Date.now())\x0a          });\x0a\x0a        case 11:\x0a          newPost = _context2.sent;\x0a          _context2.next = 14;\x0a          return controls_dispatch(STORE_KEY, \x27resetPost\x27, newPost);\x0a\x0a        case 14:\x0a        case \x22end\x22:\x0a          return _context2.stop();\x0a      }\x0a    }\x0a  }, _marked2, this);\x0a}\x0a/**\x0a * Action generator for trashing the current post in the editor.\x0a */\x0a\x0afunction trashPost() {\x0a  var postTypeSlug, postType, post;\x0a  return regenerator_default.a.wrap(function trashPost$(_context3) {\x0a    while (1) {\x0a      switch (_context3.prev = _context3.next) {\x0a        case 0:\x0a          _context3.next = 2;\x0a          return controls_select(STORE_KEY, \x27getCurrentPostType\x27);\x0a\x0a        case 2:\x0a          postTypeSlug = _context3.sent;\x0a          _context3.next = 5;\x0a          return resolveSelect(\x27core\x27, \x27getPostType\x27, postTypeSlug);\x0a\x0a        case 5:\x0a          postType = _context3.sent;\x0a          _context3.next = 8;\x0a          return controls_dispatch(\x27core/notices\x27, \x27removeNotice\x27, TRASH_POST_NOTICE_ID);\x0a\x0a        case 8:\x0a          _context3.prev = 8;\x0a          _context3.next = 11;\x0a          return controls_select(STORE_KEY, \x27getCurrentPost\x27);\x0a\x0a        case 11:\x0a          post = _context3.sent;\x0a          _context3.next = 14;\x0a          return apiFetch({\x0a            path: \x22/wp/v2/\x22.concat(postType.rest_base, \x22/\x22).concat(post.id),\x0a            method: \x27DELETE\x27\x0a          });\x0a\x0a        case 14:\x0a          _context3.next = 16;\x0a          return controls_dispatch(STORE_KEY, \x27resetPost\x27, Object(objectSpread[\x22a\x22 /* default */])({}, post, {\x0a            status: \x27trash\x27\x0a          }));\x0a\x0a        case 16:\x0a          _context3.next = 22;\x0a          break;\x0a\x0a        case 18:\x0a          _context3.prev = 18;\x0a          _context3.t0 = _context3[\x22catch\x22](8);\x0a          _context3.next = 22;\x0a          return controls_dispatch.apply(void 0, [\x27core/notices\x27, \x27createErrorNotice\x27].concat(Object(toConsumableArray[\x22a\x22 /* default */])(getNotificationArgumentsForTrashFail({\x0a            error: _context3.t0\x0a          }))));\x0a\x0a        case 22:\x0a        case \x22end\x22:\x0a          return _context3.stop();\x0a      }\x0a    }\x0a  }, _marked3, this, [[8, 18]]);\x0a}\x0a/**\x0a * Action generator used in signalling that the post should autosave.\x0a *\x0a * @param {Object?} options Extra flags to identify the autosave.\x0a */\x0a\x0afunction actions_autosave(options) {\x0a  return regenerator_default.a.wrap(function autosave$(_context4) {\x0a    while (1) {\x0a      switch (_context4.prev = _context4.next) {\x0a        case 0:\x0a          _context4.next = 2;\x0a          return controls_dispatch(STORE_KEY, \x27savePost\x27, Object(objectSpread[\x22a\x22 /* default */])({\x0a            isAutosave: true\x0a          }, options));\x0a\x0a        case 2:\x0a        case \x22end\x22:\x0a          return _context4.stop();\x0a      }\x0a    }\x0a  }, _marked4, this);\x0a}\x0a/**\x0a * Returns an action object used in signalling that undo history should\x0a * restore last popped state.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction actions_redo() {\x0a  return {\x0a    type: \x27REDO\x27\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that undo history should pop.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction actions_undo() {\x0a  return {\x0a    type: \x27UNDO\x27\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that undo history record should\x0a * be created.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction createUndoLevel() {\x0a  return {\x0a    type: \x27CREATE_UNDO_LEVEL\x27\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to lock the editor.\x0a *\x0a * @param {Object}  lock Details about the post lock status, user, and nonce.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction updatePostLock(lock) {\x0a  return {\x0a    type: \x27UPDATE_POST_LOCK\x27,\x0a    lock: lock\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to fetch a single reusable block or all\x0a * reusable blocks from the REST API into the store.\x0a *\x0a * @param {?string} id If given, only a single reusable block with this ID will\x0a *                     be fetched.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction __experimentalFetchReusableBlocks(id) {\x0a  return {\x0a    type: \x27FETCH_REUSABLE_BLOCKS\x27,\x0a    id: id\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that reusable blocks have been\x0a * received. `results` is an array of objects containing:\x0a *  - `reusableBlock` - Details about how the reusable block is persisted.\x0a *  - `parsedBlock` - The original block.\x0a *\x0a * @param {Object[]} results Reusable blocks received.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction __experimentalReceiveReusableBlocks(results) {\x0a  return {\x0a    type: \x27RECEIVE_REUSABLE_BLOCKS\x27,\x0a    results: results\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to save a reusable block that\x27s in the store to\x0a * the REST API.\x0a *\x0a * @param {Object} id The ID of the reusable block to save.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction __experimentalSaveReusableBlock(id) {\x0a  return {\x0a    type: \x27SAVE_REUSABLE_BLOCK\x27,\x0a    id: id\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to delete a reusable block via the REST API.\x0a *\x0a * @param {number} id The ID of the reusable block to delete.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction __experimentalDeleteReusableBlock(id) {\x0a  return {\x0a    type: \x27DELETE_REUSABLE_BLOCK\x27,\x0a    id: id\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that a reusable block\x27s title is\x0a * to be updated.\x0a *\x0a * @param {number} id    The ID of the reusable block to update.\x0a * @param {string} title The new title.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction __experimentalUpdateReusableBlockTitle(id, title) {\x0a  return {\x0a    type: \x27UPDATE_REUSABLE_BLOCK_TITLE\x27,\x0a    id: id,\x0a    title: title\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to convert a reusable block into a static\x0a * block.\x0a *\x0a * @param {string} clientId The client ID of the block to attach.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction __experimentalConvertBlockToStatic(clientId) {\x0a  return {\x0a    type: \x27CONVERT_BLOCK_TO_STATIC\x27,\x0a    clientId: clientId\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to convert a static block into a reusable\x0a * block.\x0a *\x0a * @param {string} clientIds The client IDs of the block to detach.\x0a *\x0a * @return {Object} Action object.\x0a */\x0a\x0afunction __experimentalConvertBlockToReusable(clientIds) {\x0a  return {\x0a    type: \x27CONVERT_BLOCK_TO_REUSABLE\x27,\x0a    clientIds: Object(external_lodash_[\x22castArray\x22])(clientIds)\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that the user has enabled the\x0a * publish sidebar.\x0a *\x0a * @return {Object} Action object\x0a */\x0a\x0afunction enablePublishSidebar() {\x0a  return {\x0a    type: \x27ENABLE_PUBLISH_SIDEBAR\x27\x0a  };\x0a}\x0a/**\x0a * Returns an action object used in signalling that the user has disabled the\x0a * publish sidebar.\x0a *\x0a * @return {Object} Action object\x0a */\x0a\x0afunction disablePublishSidebar() {\x0a  return {\x0a    type: \x27DISABLE_PUBLISH_SIDEBAR\x27\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to signal that post saving is locked.\x0a *\x0a * @param  {string} lockName The lock name.\x0a *\x0a * @return {Object} Action object\x0a */\x0a\x0afunction lockPostSaving(lockName) {\x0a  return {\x0a    type: \x27LOCK_POST_SAVING\x27,\x0a    lockName: lockName\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to signal that post saving is unlocked.\x0a *\x0a * @param  {string} lockName The lock name.\x0a *\x0a * @return {Object} Action object\x0a */\x0a\x0afunction unlockPostSaving(lockName) {\x0a  return {\x0a    type: \x27UNLOCK_POST_SAVING\x27,\x0a    lockName: lockName\x0a  };\x0a}\x0a/**\x0a * Returns an action object used to signal that the blocks have been updated.\x0a *\x0a * @param {Array}   blocks  Block Array.\x0a * @param {?Object} options Optional options.\x0a *\x0a * @return {Object} Action object\x0a */\x0a\x0afunction actions_resetEditorBlocks(blocks) {\x0a  var options = arguments.length \x3e 1 && arguments[1] !== undefined ? arguments[1] : {};\x0a  return {\x0a    type: \x27RESET_EDITOR_BLOCKS\x27,\x0a    blocks: blocks,\x0a    shouldCreateUndoLevel: options.__unstableShouldCreateUndoLevel !== false\x0a  };\x0a}\x0a/*\x0a * Returns an action object used in signalling that the post editor settings have been updated.\x0a *\x0a * @param {Object} settings Updated settings\x0a *\x0a * @return {Object} Action object\x0a */\x0a\x0afunction updateEditorSettings(settings) {\x0a  return {\x0a    type: \x27UPDATE_EDITOR_SETTINGS\x27,\x0a    settings: settings\x0a  };\x0a}\x0a/**\x0a * Backward compatibility\x0a */\x0a\x0avar actions_getBlockEditorAction = function getBlockEditorAction(name) {\x0a  return (\x0a    /*#__PURE__*/\x0a    regenerator_default.a.mark(function _callee() {\x0a      var _len,\x0a          args,\x0a          _key,\x0a          _args5 = arguments;\x0a\x0a      return regenerator_default.a.wrap(function _callee$(_context5) {\x0a        while (1) {\x0a          switch (_context5.prev = _context5.next) {\x0a            case 0:\x0a              for (_len = _args5.length, args = new Array(_len), _key = 0; _key \x3c _len; _key++) {\x0a                args[_key] = _args5[_key];\x0a              }\x0a\x0a              _context5.next = 3;\x0a              return controls_dispatch.apply(void 0, [\x27core/block-editor\x27, name].concat(args));\x0a\x0a            case 3:\x0a            case \x22end\x22:\x0a              return _context5.stop();\x0a          }\x0a        }\x0a      }, _callee, this);\x0a    })\x0a  );\x0a};\x0a\x0avar resetBlocks = actions_getBlockEditorAction(\x27resetBlocks\x27);\x0avar receiveBlocks = actions_getBlockEditorAction(\x27receiveBlocks\x27);\x0avar updateBlock = actions_getBlockEditorAction(\x27updateBlock\x27);\x0avar updateBlockAttributes = actions_getBlockEditorAction(\x27updateBlockAttributes\x27);\x0avar selectBlock = actions_getBlockEditorAction(\x27selectBlock\x27);\x0avar startMultiSelect = actions_getBlockEditorAction(\x27startMultiSelect\x27);\x0avar stopMultiSelect = actions_getBlockEditorAction(\x27stopMultiSelect\x27);\x0avar multiSelect = actions_getBlockEditorAction(\x27multiSelect\x27);\x0avar clearSelectedBlock = actions_getBlockEditorAction(\x27clearSelectedBlock\x27);\x0avar toggleSelection = actions_getBlockEditorAction(\x27toggleSelection\x27);\x0avar replaceBlocks = actions_getBlockEditorAction(\x27replaceBlocks\x27);\x0avar replaceBlock = actions_getBlockEditorAction(\x27replaceBlock\x27);\x0avar moveBlocksDown = actions_getBlockEditorAction(\x27moveBlocksDown\x27);\x0avar moveBlocksUp = actions_getBlockEditorAction(\x27moveBlocksUp\x27);\x0avar moveBlockToPosition = actions_getBlockEditorAction(\x27moveBlockToPosition\x27);\x0avar insertBlock = actions_getBlockEditorAction(\x27insertBlock\x27);\x0avar insertBlocks = actions_getBlockEditorAction(\x27insertBlocks\x27);\x0avar showInsertionPoint = actions_getBlockEditorAction(\x27showInsertionPoint\x27);\x0avar hideInsertionPoint = actions_getBlockEditorAction(\x27hideInsertionPoint\x27);\x0avar setTemplateValidity = actions_getBlockEditorAction(\x27setTemplateValidity\x27);\x0avar synchronizeTemplate = actions_getBlockEditorAction(\x27synchronizeTemplate\x27);\x0avar mergeBlocks = actions_getBlockEditorAction(\x27mergeBlocks\x27);\x0avar removeBlocks = actions_getBlockEditorAction(\x27removeBlocks\x27);\x0avar removeBlock = actions_getBlockEditorAction(\x27removeBlock\x27);\x0avar toggleBlockMode = actions_getBlockEditorAction(\x27toggleBlockMode\x27);\x0avar startTyping = actions_getBlockEditorAction(\x27startTyping\x27);\x0avar stopTyping = actions_getBlockEditorAction(\x27stopTyping\x27);\x0avar enterFormattedText = actions_getBlockEditorAction(\x27enterFormattedText\x27);\x0avar exitFormattedText = actions_getBlockEditorAction(\x27exitFormattedText\x27);\x0avar insertDefaultBlock = actions_getBlockEditorAction(\x27insertDefaultBlock\x27);\x0avar updateBlockListSettings = actions_getBlockEditorAction(\x27updateBlockListSettings\x27);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\x0avar asyncToGenerator = __webpack_require__(44);\x0a\x0a// EXTERNAL MODULE: ./node_modules/rememo/es/rememo.js\x0avar rememo = __webpack_require__(30);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22date\x22]}\x0avar external_this_wp_date_ = __webpack_require__(50);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22autop\x22]}\x0avar external_this_wp_autop_ = __webpack_require__(66);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/store/selectors.js\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Shared reference to an empty object for cases where it is important to avoid\x0a * returning a new object reference on every invocation, as in a connected or\x0a * other pure component which performs `shouldComponentUpdate` check on props.\x0a * This should be used as a last resort, since the normalized data should be\x0a * maintained by the reducer result in state.\x0a */\x0a\x0avar EMPTY_OBJECT = {};\x0a/**\x0a * Returns true if any past editor history snapshots exist, or false otherwise.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether undo history exists.\x0a */\x0a\x0afunction hasEditorUndo(state) {\x0a  return state.editor.past.length \x3e 0;\x0a}\x0a/**\x0a * Returns true if any future editor history snapshots exist, or false\x0a * otherwise.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether redo history exists.\x0a */\x0a\x0afunction hasEditorRedo(state) {\x0a  return state.editor.future.length \x3e 0;\x0a}\x0a/**\x0a * Returns true if the currently edited post is yet to be saved, or false if\x0a * the post has been saved.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether the post is new.\x0a */\x0a\x0afunction selectors_isEditedPostNew(state) {\x0a  return selectors_getCurrentPost(state).status === \x27auto-draft\x27;\x0a}\x0a/**\x0a * Returns true if content includes unsaved changes, or false otherwise.\x0a *\x0a * @param {Object} state Editor state.\x0a *\x0a * @return {boolean} Whether content includes unsaved changes.\x0a */\x0a\x0afunction hasChangedContent(state) {\x0a  return state.editor.present.blocks.isDirty || // `edits` is intended to contain only values which are different from\x0a  // the saved post, so the mere presence of a property is an indicator\x0a  // that the value is different than what is known to be saved. While\x0a  // content in Visual mode is represented by the blocks state, in Text\x0a  // mode it is tracked by `edits.content`.\x0a  \x27content\x27 in state.editor.present.edits;\x0a}\x0a/**\x0a * Returns true if there are unsaved values for the current edit session, or\x0a * false if the editing state matches the saved or new post.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether unsaved values exist.\x0a */\x0a\x0afunction selectors_isEditedPostDirty(state) {\x0a  if (hasChangedContent(state)) {\x0a    return true;\x0a  } // Edits should contain only fields which differ from the saved post (reset\x0a  // at initial load and save complete). Thus, a non-empty edits state can be\x0a  // inferred to contain unsaved values.\x0a\x0a\x0a  if (Object.keys(state.editor.present.edits).length \x3e 0) {\x0a    return true;\x0a  } // Edits and change detection are reset at the start of a save, but a post\x0a  // is still considered dirty until the point at which the save completes.\x0a  // Because the save is performed optimistically, the prior states are held\x0a  // until committed. These can be referenced to determine whether there\x27s a\x0a  // chance that state may be reverted into one considered dirty.\x0a\x0a\x0a  return inSomeHistory(state, selectors_isEditedPostDirty);\x0a}\x0a/**\x0a * Returns true if there are no unsaved values for the current edit session and\x0a * if the currently edited post is new (has never been saved before).\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether new post and unsaved values exist.\x0a */\x0a\x0afunction selectors_isCleanNewPost(state) {\x0a  return !selectors_isEditedPostDirty(state) && selectors_isEditedPostNew(state);\x0a}\x0a/**\x0a * Returns the post currently being edited in its last known saved state, not\x0a * including unsaved edits. Returns an object containing relevant default post\x0a * values if the post has not yet been saved.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {Object} Post object.\x0a */\x0a\x0afunction selectors_getCurrentPost(state) {\x0a  return state.currentPost;\x0a}\x0a/**\x0a * Returns the post type of the post currently being edited.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {string} Post type.\x0a */\x0a\x0afunction selectors_getCurrentPostType(state) {\x0a  return state.currentPost.type;\x0a}\x0a/**\x0a * Returns the ID of the post currently being edited, or null if the post has\x0a * not yet been saved.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {?number} ID of current post.\x0a */\x0a\x0afunction selectors_getCurrentPostId(state) {\x0a  return selectors_getCurrentPost(state).id || null;\x0a}\x0a/**\x0a * Returns the number of revisions of the post currently being edited.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {number} Number of revisions.\x0a */\x0a\x0afunction getCurrentPostRevisionsCount(state) {\x0a  return Object(external_lodash_[\x22get\x22])(selectors_getCurrentPost(state), [\x27_links\x27, \x27version-history\x27, 0, \x27count\x27], 0);\x0a}\x0a/**\x0a * Returns the last revision ID of the post currently being edited,\x0a * or null if the post has no revisions.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {?number} ID of the last revision.\x0a */\x0a\x0afunction getCurrentPostLastRevisionId(state) {\x0a  return Object(external_lodash_[\x22get\x22])(selectors_getCurrentPost(state), [\x27_links\x27, \x27predecessor-version\x27, 0, \x27id\x27], null);\x0a}\x0a/**\x0a * Returns any post values which have been changed in the editor but not yet\x0a * been saved.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {Object} Object of key value pairs comprising unsaved edits.\x0a */\x0a\x0avar getPostEdits = Object(rememo[\x22a\x22 /* default */])(function (state) {\x0a  return Object(objectSpread[\x22a\x22 /* default */])({}, state.initialEdits, state.editor.present.edits);\x0a}, function (state) {\x0a  return [state.editor.present.edits, state.initialEdits];\x0a});\x0a/**\x0a * Returns a new reference when edited values have changed. This is useful in\x0a * inferring where an edit has been made between states by comparison of the\x0a * return values using strict equality.\x0a *\x0a * @example\x0a *\x0a * ```\x0a * const hasEditOccurred = (\x0a *    getReferenceByDistinctEdits( beforeState ) !==\x0a *    getReferenceByDistinctEdits( afterState )\x0a * );\x0a * ```\x0a *\x0a * @param {Object} state Editor state.\x0a *\x0a * @return {*} A value whose reference will change only when an edit occurs.\x0a */\x0a\x0avar getReferenceByDistinctEdits = Object(rememo[\x22a\x22 /* default */])(function () {\x0a  return [];\x0a}, function (state) {\x0a  return [state.editor];\x0a});\x0a/**\x0a * Returns an attribute value of the saved post.\x0a *\x0a * @param {Object} state         Global application state.\x0a * @param {string} attributeName Post attribute name.\x0a *\x0a * @return {*} Post attribute value.\x0a */\x0a\x0afunction selectors_getCurrentPostAttribute(state, attributeName) {\x0a  var post = selectors_getCurrentPost(state);\x0a\x0a  if (post.hasOwnProperty(attributeName)) {\x0a    return post[attributeName];\x0a  }\x0a}\x0a/**\x0a * Returns a single attribute of the post being edited, preferring the unsaved\x0a * edit if one exists, but merging with the attribute value for the last known\x0a * saved state of the post (this is needed for some nested attributes like meta).\x0a *\x0a * @param {Object} state         Global application state.\x0a * @param {string} attributeName Post attribute name.\x0a *\x0a * @return {*} Post attribute value.\x0a */\x0a\x0avar getNestedEditedPostProperty = Object(rememo[\x22a\x22 /* default */])(function (state, attributeName) {\x0a  var edits = getPostEdits(state);\x0a\x0a  if (!edits.hasOwnProperty(attributeName)) {\x0a    return selectors_getCurrentPostAttribute(state, attributeName);\x0a  }\x0a\x0a  return Object(objectSpread[\x22a\x22 /* default */])({}, selectors_getCurrentPostAttribute(state, attributeName), edits[attributeName]);\x0a}, function (state, attributeName) {\x0a  return [Object(external_lodash_[\x22get\x22])(state.editor.present.edits, [attributeName], EMPTY_OBJECT), Object(external_lodash_[\x22get\x22])(state.currentPost, [attributeName], EMPTY_OBJECT)];\x0a});\x0a/**\x0a * Returns a single attribute of the post being edited, preferring the unsaved\x0a * edit if one exists, but falling back to the attribute for the last known\x0a * saved state of the post.\x0a *\x0a * @param {Object} state         Global application state.\x0a * @param {string} attributeName Post attribute name.\x0a *\x0a * @return {*} Post attribute value.\x0a */\x0a\x0afunction selectors_getEditedPostAttribute(state, attributeName) {\x0a  // Special cases\x0a  switch (attributeName) {\x0a    case \x27content\x27:\x0a      return getEditedPostContent(state);\x0a  } // Fall back to saved post value if not edited.\x0a\x0a\x0a  var edits = getPostEdits(state);\x0a\x0a  if (!edits.hasOwnProperty(attributeName)) {\x0a    return selectors_getCurrentPostAttribute(state, attributeName);\x0a  } // Merge properties are objects which contain only the patch edit in state,\x0a  // and thus must be merged with the current post attribute.\x0a\x0a\x0a  if (EDIT_MERGE_PROPERTIES.has(attributeName)) {\x0a    return getNestedEditedPostProperty(state, attributeName);\x0a  }\x0a\x0a  return edits[attributeName];\x0a}\x0a/**\x0a * Returns an attribute value of the current autosave revision for a post, or\x0a * null if there is no autosave for the post.\x0a *\x0a * @param {Object} state         Global application state.\x0a * @param {string} attributeName Autosave attribute name.\x0a *\x0a * @return {*} Autosave attribute value.\x0a */\x0a\x0afunction getAutosaveAttribute(state, attributeName) {\x0a  if (!hasAutosave(state)) {\x0a    return null;\x0a  }\x0a\x0a  var autosave = getAutosave(state);\x0a\x0a  if (autosave.hasOwnProperty(attributeName)) {\x0a    return autosave[attributeName];\x0a  }\x0a}\x0a/**\x0a * Returns the current visibility of the post being edited, preferring the\x0a * unsaved value if different than the saved post. The return value is one of\x0a * \x22private\x22, \x22password\x22, or \x22public\x22.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {string} Post visibility.\x0a */\x0a\x0afunction selectors_getEditedPostVisibility(state) {\x0a  var status = selectors_getEditedPostAttribute(state, \x27status\x27);\x0a\x0a  if (status === \x27private\x27) {\x0a    return \x27private\x27;\x0a  }\x0a\x0a  var password = selectors_getEditedPostAttribute(state, \x27password\x27);\x0a\x0a  if (password) {\x0a    return \x27password\x27;\x0a  }\x0a\x0a  return \x27public\x27;\x0a}\x0a/**\x0a * Returns true if post is pending review.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether current post is pending review.\x0a */\x0a\x0afunction isCurrentPostPending(state) {\x0a  return selectors_getCurrentPost(state).status === \x27pending\x27;\x0a}\x0a/**\x0a * Return true if the current post has already been published.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether the post has been published.\x0a */\x0a\x0afunction selectors_isCurrentPostPublished(state) {\x0a  var post = selectors_getCurrentPost(state);\x0a  return [\x27publish\x27, \x27private\x27].indexOf(post.status) !== -1 || post.status === \x27future\x27 && !Object(external_this_wp_date_[\x22isInTheFuture\x22])(new Date(Number(Object(external_this_wp_date_[\x22getDate\x22])(post.date)) - ONE_MINUTE_IN_MS));\x0a}\x0a/**\x0a * Returns true if post is already scheduled.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether current post is scheduled to be posted.\x0a */\x0a\x0afunction selectors_isCurrentPostScheduled(state) {\x0a  return selectors_getCurrentPost(state).status === \x27future\x27 && !selectors_isCurrentPostPublished(state);\x0a}\x0a/**\x0a * Return true if the post being edited can be published.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether the post can been published.\x0a */\x0a\x0afunction selectors_isEditedPostPublishable(state) {\x0a  var post = selectors_getCurrentPost(state); // TODO: Post being publishable should be superset of condition of post\x0a  // being saveable. Currently this restriction is imposed at UI.\x0a  //\x0a  //  See: \x3cPostPublishButton /\x3e (`isButtonEnabled` assigned by `isSaveable`)\x0a\x0a  return selectors_isEditedPostDirty(state) || [\x27publish\x27, \x27private\x27, \x27future\x27].indexOf(post.status) === -1;\x0a}\x0a/**\x0a * Returns true if the post can be saved, or false otherwise. A post must\x0a * contain a title, an excerpt, or non-empty content to be valid for save.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether the post can be saved.\x0a */\x0a\x0afunction selectors_isEditedPostSaveable(state) {\x0a  if (selectors_isSavingPost(state)) {\x0a    return false;\x0a  } // TODO: Post should not be saveable if not dirty. Cannot be added here at\x0a  // this time since posts where meta boxes are present can be saved even if\x0a  // the post is not dirty. Currently this restriction is imposed at UI, but\x0a  // should be moved here.\x0a  //\x0a  //  See: `isEditedPostPublishable` (includes `isEditedPostDirty` condition)\x0a  //  See: \x3cPostSavedState /\x3e (`forceIsDirty` prop)\x0a  //  See: \x3cPostPublishButton /\x3e (`forceIsDirty` prop)\x0a  //  See: https://github.com/WordPress/gutenberg/pull/4184\x0a\x0a\x0a  return !!selectors_getEditedPostAttribute(state, \x27title\x27) || !!selectors_getEditedPostAttribute(state, \x27excerpt\x27) || !isEditedPostEmpty(state);\x0a}\x0a/**\x0a * Returns true if the edited post has content. A post has content if it has at\x0a * least one saveable block or otherwise has a non-empty content property\x0a * assigned.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether post has content.\x0a */\x0a\x0afunction isEditedPostEmpty(state) {\x0a  // While the condition of truthy content string is sufficient to determine\x0a  // emptiness, testing saveable blocks length is a trivial operation. Since\x0a  // this function can be called frequently, optimize for the fast case as a\x0a  // condition of the mere existence of blocks. Note that the value of edited\x0a  // content takes precedent over block content, and must fall through to the\x0a  // default logic.\x0a  var blocks = state.editor.present.blocks.value;\x0a\x0a  if (blocks.length && !(\x27content\x27 in getPostEdits(state))) {\x0a    // Pierce the abstraction of the serializer in knowing that blocks are\x0a    // joined with with newlines such that even if every individual block\x0a    // produces an empty save result, the serialized content is non-empty.\x0a    if (blocks.length \x3e 1) {\x0a      return false;\x0a    } // There are two conditions under which the optimization cannot be\x0a    // assumed, and a fallthrough to getEditedPostContent must occur:\x0a    //\x0a    // 1. getBlocksForSerialization has special treatment in omitting a\x0a    //    single unmodified default block.\x0a    // 2. Comment delimiters are omitted for a freeform or unregistered\x0a    //    block in its serialization. The freeform block specifically may\x0a    //    produce an empty string in its saved output.\x0a    //\x0a    // For all other content, the single block is assumed to make a post\x0a    // non-empty, if only by virtue of its own comment delimiters.\x0a\x0a\x0a    var blockName = blocks[0].name;\x0a\x0a    if (blockName !== Object(external_this_wp_blocks_[\x22getDefaultBlockName\x22])() && blockName !== Object(external_this_wp_blocks_[\x22getFreeformContentHandlerName\x22])()) {\x0a      return false;\x0a    }\x0a  }\x0a\x0a  return !getEditedPostContent(state);\x0a}\x0a/**\x0a * Returns true if the post can be autosaved, or false otherwise.\x0a *\x0a * @param  {Object}  state Global application state.\x0a *\x0a * @return {boolean} Whether the post can be autosaved.\x0a */\x0a\x0afunction selectors_isEditedPostAutosaveable(state) {\x0a  // A post must contain a title, an excerpt, or non-empty content to be valid for autosaving.\x0a  if (!selectors_isEditedPostSaveable(state)) {\x0a    return false;\x0a  } // If we don\x27t already have an autosave, the post is autosaveable.\x0a\x0a\x0a  if (!hasAutosave(state)) {\x0a    return true;\x0a  } // To avoid an expensive content serialization, use the content dirtiness\x0a  // flag in place of content field comparison against the known autosave.\x0a  // This is not strictly accurate, and relies on a tolerance toward autosave\x0a  // request failures for unnecessary saves.\x0a\x0a\x0a  if (hasChangedContent(state)) {\x0a    return true;\x0a  } // If the title, excerpt or content has changed, the post is autosaveable.\x0a\x0a\x0a  var autosave = getAutosave(state);\x0a  return [\x27title\x27, \x27excerpt\x27].some(function (field) {\x0a    return autosave[field] !== selectors_getEditedPostAttribute(state, field);\x0a  });\x0a}\x0a/**\x0a * Returns the current autosave, or null if one is not set (i.e. if the post\x0a * has yet to be autosaved, or has been saved or published since the last\x0a * autosave).\x0a *\x0a * @param {Object} state Editor state.\x0a *\x0a * @return {?Object} Current autosave, if exists.\x0a */\x0a\x0afunction getAutosave(state) {\x0a  return state.autosave;\x0a}\x0a/**\x0a * Returns the true if there is an existing autosave, otherwise false.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether there is an existing autosave.\x0a */\x0a\x0afunction hasAutosave(state) {\x0a  return !!getAutosave(state);\x0a}\x0a/**\x0a * Return true if the post being edited is being scheduled. Preferring the\x0a * unsaved status values.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether the post has been published.\x0a */\x0a\x0afunction selectors_isEditedPostBeingScheduled(state) {\x0a  var date = selectors_getEditedPostAttribute(state, \x27date\x27); // Offset the date by one minute (network latency)\x0a\x0a  var checkedDate = new Date(Number(Object(external_this_wp_date_[\x22getDate\x22])(date)) - ONE_MINUTE_IN_MS);\x0a  return Object(external_this_wp_date_[\x22isInTheFuture\x22])(checkedDate);\x0a}\x0a/**\x0a * Returns whether the current post should be considered to have a \x22floating\x22\x0a * date (i.e. that it would publish \x22Immediately\x22 rather than at a set time).\x0a *\x0a * Unlike in the PHP backend, the REST API returns a full date string for posts\x0a * where the 0000-00-00T00:00:00 placeholder is present in the database. To\x0a * infer that a post is set to publish \x22Immediately\x22 we check whether the date\x0a * and modified date are the same.\x0a *\x0a * @param  {Object}  state Editor state.\x0a *\x0a * @return {boolean} Whether the edited post has a floating date value.\x0a */\x0a\x0afunction isEditedPostDateFloating(state) {\x0a  var date = selectors_getEditedPostAttribute(state, \x27date\x27);\x0a  var modified = selectors_getEditedPostAttribute(state, \x27modified\x27);\x0a  var status = selectors_getEditedPostAttribute(state, \x27status\x27);\x0a\x0a  if (status === \x27draft\x27 || status === \x27auto-draft\x27 || status === \x27pending\x27) {\x0a    return date === modified;\x0a  }\x0a\x0a  return false;\x0a}\x0a/**\x0a * Returns true if the post is currently being saved, or false otherwise.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether post is being saved.\x0a */\x0a\x0afunction selectors_isSavingPost(state) {\x0a  return state.saving.requesting;\x0a}\x0a/**\x0a * Returns true if a previous post save was attempted successfully, or false\x0a * otherwise.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether the post was saved successfully.\x0a */\x0a\x0afunction didPostSaveRequestSucceed(state) {\x0a  return state.saving.successful;\x0a}\x0a/**\x0a * Returns true if a previous post save was attempted but failed, or false\x0a * otherwise.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether the post save failed.\x0a */\x0a\x0afunction didPostSaveRequestFail(state) {\x0a  return !!state.saving.error;\x0a}\x0a/**\x0a * Returns true if the post is autosaving, or false otherwise.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether the post is autosaving.\x0a */\x0a\x0afunction selectors_isAutosavingPost(state) {\x0a  return selectors_isSavingPost(state) && !!state.saving.options.isAutosave;\x0a}\x0a/**\x0a * Returns true if the post is being previewed, or false otherwise.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether the post is being previewed.\x0a */\x0a\x0afunction isPreviewingPost(state) {\x0a  return selectors_isSavingPost(state) && !!state.saving.options.isPreview;\x0a}\x0a/**\x0a * Returns the post preview link\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {string?} Preview Link.\x0a */\x0a\x0afunction selectors_getEditedPostPreviewLink(state) {\x0a  var featuredImageId = selectors_getEditedPostAttribute(state, \x27featured_media\x27);\x0a  var previewLink = state.previewLink;\x0a\x0a  if (previewLink && featuredImageId) {\x0a    return Object(external_this_wp_url_[\x22addQueryArgs\x22])(previewLink, {\x0a      _thumbnail_id: featuredImageId\x0a    });\x0a  }\x0a\x0a  return previewLink;\x0a}\x0a/**\x0a * Returns a suggested post format for the current post, inferred only if there\x0a * is a single block within the post and it is of a type known to match a\x0a * default post format. Returns null if the format cannot be determined.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {?string} Suggested post format.\x0a */\x0a\x0afunction selectors_getSuggestedPostFormat(state) {\x0a  var blocks = state.editor.present.blocks.value;\x0a  var name; // If there is only one block in the content of the post grab its name\x0a  // so we can derive a suitable post format from it.\x0a\x0a  if (blocks.length === 1) {\x0a    name = blocks[0].name;\x0a  } // If there are two blocks in the content and the last one is a text blocks\x0a  // grab the name of the first one to also suggest a post format from it.\x0a\x0a\x0a  if (blocks.length === 2) {\x0a    if (blocks[1].name === \x27core/paragraph\x27) {\x0a      name = blocks[0].name;\x0a    }\x0a  } // We only convert to default post formats in core.\x0a\x0a\x0a  switch (name) {\x0a    case \x27core/image\x27:\x0a      return \x27image\x27;\x0a\x0a    case \x27core/quote\x27:\x0a    case \x27core/pullquote\x27:\x0a      return \x27quote\x27;\x0a\x0a    case \x27core/gallery\x27:\x0a      return \x27gallery\x27;\x0a\x0a    case \x27core/video\x27:\x0a    case \x27core-embed/youtube\x27:\x0a    case \x27core-embed/vimeo\x27:\x0a      return \x27video\x27;\x0a\x0a    case \x27core/audio\x27:\x0a    case \x27core-embed/spotify\x27:\x0a    case \x27core-embed/soundcloud\x27:\x0a      return \x27audio\x27;\x0a  }\x0a\x0a  return null;\x0a}\x0a/**\x0a * Returns a set of blocks which are to be used in consideration of the post\x27s\x0a * generated save content.\x0a *\x0a * @param {Object} state Editor state.\x0a *\x0a * @return {WPBlock[]} Filtered set of blocks for save.\x0a */\x0a\x0afunction getBlocksForSerialization(state) {\x0a  var blocks = state.editor.present.blocks.value; // WARNING: Any changes to the logic of this function should be verified\x0a  // against the implementation of isEditedPostEmpty, which bypasses this\x0a  // function for performance\x27 sake, in an assumption of this current logic\x0a  // being irrelevant to the optimized condition of emptiness.\x0a  // A single unmodified default block is assumed to be equivalent to an\x0a  // empty post.\x0a\x0a  var isSingleUnmodifiedDefaultBlock = blocks.length === 1 && Object(external_this_wp_blocks_[\x22isUnmodifiedDefaultBlock\x22])(blocks[0]);\x0a\x0a  if (isSingleUnmodifiedDefaultBlock) {\x0a    return [];\x0a  }\x0a\x0a  return blocks;\x0a}\x0a/**\x0a * Returns the content of the post being edited, preferring raw string edit\x0a * before falling back to serialization of block state.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {string} Post content.\x0a */\x0a\x0avar getEditedPostContent = Object(rememo[\x22a\x22 /* default */])(function (state) {\x0a  var edits = getPostEdits(state);\x0a\x0a  if (\x27content\x27 in edits) {\x0a    return edits.content;\x0a  }\x0a\x0a  var blocks = getBlocksForSerialization(state);\x0a  var content = Object(external_this_wp_blocks_[\x22serialize\x22])(blocks); // For compatibility purposes, treat a post consisting of a single\x0a  // freeform block as legacy content and downgrade to a pre-block-editor\x0a  // removep\x27d content format.\x0a\x0a  var isSingleFreeformBlock = blocks.length === 1 && blocks[0].name === Object(external_this_wp_blocks_[\x22getFreeformContentHandlerName\x22])();\x0a\x0a  if (isSingleFreeformBlock) {\x0a    return Object(external_this_wp_autop_[\x22removep\x22])(content);\x0a  }\x0a\x0a  return content;\x0a}, function (state) {\x0a  return [state.editor.present.blocks.value, state.editor.present.edits.content, state.initialEdits.content];\x0a});\x0a/**\x0a * Returns the reusable block with the given ID.\x0a *\x0a * @param {Object}        state Global application state.\x0a * @param {number|string} ref   The reusable block\x27s ID.\x0a *\x0a * @return {Object} The reusable block, or null if none exists.\x0a */\x0a\x0avar __experimentalGetReusableBlock = Object(rememo[\x22a\x22 /* default */])(function (state, ref) {\x0a  var block = state.reusableBlocks.data[ref];\x0a\x0a  if (!block) {\x0a    return null;\x0a  }\x0a\x0a  var isTemporary = isNaN(parseInt(ref));\x0a  return Object(objectSpread[\x22a\x22 /* default */])({}, block, {\x0a    id: isTemporary ? ref : +ref,\x0a    isTemporary: isTemporary\x0a  });\x0a}, function (state, ref) {\x0a  return [state.reusableBlocks.data[ref]];\x0a});\x0a/**\x0a * Returns whether or not the reusable block with the given ID is being saved.\x0a *\x0a * @param {Object} state Global application state.\x0a * @param {string} ref   The reusable block\x27s ID.\x0a *\x0a * @return {boolean} Whether or not the reusable block is being saved.\x0a */\x0a\x0afunction __experimentalIsSavingReusableBlock(state, ref) {\x0a  return state.reusableBlocks.isSaving[ref] || false;\x0a}\x0a/**\x0a * Returns true if the reusable block with the given ID is being fetched, or\x0a * false otherwise.\x0a *\x0a * @param {Object} state Global application state.\x0a * @param {string} ref   The reusable block\x27s ID.\x0a *\x0a * @return {boolean} Whether the reusable block is being fetched.\x0a */\x0a\x0afunction __experimentalIsFetchingReusableBlock(state, ref) {\x0a  return !!state.reusableBlocks.isFetching[ref];\x0a}\x0a/**\x0a * Returns an array of all reusable blocks.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {Array} An array of all reusable blocks.\x0a */\x0a\x0avar __experimentalGetReusableBlocks = Object(rememo[\x22a\x22 /* default */])(function (state) {\x0a  return Object(external_lodash_[\x22map\x22])(state.reusableBlocks.data, function (value, ref) {\x0a    return __experimentalGetReusableBlock(state, ref);\x0a  });\x0a}, function (state) {\x0a  return [state.reusableBlocks.data];\x0a});\x0a/**\x0a * Returns state object prior to a specified optimist transaction ID, or `null`\x0a * if the transaction corresponding to the given ID cannot be found.\x0a *\x0a * @param {Object} state         Current global application state.\x0a * @param {Object} transactionId Optimist transaction ID.\x0a *\x0a * @return {Object} Global application state prior to transaction.\x0a */\x0a\x0afunction getStateBeforeOptimisticTransaction(state, transactionId) {\x0a  var transaction = Object(external_lodash_[\x22find\x22])(state.optimist, function (entry) {\x0a    return entry.beforeState && Object(external_lodash_[\x22get\x22])(entry.action, [\x27optimist\x27, \x27id\x27]) === transactionId;\x0a  });\x0a  return transaction ? transaction.beforeState : null;\x0a}\x0a/**\x0a * Returns true if the post is being published, or false otherwise.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether post is being published.\x0a */\x0a\x0afunction selectors_isPublishingPost(state) {\x0a  if (!selectors_isSavingPost(state)) {\x0a    return false;\x0a  } // Saving is optimistic, so assume that current post would be marked as\x0a  // published if publishing\x0a\x0a\x0a  if (!selectors_isCurrentPostPublished(state)) {\x0a    return false;\x0a  } // Use post update transaction ID to retrieve the state prior to the\x0a  // optimistic transaction\x0a\x0a\x0a  var stateBeforeRequest = getStateBeforeOptimisticTransaction(state, POST_UPDATE_TRANSACTION_ID); // Consider as publishing when current post prior to request was not\x0a  // considered published\x0a\x0a  return !!stateBeforeRequest && !selectors_isCurrentPostPublished(stateBeforeRequest);\x0a}\x0a/**\x0a * Returns whether the permalink is editable or not.\x0a *\x0a * @param {Object} state Editor state.\x0a *\x0a * @return {boolean} Whether or not the permalink is editable.\x0a */\x0a\x0afunction selectors_isPermalinkEditable(state) {\x0a  var permalinkTemplate = selectors_getEditedPostAttribute(state, \x27permalink_template\x27);\x0a  return PERMALINK_POSTNAME_REGEX.test(permalinkTemplate);\x0a}\x0a/**\x0a * Returns the permalink for the post.\x0a *\x0a * @param {Object} state Editor state.\x0a *\x0a * @return {?string} The permalink, or null if the post is not viewable.\x0a */\x0a\x0afunction getPermalink(state) {\x0a  var permalinkParts = selectors_getPermalinkParts(state);\x0a\x0a  if (!permalinkParts) {\x0a    return null;\x0a  }\x0a\x0a  var prefix = permalinkParts.prefix,\x0a      postName = permalinkParts.postName,\x0a      suffix = permalinkParts.suffix;\x0a\x0a  if (selectors_isPermalinkEditable(state)) {\x0a    return prefix + postName + suffix;\x0a  }\x0a\x0a  return prefix;\x0a}\x0a/**\x0a * Returns the permalink for a post, split into it\x27s three parts: the prefix,\x0a * the postName, and the suffix.\x0a *\x0a * @param {Object} state Editor state.\x0a *\x0a * @return {Object} An object containing the prefix, postName, and suffix for\x0a *                  the permalink, or null if the post is not viewable.\x0a */\x0a\x0afunction selectors_getPermalinkParts(state) {\x0a  var permalinkTemplate = selectors_getEditedPostAttribute(state, \x27permalink_template\x27);\x0a\x0a  if (!permalinkTemplate) {\x0a    return null;\x0a  }\x0a\x0a  var postName = selectors_getEditedPostAttribute(state, \x27slug\x27) || selectors_getEditedPostAttribute(state, \x27generated_slug\x27);\x0a\x0a  var _permalinkTemplate$sp = permalinkTemplate.split(PERMALINK_POSTNAME_REGEX),\x0a      _permalinkTemplate$sp2 = Object(slicedToArray[\x22a\x22 /* default */])(_permalinkTemplate$sp, 2),\x0a      prefix = _permalinkTemplate$sp2[0],\x0a      suffix = _permalinkTemplate$sp2[1];\x0a\x0a  return {\x0a    prefix: prefix,\x0a    postName: postName,\x0a    suffix: suffix\x0a  };\x0a}\x0a/**\x0a * Returns true if an optimistic transaction is pending commit, for which the\x0a * before state satisfies the given predicate function.\x0a *\x0a * @param {Object}   state     Editor state.\x0a * @param {Function} predicate Function given state, returning true if match.\x0a *\x0a * @return {boolean} Whether predicate matches for some history.\x0a */\x0a\x0afunction inSomeHistory(state, predicate) {\x0a  var optimist = state.optimist; // In recursion, optimist state won\x27t exist. Assume exhausted options.\x0a\x0a  if (!optimist) {\x0a    return false;\x0a  }\x0a\x0a  return optimist.some(function (_ref) {\x0a    var beforeState = _ref.beforeState;\x0a    return beforeState && predicate(beforeState);\x0a  });\x0a}\x0a/**\x0a * Returns whether the post is locked.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Is locked.\x0a */\x0a\x0afunction isPostLocked(state) {\x0a  return state.postLock.isLocked;\x0a}\x0a/**\x0a * Returns whether post saving is locked.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Is locked.\x0a */\x0a\x0afunction selectors_isPostSavingLocked(state) {\x0a  return Object.keys(state.postSavingLock).length \x3e 0;\x0a}\x0a/**\x0a * Returns whether the edition of the post has been taken over.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Is post lock takeover.\x0a */\x0a\x0afunction isPostLockTakeover(state) {\x0a  return state.postLock.isTakeover;\x0a}\x0a/**\x0a * Returns details about the post lock user.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {Object} A user object.\x0a */\x0a\x0afunction getPostLockUser(state) {\x0a  return state.postLock.user;\x0a}\x0a/**\x0a * Returns the active post lock.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {Object} The lock object.\x0a */\x0a\x0afunction getActivePostLock(state) {\x0a  return state.postLock.activePostLock;\x0a}\x0a/**\x0a * Returns whether or not the user has the unfiltered_html capability.\x0a *\x0a * @param {Object} state Editor state.\x0a *\x0a * @return {boolean} Whether the user can or can\x27t post unfiltered HTML.\x0a */\x0a\x0afunction canUserUseUnfilteredHTML(state) {\x0a  return Object(external_lodash_[\x22has\x22])(selectors_getCurrentPost(state), [\x27_links\x27, \x27wp:action-unfiltered-html\x27]);\x0a}\x0a/**\x0a * Returns whether the pre-publish panel should be shown\x0a * or skipped when the user clicks the \x22publish\x22 button.\x0a *\x0a * @param {Object} state Global application state.\x0a *\x0a * @return {boolean} Whether the pre-publish panel should be shown or not.\x0a */\x0a\x0afunction selectors_isPublishSidebarEnabled(state) {\x0a  if (state.preferences.hasOwnProperty(\x27isPublishSidebarEnabled\x27)) {\x0a    return state.preferences.isPublishSidebarEnabled;\x0a  }\x0a\x0a  return PREFERENCES_DEFAULTS.isPublishSidebarEnabled;\x0a}\x0a/**\x0a * Return the current block list.\x0a *\x0a * @param {Object} state\x0a * @return {Array} Block list.\x0a */\x0a\x0afunction getEditorBlocks(state) {\x0a  return state.editor.present.blocks.value;\x0a}\x0a/**\x0a * Is the editor ready\x0a *\x0a * @param {Object} state\x0a * @return {boolean} is Ready.\x0a */\x0a\x0afunction __unstableIsEditorReady(state) {\x0a  return state.isReady;\x0a}\x0a/**\x0a * Returns the post editor settings.\x0a *\x0a * @param {Object} state Editor state.\x0a *\x0a * @return {Object} The editor settings object.\x0a */\x0a\x0afunction selectors_getEditorSettings(state) {\x0a  return state.editorSettings;\x0a}\x0a/*\x0a * Backward compatibility\x0a */\x0a\x0afunction getBlockEditorSelector(name) {\x0a  return Object(external_this_wp_data_[\x22createRegistrySelector\x22])(function (select) {\x0a    return function (state) {\x0a      var _select;\x0a\x0a      for (var _len = arguments.length, args = new Array(_len \x3e 1 ? _len - 1 : 0), _key = 1; _key \x3c _len; _key++) {\x0a        args[_key - 1] = arguments[_key];\x0a      }\x0a\x0a      return (_select = select(\x27core/block-editor\x27))[name].apply(_select, args);\x0a    };\x0a  });\x0a}\x0a\x0avar getBlockDependantsCacheBust = getBlockEditorSelector(\x27getBlockDependantsCacheBust\x27);\x0avar selectors_getBlockName = getBlockEditorSelector(\x27getBlockName\x27);\x0avar isBlockValid = getBlockEditorSelector(\x27isBlockValid\x27);\x0avar getBlockAttributes = getBlockEditorSelector(\x27getBlockAttributes\x27);\x0avar getBlock = getBlockEditorSelector(\x27getBlock\x27);\x0avar selectors_getBlocks = getBlockEditorSelector(\x27getBlocks\x27);\x0avar __unstableGetBlockWithoutInnerBlocks = getBlockEditorSelector(\x27__unstableGetBlockWithoutInnerBlocks\x27);\x0avar getClientIdsOfDescendants = getBlockEditorSelector(\x27getClientIdsOfDescendants\x27);\x0avar getClientIdsWithDescendants = getBlockEditorSelector(\x27getClientIdsWithDescendants\x27);\x0avar getGlobalBlockCount = getBlockEditorSelector(\x27getGlobalBlockCount\x27);\x0avar getBlocksByClientId = getBlockEditorSelector(\x27getBlocksByClientId\x27);\x0avar getBlockCount = getBlockEditorSelector(\x27getBlockCount\x27);\x0avar getBlockSelectionStart = getBlockEditorSelector(\x27getBlockSelectionStart\x27);\x0avar getBlockSelectionEnd = getBlockEditorSelector(\x27getBlockSelectionEnd\x27);\x0avar getSelectedBlockCount = getBlockEditorSelector(\x27getSelectedBlockCount\x27);\x0avar hasSelectedBlock = getBlockEditorSelector(\x27hasSelectedBlock\x27);\x0avar selectors_getSelectedBlockClientId = getBlockEditorSelector(\x27getSelectedBlockClientId\x27);\x0avar getSelectedBlock = getBlockEditorSelector(\x27getSelectedBlock\x27);\x0avar getBlockRootClientId = getBlockEditorSelector(\x27getBlockRootClientId\x27);\x0avar getBlockHierarchyRootClientId = getBlockEditorSelector(\x27getBlockHierarchyRootClientId\x27);\x0avar getAdjacentBlockClientId = getBlockEditorSelector(\x27getAdjacentBlockClientId\x27);\x0avar getPreviousBlockClientId = getBlockEditorSelector(\x27getPreviousBlockClientId\x27);\x0avar getNextBlockClientId = getBlockEditorSelector(\x27getNextBlockClientId\x27);\x0avar getSelectedBlocksInitialCaretPosition = getBlockEditorSelector(\x27getSelectedBlocksInitialCaretPosition\x27);\x0avar getMultiSelectedBlockClientIds = getBlockEditorSelector(\x27getMultiSelectedBlockClientIds\x27);\x0avar getMultiSelectedBlocks = getBlockEditorSelector(\x27getMultiSelectedBlocks\x27);\x0avar getFirstMultiSelectedBlockClientId = getBlockEditorSelector(\x27getFirstMultiSelectedBlockClientId\x27);\x0avar getLastMultiSelectedBlockClientId = getBlockEditorSelector(\x27getLastMultiSelectedBlockClientId\x27);\x0avar isFirstMultiSelectedBlock = getBlockEditorSelector(\x27isFirstMultiSelectedBlock\x27);\x0avar isBlockMultiSelected = getBlockEditorSelector(\x27isBlockMultiSelected\x27);\x0avar isAncestorMultiSelected = getBlockEditorSelector(\x27isAncestorMultiSelected\x27);\x0avar getMultiSelectedBlocksStartClientId = getBlockEditorSelector(\x27getMultiSelectedBlocksStartClientId\x27);\x0avar getMultiSelectedBlocksEndClientId = getBlockEditorSelector(\x27getMultiSelectedBlocksEndClientId\x27);\x0avar getBlockOrder = getBlockEditorSelector(\x27getBlockOrder\x27);\x0avar getBlockIndex = getBlockEditorSelector(\x27getBlockIndex\x27);\x0avar isBlockSelected = getBlockEditorSelector(\x27isBlockSelected\x27);\x0avar hasSelectedInnerBlock = getBlockEditorSelector(\x27hasSelectedInnerBlock\x27);\x0avar isBlockWithinSelection = getBlockEditorSelector(\x27isBlockWithinSelection\x27);\x0avar hasMultiSelection = getBlockEditorSelector(\x27hasMultiSelection\x27);\x0avar isMultiSelecting = getBlockEditorSelector(\x27isMultiSelecting\x27);\x0avar isSelectionEnabled = getBlockEditorSelector(\x27isSelectionEnabled\x27);\x0avar getBlockMode = getBlockEditorSelector(\x27getBlockMode\x27);\x0avar selectors_isTyping = getBlockEditorSelector(\x27isTyping\x27);\x0avar selectors_isCaretWithinFormattedText = getBlockEditorSelector(\x27isCaretWithinFormattedText\x27);\x0avar getBlockInsertionPoint = getBlockEditorSelector(\x27getBlockInsertionPoint\x27);\x0avar isBlockInsertionPointVisible = getBlockEditorSelector(\x27isBlockInsertionPointVisible\x27);\x0avar isValidTemplate = getBlockEditorSelector(\x27isValidTemplate\x27);\x0avar getTemplate = getBlockEditorSelector(\x27getTemplate\x27);\x0avar getTemplateLock = getBlockEditorSelector(\x27getTemplateLock\x27);\x0avar canInsertBlockType = getBlockEditorSelector(\x27canInsertBlockType\x27);\x0avar selectors_getInserterItems = getBlockEditorSelector(\x27getInserterItems\x27);\x0avar hasInserterItems = getBlockEditorSelector(\x27hasInserterItems\x27);\x0avar getBlockListSettings = getBlockEditorSelector(\x27getBlockListSettings\x27);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/store/effects/reusable-blocks.js\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a // TODO: Ideally this would be the only dispatch in scope. This requires either\x0a// refactoring editor actions to yielded controls, or replacing direct dispatch\x0a// on the editor store with action creators (e.g. `REMOVE_REUSABLE_BLOCK`).\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Module Constants\x0a */\x0a\x0avar REUSABLE_BLOCK_NOTICE_ID = \x27REUSABLE_BLOCK_NOTICE_ID\x27;\x0a/**\x0a * Fetch Reusable Blocks Effect Handler.\x0a *\x0a * @param {Object} action  action object.\x0a * @param {Object} store   Redux Store.\x0a */\x0a\x0avar fetchReusableBlocks =\x0a/*#__PURE__*/\x0afunction () {\x0a  var _ref = Object(asyncToGenerator[\x22a\x22 /* default */])(\x0a  /*#__PURE__*/\x0a  regenerator_default.a.mark(function _callee(action, store) {\x0a    var id, dispatch, postType, posts, results;\x0a    return regenerator_default.a.wrap(function _callee$(_context) {\x0a      while (1) {\x0a        switch (_context.prev = _context.next) {\x0a          case 0:\x0a            id = action.id;\x0a            dispatch = store.dispatch; // TODO: these are potentially undefined, this fix is in place\x0a            // until there is a filter to not use reusable blocks if undefined\x0a\x0a            _context.next = 4;\x0a            return external_this_wp_apiFetch_default()({\x0a              path: \x27/wp/v2/types/wp_block\x27\x0a            });\x0a\x0a          case 4:\x0a            postType = _context.sent;\x0a\x0a            if (postType) {\x0a              _context.next = 7;\x0a              break;\x0a            }\x0a\x0a            return _context.abrupt(\x22return\x22);\x0a\x0a          case 7:\x0a            _context.prev = 7;\x0a\x0a            if (!id) {\x0a              _context.next = 15;\x0a              break;\x0a            }\x0a\x0a            _context.next = 11;\x0a            return external_this_wp_apiFetch_default()({\x0a              path: \x22/wp/v2/\x22.concat(postType.rest_base, \x22/\x22).concat(id)\x0a            });\x0a\x0a          case 11:\x0a            _context.t0 = _context.sent;\x0a            posts = [_context.t0];\x0a            _context.next = 18;\x0a            break;\x0a\x0a          case 15:\x0a            _context.next = 17;\x0a            return external_this_wp_apiFetch_default()({\x0a              path: \x22/wp/v2/\x22.concat(postType.rest_base, \x22?per_page=-1\x22)\x0a            });\x0a\x0a          case 17:\x0a            posts = _context.sent;\x0a\x0a          case 18:\x0a            results = Object(external_lodash_[\x22compact\x22])(Object(external_lodash_[\x22map\x22])(posts, function (post) {\x0a              if (post.status !== \x27publish\x27 || post.content.protected) {\x0a                return null;\x0a              }\x0a\x0a              var parsedBlocks = Object(external_this_wp_blocks_[\x22parse\x22])(post.content.raw);\x0a              return {\x0a                reusableBlock: {\x0a                  id: post.id,\x0a                  title: getPostRawValue(post.title)\x0a                },\x0a                parsedBlock: parsedBlocks.length === 1 ? parsedBlocks[0] : Object(external_this_wp_blocks_[\x22createBlock\x22])(\x27core/template\x27, {}, parsedBlocks)\x0a              };\x0a            }));\x0a\x0a            if (results.length) {\x0a              dispatch(__experimentalReceiveReusableBlocks(results));\x0a            }\x0a\x0a            dispatch({\x0a              type: \x27FETCH_REUSABLE_BLOCKS_SUCCESS\x27,\x0a              id: id\x0a            });\x0a            _context.next = 26;\x0a            break;\x0a\x0a          case 23:\x0a            _context.prev = 23;\x0a            _context.t1 = _context[\x22catch\x22](7);\x0a            dispatch({\x0a              type: \x27FETCH_REUSABLE_BLOCKS_FAILURE\x27,\x0a              id: id,\x0a              error: _context.t1\x0a            });\x0a\x0a          case 26:\x0a          case \x22end\x22:\x0a            return _context.stop();\x0a        }\x0a      }\x0a    }, _callee, this, [[7, 23]]);\x0a  }));\x0a\x0a  return function fetchReusableBlocks(_x, _x2) {\x0a    return _ref.apply(this, arguments);\x0a  };\x0a}();\x0a/**\x0a * Save Reusable Blocks Effect Handler.\x0a *\x0a * @param {Object} action  action object.\x0a * @param {Object} store   Redux Store.\x0a */\x0a\x0avar saveReusableBlocks =\x0a/*#__PURE__*/\x0afunction () {\x0a  var _ref2 = Object(asyncToGenerator[\x22a\x22 /* default */])(\x0a  /*#__PURE__*/\x0a  regenerator_default.a.mark(function _callee2(action, store) {\x0a    var postType, id, dispatch, state, _getReusableBlock, clientId, title, isTemporary, reusableBlock, content, data, path, method, updatedReusableBlock, message;\x0a\x0a    return regenerator_default.a.wrap(function _callee2$(_context2) {\x0a      while (1) {\x0a        switch (_context2.prev = _context2.next) {\x0a          case 0:\x0a            _context2.next = 2;\x0a            return external_this_wp_apiFetch_default()({\x0a              path: \x27/wp/v2/types/wp_block\x27\x0a            });\x0a\x0a          case 2:\x0a            postType = _context2.sent;\x0a\x0a            if (postType) {\x0a              _context2.next = 5;\x0a              break;\x0a            }\x0a\x0a            return _context2.abrupt(\x22return\x22);\x0a\x0a          case 5:\x0a            id = action.id;\x0a            dispatch = store.dispatch;\x0a            state = store.getState();\x0a            _getReusableBlock = __experimentalGetReusableBlock(state, id), clientId = _getReusableBlock.clientId, title = _getReusableBlock.title, isTemporary = _getReusableBlock.isTemporary;\x0a            reusableBlock = Object(external_this_wp_data_[\x22select\x22])(\x27core/block-editor\x27).getBlock(clientId);\x0a            content = Object(external_this_wp_blocks_[\x22serialize\x22])(reusableBlock.name === \x27core/template\x27 ? reusableBlock.innerBlocks : reusableBlock);\x0a            data = isTemporary ? {\x0a              title: title,\x0a              content: content,\x0a              status: \x27publish\x27\x0a            } : {\x0a              id: id,\x0a              title: title,\x0a              content: content,\x0a              status: \x27publish\x27\x0a            };\x0a            path = isTemporary ? \x22/wp/v2/\x22.concat(postType.rest_base) : \x22/wp/v2/\x22.concat(postType.rest_base, \x22/\x22).concat(id);\x0a            method = isTemporary ? \x27POST\x27 : \x27PUT\x27;\x0a            _context2.prev = 14;\x0a            _context2.next = 17;\x0a            return external_this_wp_apiFetch_default()({\x0a              path: path,\x0a              data: data,\x0a              method: method\x0a            });\x0a\x0a          case 17:\x0a            updatedReusableBlock = _context2.sent;\x0a            dispatch({\x0a              type: \x27SAVE_REUSABLE_BLOCK_SUCCESS\x27,\x0a              updatedId: updatedReusableBlock.id,\x0a              id: id\x0a            });\x0a            message = isTemporary ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Block created.\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Block updated.\x27);\x0a            Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/notices\x27).createSuccessNotice(message, {\x0a              id: REUSABLE_BLOCK_NOTICE_ID\x0a            });\x0a\x0a            Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/block-editor\x27).__unstableSaveReusableBlock(id, updatedReusableBlock.id);\x0a\x0a            _context2.next = 28;\x0a            break;\x0a\x0a          case 24:\x0a            _context2.prev = 24;\x0a            _context2.t0 = _context2[\x22catch\x22](14);\x0a            dispatch({\x0a              type: \x27SAVE_REUSABLE_BLOCK_FAILURE\x27,\x0a              id: id\x0a            });\x0a            Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/notices\x27).createErrorNotice(_context2.t0.message, {\x0a              id: REUSABLE_BLOCK_NOTICE_ID\x0a            });\x0a\x0a          case 28:\x0a          case \x22end\x22:\x0a            return _context2.stop();\x0a        }\x0a      }\x0a    }, _callee2, this, [[14, 24]]);\x0a  }));\x0a\x0a  return function saveReusableBlocks(_x3, _x4) {\x0a    return _ref2.apply(this, arguments);\x0a  };\x0a}();\x0a/**\x0a * Delete Reusable Blocks Effect Handler.\x0a *\x0a * @param {Object} action  action object.\x0a * @param {Object} store   Redux Store.\x0a */\x0a\x0avar deleteReusableBlocks =\x0a/*#__PURE__*/\x0afunction () {\x0a  var _ref3 = Object(asyncToGenerator[\x22a\x22 /* default */])(\x0a  /*#__PURE__*/\x0a  regenerator_default.a.mark(function _callee3(action, store) {\x0a    var postType, id, getState, dispatch, reusableBlock, allBlocks, associatedBlocks, associatedBlockClientIds, transactionId, message;\x0a    return regenerator_default.a.wrap(function _callee3$(_context3) {\x0a      while (1) {\x0a        switch (_context3.prev = _context3.next) {\x0a          case 0:\x0a            _context3.next = 2;\x0a            return external_this_wp_apiFetch_default()({\x0a              path: \x27/wp/v2/types/wp_block\x27\x0a            });\x0a\x0a          case 2:\x0a            postType = _context3.sent;\x0a\x0a            if (postType) {\x0a              _context3.next = 5;\x0a              break;\x0a            }\x0a\x0a            return _context3.abrupt(\x22return\x22);\x0a\x0a          case 5:\x0a            id = action.id;\x0a            getState = store.getState, dispatch = store.dispatch; // Don\x27t allow a reusable block with a temporary ID to be deleted\x0a\x0a            reusableBlock = __experimentalGetReusableBlock(getState(), id);\x0a\x0a            if (!(!reusableBlock || reusableBlock.isTemporary)) {\x0a              _context3.next = 10;\x0a              break;\x0a            }\x0a\x0a            return _context3.abrupt(\x22return\x22);\x0a\x0a          case 10:\x0a            // Remove any other blocks that reference this reusable block\x0a            allBlocks = Object(external_this_wp_data_[\x22select\x22])(\x27core/block-editor\x27).getBlocks();\x0a            associatedBlocks = allBlocks.filter(function (block) {\x0a              return Object(external_this_wp_blocks_[\x22isReusableBlock\x22])(block) && block.attributes.ref === id;\x0a            });\x0a            associatedBlockClientIds = associatedBlocks.map(function (block) {\x0a              return block.clientId;\x0a            });\x0a            transactionId = Object(external_lodash_[\x22uniqueId\x22])();\x0a            dispatch({\x0a              type: \x27REMOVE_REUSABLE_BLOCK\x27,\x0a              id: id,\x0a              optimist: {\x0a                type: redux_optimist[\x22BEGIN\x22],\x0a                id: transactionId\x0a              }\x0a            }); // Remove the parsed block.\x0a\x0a            Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/block-editor\x27).removeBlocks([].concat(Object(toConsumableArray[\x22a\x22 /* default */])(associatedBlockClientIds), [reusableBlock.clientId]));\x0a            _context3.prev = 16;\x0a            _context3.next = 19;\x0a            return external_this_wp_apiFetch_default()({\x0a              path: \x22/wp/v2/\x22.concat(postType.rest_base, \x22/\x22).concat(id),\x0a              method: \x27DELETE\x27\x0a            });\x0a\x0a          case 19:\x0a            dispatch({\x0a              type: \x27DELETE_REUSABLE_BLOCK_SUCCESS\x27,\x0a              id: id,\x0a              optimist: {\x0a                type: redux_optimist[\x22COMMIT\x22],\x0a                id: transactionId\x0a              }\x0a            });\x0a            message = Object(external_this_wp_i18n_[\x22__\x22])(\x27Block deleted.\x27);\x0a            Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/notices\x27).createSuccessNotice(message, {\x0a              id: REUSABLE_BLOCK_NOTICE_ID\x0a            });\x0a            _context3.next = 28;\x0a            break;\x0a\x0a          case 24:\x0a            _context3.prev = 24;\x0a            _context3.t0 = _context3[\x22catch\x22](16);\x0a            dispatch({\x0a              type: \x27DELETE_REUSABLE_BLOCK_FAILURE\x27,\x0a              id: id,\x0a              optimist: {\x0a                type: redux_optimist[\x22REVERT\x22],\x0a                id: transactionId\x0a              }\x0a            });\x0a            Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/notices\x27).createErrorNotice(_context3.t0.message, {\x0a              id: REUSABLE_BLOCK_NOTICE_ID\x0a            });\x0a\x0a          case 28:\x0a          case \x22end\x22:\x0a            return _context3.stop();\x0a        }\x0a      }\x0a    }, _callee3, this, [[16, 24]]);\x0a  }));\x0a\x0a  return function deleteReusableBlocks(_x5, _x6) {\x0a    return _ref3.apply(this, arguments);\x0a  };\x0a}();\x0a/**\x0a * Receive Reusable Blocks Effect Handler.\x0a *\x0a * @param {Object} action  action object.\x0a */\x0a\x0avar reusable_blocks_receiveReusableBlocks = function receiveReusableBlocks(action) {\x0a  Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/block-editor\x27).receiveBlocks(Object(external_lodash_[\x22map\x22])(action.results, \x27parsedBlock\x27));\x0a};\x0a/**\x0a * Convert a reusable block to a static block effect handler\x0a *\x0a * @param {Object} action  action object.\x0a * @param {Object} store   Redux Store.\x0a */\x0a\x0avar reusable_blocks_convertBlockToStatic = function convertBlockToStatic(action, store) {\x0a  var state = store.getState();\x0a  var oldBlock = Object(external_this_wp_data_[\x22select\x22])(\x27core/block-editor\x27).getBlock(action.clientId);\x0a  var reusableBlock = __experimentalGetReusableBlock(state, oldBlock.attributes.ref);\x0a  var referencedBlock = Object(external_this_wp_data_[\x22select\x22])(\x27core/block-editor\x27).getBlock(reusableBlock.clientId);\x0a  var newBlocks;\x0a\x0a  if (referencedBlock.name === \x27core/template\x27) {\x0a    newBlocks = referencedBlock.innerBlocks.map(function (innerBlock) {\x0a      return Object(external_this_wp_blocks_[\x22cloneBlock\x22])(innerBlock);\x0a    });\x0a  } else {\x0a    newBlocks = [Object(external_this_wp_blocks_[\x22cloneBlock\x22])(referencedBlock)];\x0a  }\x0a\x0a  Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/block-editor\x27).replaceBlocks(oldBlock.clientId, newBlocks);\x0a};\x0a/**\x0a * Convert a static block to a reusable block effect handler\x0a *\x0a * @param {Object} action  action object.\x0a * @param {Object} store   Redux Store.\x0a */\x0a\x0avar reusable_blocks_convertBlockToReusable = function convertBlockToReusable(action, store) {\x0a  var dispatch = store.dispatch;\x0a  var parsedBlock;\x0a\x0a  if (action.clientIds.length === 1) {\x0a    parsedBlock = Object(external_this_wp_data_[\x22select\x22])(\x27core/block-editor\x27).getBlock(action.clientIds[0]);\x0a  } else {\x0a    parsedBlock = Object(external_this_wp_blocks_[\x22createBlock\x22])(\x27core/template\x27, {}, Object(external_this_wp_data_[\x22select\x22])(\x27core/block-editor\x27).getBlocksByClientId(action.clientIds)); // This shouldn\x27t be necessary but at the moment\x0a    // we expect the content of the shared blocks to live in the blocks state.\x0a\x0a    Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/block-editor\x27).receiveBlocks([parsedBlock]);\x0a  }\x0a\x0a  var reusableBlock = {\x0a    id: Object(external_lodash_[\x22uniqueId\x22])(\x27reusable\x27),\x0a    clientId: parsedBlock.clientId,\x0a    title: Object(external_this_wp_i18n_[\x22__\x22])(\x27Untitled Reusable Block\x27)\x0a  };\x0a  dispatch(__experimentalReceiveReusableBlocks([{\x0a    reusableBlock: reusableBlock,\x0a    parsedBlock: parsedBlock\x0a  }]));\x0a  dispatch(__experimentalSaveReusableBlock(reusableBlock.id));\x0a  Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/block-editor\x27).replaceBlocks(action.clientIds, Object(external_this_wp_blocks_[\x22createBlock\x22])(\x27core/block\x27, {\x0a    ref: reusableBlock.id\x0a  })); // Re-add the original block to the store, since replaceBlock() will have removed it\x0a\x0a  Object(external_this_wp_data_[\x22dispatch\x22])(\x27core/block-editor\x27).receiveBlocks([parsedBlock]);\x0a};\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/store/effects.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a/* harmony default export */ var effects = ({\x0a  SETUP_EDITOR: function SETUP_EDITOR(action) {\x0a    var post = action.post,\x0a        edits = action.edits,\x0a        template = action.template; // In order to ensure maximum of a single parse during setup, edits are\x0a    // included as part of editor setup action. Assume edited content as\x0a    // canonical if provided, falling back to post.\x0a\x0a    var content;\x0a\x0a    if (Object(external_lodash_[\x22has\x22])(edits, [\x27content\x27])) {\x0a      content = edits.content;\x0a    } else {\x0a      content = post.content.raw;\x0a    }\x0a\x0a    var blocks = Object(external_this_wp_blocks_[\x22parse\x22])(content); // Apply a template for new posts only, if exists.\x0a\x0a    var isNewPost = post.status === \x27auto-draft\x27;\x0a\x0a    if (isNewPost && template) {\x0a      blocks = Object(external_this_wp_blocks_[\x22synchronizeBlocksWithTemplate\x22])(blocks, template);\x0a    }\x0a\x0a    return [actions_resetEditorBlocks(blocks), setupEditorState(post)];\x0a  },\x0a  FETCH_REUSABLE_BLOCKS: function FETCH_REUSABLE_BLOCKS(action, store) {\x0a    fetchReusableBlocks(action, store);\x0a  },\x0a  SAVE_REUSABLE_BLOCK: function SAVE_REUSABLE_BLOCK(action, store) {\x0a    saveReusableBlocks(action, store);\x0a  },\x0a  DELETE_REUSABLE_BLOCK: function DELETE_REUSABLE_BLOCK(action, store) {\x0a    deleteReusableBlocks(action, store);\x0a  },\x0a  RECEIVE_REUSABLE_BLOCKS: reusable_blocks_receiveReusableBlocks,\x0a  CONVERT_BLOCK_TO_STATIC: reusable_blocks_convertBlockToStatic,\x0a  CONVERT_BLOCK_TO_REUSABLE: reusable_blocks_convertBlockToReusable\x0a});\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/store/middlewares.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/**\x0a * Applies the custom middlewares used specifically in the editor module.\x0a *\x0a * @param {Object} store Store Object.\x0a *\x0a * @return {Object} Update Store Object.\x0a */\x0a\x0afunction applyMiddlewares(store) {\x0a  var middlewares = [refx_default()(effects), lib_default.a];\x0a\x0a  var enhancedDispatch = function enhancedDispatch() {\x0a    throw new Error(\x27Dispatching while constructing your middleware is not allowed. \x27 + \x27Other middleware would not be applied to this dispatch.\x27);\x0a  };\x0a\x0a  var chain = [];\x0a  var middlewareAPI = {\x0a    getState: store.getState,\x0a    dispatch: function dispatch() {\x0a      return enhancedDispatch.apply(void 0, arguments);\x0a    }\x0a  };\x0a  chain = middlewares.map(function (middleware) {\x0a    return middleware(middlewareAPI);\x0a  });\x0a  enhancedDispatch = external_lodash_[\x22flowRight\x22].apply(void 0, Object(toConsumableArray[\x22a\x22 /* default */])(chain))(store.dispatch);\x0a  store.dispatch = enhancedDispatch;\x0a  return store;\x0a}\x0a\x0a/* harmony default export */ var store_middlewares = (applyMiddlewares);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/store/index.js\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0avar store_store = Object(external_this_wp_data_[\x22registerStore\x22])(STORE_KEY, {\x0a  reducer: store_reducer,\x0a  selectors: selectors_namespaceObject,\x0a  actions: actions_namespaceObject,\x0a  controls: controls,\x0a  persist: [\x27preferences\x27]\x0a});\x0astore_middlewares(store_store);\x0a/* harmony default export */ var build_module_store = (store_store);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22hooks\x22]}\x0avar external_this_wp_hooks_ = __webpack_require__(26);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22element\x22]}\x0avar external_this_wp_element_ = __webpack_require__(0);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/autocompleters/block.js\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Returns the client ID of the parent where a newly inserted block would be\x0a * placed.\x0a *\x0a * @return {string} Client ID of the parent where a newly inserted block would\x0a *                  be placed.\x0a */\x0a\x0afunction defaultGetBlockInsertionParentClientId() {\x0a  return Object(external_this_wp_data_[\x22select\x22])(\x27core/block-editor\x27).getBlockInsertionPoint().rootClientId;\x0a}\x0a/**\x0a * Returns the inserter items for the specified parent block.\x0a *\x0a * @param {string} rootClientId Client ID of the block for which to retrieve\x0a *                              inserter items.\x0a *\x0a * @return {Array\x3cEditor.InserterItem\x3e} The inserter items for the specified\x0a *                                      parent.\x0a */\x0a\x0a\x0afunction defaultGetInserterItems(rootClientId) {\x0a  return Object(external_this_wp_data_[\x22select\x22])(\x27core/block-editor\x27).getInserterItems(rootClientId);\x0a}\x0a/**\x0a * Returns the name of the currently selected block.\x0a *\x0a * @return {string?} The name of the currently selected block or `null` if no\x0a *                   block is selected.\x0a */\x0a\x0a\x0afunction defaultGetSelectedBlockName() {\x0a  var _select = Object(external_this_wp_data_[\x22select\x22])(\x27core/block-editor\x27),\x0a      getSelectedBlockClientId = _select.getSelectedBlockClientId,\x0a      getBlockName = _select.getBlockName;\x0a\x0a  var selectedBlockClientId = getSelectedBlockClientId();\x0a  return selectedBlockClientId ? getBlockName(selectedBlockClientId) : null;\x0a}\x0a/**\x0a * Creates a blocks repeater for replacing the current block with a selected block type.\x0a *\x0a * @return {Completer} A blocks completer.\x0a */\x0a\x0a\x0afunction createBlockCompleter() {\x0a  var _ref = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {},\x0a      _ref$getBlockInsertio = _ref.getBlockInsertionParentClientId,\x0a      getBlockInsertionParentClientId = _ref$getBlockInsertio === void 0 ? defaultGetBlockInsertionParentClientId : _ref$getBlockInsertio,\x0a      _ref$getInserterItems = _ref.getInserterItems,\x0a      getInserterItems = _ref$getInserterItems === void 0 ? defaultGetInserterItems : _ref$getInserterItems,\x0a      _ref$getSelectedBlock = _ref.getSelectedBlockName,\x0a      getSelectedBlockName = _ref$getSelectedBlock === void 0 ? defaultGetSelectedBlockName : _ref$getSelectedBlock;\x0a\x0a  return {\x0a    name: \x27blocks\x27,\x0a    className: \x27editor-autocompleters__block\x27,\x0a    triggerPrefix: \x27/\x27,\x0a    options: function options() {\x0a      var selectedBlockName = getSelectedBlockName();\x0a      return getInserterItems(getBlockInsertionParentClientId()).filter( // Avoid offering to replace the current block with a block of the same type.\x0a      function (inserterItem) {\x0a        return selectedBlockName !== inserterItem.name;\x0a      });\x0a    },\x0a    getOptionKeywords: function getOptionKeywords(inserterItem) {\x0a      var title = inserterItem.title,\x0a          _inserterItem$keyword = inserterItem.keywords,\x0a          keywords = _inserterItem$keyword === void 0 ? [] : _inserterItem$keyword,\x0a          category = inserterItem.category;\x0a      return [category].concat(Object(toConsumableArray[\x22a\x22 /* default */])(keywords), [title]);\x0a    },\x0a    getOptionLabel: function getOptionLabel(inserterItem) {\x0a      var icon = inserterItem.icon,\x0a          title = inserterItem.title;\x0a      return [Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22BlockIcon\x22], {\x0a        key: \x22icon\x22,\x0a        icon: icon,\x0a        showColors: true\x0a      }), title];\x0a    },\x0a    allowContext: function allowContext(before, after) {\x0a      return !(/\x5cS/.test(before) || /\x5cS/.test(after));\x0a    },\x0a    getOptionCompletion: function getOptionCompletion(inserterItem) {\x0a      var name = inserterItem.name,\x0a          initialAttributes = inserterItem.initialAttributes;\x0a      return {\x0a        action: \x27replace\x27,\x0a        value: Object(external_this_wp_blocks_[\x22createBlock\x22])(name, initialAttributes)\x0a      };\x0a    },\x0a    isOptionDisabled: function isOptionDisabled(inserterItem) {\x0a      return inserterItem.isDisabled;\x0a    }\x0a  };\x0a}\x0a/**\x0a * Creates a blocks repeater for replacing the current block with a selected block type.\x0a *\x0a * @return {Completer} A blocks completer.\x0a */\x0a\x0a/* harmony default export */ var autocompleters_block = (createBlockCompleter());\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/autocompleters/user.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a/**\x0a* A user mentions completer.\x0a*\x0a* @type {Completer}\x0a*/\x0a\x0a/* harmony default export */ var autocompleters_user = ({\x0a  name: \x27users\x27,\x0a  className: \x27editor-autocompleters__user\x27,\x0a  triggerPrefix: \x27@\x27,\x0a  options: function options(search) {\x0a    var payload = \x27\x27;\x0a\x0a    if (search) {\x0a      payload = \x27?search=\x27 + encodeURIComponent(search);\x0a    }\x0a\x0a    return external_this_wp_apiFetch_default()({\x0a      path: \x27/wp/v2/users\x27 + payload\x0a    });\x0a  },\x0a  isDebounced: true,\x0a  getOptionKeywords: function getOptionKeywords(user) {\x0a    return [user.slug, user.name];\x0a  },\x0a  getOptionLabel: function getOptionLabel(user) {\x0a    return [Object(external_this_wp_element_[\x22createElement\x22])(\x22img\x22, {\x0a      key: \x22avatar\x22,\x0a      className: \x22editor-autocompleters__user-avatar\x22,\x0a      alt: \x22\x22,\x0a      src: user.avatar_urls[24]\x0a    }), Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a      key: \x22name\x22,\x0a      className: \x22editor-autocompleters__user-name\x22\x0a    }, user.name), Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a      key: \x22slug\x22,\x0a      className: \x22editor-autocompleters__user-slug\x22\x0a    }, user.slug)];\x0a  },\x0a  getOptionCompletion: function getOptionCompletion(user) {\x0a    return \x22@\x22.concat(user.slug);\x0a  }\x0a});\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/autocompleters/index.js\x0a\x0a\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\x0avar esm_extends = __webpack_require__(19);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules\x0avar objectWithoutProperties = __webpack_require__(21);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22components\x22]}\x0avar external_this_wp_components_ = __webpack_require__(4);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/server-side-render/index.js\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/* harmony default export */ var server_side_render = (function (_ref) {\x0a  var _ref$urlQueryArgs = _ref.urlQueryArgs,\x0a      urlQueryArgs = _ref$urlQueryArgs === void 0 ? {} : _ref$urlQueryArgs,\x0a      props = Object(objectWithoutProperties[\x22a\x22 /* default */])(_ref, [\x22urlQueryArgs\x22]);\x0a\x0a  var _select = Object(external_this_wp_data_[\x22select\x22])(\x27core/editor\x27),\x0a      getCurrentPostId = _select.getCurrentPostId;\x0a\x0a  urlQueryArgs = Object(objectSpread[\x22a\x22 /* default */])({\x0a    post_id: getCurrentPostId()\x0a  }, urlQueryArgs);\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22ServerSideRender\x22], Object(esm_extends[\x22a\x22 /* default */])({\x0a    urlQueryArgs: urlQueryArgs\x0a  }, props));\x0a});\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\x0avar classCallCheck = __webpack_require__(10);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\x0avar createClass = __webpack_require__(9);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\x0avar possibleConstructorReturn = __webpack_require__(11);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\x0avar getPrototypeOf = __webpack_require__(12);\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules\x0avar inherits = __webpack_require__(13);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22compose\x22]}\x0avar external_this_wp_compose_ = __webpack_require__(6);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/autosave-monitor/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0avar autosave_monitor_AutosaveMonitor =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(AutosaveMonitor, _Component);\x0a\x0a  function AutosaveMonitor() {\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, AutosaveMonitor);\x0a\x0a    return Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(AutosaveMonitor).apply(this, arguments));\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(AutosaveMonitor, [{\x0a    key: \x22componentDidUpdate\x22,\x0a    value: function componentDidUpdate(prevProps) {\x0a      var _this$props = this.props,\x0a          isDirty = _this$props.isDirty,\x0a          editsReference = _this$props.editsReference,\x0a          isAutosaveable = _this$props.isAutosaveable,\x0a          isAutosaving = _this$props.isAutosaving; // The edits reference is held for comparison to avoid scheduling an\x0a      // autosave if an edit has not been made since the last autosave\x0a      // completion. This is assigned when the autosave completes, and reset\x0a      // when an edit occurs.\x0a      //\x0a      // See: https://github.com/WordPress/gutenberg/issues/12318\x0a\x0a      if (editsReference !== prevProps.editsReference) {\x0a        this.didAutosaveForEditsReference = false;\x0a      }\x0a\x0a      if (!isAutosaving && prevProps.isAutosaving) {\x0a        this.didAutosaveForEditsReference = true;\x0a      }\x0a\x0a      if (prevProps.isDirty !== isDirty || prevProps.isAutosaveable !== isAutosaveable || prevProps.editsReference !== editsReference) {\x0a        this.toggleTimer(isDirty && isAutosaveable && !this.didAutosaveForEditsReference);\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22componentWillUnmount\x22,\x0a    value: function componentWillUnmount() {\x0a      this.toggleTimer(false);\x0a    }\x0a  }, {\x0a    key: \x22toggleTimer\x22,\x0a    value: function toggleTimer(isPendingSave) {\x0a      var _this = this;\x0a\x0a      clearTimeout(this.pendingSave);\x0a      var autosaveInterval = this.props.autosaveInterval;\x0a\x0a      if (isPendingSave) {\x0a        this.pendingSave = setTimeout(function () {\x0a          return _this.props.autosave();\x0a        }, autosaveInterval * 1000);\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      return null;\x0a    }\x0a  }]);\x0a\x0a  return AutosaveMonitor;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a/* harmony default export */ var autosave_monitor = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      isEditedPostDirty = _select.isEditedPostDirty,\x0a      isEditedPostAutosaveable = _select.isEditedPostAutosaveable,\x0a      getReferenceByDistinctEdits = _select.getReferenceByDistinctEdits,\x0a      isAutosavingPost = _select.isAutosavingPost;\x0a\x0a  var _select$getEditorSett = select(\x27core/editor\x27).getEditorSettings(),\x0a      autosaveInterval = _select$getEditorSett.autosaveInterval;\x0a\x0a  return {\x0a    isDirty: isEditedPostDirty(),\x0a    isAutosaveable: isEditedPostAutosaveable(),\x0a    editsReference: getReferenceByDistinctEdits(),\x0a    isAutosaving: isAutosavingPost(),\x0a    autosaveInterval: autosaveInterval\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    autosave: dispatch(\x27core/editor\x27).autosave\x0a  };\x0a})])(autosave_monitor_AutosaveMonitor));\x0a\x0a// EXTERNAL MODULE: ./node_modules/classnames/index.js\x0avar classnames = __webpack_require__(16);\x0avar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/document-outline/item.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0avar item_TableOfContentsItem = function TableOfContentsItem(_ref) {\x0a  var children = _ref.children,\x0a      isValid = _ref.isValid,\x0a      level = _ref.level,\x0a      _ref$path = _ref.path,\x0a      path = _ref$path === void 0 ? [] : _ref$path,\x0a      href = _ref.href,\x0a      onSelect = _ref.onSelect;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22li\x22, {\x0a    className: classnames_default()(\x27document-outline__item\x27, \x22is-\x22.concat(level.toLowerCase()), {\x0a      \x27is-invalid\x27: !isValid\x0a    })\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22a\x22, {\x0a    href: href,\x0a    className: \x22document-outline__button\x22,\x0a    onClick: onSelect\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a    className: \x22document-outline__emdash\x22,\x0a    \x22aria-hidden\x22: \x22true\x22\x0a  }), // path is an array of nodes that are ancestors of the heading starting in the top level node.\x0a  // This mapping renders each ancestor to make it easier for the user to know where the headings are nested.\x0a  path.map(function (_ref2, index) {\x0a    var clientId = _ref2.clientId;\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(\x22strong\x22, {\x0a      key: index,\x0a      className: \x22document-outline__level\x22\x0a    }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22BlockTitle\x22], {\x0a      clientId: clientId\x0a    }));\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(\x22strong\x22, {\x0a    className: \x22document-outline__level\x22\x0a  }, level), Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a    className: \x22document-outline__item-content\x22\x0a  }, children)));\x0a};\x0a\x0a/* harmony default export */ var document_outline_item = (item_TableOfContentsItem);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/document-outline/index.js\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/**\x0a * Module constants\x0a */\x0a\x0avar emptyHeadingContent = Object(external_this_wp_element_[\x22createElement\x22])(\x22em\x22, null, Object(external_this_wp_i18n_[\x22__\x22])(\x27(Empty heading)\x27));\x0avar incorrectLevelContent = [Object(external_this_wp_element_[\x22createElement\x22])(\x22br\x22, {\x0a  key: \x22incorrect-break\x22\x0a}), Object(external_this_wp_element_[\x22createElement\x22])(\x22em\x22, {\x0a  key: \x22incorrect-message\x22\x0a}, Object(external_this_wp_i18n_[\x22__\x22])(\x27(Incorrect heading level)\x27))];\x0avar singleH1Headings = [Object(external_this_wp_element_[\x22createElement\x22])(\x22br\x22, {\x0a  key: \x22incorrect-break-h1\x22\x0a}), Object(external_this_wp_element_[\x22createElement\x22])(\x22em\x22, {\x0a  key: \x22incorrect-message-h1\x22\x0a}, Object(external_this_wp_i18n_[\x22__\x22])(\x27(Your theme may already use a H1 for the post title)\x27))];\x0avar multipleH1Headings = [Object(external_this_wp_element_[\x22createElement\x22])(\x22br\x22, {\x0a  key: \x22incorrect-break-multiple-h1\x22\x0a}), Object(external_this_wp_element_[\x22createElement\x22])(\x22em\x22, {\x0a  key: \x22incorrect-message-multiple-h1\x22\x0a}, Object(external_this_wp_i18n_[\x22__\x22])(\x27(Multiple H1 headings are not recommended)\x27))];\x0a/**\x0a * Returns an array of heading blocks enhanced with the following properties:\x0a * path    - An array of blocks that are ancestors of the heading starting from a top-level node.\x0a *           Can be an empty array if the heading is a top-level node (is not nested inside another block).\x0a * level   - An integer with the heading level.\x0a * isEmpty - Flag indicating if the heading has no content.\x0a *\x0a * @param {?Array} blocks An array of blocks.\x0a * @param {?Array} path   An array of blocks that are ancestors of the blocks passed as blocks.\x0a *\x0a * @return {Array} An array of heading blocks enhanced with the properties described above.\x0a */\x0a\x0avar document_outline_computeOutlineHeadings = function computeOutlineHeadings() {\x0a  var blocks = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : [];\x0a  var path = arguments.length \x3e 1 && arguments[1] !== undefined ? arguments[1] : [];\x0a  return Object(external_lodash_[\x22flatMap\x22])(blocks, function () {\x0a    var block = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a\x0a    if (block.name === \x27core/heading\x27) {\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, block, {\x0a        path: path,\x0a        level: block.attributes.level,\x0a        isEmpty: isEmptyHeading(block)\x0a      });\x0a    }\x0a\x0a    return computeOutlineHeadings(block.innerBlocks, [].concat(Object(toConsumableArray[\x22a\x22 /* default */])(path), [block]));\x0a  });\x0a};\x0a\x0avar isEmptyHeading = function isEmptyHeading(heading) {\x0a  return !heading.attributes.content || heading.attributes.content.length === 0;\x0a};\x0a\x0avar document_outline_DocumentOutline = function DocumentOutline(_ref) {\x0a  var _ref$blocks = _ref.blocks,\x0a      blocks = _ref$blocks === void 0 ? [] : _ref$blocks,\x0a      title = _ref.title,\x0a      onSelect = _ref.onSelect,\x0a      isTitleSupported = _ref.isTitleSupported,\x0a      hasOutlineItemsDisabled = _ref.hasOutlineItemsDisabled;\x0a  var headings = document_outline_computeOutlineHeadings(blocks);\x0a\x0a  if (headings.length \x3c 1) {\x0a    return null;\x0a  }\x0a\x0a  var prevHeadingLevel = 1; // Not great but it\x27s the simplest way to locate the title right now.\x0a\x0a  var titleNode = document.querySelector(\x27.editor-post-title__input\x27);\x0a  var hasTitle = isTitleSupported && title && titleNode;\x0a  var countByLevel = Object(external_lodash_[\x22countBy\x22])(headings, \x27level\x27);\x0a  var hasMultipleH1 = countByLevel[1] \x3e 1;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22document-outline\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22ul\x22, null, hasTitle && Object(external_this_wp_element_[\x22createElement\x22])(document_outline_item, {\x0a    level: Object(external_this_wp_i18n_[\x22__\x22])(\x27Title\x27),\x0a    isValid: true,\x0a    onSelect: onSelect,\x0a    href: \x22#\x22.concat(titleNode.id),\x0a    isDisabled: hasOutlineItemsDisabled\x0a  }, title), headings.map(function (item, index) {\x0a    // Headings remain the same, go up by one, or down by any amount.\x0a    // Otherwise there are missing levels.\x0a    var isIncorrectLevel = item.level \x3e prevHeadingLevel + 1;\x0a    var isValid = !item.isEmpty && !isIncorrectLevel && !!item.level && (item.level !== 1 || !hasMultipleH1 && !hasTitle);\x0a    prevHeadingLevel = item.level;\x0a    return Object(external_this_wp_element_[\x22createElement\x22])(document_outline_item, {\x0a      key: index,\x0a      level: \x22H\x22.concat(item.level),\x0a      isValid: isValid,\x0a      path: item.path,\x0a      isDisabled: hasOutlineItemsDisabled,\x0a      href: \x22#block-\x22.concat(item.clientId),\x0a      onSelect: onSelect\x0a    }, item.isEmpty ? emptyHeadingContent : Object(external_this_wp_richText_[\x22getTextContent\x22])(Object(external_this_wp_richText_[\x22create\x22])({\x0a      html: item.attributes.content\x0a    })), isIncorrectLevel && incorrectLevelContent, item.level === 1 && hasMultipleH1 && multipleH1Headings, hasTitle && item.level === 1 && !hasMultipleH1 && singleH1Headings);\x0a  })));\x0a};\x0a/* harmony default export */ var document_outline = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/block-editor\x27),\x0a      getBlocks = _select.getBlocks;\x0a\x0a  var _select2 = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select2.getEditedPostAttribute;\x0a\x0a  var _select3 = select(\x27core\x27),\x0a      getPostType = _select3.getPostType;\x0a\x0a  var postType = getPostType(getEditedPostAttribute(\x27type\x27));\x0a  return {\x0a    title: getEditedPostAttribute(\x27title\x27),\x0a    blocks: getBlocks(),\x0a    isTitleSupported: Object(external_lodash_[\x22get\x22])(postType, [\x27supports\x27, \x27title\x27], false)\x0a  };\x0a}))(document_outline_DocumentOutline));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/document-outline/check.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0afunction DocumentOutlineCheck(_ref) {\x0a  var blocks = _ref.blocks,\x0a      children = _ref.children;\x0a  var headings = Object(external_lodash_[\x22filter\x22])(blocks, function (block) {\x0a    return block.name === \x27core/heading\x27;\x0a  });\x0a\x0a  if (headings.length \x3c 1) {\x0a    return null;\x0a  }\x0a\x0a  return children;\x0a}\x0a\x0a/* harmony default export */ var check = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    blocks: select(\x27core/block-editor\x27).getBlocks()\x0a  };\x0a})(DocumentOutlineCheck));\x0a\x0a// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\x0avar assertThisInitialized = __webpack_require__(3);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22keycodes\x22]}\x0avar external_this_wp_keycodes_ = __webpack_require__(18);\x0a\x0a// EXTERNAL MODULE: external {\x22this\x22:[\x22wp\x22,\x22deprecated\x22]}\x0avar external_this_wp_deprecated_ = __webpack_require__(49);\x0avar external_this_wp_deprecated_default = /*#__PURE__*/__webpack_require__.n(external_this_wp_deprecated_);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/global-keyboard-shortcuts/save-shortcut.js\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0afunction SaveShortcut(_ref) {\x0a  var onSave = _ref.onSave;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22KeyboardShortcuts\x22], {\x0a    bindGlobal: true,\x0a    shortcuts: Object(defineProperty[\x22a\x22 /* default */])({}, external_this_wp_keycodes_[\x22rawShortcut\x22].primary(\x27s\x27), function (event) {\x0a      event.preventDefault();\x0a      onSave();\x0a    })\x0a  });\x0a}\x0a/* harmony default export */ var save_shortcut = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      isEditedPostDirty = _select.isEditedPostDirty;\x0a\x0a  return {\x0a    isDirty: isEditedPostDirty()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, ownProps, _ref3) {\x0a  var select = _ref3.select;\x0a\x0a  var _dispatch = dispatch(\x27core/editor\x27),\x0a      savePost = _dispatch.savePost;\x0a\x0a  return {\x0a    onSave: function onSave() {\x0a      // TODO: This should be handled in the `savePost` effect in\x0a      // considering `isSaveable`. See note on `isEditedPostSaveable`\x0a      // selector about dirtiness and meta-boxes.\x0a      //\x0a      // See: `isEditedPostSaveable`\x0a      var _select2 = select(\x27core/editor\x27),\x0a          isEditedPostDirty = _select2.isEditedPostDirty;\x0a\x0a      if (!isEditedPostDirty()) {\x0a        return;\x0a      }\x0a\x0a      savePost();\x0a    }\x0a  };\x0a})])(SaveShortcut));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/global-keyboard-shortcuts/visual-editor-shortcuts.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar visual_editor_shortcuts_VisualEditorGlobalKeyboardShortcuts =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(VisualEditorGlobalKeyboardShortcuts, _Component);\x0a\x0a  function VisualEditorGlobalKeyboardShortcuts() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, VisualEditorGlobalKeyboardShortcuts);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(VisualEditorGlobalKeyboardShortcuts).apply(this, arguments));\x0a    _this.undoOrRedo = _this.undoOrRedo.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(VisualEditorGlobalKeyboardShortcuts, [{\x0a    key: \x22undoOrRedo\x22,\x0a    value: function undoOrRedo(event) {\x0a      var _this$props = this.props,\x0a          onRedo = _this$props.onRedo,\x0a          onUndo = _this$props.onUndo;\x0a\x0a      if (event.shiftKey) {\x0a        onRedo();\x0a      } else {\x0a        onUndo();\x0a      }\x0a\x0a      event.preventDefault();\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _ref;\x0a\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22BlockEditorKeyboardShortcuts\x22], null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22KeyboardShortcuts\x22], {\x0a        shortcuts: (_ref = {}, Object(defineProperty[\x22a\x22 /* default */])(_ref, external_this_wp_keycodes_[\x22rawShortcut\x22].primary(\x27z\x27), this.undoOrRedo), Object(defineProperty[\x22a\x22 /* default */])(_ref, external_this_wp_keycodes_[\x22rawShortcut\x22].primaryShift(\x27z\x27), this.undoOrRedo), _ref)\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(save_shortcut, null));\x0a    }\x0a  }]);\x0a\x0a  return VisualEditorGlobalKeyboardShortcuts;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0avar EnhancedVisualEditorGlobalKeyboardShortcuts = Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/editor\x27),\x0a      redo = _dispatch.redo,\x0a      undo = _dispatch.undo;\x0a\x0a  return {\x0a    onRedo: redo,\x0a    onUndo: undo\x0a  };\x0a})(visual_editor_shortcuts_VisualEditorGlobalKeyboardShortcuts);\x0a/* harmony default export */ var visual_editor_shortcuts = (EnhancedVisualEditorGlobalKeyboardShortcuts);\x0afunction EditorGlobalKeyboardShortcuts() {\x0a  external_this_wp_deprecated_default()(\x27EditorGlobalKeyboardShortcuts\x27, {\x0a    alternative: \x27VisualEditorGlobalKeyboardShortcuts\x27,\x0a    plugin: \x27Gutenberg\x27\x0a  });\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(EnhancedVisualEditorGlobalKeyboardShortcuts, null);\x0a}\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/global-keyboard-shortcuts/text-editor-shortcuts.js\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0afunction TextEditorGlobalKeyboardShortcuts() {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(save_shortcut, null);\x0a}\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/editor-history/redo.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0afunction EditorHistoryRedo(_ref) {\x0a  var hasRedo = _ref.hasRedo,\x0a      redo = _ref.redo;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a    icon: \x22redo\x22,\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Redo\x27),\x0a    shortcut: external_this_wp_keycodes_[\x22displayShortcut\x22].primaryShift(\x27z\x27) // If there are no redo levels we don\x27t want to actually disable this\x0a    // button, because it will remove focus for keyboard users.\x0a    // See: https://github.com/WordPress/gutenberg/issues/3486\x0a    ,\x0a    \x22aria-disabled\x22: !hasRedo,\x0a    onClick: hasRedo ? redo : undefined,\x0a    className: \x22editor-history__redo\x22\x0a  });\x0a}\x0a\x0a/* harmony default export */ var editor_history_redo = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    hasRedo: select(\x27core/editor\x27).hasEditorRedo()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    redo: dispatch(\x27core/editor\x27).redo\x0a  };\x0a})])(EditorHistoryRedo));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/editor-history/undo.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0afunction EditorHistoryUndo(_ref) {\x0a  var hasUndo = _ref.hasUndo,\x0a      undo = _ref.undo;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a    icon: \x22undo\x22,\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Undo\x27),\x0a    shortcut: external_this_wp_keycodes_[\x22displayShortcut\x22].primary(\x27z\x27) // If there are no undo levels we don\x27t want to actually disable this\x0a    // button, because it will remove focus for keyboard users.\x0a    // See: https://github.com/WordPress/gutenberg/issues/3486\x0a    ,\x0a    \x22aria-disabled\x22: !hasUndo,\x0a    onClick: hasUndo ? undo : undefined,\x0a    className: \x22editor-history__undo\x22\x0a  });\x0a}\x0a\x0a/* harmony default export */ var editor_history_undo = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    hasUndo: select(\x27core/editor\x27).hasEditorUndo()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    undo: dispatch(\x27core/editor\x27).undo\x0a  };\x0a})])(EditorHistoryUndo));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/template-validation-notice/index.js\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction TemplateValidationNotice(_ref) {\x0a  var isValid = _ref.isValid,\x0a      props = Object(objectWithoutProperties[\x22a\x22 /* default */])(_ref, [\x22isValid\x22]);\x0a\x0a  if (isValid) {\x0a    return null;\x0a  }\x0a\x0a  var confirmSynchronization = function confirmSynchronization() {\x0a    // eslint-disable-next-line no-alert\x0a    if (window.confirm(Object(external_this_wp_i18n_[\x22__\x22])(\x27Resetting the template may result in loss of content, do you want to continue?\x27))) {\x0a      props.synchronizeTemplate();\x0a    }\x0a  };\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Notice\x22], {\x0a    className: \x22editor-template-validation-notice\x22,\x0a    isDismissible: false,\x0a    status: \x22warning\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, null, Object(external_this_wp_i18n_[\x22__\x22])(\x27The content of your post doesn\xe2\x80\x99t match the template assigned to your post type.\x27)), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a    isDefault: true,\x0a    onClick: props.resetTemplateValidity\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Keep it as is\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a    onClick: confirmSynchronization,\x0a    isPrimary: true\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Reset the template\x27))));\x0a}\x0a\x0a/* harmony default export */ var template_validation_notice = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    isValid: select(\x27core/block-editor\x27).isValidTemplate()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/block-editor\x27),\x0a      setTemplateValidity = _dispatch.setTemplateValidity,\x0a      synchronizeTemplate = _dispatch.synchronizeTemplate;\x0a\x0a  return {\x0a    resetTemplateValidity: function resetTemplateValidity() {\x0a      return setTemplateValidity(true);\x0a    },\x0a    synchronizeTemplate: synchronizeTemplate\x0a  };\x0a})])(TemplateValidationNotice));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/editor-notices/index.js\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0afunction EditorNotices(_ref) {\x0a  var dismissible = _ref.dismissible,\x0a      notices = _ref.notices,\x0a      props = Object(objectWithoutProperties[\x22a\x22 /* default */])(_ref, [\x22dismissible\x22, \x22notices\x22]);\x0a\x0a  if (dismissible !== undefined) {\x0a    notices = Object(external_lodash_[\x22filter\x22])(notices, {\x0a      isDismissible: dismissible\x0a    });\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22NoticeList\x22], Object(esm_extends[\x22a\x22 /* default */])({\x0a    notices: notices\x0a  }, props), dismissible !== false && Object(external_this_wp_element_[\x22createElement\x22])(template_validation_notice, null));\x0a}\x0a/* harmony default export */ var editor_notices = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    notices: select(\x27core/notices\x27).getNotices()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onRemove: dispatch(\x27core/notices\x27).removeNotice\x0a  };\x0a})])(EditorNotices));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/error-boundary/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0avar error_boundary_ErrorBoundary =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(ErrorBoundary, _Component);\x0a\x0a  function ErrorBoundary() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, ErrorBoundary);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(ErrorBoundary).apply(this, arguments));\x0a    _this.reboot = _this.reboot.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.getContent = _this.getContent.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.state = {\x0a      error: null\x0a    };\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(ErrorBoundary, [{\x0a    key: \x22componentDidCatch\x22,\x0a    value: function componentDidCatch(error) {\x0a      this.setState({\x0a        error: error\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22reboot\x22,\x0a    value: function reboot() {\x0a      this.props.onError();\x0a    }\x0a  }, {\x0a    key: \x22getContent\x22,\x0a    value: function getContent() {\x0a      try {\x0a        // While `select` in a component is generally discouraged, it is\x0a        // used here because it (a) reduces the chance of data loss in the\x0a        // case of additional errors by performing a direct retrieval and\x0a        // (b) avoids the performance cost associated with unnecessary\x0a        // content serialization throughout the lifetime of a non-erroring\x0a        // application.\x0a        return Object(external_this_wp_data_[\x22select\x22])(\x27core/editor\x27).getEditedPostContent();\x0a      } catch (error) {}\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var error = this.state.error;\x0a\x0a      if (!error) {\x0a        return this.props.children;\x0a      }\x0a\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22Warning\x22], {\x0a        className: \x22editor-error-boundary\x22,\x0a        actions: [Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a          key: \x22recovery\x22,\x0a          onClick: this.reboot,\x0a          isLarge: true\x0a        }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Attempt Recovery\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22ClipboardButton\x22], {\x0a          key: \x22copy-post\x22,\x0a          text: this.getContent,\x0a          isLarge: true\x0a        }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Copy Post Text\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22ClipboardButton\x22], {\x0a          key: \x22copy-error\x22,\x0a          text: error.stack,\x0a          isLarge: true\x0a        }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Copy Error\x27))]\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27The editor has encountered an unexpected error.\x27));\x0a    }\x0a  }]);\x0a\x0a  return ErrorBoundary;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var error_boundary = (error_boundary_ErrorBoundary);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/page-attributes/check.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0afunction PageAttributesCheck(_ref) {\x0a  var availableTemplates = _ref.availableTemplates,\x0a      postType = _ref.postType,\x0a      children = _ref.children;\x0a  var supportsPageAttributes = Object(external_lodash_[\x22get\x22])(postType, [\x27supports\x27, \x27page-attributes\x27], false); // Only render fields if post type supports page attributes or available templates exist.\x0a\x0a  if (!supportsPageAttributes && Object(external_lodash_[\x22isEmpty\x22])(availableTemplates)) {\x0a    return null;\x0a  }\x0a\x0a  return children;\x0a}\x0a/* harmony default export */ var page_attributes_check = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select.getEditedPostAttribute,\x0a      getEditorSettings = _select.getEditorSettings;\x0a\x0a  var _select2 = select(\x27core\x27),\x0a      getPostType = _select2.getPostType;\x0a\x0a  var _getEditorSettings = getEditorSettings(),\x0a      availableTemplates = _getEditorSettings.availableTemplates;\x0a\x0a  return {\x0a    postType: getPostType(getEditedPostAttribute(\x27type\x27)),\x0a    availableTemplates: availableTemplates\x0a  };\x0a})(PageAttributesCheck));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-type-support-check/index.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/**\x0a * A component which renders its own children only if the current editor post\x0a * type supports one of the given `supportKeys` prop.\x0a *\x0a * @param {?Object}           props.postType    Current post type.\x0a * @param {WPElement}         props.children    Children to be rendered if post\x0a *                                              type supports.\x0a * @param {(string|string[])} props.supportKeys String or string array of keys\x0a *                                              to test.\x0a *\x0a * @return {WPElement} Rendered element.\x0a */\x0a\x0afunction PostTypeSupportCheck(_ref) {\x0a  var postType = _ref.postType,\x0a      children = _ref.children,\x0a      supportKeys = _ref.supportKeys;\x0a  var isSupported = true;\x0a\x0a  if (postType) {\x0a    isSupported = Object(external_lodash_[\x22some\x22])(Object(external_lodash_[\x22castArray\x22])(supportKeys), function (key) {\x0a      return !!postType.supports[key];\x0a    });\x0a  }\x0a\x0a  if (!isSupported) {\x0a    return null;\x0a  }\x0a\x0a  return children;\x0a}\x0a/* harmony default export */ var post_type_support_check = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select.getEditedPostAttribute;\x0a\x0a  var _select2 = select(\x27core\x27),\x0a      getPostType = _select2.getPostType;\x0a\x0a  return {\x0a    postType: getPostType(getEditedPostAttribute(\x27type\x27))\x0a  };\x0a})(PostTypeSupportCheck));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/page-attributes/order.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0avar PageAttributesOrder = Object(external_this_wp_compose_[\x22withState\x22])({\x0a  orderInput: null\x0a})(function (_ref) {\x0a  var onUpdateOrder = _ref.onUpdateOrder,\x0a      _ref$order = _ref.order,\x0a      order = _ref$order === void 0 ? 0 : _ref$order,\x0a      orderInput = _ref.orderInput,\x0a      setState = _ref.setState;\x0a\x0a  var setUpdatedOrder = function setUpdatedOrder(value) {\x0a    setState({\x0a      orderInput: value\x0a    });\x0a    var newOrder = Number(value);\x0a\x0a    if (Number.isInteger(newOrder) && Object(external_lodash_[\x22invoke\x22])(value, [\x27trim\x27]) !== \x27\x27) {\x0a      onUpdateOrder(Number(value));\x0a    }\x0a  };\x0a\x0a  var value = orderInput === null ? order : orderInput;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22TextControl\x22], {\x0a    className: \x22editor-page-attributes__order\x22,\x0a    type: \x22number\x22,\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Order\x27),\x0a    value: value,\x0a    onChange: setUpdatedOrder,\x0a    size: 6,\x0a    onBlur: function onBlur() {\x0a      setState({\x0a        orderInput: null\x0a      });\x0a    }\x0a  });\x0a});\x0a\x0afunction PageAttributesOrderWithChecks(props) {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(post_type_support_check, {\x0a    supportKeys: \x22page-attributes\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(PageAttributesOrder, props));\x0a}\x0a\x0a/* harmony default export */ var page_attributes_order = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    order: select(\x27core/editor\x27).getEditedPostAttribute(\x27menu_order\x27)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onUpdateOrder: function onUpdateOrder(order) {\x0a      dispatch(\x27core/editor\x27).editPost({\x0a        menu_order: order\x0a      });\x0a    }\x0a  };\x0a})])(PageAttributesOrderWithChecks));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/utils/terms.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * Returns terms in a tree form.\x0a *\x0a * @param {Array} flatTerms  Array of terms in flat format.\x0a *\x0a * @return {Array} Array of terms in tree format.\x0a */\x0a\x0afunction buildTermsTree(flatTerms) {\x0a  var flatTermsWithParentAndChildren = flatTerms.map(function (term) {\x0a    return Object(objectSpread[\x22a\x22 /* default */])({\x0a      children: [],\x0a      parent: null\x0a    }, term);\x0a  });\x0a  var termsByParent = Object(external_lodash_[\x22groupBy\x22])(flatTermsWithParentAndChildren, \x27parent\x27);\x0a\x0a  if (termsByParent.null && termsByParent.null.length) {\x0a    return flatTermsWithParentAndChildren;\x0a  }\x0a\x0a  var fillWithChildren = function fillWithChildren(terms) {\x0a    return terms.map(function (term) {\x0a      var children = termsByParent[term.id];\x0a      return Object(objectSpread[\x22a\x22 /* default */])({}, term, {\x0a        children: children && children.length ? fillWithChildren(children) : []\x0a      });\x0a    });\x0a  };\x0a\x0a  return fillWithChildren(termsByParent[\x270\x27] || []);\x0a}\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/page-attributes/parent.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0afunction PageAttributesParent(_ref) {\x0a  var parent = _ref.parent,\x0a      postType = _ref.postType,\x0a      items = _ref.items,\x0a      onUpdateParent = _ref.onUpdateParent;\x0a  var isHierarchical = Object(external_lodash_[\x22get\x22])(postType, [\x27hierarchical\x27], false);\x0a  var parentPageLabel = Object(external_lodash_[\x22get\x22])(postType, [\x27labels\x27, \x27parent_item_colon\x27]);\x0a  var pageItems = items || [];\x0a\x0a  if (!isHierarchical || !parentPageLabel || !pageItems.length) {\x0a    return null;\x0a  }\x0a\x0a  var pagesTree = buildTermsTree(pageItems.map(function (item) {\x0a    return {\x0a      id: item.id,\x0a      parent: item.parent,\x0a      name: item.title.raw ? item.title.raw : \x22#\x22.concat(item.id, \x22 (\x22).concat(Object(external_this_wp_i18n_[\x22__\x22])(\x27no title\x27), \x22)\x22)\x0a    };\x0a  }));\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22TreeSelect\x22], {\x0a    className: \x22editor-page-attributes__parent\x22,\x0a    label: parentPageLabel,\x0a    noOptionLabel: \x22(\x22.concat(Object(external_this_wp_i18n_[\x22__\x22])(\x27no parent\x27), \x22)\x22),\x0a    tree: pagesTree,\x0a    selectedId: parent,\x0a    onChange: onUpdateParent\x0a  });\x0a}\x0avar applyWithSelect = Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core\x27),\x0a      getPostType = _select.getPostType,\x0a      getEntityRecords = _select.getEntityRecords;\x0a\x0a  var _select2 = select(\x27core/editor\x27),\x0a      getCurrentPostId = _select2.getCurrentPostId,\x0a      getEditedPostAttribute = _select2.getEditedPostAttribute;\x0a\x0a  var postTypeSlug = getEditedPostAttribute(\x27type\x27);\x0a  var postType = getPostType(postTypeSlug);\x0a  var postId = getCurrentPostId();\x0a  var isHierarchical = Object(external_lodash_[\x22get\x22])(postType, [\x27hierarchical\x27], false);\x0a  var query = {\x0a    per_page: -1,\x0a    exclude: postId,\x0a    parent_exclude: postId,\x0a    orderby: \x27menu_order\x27,\x0a    order: \x27asc\x27\x0a  };\x0a  return {\x0a    parent: getEditedPostAttribute(\x27parent\x27),\x0a    items: isHierarchical ? getEntityRecords(\x27postType\x27, postTypeSlug, query) : [],\x0a    postType: postType\x0a  };\x0a});\x0avar applyWithDispatch = Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/editor\x27),\x0a      editPost = _dispatch.editPost;\x0a\x0a  return {\x0a    onUpdateParent: function onUpdateParent(parent) {\x0a      editPost({\x0a        parent: parent || 0\x0a      });\x0a    }\x0a  };\x0a});\x0a/* harmony default export */ var page_attributes_parent = (Object(external_this_wp_compose_[\x22compose\x22])([applyWithSelect, applyWithDispatch])(PageAttributesParent));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/page-attributes/template.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction PageTemplate(_ref) {\x0a  var availableTemplates = _ref.availableTemplates,\x0a      selectedTemplate = _ref.selectedTemplate,\x0a      onUpdate = _ref.onUpdate;\x0a\x0a  if (Object(external_lodash_[\x22isEmpty\x22])(availableTemplates)) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22SelectControl\x22], {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Template:\x27),\x0a    value: selectedTemplate,\x0a    onChange: onUpdate,\x0a    className: \x22editor-page-attributes__template\x22,\x0a    options: Object(external_lodash_[\x22map\x22])(availableTemplates, function (templateName, templateSlug) {\x0a      return {\x0a        value: templateSlug,\x0a        label: templateName\x0a      };\x0a    })\x0a  });\x0a}\x0a/* harmony default export */ var page_attributes_template = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select.getEditedPostAttribute,\x0a      getEditorSettings = _select.getEditorSettings;\x0a\x0a  var _getEditorSettings = getEditorSettings(),\x0a      availableTemplates = _getEditorSettings.availableTemplates;\x0a\x0a  return {\x0a    selectedTemplate: getEditedPostAttribute(\x27template\x27),\x0a    availableTemplates: availableTemplates\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onUpdate: function onUpdate(templateSlug) {\x0a      dispatch(\x27core/editor\x27).editPost({\x0a        template: templateSlug || \x27\x27\x0a      });\x0a    }\x0a  };\x0a}))(PageTemplate));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-author/check.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0afunction PostAuthorCheck(_ref) {\x0a  var hasAssignAuthorAction = _ref.hasAssignAuthorAction,\x0a      authors = _ref.authors,\x0a      children = _ref.children;\x0a\x0a  if (!hasAssignAuthorAction || authors.length \x3c 2) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(post_type_support_check, {\x0a    supportKeys: \x22author\x22\x0a  }, children);\x0a}\x0a/* harmony default export */ var post_author_check = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var post = select(\x27core/editor\x27).getCurrentPost();\x0a  return {\x0a    hasAssignAuthorAction: Object(external_lodash_[\x22get\x22])(post, [\x27_links\x27, \x27wp:action-assign-author\x27], false),\x0a    postType: select(\x27core/editor\x27).getCurrentPostType(),\x0a    authors: select(\x27core\x27).getAuthors()\x0a  };\x0a}), external_this_wp_compose_[\x22withInstanceId\x22]])(PostAuthorCheck));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-author/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0avar post_author_PostAuthor =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(PostAuthor, _Component);\x0a\x0a  function PostAuthor() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, PostAuthor);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(PostAuthor).apply(this, arguments));\x0a    _this.setAuthorId = _this.setAuthorId.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(PostAuthor, [{\x0a    key: \x22setAuthorId\x22,\x0a    value: function setAuthorId(event) {\x0a      var onUpdateAuthor = this.props.onUpdateAuthor;\x0a      var value = event.target.value;\x0a      onUpdateAuthor(Number(value));\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props = this.props,\x0a          postAuthor = _this$props.postAuthor,\x0a          instanceId = _this$props.instanceId,\x0a          authors = _this$props.authors;\x0a      var selectId = \x27post-author-selector-\x27 + instanceId; // Disable reason: A select with an onchange throws a warning\x0a\x0a      /* eslint-disable jsx-a11y/no-onchange */\x0a\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(post_author_check, null, Object(external_this_wp_element_[\x22createElement\x22])(\x22label\x22, {\x0a        htmlFor: selectId\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Author\x27)), Object(external_this_wp_element_[\x22createElement\x22])(\x22select\x22, {\x0a        id: selectId,\x0a        value: postAuthor,\x0a        onChange: this.setAuthorId,\x0a        className: \x22editor-post-author__select\x22\x0a      }, authors.map(function (author) {\x0a        return Object(external_this_wp_element_[\x22createElement\x22])(\x22option\x22, {\x0a          key: author.id,\x0a          value: author.id\x0a        }, author.name);\x0a      })));\x0a      /* eslint-enable jsx-a11y/no-onchange */\x0a    }\x0a  }]);\x0a\x0a  return PostAuthor;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a/* harmony default export */ var post_author = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    postAuthor: select(\x27core/editor\x27).getEditedPostAttribute(\x27author\x27),\x0a    authors: select(\x27core\x27).getAuthors()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onUpdateAuthor: function onUpdateAuthor(author) {\x0a      dispatch(\x27core/editor\x27).editPost({\x0a        author: author\x0a      });\x0a    }\x0a  };\x0a}), external_this_wp_compose_[\x22withInstanceId\x22]])(post_author_PostAuthor));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-comments/index.js\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction PostComments(_ref) {\x0a  var _ref$commentStatus = _ref.commentStatus,\x0a      commentStatus = _ref$commentStatus === void 0 ? \x27open\x27 : _ref$commentStatus,\x0a      props = Object(objectWithoutProperties[\x22a\x22 /* default */])(_ref, [\x22commentStatus\x22]);\x0a\x0a  var onToggleComments = function onToggleComments() {\x0a    return props.editPost({\x0a      comment_status: commentStatus === \x27open\x27 ? \x27closed\x27 : \x27open\x27\x0a    });\x0a  };\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22CheckboxControl\x22], {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Allow Comments\x27),\x0a    checked: commentStatus === \x27open\x27,\x0a    onChange: onToggleComments\x0a  });\x0a}\x0a\x0a/* harmony default export */ var post_comments = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    commentStatus: select(\x27core/editor\x27).getEditedPostAttribute(\x27comment_status\x27)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    editPost: dispatch(\x27core/editor\x27).editPost\x0a  };\x0a})])(PostComments));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-excerpt/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction PostExcerpt(_ref) {\x0a  var excerpt = _ref.excerpt,\x0a      onUpdateExcerpt = _ref.onUpdateExcerpt;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22editor-post-excerpt\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22TextareaControl\x22], {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Write an excerpt (optional)\x27),\x0a    className: \x22editor-post-excerpt__textarea\x22,\x0a    onChange: function onChange(value) {\x0a      return onUpdateExcerpt(value);\x0a    },\x0a    value: excerpt\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22ExternalLink\x22], {\x0a    href: Object(external_this_wp_i18n_[\x22__\x22])(\x27https://codex.wordpress.org/Excerpt\x27)\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Learn more about manual excerpts\x27)));\x0a}\x0a\x0a/* harmony default export */ var post_excerpt = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    excerpt: select(\x27core/editor\x27).getEditedPostAttribute(\x27excerpt\x27)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onUpdateExcerpt: function onUpdateExcerpt(excerpt) {\x0a      dispatch(\x27core/editor\x27).editPost({\x0a        excerpt: excerpt\x0a      });\x0a    }\x0a  };\x0a})])(PostExcerpt));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-excerpt/check.js\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0afunction PostExcerptCheck(props) {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(post_type_support_check, Object(esm_extends[\x22a\x22 /* default */])({}, props, {\x0a    supportKeys: \x22excerpt\x22\x0a  }));\x0a}\x0a\x0a/* harmony default export */ var post_excerpt_check = (PostExcerptCheck);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/theme-support-check/index.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0afunction ThemeSupportCheck(_ref) {\x0a  var themeSupports = _ref.themeSupports,\x0a      children = _ref.children,\x0a      postType = _ref.postType,\x0a      supportKeys = _ref.supportKeys;\x0a  var isSupported = Object(external_lodash_[\x22some\x22])(Object(external_lodash_[\x22castArray\x22])(supportKeys), function (key) {\x0a    var supported = Object(external_lodash_[\x22get\x22])(themeSupports, [key], false); // \x27post-thumbnails\x27 can be boolean or an array of post types.\x0a    // In the latter case, we need to verify `postType` exists\x0a    // within `supported`. If `postType` isn\x27t passed, then the check\x0a    // should fail.\x0a\x0a    if (\x27post-thumbnails\x27 === key && Object(external_lodash_[\x22isArray\x22])(supported)) {\x0a      return Object(external_lodash_[\x22includes\x22])(supported, postType);\x0a    }\x0a\x0a    return supported;\x0a  });\x0a\x0a  if (!isSupported) {\x0a    return null;\x0a  }\x0a\x0a  return children;\x0a}\x0a/* harmony default export */ var theme_support_check = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core\x27),\x0a      getThemeSupports = _select.getThemeSupports;\x0a\x0a  var _select2 = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select2.getEditedPostAttribute;\x0a\x0a  return {\x0a    postType: getEditedPostAttribute(\x27type\x27),\x0a    themeSupports: getThemeSupports()\x0a  };\x0a})(ThemeSupportCheck));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-featured-image/check.js\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0afunction PostFeaturedImageCheck(props) {\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(theme_support_check, {\x0a    supportKeys: \x22post-thumbnails\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(post_type_support_check, Object(esm_extends[\x22a\x22 /* default */])({}, props, {\x0a    supportKeys: \x22thumbnail\x22\x0a  })));\x0a}\x0a\x0a/* harmony default export */ var post_featured_image_check = (PostFeaturedImageCheck);\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-featured-image/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0avar ALLOWED_MEDIA_TYPES = [\x27image\x27]; // Used when labels from post type were not yet loaded or when they are not present.\x0a\x0avar DEFAULT_FEATURE_IMAGE_LABEL = Object(external_this_wp_i18n_[\x22__\x22])(\x27Featured Image\x27);\x0a\x0avar DEFAULT_SET_FEATURE_IMAGE_LABEL = Object(external_this_wp_i18n_[\x22__\x22])(\x27Set featured image\x27);\x0a\x0avar DEFAULT_REMOVE_FEATURE_IMAGE_LABEL = Object(external_this_wp_i18n_[\x22__\x22])(\x27Remove image\x27);\x0a\x0afunction PostFeaturedImage(_ref) {\x0a  var currentPostId = _ref.currentPostId,\x0a      featuredImageId = _ref.featuredImageId,\x0a      onUpdateImage = _ref.onUpdateImage,\x0a      onRemoveImage = _ref.onRemoveImage,\x0a      media = _ref.media,\x0a      postType = _ref.postType;\x0a  var postLabel = Object(external_lodash_[\x22get\x22])(postType, [\x27labels\x27], {});\x0a  var instructions = Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, null, Object(external_this_wp_i18n_[\x22__\x22])(\x27To edit the featured image, you need permission to upload media.\x27));\x0a  var mediaWidth, mediaHeight, mediaSourceUrl;\x0a\x0a  if (media) {\x0a    var mediaSize = Object(external_this_wp_hooks_[\x22applyFilters\x22])(\x27editor.PostFeaturedImage.imageSize\x27, \x27post-thumbnail\x27, media.id, currentPostId);\x0a\x0a    if (Object(external_lodash_[\x22has\x22])(media, [\x27media_details\x27, \x27sizes\x27, mediaSize])) {\x0a      mediaWidth = media.media_details.sizes[mediaSize].width;\x0a      mediaHeight = media.media_details.sizes[mediaSize].height;\x0a      mediaSourceUrl = media.media_details.sizes[mediaSize].source_url;\x0a    } else {\x0a      mediaWidth = media.media_details.width;\x0a      mediaHeight = media.media_details.height;\x0a      mediaSourceUrl = media.source_url;\x0a    }\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(post_featured_image_check, null, Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22editor-post-featured-image\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22MediaUploadCheck\x22], {\x0a    fallback: instructions\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22MediaUpload\x22], {\x0a    title: postLabel.featured_image || DEFAULT_FEATURE_IMAGE_LABEL,\x0a    onSelect: onUpdateImage,\x0a    allowedTypes: ALLOWED_MEDIA_TYPES,\x0a    modalClass: !featuredImageId ? \x27editor-post-featured-image__media-modal\x27 : \x27editor-post-featured-image__media-modal\x27,\x0a    render: function render(_ref2) {\x0a      var open = _ref2.open;\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        className: !featuredImageId ? \x27editor-post-featured-image__toggle\x27 : \x27editor-post-featured-image__preview\x27,\x0a        onClick: open,\x0a        \x22aria-label\x22: !featuredImageId ? null : Object(external_this_wp_i18n_[\x22__\x22])(\x27Edit or update the image\x27)\x0a      }, !!featuredImageId && media && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22ResponsiveWrapper\x22], {\x0a        naturalWidth: mediaWidth,\x0a        naturalHeight: mediaHeight\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(\x22img\x22, {\x0a        src: mediaSourceUrl,\x0a        alt: \x22\x22\x0a      })), !!featuredImageId && !media && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Spinner\x22], null), !featuredImageId && (postLabel.set_featured_image || DEFAULT_SET_FEATURE_IMAGE_LABEL));\x0a    },\x0a    value: featuredImageId\x0a  })), !!featuredImageId && media && !media.isLoading && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22MediaUploadCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22MediaUpload\x22], {\x0a    title: postLabel.featured_image || DEFAULT_FEATURE_IMAGE_LABEL,\x0a    onSelect: onUpdateImage,\x0a    allowedTypes: ALLOWED_MEDIA_TYPES,\x0a    modalClass: \x22editor-post-featured-image__media-modal\x22,\x0a    render: function render(_ref3) {\x0a      var open = _ref3.open;\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        onClick: open,\x0a        isDefault: true,\x0a        isLarge: true\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Replace image\x27));\x0a    }\x0a  })), !!featuredImageId && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_blockEditor_[\x22MediaUploadCheck\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a    onClick: onRemoveImage,\x0a    isLink: true,\x0a    isDestructive: true\x0a  }, postLabel.remove_featured_image || DEFAULT_REMOVE_FEATURE_IMAGE_LABEL))));\x0a}\x0a\x0avar post_featured_image_applyWithSelect = Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core\x27),\x0a      getMedia = _select.getMedia,\x0a      getPostType = _select.getPostType;\x0a\x0a  var _select2 = select(\x27core/editor\x27),\x0a      getCurrentPostId = _select2.getCurrentPostId,\x0a      getEditedPostAttribute = _select2.getEditedPostAttribute;\x0a\x0a  var featuredImageId = getEditedPostAttribute(\x27featured_media\x27);\x0a  return {\x0a    media: featuredImageId ? getMedia(featuredImageId) : null,\x0a    currentPostId: getCurrentPostId(),\x0a    postType: getPostType(getEditedPostAttribute(\x27type\x27)),\x0a    featuredImageId: featuredImageId\x0a  };\x0a});\x0avar post_featured_image_applyWithDispatch = Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/editor\x27),\x0a      editPost = _dispatch.editPost;\x0a\x0a  return {\x0a    onUpdateImage: function onUpdateImage(image) {\x0a      editPost({\x0a        featured_media: image.id\x0a      });\x0a    },\x0a    onRemoveImage: function onRemoveImage() {\x0a      editPost({\x0a        featured_media: 0\x0a      });\x0a    }\x0a  };\x0a});\x0a/* harmony default export */ var post_featured_image = (Object(external_this_wp_compose_[\x22compose\x22])(post_featured_image_applyWithSelect, post_featured_image_applyWithDispatch, Object(external_this_wp_components_[\x22withFilters\x22])(\x27editor.PostFeaturedImage\x27))(PostFeaturedImage));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-format/check.js\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0afunction PostFormatCheck(_ref) {\x0a  var disablePostFormats = _ref.disablePostFormats,\x0a      props = Object(objectWithoutProperties[\x22a\x22 /* default */])(_ref, [\x22disablePostFormats\x22]);\x0a\x0a  return !disablePostFormats && Object(external_this_wp_element_[\x22createElement\x22])(post_type_support_check, Object(esm_extends[\x22a\x22 /* default */])({}, props, {\x0a    supportKeys: \x22post-formats\x22\x0a  }));\x0a}\x0a\x0a/* harmony default export */ var post_format_check = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var editorSettings = select(\x27core/editor\x27).getEditorSettings();\x0a  return {\x0a    disablePostFormats: editorSettings.disablePostFormats\x0a  };\x0a})(PostFormatCheck));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-format/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0avar POST_FORMATS = [{\x0a  id: \x27aside\x27,\x0a  caption: Object(external_this_wp_i18n_[\x22__\x22])(\x27Aside\x27)\x0a}, {\x0a  id: \x27gallery\x27,\x0a  caption: Object(external_this_wp_i18n_[\x22__\x22])(\x27Gallery\x27)\x0a}, {\x0a  id: \x27link\x27,\x0a  caption: Object(external_this_wp_i18n_[\x22__\x22])(\x27Link\x27)\x0a}, {\x0a  id: \x27image\x27,\x0a  caption: Object(external_this_wp_i18n_[\x22__\x22])(\x27Image\x27)\x0a}, {\x0a  id: \x27quote\x27,\x0a  caption: Object(external_this_wp_i18n_[\x22__\x22])(\x27Quote\x27)\x0a}, {\x0a  id: \x27standard\x27,\x0a  caption: Object(external_this_wp_i18n_[\x22__\x22])(\x27Standard\x27)\x0a}, {\x0a  id: \x27status\x27,\x0a  caption: Object(external_this_wp_i18n_[\x22__\x22])(\x27Status\x27)\x0a}, {\x0a  id: \x27video\x27,\x0a  caption: Object(external_this_wp_i18n_[\x22__\x22])(\x27Video\x27)\x0a}, {\x0a  id: \x27audio\x27,\x0a  caption: Object(external_this_wp_i18n_[\x22__\x22])(\x27Audio\x27)\x0a}, {\x0a  id: \x27chat\x27,\x0a  caption: Object(external_this_wp_i18n_[\x22__\x22])(\x27Chat\x27)\x0a}];\x0a\x0afunction PostFormat(_ref) {\x0a  var onUpdatePostFormat = _ref.onUpdatePostFormat,\x0a      _ref$postFormat = _ref.postFormat,\x0a      postFormat = _ref$postFormat === void 0 ? \x27standard\x27 : _ref$postFormat,\x0a      supportedFormats = _ref.supportedFormats,\x0a      suggestedFormat = _ref.suggestedFormat,\x0a      instanceId = _ref.instanceId;\x0a  var postFormatSelectorId = \x27post-format-selector-\x27 + instanceId;\x0a  var formats = POST_FORMATS.filter(function (format) {\x0a    return Object(external_lodash_[\x22includes\x22])(supportedFormats, format.id);\x0a  });\x0a  var suggestion = Object(external_lodash_[\x22find\x22])(formats, function (format) {\x0a    return format.id === suggestedFormat;\x0a  }); // Disable reason: We need to change the value immiediately to show/hide the suggestion if needed\x0a\x0a  /* eslint-disable jsx-a11y/no-onchange */\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(post_format_check, null, Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22editor-post-format\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22editor-post-format__content\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22label\x22, {\x0a    htmlFor: postFormatSelectorId\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Post Format\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22SelectControl\x22], {\x0a    value: postFormat,\x0a    onChange: function onChange(format) {\x0a      return onUpdatePostFormat(format);\x0a    },\x0a    id: postFormatSelectorId,\x0a    options: formats.map(function (format) {\x0a      return {\x0a        label: format.caption,\x0a        value: format.id\x0a      };\x0a    })\x0a  })), suggestion && suggestion.id !== postFormat && Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22editor-post-format__suggestion\x22\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Suggestion:\x27), \x27 \x27, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a    isLink: true,\x0a    onClick: function onClick() {\x0a      return onUpdatePostFormat(suggestion.id);\x0a    }\x0a  }, suggestion.caption))));\x0a  /* eslint-enable jsx-a11y/no-onchange */\x0a}\x0a\x0a/* harmony default export */ var post_format = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select.getEditedPostAttribute,\x0a      getSuggestedPostFormat = _select.getSuggestedPostFormat;\x0a\x0a  var postFormat = getEditedPostAttribute(\x27format\x27);\x0a  var themeSupports = select(\x27core\x27).getThemeSupports(); // Ensure current format is always in the set.\x0a  // The current format may not be a format supported by the theme.\x0a\x0a  var supportedFormats = Object(external_lodash_[\x22union\x22])([postFormat], Object(external_lodash_[\x22get\x22])(themeSupports, [\x27formats\x27], []));\x0a  return {\x0a    postFormat: postFormat,\x0a    supportedFormats: supportedFormats,\x0a    suggestedFormat: getSuggestedPostFormat()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onUpdatePostFormat: function onUpdatePostFormat(postFormat) {\x0a      dispatch(\x27core/editor\x27).editPost({\x0a        format: postFormat\x0a      });\x0a    }\x0a  };\x0a}), external_this_wp_compose_[\x22withInstanceId\x22]])(PostFormat));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-last-revision/check.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0afunction PostLastRevisionCheck(_ref) {\x0a  var lastRevisionId = _ref.lastRevisionId,\x0a      revisionsCount = _ref.revisionsCount,\x0a      children = _ref.children;\x0a\x0a  if (!lastRevisionId || revisionsCount \x3c 2) {\x0a    return null;\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(post_type_support_check, {\x0a    supportKeys: \x22revisions\x22\x0a  }, children);\x0a}\x0a/* harmony default export */ var post_last_revision_check = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getCurrentPostLastRevisionId = _select.getCurrentPostLastRevisionId,\x0a      getCurrentPostRevisionsCount = _select.getCurrentPostRevisionsCount;\x0a\x0a  return {\x0a    lastRevisionId: getCurrentPostLastRevisionId(),\x0a    revisionsCount: getCurrentPostRevisionsCount()\x0a  };\x0a})(PostLastRevisionCheck));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/utils/url.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/**\x0a * Returns the URL of a WPAdmin Page.\x0a *\x0a * TODO: This should be moved to a module less specific to the editor.\x0a *\x0a * @param {string} page  Page to navigate to.\x0a * @param {Object} query Query Args.\x0a *\x0a * @return {string} WPAdmin URL.\x0a */\x0a\x0afunction getWPAdminURL(page, query) {\x0a  return Object(external_this_wp_url_[\x22addQueryArgs\x22])(page, query);\x0a}\x0a/**\x0a * Performs some basic cleanup of a string for use as a post slug\x0a *\x0a * This replicates some of what santize_title() does in WordPress core, but\x0a * is only designed to approximate what the slug will be.\x0a *\x0a * Converts whitespace, periods, forward slashes and underscores to hyphens.\x0a * Converts Latin-1 Supplement and Latin Extended-A letters to basic Latin\x0a * letters. Removes combining diacritical marks. Converts remaining string\x0a * to lowercase. It does not touch octets, HTML entities, or other encoded\x0a * characters.\x0a *\x0a * @param {string} string Title or slug to be processed\x0a *\x0a * @return {string} Processed string\x0a */\x0a\x0afunction cleanForSlug(string) {\x0a  return Object(external_lodash_[\x22toLower\x22])(Object(external_lodash_[\x22deburr\x22])(Object(external_lodash_[\x22trim\x22])(string.replace(/[\x5cs\x5c./_]+/g, \x27-\x27), \x27-\x27)));\x0a}\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-last-revision/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0afunction LastRevision(_ref) {\x0a  var lastRevisionId = _ref.lastRevisionId,\x0a      revisionsCount = _ref.revisionsCount;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(post_last_revision_check, null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a    href: getWPAdminURL(\x27revision.php\x27, {\x0a      revision: lastRevisionId,\x0a      gutenberg: true\x0a    }),\x0a    className: \x22editor-post-last-revision__title\x22,\x0a    icon: \x22backup\x22\x0a  }, Object(external_this_wp_i18n_[\x22sprintf\x22])(Object(external_this_wp_i18n_[\x22_n\x22])(\x27%d Revision\x27, \x27%d Revisions\x27, revisionsCount), revisionsCount)));\x0a}\x0a\x0a/* harmony default export */ var post_last_revision = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getCurrentPostLastRevisionId = _select.getCurrentPostLastRevisionId,\x0a      getCurrentPostRevisionsCount = _select.getCurrentPostRevisionsCount;\x0a\x0a  return {\x0a    lastRevisionId: getCurrentPostLastRevisionId(),\x0a    revisionsCount: getCurrentPostRevisionsCount()\x0a  };\x0a})(LastRevision));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-preview-button/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0afunction writeInterstitialMessage(targetDocument) {\x0a  var markup = Object(external_this_wp_element_[\x22renderToString\x22])(Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22editor-post-preview-button__interstitial-message\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22SVG\x22], {\x0a    xmlns: \x22http://www.w3.org/2000/svg\x22,\x0a    viewBox: \x220 0 96 96\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Path\x22], {\x0a    className: \x22outer\x22,\x0a    d: \x22M48 12c19.9 0 36 16.1 36 36S67.9 84 48 84 12 67.9 12 48s16.1-36 36-36\x22,\x0a    fill: \x22none\x22\x0a  }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Path\x22], {\x0a    className: \x22inner\x22,\x0a    d: \x22M69.5 46.4c0-3.9-1.4-6.7-2.6-8.8-1.6-2.6-3.1-4.9-3.1-7.5 0-2.9 2.2-5.7 5.4-5.7h.4C63.9 19.2 56.4 16 48 16c-11.2 0-21 5.7-26.7 14.4h2.1c3.3 0 8.5-.4 8.5-.4 1.7-.1 1.9 2.4.2 2.6 0 0-1.7.2-3.7.3L40 67.5l7-20.9L42 33c-1.7-.1-3.3-.3-3.3-.3-1.7-.1-1.5-2.7.2-2.6 0 0 5.3.4 8.4.4 3.3 0 8.5-.4 8.5-.4 1.7-.1 1.9 2.4.2 2.6 0 0-1.7.2-3.7.3l11.5 34.3 3.3-10.4c1.6-4.5 2.4-7.8 2.4-10.5zM16.1 48c0 12.6 7.3 23.5 18 28.7L18.8 35c-1.7 4-2.7 8.4-2.7 13zm32.5 2.8L39 78.6c2.9.8 5.9 1.3 9 1.3 3.7 0 7.3-.6 10.6-1.8-.1-.1-.2-.3-.2-.4l-9.8-26.9zM76.2 36c0 3.2-.6 6.9-2.4 11.4L64 75.6c9.5-5.5 15.9-15.8 15.9-27.6 0-5.5-1.4-10.8-3.9-15.3.1 1 .2 2.1.2 3.3z\x22,\x0a    fill: \x22none\x22\x0a  })), Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, null, Object(external_this_wp_i18n_[\x22__\x22])(\x27Generating preview\xe2\x80\xa6\x27))));\x0a  markup += \x22\x5cn\x5ct\x5ct\x3cstyle\x3e\x5cn\x5ct\x5ct\x5ctbody {\x5cn\x5ct\x5ct\x5ct\x5ctmargin: 0;\x5cn\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ct.editor-post-preview-button__interstitial-message {\x5cn\x5ct\x5ct\x5ct\x5ctdisplay: flex;\x5cn\x5ct\x5ct\x5ct\x5ctflex-direction: column;\x5cn\x5ct\x5ct\x5ct\x5ctalign-items: center;\x5cn\x5ct\x5ct\x5ct\x5ctjustify-content: center;\x5cn\x5ct\x5ct\x5ct\x5ctheight: 100vh;\x5cn\x5ct\x5ct\x5ct\x5ctwidth: 100vw;\x5cn\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ct@-webkit-keyframes paint {\x5cn\x5ct\x5ct\x5ct\x5ct0% {\x5cn\x5ct\x5ct\x5ct\x5ct\x5ctstroke-dashoffset: 0;\x5cn\x5ct\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ct@-moz-keyframes paint {\x5cn\x5ct\x5ct\x5ct\x5ct0% {\x5cn\x5ct\x5ct\x5ct\x5ct\x5ctstroke-dashoffset: 0;\x5cn\x5ct\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ct@-o-keyframes paint {\x5cn\x5ct\x5ct\x5ct\x5ct0% {\x5cn\x5ct\x5ct\x5ct\x5ct\x5ctstroke-dashoffset: 0;\x5cn\x5ct\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ct@keyframes paint {\x5cn\x5ct\x5ct\x5ct\x5ct0% {\x5cn\x5ct\x5ct\x5ct\x5ct\x5ctstroke-dashoffset: 0;\x5cn\x5ct\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ct.editor-post-preview-button__interstitial-message svg {\x5cn\x5ct\x5ct\x5ct\x5ctwidth: 192px;\x5cn\x5ct\x5ct\x5ct\x5ctheight: 192px;\x5cn\x5ct\x5ct\x5ct\x5ctstroke: #555d66;\x5cn\x5ct\x5ct\x5ct\x5ctstroke-width: 0.75;\x5cn\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ct.editor-post-preview-button__interstitial-message svg .outer,\x5cn\x5ct\x5ct\x5ct.editor-post-preview-button__interstitial-message svg .inner {\x5cn\x5ct\x5ct\x5ct\x5ctstroke-dasharray: 280;\x5cn\x5ct\x5ct\x5ct\x5ctstroke-dashoffset: 280;\x5cn\x5ct\x5ct\x5ct\x5ct-webkit-animation: paint 1.5s ease infinite alternate;\x5cn\x5ct\x5ct\x5ct\x5ct-moz-animation: paint 1.5s ease infinite alternate;\x5cn\x5ct\x5ct\x5ct\x5ct-o-animation: paint 1.5s ease infinite alternate;\x5cn\x5ct\x5ct\x5ct\x5ctanimation: paint 1.5s ease infinite alternate;\x5cn\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x5ctp {\x5cn\x5ct\x5ct\x5ct\x5cttext-align: center;\x5cn\x5ct\x5ct\x5ct\x5ctfont-family: -apple-system, BlinkMacSystemFont, \x5c\x22Segoe UI\x5c\x22, Roboto, Oxygen-Sans, Ubuntu, Cantarell, \x5c\x22Helvetica Neue\x5c\x22, sans-serif;\x5cn\x5ct\x5ct\x5ct}\x5cn\x5ct\x5ct\x3c/style\x3e\x5cn\x5ct\x22;\x0a  /**\x0a   * Filters the interstitial message shown when generating previews.\x0a   *\x0a   * @param {String} markup The preview interstitial markup.\x0a   */\x0a\x0a  markup = Object(external_this_wp_hooks_[\x22applyFilters\x22])(\x27editor.PostPreview.interstitialMarkup\x27, markup);\x0a  targetDocument.write(markup);\x0a  targetDocument.title = Object(external_this_wp_i18n_[\x22__\x22])(\x27Generating preview\xe2\x80\xa6\x27);\x0a  targetDocument.close();\x0a}\x0a\x0avar post_preview_button_PostPreviewButton =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(PostPreviewButton, _Component);\x0a\x0a  function PostPreviewButton() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, PostPreviewButton);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(PostPreviewButton).apply(this, arguments));\x0a    _this.openPreviewWindow = _this.openPreviewWindow.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(PostPreviewButton, [{\x0a    key: \x22componentDidUpdate\x22,\x0a    value: function componentDidUpdate(prevProps) {\x0a      var previewLink = this.props.previewLink; // This relies on the window being responsible to unset itself when\x0a      // navigation occurs or a new preview window is opened, to avoid\x0a      // unintentional forceful redirects.\x0a\x0a      if (previewLink && !prevProps.previewLink) {\x0a        this.setPreviewWindowLink(previewLink);\x0a      }\x0a    }\x0a    /**\x0a     * Sets the preview window\x27s location to the given URL, if a preview window\x0a     * exists and is not closed.\x0a     *\x0a     * @param {string} url URL to assign as preview window location.\x0a     */\x0a\x0a  }, {\x0a    key: \x22setPreviewWindowLink\x22,\x0a    value: function setPreviewWindowLink(url) {\x0a      var previewWindow = this.previewWindow;\x0a\x0a      if (previewWindow && !previewWindow.closed) {\x0a        previewWindow.location = url;\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22getWindowTarget\x22,\x0a    value: function getWindowTarget() {\x0a      var postId = this.props.postId;\x0a      return \x22wp-preview-\x22.concat(postId);\x0a    }\x0a  }, {\x0a    key: \x22openPreviewWindow\x22,\x0a    value: function openPreviewWindow(event) {\x0a      // Our Preview button has its \x27href\x27 and \x27target\x27 set correctly for a11y\x0a      // purposes. Unfortunately, though, we can\x27t rely on the default \x27click\x27\x0a      // handler since sometimes it incorrectly opens a new tab instead of reusing\x0a      // the existing one.\x0a      // https://github.com/WordPress/gutenberg/pull/8330\x0a      event.preventDefault(); // Open up a Preview tab if needed. This is where we\x27ll show the preview.\x0a\x0a      if (!this.previewWindow || this.previewWindow.closed) {\x0a        this.previewWindow = window.open(\x27\x27, this.getWindowTarget());\x0a      } // Focus the Preview tab. This might not do anything, depending on the browser\x27s\x0a      // and user\x27s preferences.\x0a      // https://html.spec.whatwg.org/multipage/interaction.html#dom-window-focus\x0a\x0a\x0a      this.previewWindow.focus(); // If we don\x27t need to autosave the post before previewing, then we simply\x0a      // load the Preview URL in the Preview tab.\x0a\x0a      if (!this.props.isAutosaveable) {\x0a        this.setPreviewWindowLink(event.target.href);\x0a        return;\x0a      } // Request an autosave. This happens asynchronously and causes the component\x0a      // to update when finished.\x0a\x0a\x0a      if (this.props.isDraft) {\x0a        this.props.savePost({\x0a          isPreview: true\x0a        });\x0a      } else {\x0a        this.props.autosave({\x0a          isPreview: true\x0a        });\x0a      } // Display a \x27Generating preview\x27 message in the Preview tab while we wait for the\x0a      // autosave to finish.\x0a\x0a\x0a      writeInterstitialMessage(this.previewWindow.document);\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props = this.props,\x0a          previewLink = _this$props.previewLink,\x0a          currentPostLink = _this$props.currentPostLink,\x0a          isSaveable = _this$props.isSaveable; // Link to the `?preview=true` URL if we have it, since this lets us see\x0a      // changes that were autosaved since the post was last published. Otherwise,\x0a      // just link to the post\x27s URL.\x0a\x0a      var href = previewLink || currentPostLink;\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        isLarge: true,\x0a        className: \x22editor-post-preview\x22,\x0a        href: href,\x0a        target: this.getWindowTarget(),\x0a        disabled: !isSaveable,\x0a        onClick: this.openPreviewWindow\x0a      }, Object(external_this_wp_i18n_[\x22_x\x22])(\x27Preview\x27, \x27imperative verb\x27), Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a        className: \x22screen-reader-text\x22\x0a      },\x0a      /* translators: accessibility text */\x0a      Object(external_this_wp_i18n_[\x22__\x22])(\x27(opens in a new tab)\x27)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_nux_[\x22DotTip\x22], {\x0a        tipId: \x22core/editor.preview\x22\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Click \xe2\x80\x9cPreview\xe2\x80\x9d to load a preview of this page, so you can make sure you\xe2\x80\x99re happy with your blocks.\x27)));\x0a    }\x0a  }]);\x0a\x0a  return PostPreviewButton;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a/* harmony default export */ var post_preview_button = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref) {\x0a  var forcePreviewLink = _ref.forcePreviewLink,\x0a      forceIsAutosaveable = _ref.forceIsAutosaveable;\x0a\x0a  var _select = select(\x27core/editor\x27),\x0a      getCurrentPostId = _select.getCurrentPostId,\x0a      getCurrentPostAttribute = _select.getCurrentPostAttribute,\x0a      getEditedPostAttribute = _select.getEditedPostAttribute,\x0a      isEditedPostSaveable = _select.isEditedPostSaveable,\x0a      isEditedPostAutosaveable = _select.isEditedPostAutosaveable,\x0a      getEditedPostPreviewLink = _select.getEditedPostPreviewLink;\x0a\x0a  var _select2 = select(\x27core\x27),\x0a      getPostType = _select2.getPostType;\x0a\x0a  var previewLink = getEditedPostPreviewLink();\x0a  var postType = getPostType(getEditedPostAttribute(\x27type\x27));\x0a  return {\x0a    postId: getCurrentPostId(),\x0a    currentPostLink: getCurrentPostAttribute(\x27link\x27),\x0a    previewLink: forcePreviewLink !== undefined ? forcePreviewLink : previewLink,\x0a    isSaveable: isEditedPostSaveable(),\x0a    isAutosaveable: forceIsAutosaveable || isEditedPostAutosaveable(),\x0a    isViewable: Object(external_lodash_[\x22get\x22])(postType, [\x27viewable\x27], false),\x0a    isDraft: [\x27draft\x27, \x27auto-draft\x27].indexOf(getEditedPostAttribute(\x27status\x27)) !== -1\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    autosave: dispatch(\x27core/editor\x27).autosave,\x0a    savePost: dispatch(\x27core/editor\x27).savePost\x0a  };\x0a}), Object(external_this_wp_compose_[\x22ifCondition\x22])(function (_ref2) {\x0a  var isViewable = _ref2.isViewable;\x0a  return isViewable;\x0a})])(post_preview_button_PostPreviewButton));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-locked-modal/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0avar post_locked_modal_PostLockedModal =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(PostLockedModal, _Component);\x0a\x0a  function PostLockedModal() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, PostLockedModal);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(PostLockedModal).apply(this, arguments));\x0a    _this.sendPostLock = _this.sendPostLock.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.receivePostLock = _this.receivePostLock.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.releasePostLock = _this.releasePostLock.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(PostLockedModal, [{\x0a    key: \x22componentDidMount\x22,\x0a    value: function componentDidMount() {\x0a      var hookName = this.getHookName(); // Details on these events on the Heartbeat API docs\x0a      // https://developer.wordpress.org/plugins/javascript/heartbeat-api/\x0a\x0a      Object(external_this_wp_hooks_[\x22addAction\x22])(\x27heartbeat.send\x27, hookName, this.sendPostLock);\x0a      Object(external_this_wp_hooks_[\x22addAction\x22])(\x27heartbeat.tick\x27, hookName, this.receivePostLock);\x0a    }\x0a  }, {\x0a    key: \x22componentWillUnmount\x22,\x0a    value: function componentWillUnmount() {\x0a      var hookName = this.getHookName();\x0a      Object(external_this_wp_hooks_[\x22removeAction\x22])(\x27heartbeat.send\x27, hookName);\x0a      Object(external_this_wp_hooks_[\x22removeAction\x22])(\x27heartbeat.tick\x27, hookName);\x0a    }\x0a    /**\x0a     * Returns a `@wordpress/hooks` hook name specific to the instance of the\x0a     * component.\x0a     *\x0a     * @return {string} Hook name prefix.\x0a     */\x0a\x0a  }, {\x0a    key: \x22getHookName\x22,\x0a    value: function getHookName() {\x0a      var instanceId = this.props.instanceId;\x0a      return \x27core/editor/post-locked-modal-\x27 + instanceId;\x0a    }\x0a    /**\x0a     * Keep the lock refreshed.\x0a     *\x0a     * When the user does not send a heartbeat in a heartbeat-tick\x0a     * the user is no longer editing and another user can start editing.\x0a     *\x0a     * @param {Object} data Data to send in the heartbeat request.\x0a     */\x0a\x0a  }, {\x0a    key: \x22sendPostLock\x22,\x0a    value: function sendPostLock(data) {\x0a      var _this$props = this.props,\x0a          isLocked = _this$props.isLocked,\x0a          activePostLock = _this$props.activePostLock,\x0a          postId = _this$props.postId;\x0a\x0a      if (isLocked) {\x0a        return;\x0a      }\x0a\x0a      data[\x27wp-refresh-post-lock\x27] = {\x0a        lock: activePostLock,\x0a        post_id: postId\x0a      };\x0a    }\x0a    /**\x0a     * Refresh post locks: update the lock string or show the dialog if somebody has taken over editing.\x0a     *\x0a     * @param {Object} data Data received in the heartbeat request\x0a     */\x0a\x0a  }, {\x0a    key: \x22receivePostLock\x22,\x0a    value: function receivePostLock(data) {\x0a      if (!data[\x27wp-refresh-post-lock\x27]) {\x0a        return;\x0a      }\x0a\x0a      var _this$props2 = this.props,\x0a          autosave = _this$props2.autosave,\x0a          updatePostLock = _this$props2.updatePostLock;\x0a      var received = data[\x27wp-refresh-post-lock\x27];\x0a\x0a      if (received.lock_error) {\x0a        // Auto save and display the takeover modal.\x0a        autosave();\x0a        updatePostLock({\x0a          isLocked: true,\x0a          isTakeover: true,\x0a          user: {\x0a            avatar: received.lock_error.avatar_src\x0a          }\x0a        });\x0a      } else if (received.new_lock) {\x0a        updatePostLock({\x0a          isLocked: false,\x0a          activePostLock: received.new_lock\x0a        });\x0a      }\x0a    }\x0a    /**\x0a     * Unlock the post before the window is exited.\x0a     */\x0a\x0a  }, {\x0a    key: \x22releasePostLock\x22,\x0a    value: function releasePostLock() {\x0a      var _this$props3 = this.props,\x0a          isLocked = _this$props3.isLocked,\x0a          activePostLock = _this$props3.activePostLock,\x0a          postLockUtils = _this$props3.postLockUtils,\x0a          postId = _this$props3.postId;\x0a\x0a      if (isLocked || !activePostLock) {\x0a        return;\x0a      }\x0a\x0a      var data = new window.FormData();\x0a      data.append(\x27action\x27, \x27wp-remove-post-lock\x27);\x0a      data.append(\x27_wpnonce\x27, postLockUtils.unlockNonce);\x0a      data.append(\x27post_ID\x27, postId);\x0a      data.append(\x27active_post_lock\x27, activePostLock);\x0a      var xhr = new window.XMLHttpRequest();\x0a      xhr.open(\x27POST\x27, postLockUtils.ajaxUrl, false);\x0a      xhr.send(data);\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props4 = this.props,\x0a          user = _this$props4.user,\x0a          postId = _this$props4.postId,\x0a          isLocked = _this$props4.isLocked,\x0a          isTakeover = _this$props4.isTakeover,\x0a          postLockUtils = _this$props4.postLockUtils,\x0a          postType = _this$props4.postType;\x0a\x0a      if (!isLocked) {\x0a        return null;\x0a      }\x0a\x0a      var userDisplayName = user.name;\x0a      var userAvatar = user.avatar;\x0a      var unlockUrl = Object(external_this_wp_url_[\x22addQueryArgs\x22])(\x27post.php\x27, {\x0a        \x27get-post-lock\x27: \x271\x27,\x0a        lockKey: true,\x0a        post: postId,\x0a        action: \x27edit\x27,\x0a        _wpnonce: postLockUtils.nonce\x0a      });\x0a      var allPostsUrl = getWPAdminURL(\x27edit.php\x27, {\x0a        post_type: Object(external_lodash_[\x22get\x22])(postType, [\x27slug\x27])\x0a      });\x0a\x0a      var allPostsLabel = Object(external_this_wp_i18n_[\x22__\x22])(\x27Exit the Editor\x27);\x0a\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Modal\x22], {\x0a        title: isTakeover ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Someone else has taken over this post.\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27This post is already being edited.\x27),\x0a        focusOnMount: true,\x0a        shouldCloseOnClickOutside: false,\x0a        shouldCloseOnEsc: false,\x0a        isDismissable: false,\x0a        className: \x22editor-post-locked-modal\x22\x0a      }, !!userAvatar && Object(external_this_wp_element_[\x22createElement\x22])(\x22img\x22, {\x0a        src: userAvatar,\x0a        alt: Object(external_this_wp_i18n_[\x22__\x22])(\x27Avatar\x27),\x0a        className: \x22editor-post-locked-modal__avatar\x22\x0a      }), !!isTakeover && Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, null, Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, null, userDisplayName ? Object(external_this_wp_i18n_[\x22sprintf\x22])(\x0a      /* translators: %s: user\x27s display name */\x0a      Object(external_this_wp_i18n_[\x22__\x22])(\x27%s now has editing control of this post. Don\xe2\x80\x99t worry, your changes up to this moment have been saved.\x27), userDisplayName) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Another user now has editing control of this post. Don\xe2\x80\x99t worry, your changes up to this moment have been saved.\x27)), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22editor-post-locked-modal__buttons\x22\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        isPrimary: true,\x0a        isLarge: true,\x0a        href: allPostsUrl\x0a      }, allPostsLabel))), !isTakeover && Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, null, Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, null, userDisplayName ? Object(external_this_wp_i18n_[\x22sprintf\x22])(\x0a      /* translators: %s: user\x27s display name */\x0a      Object(external_this_wp_i18n_[\x22__\x22])(\x27%s is currently working on this post, which means you cannot make changes, unless you take over.\x27), userDisplayName) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Another user is currently working on this post, which means you cannot make changes, unless you take over.\x27)), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22editor-post-locked-modal__buttons\x22\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        isDefault: true,\x0a        isLarge: true,\x0a        href: allPostsUrl\x0a      }, allPostsLabel), Object(external_this_wp_element_[\x22createElement\x22])(post_preview_button, null), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        isPrimary: true,\x0a        isLarge: true,\x0a        href: unlockUrl\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Take Over\x27)))));\x0a    }\x0a  }]);\x0a\x0a  return PostLockedModal;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var post_locked_modal = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      isPostLocked = _select.isPostLocked,\x0a      isPostLockTakeover = _select.isPostLockTakeover,\x0a      getPostLockUser = _select.getPostLockUser,\x0a      getCurrentPostId = _select.getCurrentPostId,\x0a      getActivePostLock = _select.getActivePostLock,\x0a      getEditedPostAttribute = _select.getEditedPostAttribute,\x0a      getEditorSettings = _select.getEditorSettings;\x0a\x0a  var _select2 = select(\x27core\x27),\x0a      getPostType = _select2.getPostType;\x0a\x0a  return {\x0a    isLocked: isPostLocked(),\x0a    isTakeover: isPostLockTakeover(),\x0a    user: getPostLockUser(),\x0a    postId: getCurrentPostId(),\x0a    postLockUtils: getEditorSettings().postLockUtils,\x0a    activePostLock: getActivePostLock(),\x0a    postType: getPostType(getEditedPostAttribute(\x27type\x27))\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/editor\x27),\x0a      autosave = _dispatch.autosave,\x0a      updatePostLock = _dispatch.updatePostLock;\x0a\x0a  return {\x0a    autosave: autosave,\x0a    updatePostLock: updatePostLock\x0a  };\x0a}), external_this_wp_compose_[\x22withInstanceId\x22], Object(external_this_wp_compose_[\x22withGlobalEvents\x22])({\x0a  beforeunload: \x27releasePostLock\x27\x0a}))(post_locked_modal_PostLockedModal));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-pending-status/check.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0afunction PostPendingStatusCheck(_ref) {\x0a  var hasPublishAction = _ref.hasPublishAction,\x0a      isPublished = _ref.isPublished,\x0a      children = _ref.children;\x0a\x0a  if (isPublished || !hasPublishAction) {\x0a    return null;\x0a  }\x0a\x0a  return children;\x0a}\x0a/* harmony default export */ var post_pending_status_check = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      isCurrentPostPublished = _select.isCurrentPostPublished,\x0a      getCurrentPostType = _select.getCurrentPostType,\x0a      getCurrentPost = _select.getCurrentPost;\x0a\x0a  return {\x0a    hasPublishAction: Object(external_lodash_[\x22get\x22])(getCurrentPost(), [\x27_links\x27, \x27wp:action-publish\x27], false),\x0a    isPublished: isCurrentPostPublished(),\x0a    postType: getCurrentPostType()\x0a  };\x0a}))(PostPendingStatusCheck));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-pending-status/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0afunction PostPendingStatus(_ref) {\x0a  var status = _ref.status,\x0a      onUpdateStatus = _ref.onUpdateStatus;\x0a\x0a  var togglePendingStatus = function togglePendingStatus() {\x0a    var updatedStatus = status === \x27pending\x27 ? \x27draft\x27 : \x27pending\x27;\x0a    onUpdateStatus(updatedStatus);\x0a  };\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(post_pending_status_check, null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22CheckboxControl\x22], {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Pending Review\x27),\x0a    checked: status === \x27pending\x27,\x0a    onChange: togglePendingStatus\x0a  }));\x0a}\x0a/* harmony default export */ var post_pending_status = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    status: select(\x27core/editor\x27).getEditedPostAttribute(\x27status\x27)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onUpdateStatus: function onUpdateStatus(status) {\x0a      dispatch(\x27core/editor\x27).editPost({\x0a        status: status\x0a      });\x0a    }\x0a  };\x0a}))(PostPendingStatus));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-pingbacks/index.js\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction PostPingbacks(_ref) {\x0a  var _ref$pingStatus = _ref.pingStatus,\x0a      pingStatus = _ref$pingStatus === void 0 ? \x27open\x27 : _ref$pingStatus,\x0a      props = Object(objectWithoutProperties[\x22a\x22 /* default */])(_ref, [\x22pingStatus\x22]);\x0a\x0a  var onTogglePingback = function onTogglePingback() {\x0a    return props.editPost({\x0a      ping_status: pingStatus === \x27open\x27 ? \x27closed\x27 : \x27open\x27\x0a    });\x0a  };\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22CheckboxControl\x22], {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Allow Pingbacks & Trackbacks\x27),\x0a    checked: pingStatus === \x27open\x27,\x0a    onChange: onTogglePingback\x0a  });\x0a}\x0a\x0a/* harmony default export */ var post_pingbacks = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    pingStatus: select(\x27core/editor\x27).getEditedPostAttribute(\x27ping_status\x27)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    editPost: dispatch(\x27core/editor\x27).editPost\x0a  };\x0a})])(PostPingbacks));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-publish-button/label.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0afunction PublishButtonLabel(_ref) {\x0a  var isPublished = _ref.isPublished,\x0a      isBeingScheduled = _ref.isBeingScheduled,\x0a      isSaving = _ref.isSaving,\x0a      isPublishing = _ref.isPublishing,\x0a      hasPublishAction = _ref.hasPublishAction,\x0a      isAutosaving = _ref.isAutosaving;\x0a\x0a  if (isPublishing) {\x0a    return Object(external_this_wp_i18n_[\x22__\x22])(\x27Publishing\xe2\x80\xa6\x27);\x0a  } else if (isPublished && isSaving && !isAutosaving) {\x0a    return Object(external_this_wp_i18n_[\x22__\x22])(\x27Updating\xe2\x80\xa6\x27);\x0a  } else if (isBeingScheduled && isSaving && !isAutosaving) {\x0a    return Object(external_this_wp_i18n_[\x22__\x22])(\x27Scheduling\xe2\x80\xa6\x27);\x0a  }\x0a\x0a  if (!hasPublishAction) {\x0a    return Object(external_this_wp_i18n_[\x22__\x22])(\x27Submit for Review\x27);\x0a  } else if (isPublished) {\x0a    return Object(external_this_wp_i18n_[\x22__\x22])(\x27Update\x27);\x0a  } else if (isBeingScheduled) {\x0a    return Object(external_this_wp_i18n_[\x22__\x22])(\x27Schedule\x27);\x0a  }\x0a\x0a  return Object(external_this_wp_i18n_[\x22__\x22])(\x27Publish\x27);\x0a}\x0a/* harmony default export */ var post_publish_button_label = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref2) {\x0a  var forceIsSaving = _ref2.forceIsSaving;\x0a\x0a  var _select = select(\x27core/editor\x27),\x0a      isCurrentPostPublished = _select.isCurrentPostPublished,\x0a      isEditedPostBeingScheduled = _select.isEditedPostBeingScheduled,\x0a      isSavingPost = _select.isSavingPost,\x0a      isPublishingPost = _select.isPublishingPost,\x0a      getCurrentPost = _select.getCurrentPost,\x0a      getCurrentPostType = _select.getCurrentPostType,\x0a      isAutosavingPost = _select.isAutosavingPost;\x0a\x0a  return {\x0a    isPublished: isCurrentPostPublished(),\x0a    isBeingScheduled: isEditedPostBeingScheduled(),\x0a    isSaving: forceIsSaving || isSavingPost(),\x0a    isPublishing: isPublishingPost(),\x0a    hasPublishAction: Object(external_lodash_[\x22get\x22])(getCurrentPost(), [\x27_links\x27, \x27wp:action-publish\x27], false),\x0a    postType: getCurrentPostType(),\x0a    isAutosaving: isAutosavingPost()\x0a  };\x0a})])(PublishButtonLabel));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-publish-button/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0avar post_publish_button_PostPublishButton =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(PostPublishButton, _Component);\x0a\x0a  function PostPublishButton(props) {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, PostPublishButton);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(PostPublishButton).call(this, props));\x0a    _this.buttonNode = Object(external_this_wp_element_[\x22createRef\x22])();\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(PostPublishButton, [{\x0a    key: \x22componentDidMount\x22,\x0a    value: function componentDidMount() {\x0a      if (this.props.focusOnMount) {\x0a        this.buttonNode.current.focus();\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props = this.props,\x0a          forceIsDirty = _this$props.forceIsDirty,\x0a          forceIsSaving = _this$props.forceIsSaving,\x0a          hasPublishAction = _this$props.hasPublishAction,\x0a          isBeingScheduled = _this$props.isBeingScheduled,\x0a          isOpen = _this$props.isOpen,\x0a          isPostSavingLocked = _this$props.isPostSavingLocked,\x0a          isPublishable = _this$props.isPublishable,\x0a          isPublished = _this$props.isPublished,\x0a          isSaveable = _this$props.isSaveable,\x0a          isSaving = _this$props.isSaving,\x0a          isToggle = _this$props.isToggle,\x0a          onSave = _this$props.onSave,\x0a          onStatusChange = _this$props.onStatusChange,\x0a          _this$props$onSubmit = _this$props.onSubmit,\x0a          onSubmit = _this$props$onSubmit === void 0 ? external_lodash_[\x22noop\x22] : _this$props$onSubmit,\x0a          onToggle = _this$props.onToggle,\x0a          visibility = _this$props.visibility;\x0a      var isButtonDisabled = isSaving || forceIsSaving || !isSaveable || isPostSavingLocked || !isPublishable && !forceIsDirty;\x0a      var isToggleDisabled = isPublished || isSaving || forceIsSaving || !isSaveable || !isPublishable && !forceIsDirty;\x0a      var publishStatus;\x0a\x0a      if (!hasPublishAction) {\x0a        publishStatus = \x27pending\x27;\x0a      } else if (isBeingScheduled) {\x0a        publishStatus = \x27future\x27;\x0a      } else if (visibility === \x27private\x27) {\x0a        publishStatus = \x27private\x27;\x0a      } else {\x0a        publishStatus = \x27publish\x27;\x0a      }\x0a\x0a      var onClickButton = function onClickButton() {\x0a        if (isButtonDisabled) {\x0a          return;\x0a        }\x0a\x0a        onSubmit();\x0a        onStatusChange(publishStatus);\x0a        onSave();\x0a      };\x0a\x0a      var onClickToggle = function onClickToggle() {\x0a        if (isToggleDisabled) {\x0a          return;\x0a        }\x0a\x0a        onToggle();\x0a      };\x0a\x0a      var buttonProps = {\x0a        \x27aria-disabled\x27: isButtonDisabled,\x0a        className: \x27editor-post-publish-button\x27,\x0a        isBusy: isSaving && isPublished,\x0a        isLarge: true,\x0a        isPrimary: true,\x0a        onClick: onClickButton\x0a      };\x0a      var toggleProps = {\x0a        \x27aria-disabled\x27: isToggleDisabled,\x0a        \x27aria-expanded\x27: isOpen,\x0a        className: \x27editor-post-publish-panel__toggle\x27,\x0a        isBusy: isSaving && isPublished,\x0a        isPrimary: true,\x0a        onClick: onClickToggle\x0a      };\x0a      var toggleChildren = isBeingScheduled ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Schedule\xe2\x80\xa6\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Publish\xe2\x80\xa6\x27);\x0a      var buttonChildren = Object(external_this_wp_element_[\x22createElement\x22])(post_publish_button_label, {\x0a        forceIsSaving: forceIsSaving\x0a      });\x0a      var componentProps = isToggle ? toggleProps : buttonProps;\x0a      var componentChildren = isToggle ? toggleChildren : buttonChildren;\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], Object(esm_extends[\x22a\x22 /* default */])({\x0a        ref: this.buttonNode\x0a      }, componentProps), componentChildren, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_nux_[\x22DotTip\x22], {\x0a        tipId: \x22core/editor.publish\x22\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Finished writing? That\xe2\x80\x99s great, let\xe2\x80\x99s get this published right now. Just click \xe2\x80\x9cPublish\xe2\x80\x9d and you\xe2\x80\x99re good to go.\x27)));\x0a    }\x0a  }]);\x0a\x0a  return PostPublishButton;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a/* harmony default export */ var post_publish_button = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      isSavingPost = _select.isSavingPost,\x0a      isEditedPostBeingScheduled = _select.isEditedPostBeingScheduled,\x0a      getEditedPostVisibility = _select.getEditedPostVisibility,\x0a      isCurrentPostPublished = _select.isCurrentPostPublished,\x0a      isEditedPostSaveable = _select.isEditedPostSaveable,\x0a      isEditedPostPublishable = _select.isEditedPostPublishable,\x0a      isPostSavingLocked = _select.isPostSavingLocked,\x0a      getCurrentPost = _select.getCurrentPost,\x0a      getCurrentPostType = _select.getCurrentPostType;\x0a\x0a  return {\x0a    isSaving: isSavingPost(),\x0a    isBeingScheduled: isEditedPostBeingScheduled(),\x0a    visibility: getEditedPostVisibility(),\x0a    isSaveable: isEditedPostSaveable(),\x0a    isPostSavingLocked: isPostSavingLocked(),\x0a    isPublishable: isEditedPostPublishable(),\x0a    isPublished: isCurrentPostPublished(),\x0a    hasPublishAction: Object(external_lodash_[\x22get\x22])(getCurrentPost(), [\x27_links\x27, \x27wp:action-publish\x27], false),\x0a    postType: getCurrentPostType()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/editor\x27),\x0a      editPost = _dispatch.editPost,\x0a      savePost = _dispatch.savePost;\x0a\x0a  return {\x0a    onStatusChange: function onStatusChange(status) {\x0a      return editPost({\x0a        status: status\x0a      });\x0a    },\x0a    onSave: savePost\x0a  };\x0a})])(post_publish_button_PostPublishButton));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-visibility/utils.js\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0avar visibilityOptions = [{\x0a  value: \x27public\x27,\x0a  label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Public\x27),\x0a  info: Object(external_this_wp_i18n_[\x22__\x22])(\x27Visible to everyone.\x27)\x0a}, {\x0a  value: \x27private\x27,\x0a  label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Private\x27),\x0a  info: Object(external_this_wp_i18n_[\x22__\x22])(\x27Only visible to site admins and editors.\x27)\x0a}, {\x0a  value: \x27password\x27,\x0a  label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Password Protected\x27),\x0a  info: Object(external_this_wp_i18n_[\x22__\x22])(\x27Protected with a password you choose. Only those with the password can view this post.\x27)\x0a}];\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-visibility/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0avar post_visibility_PostVisibility =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(PostVisibility, _Component);\x0a\x0a  function PostVisibility(props) {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, PostVisibility);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(PostVisibility).apply(this, arguments));\x0a    _this.setPublic = _this.setPublic.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.setPrivate = _this.setPrivate.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.setPasswordProtected = _this.setPasswordProtected.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.updatePassword = _this.updatePassword.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.state = {\x0a      hasPassword: !!props.password\x0a    };\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(PostVisibility, [{\x0a    key: \x22setPublic\x22,\x0a    value: function setPublic() {\x0a      var _this$props = this.props,\x0a          visibility = _this$props.visibility,\x0a          onUpdateVisibility = _this$props.onUpdateVisibility,\x0a          status = _this$props.status;\x0a      onUpdateVisibility(visibility === \x27private\x27 ? \x27draft\x27 : status);\x0a      this.setState({\x0a        hasPassword: false\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22setPrivate\x22,\x0a    value: function setPrivate() {\x0a      if (!window.confirm(Object(external_this_wp_i18n_[\x22__\x22])(\x27Would you like to privately publish this post now?\x27))) {\x0a        // eslint-disable-line no-alert\x0a        return;\x0a      }\x0a\x0a      var _this$props2 = this.props,\x0a          onUpdateVisibility = _this$props2.onUpdateVisibility,\x0a          onSave = _this$props2.onSave;\x0a      onUpdateVisibility(\x27private\x27);\x0a      this.setState({\x0a        hasPassword: false\x0a      });\x0a      onSave();\x0a    }\x0a  }, {\x0a    key: \x22setPasswordProtected\x22,\x0a    value: function setPasswordProtected() {\x0a      var _this$props3 = this.props,\x0a          visibility = _this$props3.visibility,\x0a          onUpdateVisibility = _this$props3.onUpdateVisibility,\x0a          status = _this$props3.status,\x0a          password = _this$props3.password;\x0a      onUpdateVisibility(visibility === \x27private\x27 ? \x27draft\x27 : status, password || \x27\x27);\x0a      this.setState({\x0a        hasPassword: true\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22updatePassword\x22,\x0a    value: function updatePassword(event) {\x0a      var _this$props4 = this.props,\x0a          status = _this$props4.status,\x0a          onUpdateVisibility = _this$props4.onUpdateVisibility;\x0a      onUpdateVisibility(status, event.target.value);\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props5 = this.props,\x0a          visibility = _this$props5.visibility,\x0a          password = _this$props5.password,\x0a          instanceId = _this$props5.instanceId;\x0a      var visibilityHandlers = {\x0a        public: {\x0a          onSelect: this.setPublic,\x0a          checked: visibility === \x27public\x27 && !this.state.hasPassword\x0a        },\x0a        private: {\x0a          onSelect: this.setPrivate,\x0a          checked: visibility === \x27private\x27\x0a        },\x0a        password: {\x0a          onSelect: this.setPasswordProtected,\x0a          checked: this.state.hasPassword\x0a        }\x0a      };\x0a      return [Object(external_this_wp_element_[\x22createElement\x22])(\x22fieldset\x22, {\x0a        key: \x22visibility-selector\x22,\x0a        className: \x22editor-post-visibility__dialog-fieldset\x22\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(\x22legend\x22, {\x0a        className: \x22editor-post-visibility__dialog-legend\x22\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Post Visibility\x27)), visibilityOptions.map(function (_ref) {\x0a        var value = _ref.value,\x0a            label = _ref.label,\x0a            info = _ref.info;\x0a        return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a          key: value,\x0a          className: \x22editor-post-visibility__choice\x22\x0a        }, Object(external_this_wp_element_[\x22createElement\x22])(\x22input\x22, {\x0a          type: \x22radio\x22,\x0a          name: \x22editor-post-visibility__setting-\x22.concat(instanceId),\x0a          value: value,\x0a          onChange: visibilityHandlers[value].onSelect,\x0a          checked: visibilityHandlers[value].checked,\x0a          id: \x22editor-post-\x22.concat(value, \x22-\x22).concat(instanceId),\x0a          \x22aria-describedby\x22: \x22editor-post-\x22.concat(value, \x22-\x22).concat(instanceId, \x22-description\x22),\x0a          className: \x22editor-post-visibility__dialog-radio\x22\x0a        }), Object(external_this_wp_element_[\x22createElement\x22])(\x22label\x22, {\x0a          htmlFor: \x22editor-post-\x22.concat(value, \x22-\x22).concat(instanceId),\x0a          className: \x22editor-post-visibility__dialog-label\x22\x0a        }, label), Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, {\x0a          id: \x22editor-post-\x22.concat(value, \x22-\x22).concat(instanceId, \x22-description\x22),\x0a          className: \x22editor-post-visibility__dialog-info\x22\x0a        }, info));\x0a      })), this.state.hasPassword && Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22editor-post-visibility__dialog-password\x22,\x0a        key: \x22password-selector\x22\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(\x22label\x22, {\x0a        htmlFor: \x22editor-post-visibility__dialog-password-input-\x22.concat(instanceId),\x0a        className: \x22screen-reader-text\x22\x0a      }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Create password\x27)), Object(external_this_wp_element_[\x22createElement\x22])(\x22input\x22, {\x0a        className: \x22editor-post-visibility__dialog-password-input\x22,\x0a        id: \x22editor-post-visibility__dialog-password-input-\x22.concat(instanceId),\x0a        type: \x22text\x22,\x0a        onChange: this.updatePassword,\x0a        value: password,\x0a        placeholder: Object(external_this_wp_i18n_[\x22__\x22])(\x27Use a secure password\x27)\x0a      }))];\x0a    }\x0a  }]);\x0a\x0a  return PostVisibility;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a/* harmony default export */ var post_visibility = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select.getEditedPostAttribute,\x0a      getEditedPostVisibility = _select.getEditedPostVisibility;\x0a\x0a  return {\x0a    status: getEditedPostAttribute(\x27status\x27),\x0a    visibility: getEditedPostVisibility(),\x0a    password: getEditedPostAttribute(\x27password\x27)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/editor\x27),\x0a      savePost = _dispatch.savePost,\x0a      editPost = _dispatch.editPost;\x0a\x0a  return {\x0a    onSave: savePost,\x0a    onUpdateVisibility: function onUpdateVisibility(status) {\x0a      var password = arguments.length \x3e 1 && arguments[1] !== undefined ? arguments[1] : null;\x0a      editPost({\x0a        status: status,\x0a        password: password\x0a      });\x0a    }\x0a  };\x0a}), external_this_wp_compose_[\x22withInstanceId\x22]])(post_visibility_PostVisibility));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-visibility/label.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0afunction PostVisibilityLabel(_ref) {\x0a  var visibility = _ref.visibility;\x0a\x0a  var getVisibilityLabel = function getVisibilityLabel() {\x0a    return Object(external_lodash_[\x22find\x22])(visibilityOptions, {\x0a      value: visibility\x0a    }).label;\x0a  };\x0a\x0a  return getVisibilityLabel(visibility);\x0a}\x0a\x0a/* harmony default export */ var post_visibility_label = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    visibility: select(\x27core/editor\x27).getEditedPostVisibility()\x0a  };\x0a})(PostVisibilityLabel));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-schedule/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0afunction PostSchedule(_ref) {\x0a  var date = _ref.date,\x0a      onUpdateDate = _ref.onUpdateDate;\x0a\x0a  var settings = Object(external_this_wp_date_[\x22__experimentalGetSettings\x22])(); // To know if the current timezone is a 12 hour time with look for \x22a\x22 in the time format\x0a  // We also make sure this a is not escaped by a \x22/\x22\x0a\x0a\x0a  var is12HourTime = /a(?!\x5c\x5c)/i.test(settings.formats.time.toLowerCase() // Test only the lower case a\x0a  .replace(/\x5c\x5c\x5c\x5c/g, \x27\x27) // Replace \x22//\x22 with empty strings\x0a  .split(\x27\x27).reverse().join(\x27\x27) // Reverse the string and test for \x22a\x22 not followed by a slash\x0a  );\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22DateTimePicker\x22], {\x0a    key: \x22date-time-picker\x22,\x0a    currentDate: date,\x0a    onChange: onUpdateDate,\x0a    is12Hour: is12HourTime\x0a  });\x0a}\x0a/* harmony default export */ var post_schedule = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    date: select(\x27core/editor\x27).getEditedPostAttribute(\x27date\x27)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onUpdateDate: function onUpdateDate(date) {\x0a      dispatch(\x27core/editor\x27).editPost({\x0a        date: date\x0a      });\x0a    }\x0a  };\x0a})])(PostSchedule));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-schedule/label.js\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0afunction PostScheduleLabel(_ref) {\x0a  var date = _ref.date,\x0a      isFloating = _ref.isFloating;\x0a\x0a  var settings = Object(external_this_wp_date_[\x22__experimentalGetSettings\x22])();\x0a\x0a  return date && !isFloating ? Object(external_this_wp_date_[\x22dateI18n\x22])(settings.formats.datetimeAbbreviated, date) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Immediately\x27);\x0a}\x0a/* harmony default export */ var post_schedule_label = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    date: select(\x27core/editor\x27).getEditedPostAttribute(\x27date\x27),\x0a    isFloating: select(\x27core/editor\x27).isEditedPostDateFloating()\x0a  };\x0a})(PostScheduleLabel));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-taxonomies/flat-term-selector.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Module constants\x0a */\x0a\x0avar DEFAULT_QUERY = {\x0a  per_page: -1,\x0a  orderby: \x27count\x27,\x0a  order: \x27desc\x27,\x0a  _fields: \x27id,name\x27\x0a};\x0avar MAX_TERMS_SUGGESTIONS = 20;\x0a\x0avar isSameTermName = function isSameTermName(termA, termB) {\x0a  return termA.toLowerCase() === termB.toLowerCase();\x0a};\x0a/**\x0a * Returns a term object with name unescaped.\x0a * The unescape of the name propery is done using lodash unescape function.\x0a *\x0a * @param {Object} term The term object to unescape.\x0a *\x0a * @return {Object} Term object with name property unescaped.\x0a */\x0a\x0a\x0avar flat_term_selector_unescapeTerm = function unescapeTerm(term) {\x0a  return Object(objectSpread[\x22a\x22 /* default */])({}, term, {\x0a    name: Object(external_lodash_[\x22unescape\x22])(term.name)\x0a  });\x0a};\x0a/**\x0a * Returns an array of term objects with names unescaped.\x0a * The unescape of each term is performed using the unescapeTerm function.\x0a *\x0a * @param {Object[]} terms Array of term objects to unescape.\x0a *\x0a * @return {Object[]} Array of therm objects unscaped.\x0a */\x0a\x0a\x0avar flat_term_selector_unescapeTerms = function unescapeTerms(terms) {\x0a  return Object(external_lodash_[\x22map\x22])(terms, flat_term_selector_unescapeTerm);\x0a};\x0a\x0avar flat_term_selector_FlatTermSelector =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(FlatTermSelector, _Component);\x0a\x0a  function FlatTermSelector() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, FlatTermSelector);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(FlatTermSelector).apply(this, arguments));\x0a    _this.onChange = _this.onChange.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.searchTerms = Object(external_lodash_[\x22throttle\x22])(_this.searchTerms.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this))), 500);\x0a    _this.findOrCreateTerm = _this.findOrCreateTerm.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.state = {\x0a      loading: !Object(external_lodash_[\x22isEmpty\x22])(_this.props.terms),\x0a      availableTerms: [],\x0a      selectedTerms: []\x0a    };\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(FlatTermSelector, [{\x0a    key: \x22componentDidMount\x22,\x0a    value: function componentDidMount() {\x0a      var _this2 = this;\x0a\x0a      if (!Object(external_lodash_[\x22isEmpty\x22])(this.props.terms)) {\x0a        this.initRequest = this.fetchTerms({\x0a          include: this.props.terms.join(\x27,\x27),\x0a          per_page: -1\x0a        });\x0a        this.initRequest.then(function () {\x0a          _this2.setState({\x0a            loading: false\x0a          });\x0a        }, function (xhr) {\x0a          if (xhr.statusText === \x27abort\x27) {\x0a            return;\x0a          }\x0a\x0a          _this2.setState({\x0a            loading: false\x0a          });\x0a        });\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22componentWillUnmount\x22,\x0a    value: function componentWillUnmount() {\x0a      Object(external_lodash_[\x22invoke\x22])(this.initRequest, [\x27abort\x27]);\x0a      Object(external_lodash_[\x22invoke\x22])(this.searchRequest, [\x27abort\x27]);\x0a    }\x0a  }, {\x0a    key: \x22componentDidUpdate\x22,\x0a    value: function componentDidUpdate(prevProps) {\x0a      if (prevProps.terms !== this.props.terms) {\x0a        this.updateSelectedTerms(this.props.terms);\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22fetchTerms\x22,\x0a    value: function fetchTerms() {\x0a      var _this3 = this;\x0a\x0a      var params = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : {};\x0a      var taxonomy = this.props.taxonomy;\x0a\x0a      var query = Object(objectSpread[\x22a\x22 /* default */])({}, DEFAULT_QUERY, params);\x0a\x0a      var request = external_this_wp_apiFetch_default()({\x0a        path: Object(external_this_wp_url_[\x22addQueryArgs\x22])(\x22/wp/v2/\x22.concat(taxonomy.rest_base), query)\x0a      });\x0a      request.then(flat_term_selector_unescapeTerms).then(function (terms) {\x0a        _this3.setState(function (state) {\x0a          return {\x0a            availableTerms: state.availableTerms.concat(terms.filter(function (term) {\x0a              return !Object(external_lodash_[\x22find\x22])(state.availableTerms, function (availableTerm) {\x0a                return availableTerm.id === term.id;\x0a              });\x0a            }))\x0a          };\x0a        });\x0a\x0a        _this3.updateSelectedTerms(_this3.props.terms);\x0a      });\x0a      return request;\x0a    }\x0a  }, {\x0a    key: \x22updateSelectedTerms\x22,\x0a    value: function updateSelectedTerms() {\x0a      var _this4 = this;\x0a\x0a      var terms = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : [];\x0a      var selectedTerms = terms.reduce(function (result, termId) {\x0a        var termObject = Object(external_lodash_[\x22find\x22])(_this4.state.availableTerms, function (term) {\x0a          return term.id === termId;\x0a        });\x0a\x0a        if (termObject) {\x0a          result.push(termObject.name);\x0a        }\x0a\x0a        return result;\x0a      }, []);\x0a      this.setState({\x0a        selectedTerms: selectedTerms\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22findOrCreateTerm\x22,\x0a    value: function findOrCreateTerm(termName) {\x0a      var _this5 = this;\x0a\x0a      var taxonomy = this.props.taxonomy;\x0a      var termNameEscaped = Object(external_lodash_[\x22escape\x22])(termName); // Tries to create a term or fetch it if it already exists.\x0a\x0a      return external_this_wp_apiFetch_default()({\x0a        path: \x22/wp/v2/\x22.concat(taxonomy.rest_base),\x0a        method: \x27POST\x27,\x0a        data: {\x0a          name: termNameEscaped\x0a        }\x0a      }).catch(function (error) {\x0a        var errorCode = error.code;\x0a\x0a        if (errorCode === \x27term_exists\x27) {\x0a          // If the terms exist, fetch it instead of creating a new one.\x0a          _this5.addRequest = external_this_wp_apiFetch_default()({\x0a            path: Object(external_this_wp_url_[\x22addQueryArgs\x22])(\x22/wp/v2/\x22.concat(taxonomy.rest_base), Object(objectSpread[\x22a\x22 /* default */])({}, DEFAULT_QUERY, {\x0a              search: termNameEscaped\x0a            }))\x0a          }).then(flat_term_selector_unescapeTerms);\x0a          return _this5.addRequest.then(function (searchResult) {\x0a            return Object(external_lodash_[\x22find\x22])(searchResult, function (result) {\x0a              return isSameTermName(result.name, termName);\x0a            });\x0a          });\x0a        }\x0a\x0a        return Promise.reject(error);\x0a      }).then(flat_term_selector_unescapeTerm);\x0a    }\x0a  }, {\x0a    key: \x22onChange\x22,\x0a    value: function onChange(termNames) {\x0a      var _this6 = this;\x0a\x0a      var uniqueTerms = Object(external_lodash_[\x22uniqBy\x22])(termNames, function (term) {\x0a        return term.toLowerCase();\x0a      });\x0a      this.setState({\x0a        selectedTerms: uniqueTerms\x0a      });\x0a      var newTermNames = uniqueTerms.filter(function (termName) {\x0a        return !Object(external_lodash_[\x22find\x22])(_this6.state.availableTerms, function (term) {\x0a          return isSameTermName(term.name, termName);\x0a        });\x0a      });\x0a\x0a      var termNamesToIds = function termNamesToIds(names, availableTerms) {\x0a        return names.map(function (termName) {\x0a          return Object(external_lodash_[\x22find\x22])(availableTerms, function (term) {\x0a            return isSameTermName(term.name, termName);\x0a          }).id;\x0a        });\x0a      };\x0a\x0a      if (newTermNames.length === 0) {\x0a        return this.props.onUpdateTerms(termNamesToIds(uniqueTerms, this.state.availableTerms), this.props.taxonomy.rest_base);\x0a      }\x0a\x0a      Promise.all(newTermNames.map(this.findOrCreateTerm)).then(function (newTerms) {\x0a        var newAvailableTerms = _this6.state.availableTerms.concat(newTerms);\x0a\x0a        _this6.setState({\x0a          availableTerms: newAvailableTerms\x0a        });\x0a\x0a        return _this6.props.onUpdateTerms(termNamesToIds(uniqueTerms, newAvailableTerms), _this6.props.taxonomy.rest_base);\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22searchTerms\x22,\x0a    value: function searchTerms() {\x0a      var search = arguments.length \x3e 0 && arguments[0] !== undefined ? arguments[0] : \x27\x27;\x0a      Object(external_lodash_[\x22invoke\x22])(this.searchRequest, [\x27abort\x27]);\x0a      this.searchRequest = this.fetchTerms({\x0a        search: search\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props = this.props,\x0a          slug = _this$props.slug,\x0a          taxonomy = _this$props.taxonomy,\x0a          hasAssignAction = _this$props.hasAssignAction;\x0a\x0a      if (!hasAssignAction) {\x0a        return null;\x0a      }\x0a\x0a      var _this$state = this.state,\x0a          loading = _this$state.loading,\x0a          availableTerms = _this$state.availableTerms,\x0a          selectedTerms = _this$state.selectedTerms;\x0a      var termNames = availableTerms.map(function (term) {\x0a        return term.name;\x0a      });\x0a      var newTermLabel = Object(external_lodash_[\x22get\x22])(taxonomy, [\x27labels\x27, \x27add_new_item\x27], slug === \x27post_tag\x27 ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Add New Tag\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Add New Term\x27));\x0a      var singularName = Object(external_lodash_[\x22get\x22])(taxonomy, [\x27labels\x27, \x27singular_name\x27], slug === \x27post_tag\x27 ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Tag\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Term\x27));\x0a      var termAddedLabel = Object(external_this_wp_i18n_[\x22sprintf\x22])(Object(external_this_wp_i18n_[\x22_x\x22])(\x27%s added\x27, \x27term\x27), singularName);\x0a      var termRemovedLabel = Object(external_this_wp_i18n_[\x22sprintf\x22])(Object(external_this_wp_i18n_[\x22_x\x22])(\x27%s removed\x27, \x27term\x27), singularName);\x0a      var removeTermLabel = Object(external_this_wp_i18n_[\x22sprintf\x22])(Object(external_this_wp_i18n_[\x22_x\x22])(\x27Remove %s\x27, \x27term\x27), singularName);\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22FormTokenField\x22], {\x0a        value: selectedTerms,\x0a        suggestions: termNames,\x0a        onChange: this.onChange,\x0a        onInputChange: this.searchTerms,\x0a        maxSuggestions: MAX_TERMS_SUGGESTIONS,\x0a        disabled: loading,\x0a        label: newTermLabel,\x0a        messages: {\x0a          added: termAddedLabel,\x0a          removed: termRemovedLabel,\x0a          remove: removeTermLabel\x0a        }\x0a      });\x0a    }\x0a  }]);\x0a\x0a  return FlatTermSelector;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var flat_term_selector = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref) {\x0a  var slug = _ref.slug;\x0a\x0a  var _select = select(\x27core/editor\x27),\x0a      getCurrentPost = _select.getCurrentPost;\x0a\x0a  var _select2 = select(\x27core\x27),\x0a      getTaxonomy = _select2.getTaxonomy;\x0a\x0a  var taxonomy = getTaxonomy(slug);\x0a  return {\x0a    hasCreateAction: taxonomy ? Object(external_lodash_[\x22get\x22])(getCurrentPost(), [\x27_links\x27, \x27wp:action-create-\x27 + taxonomy.rest_base], false) : false,\x0a    hasAssignAction: taxonomy ? Object(external_lodash_[\x22get\x22])(getCurrentPost(), [\x27_links\x27, \x27wp:action-assign-\x27 + taxonomy.rest_base], false) : false,\x0a    terms: taxonomy ? select(\x27core/editor\x27).getEditedPostAttribute(taxonomy.rest_base) : [],\x0a    taxonomy: taxonomy\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onUpdateTerms: function onUpdateTerms(terms, restBase) {\x0a      dispatch(\x27core/editor\x27).editPost(Object(defineProperty[\x22a\x22 /* default */])({}, restBase, terms));\x0a    }\x0a  };\x0a}), Object(external_this_wp_components_[\x22withFilters\x22])(\x27editor.PostTaxonomyType\x27))(flat_term_selector_FlatTermSelector));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-publish-panel/maybe-tags-panel.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar maybe_tags_panel_TagsPanel = function TagsPanel() {\x0a  var panelBodyTitle = [Object(external_this_wp_i18n_[\x22__\x22])(\x27Suggestion:\x27), Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a    className: \x22editor-post-publish-panel__link\x22,\x0a    key: \x22label\x22\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Add tags\x27))];\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    initialOpen: false,\x0a    title: panelBodyTitle\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, null, Object(external_this_wp_i18n_[\x22__\x22])(\x27Tags help users and search engines navigate your site and find your content. Add a few keywords to describe your post.\x27)), Object(external_this_wp_element_[\x22createElement\x22])(flat_term_selector, {\x0a    slug: \x27post_tag\x27\x0a  }));\x0a};\x0a\x0avar maybe_tags_panel_MaybeTagsPanel =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(MaybeTagsPanel, _Component);\x0a\x0a  function MaybeTagsPanel(props) {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, MaybeTagsPanel);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(MaybeTagsPanel).call(this, props));\x0a    _this.state = {\x0a      hadTagsWhenOpeningThePanel: props.hasTags\x0a    };\x0a    return _this;\x0a  }\x0a  /*\x0a   * We only want to show the tag panel if the post didn\x27t have\x0a   * any tags when the user hit the Publish button.\x0a   *\x0a   * We can\x27t use the prop.hasTags because it\x27ll change to true\x0a   * if the user adds a new tag within the pre-publish panel.\x0a   * This would force a re-render and a new prop.hasTags check,\x0a   * hiding this panel and keeping the user from adding\x0a   * more than one tag.\x0a   */\x0a\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(MaybeTagsPanel, [{\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      if (!this.state.hadTagsWhenOpeningThePanel) {\x0a        return Object(external_this_wp_element_[\x22createElement\x22])(maybe_tags_panel_TagsPanel, null);\x0a      }\x0a\x0a      return null;\x0a    }\x0a  }]);\x0a\x0a  return MaybeTagsPanel;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var maybe_tags_panel = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var postType = select(\x27core/editor\x27).getCurrentPostType();\x0a  var tagsTaxonomy = select(\x27core\x27).getTaxonomy(\x27post_tag\x27);\x0a  var tags = tagsTaxonomy && select(\x27core/editor\x27).getEditedPostAttribute(tagsTaxonomy.rest_base);\x0a  return {\x0a    areTagsFetched: tagsTaxonomy !== undefined,\x0a    isPostTypeSupported: tagsTaxonomy && Object(external_lodash_[\x22some\x22])(tagsTaxonomy.types, function (type) {\x0a      return type === postType;\x0a    }),\x0a    hasTags: tags && tags.length\x0a  };\x0a}), Object(external_this_wp_compose_[\x22ifCondition\x22])(function (_ref) {\x0a  var areTagsFetched = _ref.areTagsFetched,\x0a      isPostTypeSupported = _ref.isPostTypeSupported;\x0a  return isPostTypeSupported && areTagsFetched;\x0a}))(maybe_tags_panel_MaybeTagsPanel));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-publish-panel/maybe-post-format-panel.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar maybe_post_format_panel_PostFormatSuggestion = function PostFormatSuggestion(_ref) {\x0a  var suggestedPostFormat = _ref.suggestedPostFormat,\x0a      suggestionText = _ref.suggestionText,\x0a      onUpdatePostFormat = _ref.onUpdatePostFormat;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a    isLink: true,\x0a    onClick: function onClick() {\x0a      return onUpdatePostFormat(suggestedPostFormat);\x0a    }\x0a  }, suggestionText);\x0a};\x0a\x0avar maybe_post_format_panel_PostFormatPanel = function PostFormatPanel(_ref2) {\x0a  var suggestion = _ref2.suggestion,\x0a      onUpdatePostFormat = _ref2.onUpdatePostFormat;\x0a  var panelBodyTitle = [Object(external_this_wp_i18n_[\x22__\x22])(\x27Suggestion:\x27), Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a    className: \x22editor-post-publish-panel__link\x22,\x0a    key: \x22label\x22\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Use a post format\x27))];\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    initialOpen: false,\x0a    title: panelBodyTitle\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, null, Object(external_this_wp_i18n_[\x22__\x22])(\x27Your theme uses post formats to highlight different kinds of content, like images or videos. Apply a post format to see this special styling.\x27)), Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, null, Object(external_this_wp_element_[\x22createElement\x22])(maybe_post_format_panel_PostFormatSuggestion, {\x0a    onUpdatePostFormat: onUpdatePostFormat,\x0a    suggestedPostFormat: suggestion.id,\x0a    suggestionText: Object(external_this_wp_i18n_[\x22sprintf\x22])(Object(external_this_wp_i18n_[\x22__\x22])(\x27Apply the \x22%1$s\x22 format.\x27), suggestion.caption)\x0a  })));\x0a};\x0a\x0avar maybe_post_format_panel_getSuggestion = function getSuggestion(supportedFormats, suggestedPostFormat) {\x0a  var formats = POST_FORMATS.filter(function (format) {\x0a    return Object(external_lodash_[\x22includes\x22])(supportedFormats, format.id);\x0a  });\x0a  return Object(external_lodash_[\x22find\x22])(formats, function (format) {\x0a    return format.id === suggestedPostFormat;\x0a  });\x0a};\x0a\x0a/* harmony default export */ var maybe_post_format_panel = (Object(external_this_wp_compose_[\x22compose\x22])(Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select.getEditedPostAttribute,\x0a      getSuggestedPostFormat = _select.getSuggestedPostFormat;\x0a\x0a  var supportedFormats = Object(external_lodash_[\x22get\x22])(select(\x27core\x27).getThemeSupports(), [\x27formats\x27], []);\x0a  return {\x0a    currentPostFormat: getEditedPostAttribute(\x27format\x27),\x0a    suggestion: maybe_post_format_panel_getSuggestion(supportedFormats, getSuggestedPostFormat())\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onUpdatePostFormat: function onUpdatePostFormat(postFormat) {\x0a      dispatch(\x27core/editor\x27).editPost({\x0a        format: postFormat\x0a      });\x0a    }\x0a  };\x0a}), Object(external_this_wp_compose_[\x22ifCondition\x22])(function (_ref3) {\x0a  var suggestion = _ref3.suggestion,\x0a      currentPostFormat = _ref3.currentPostFormat;\x0a  return suggestion && suggestion.id !== currentPostFormat;\x0a}))(maybe_post_format_panel_PostFormatPanel));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-publish-panel/prepublish.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0afunction PostPublishPanelPrepublish(_ref) {\x0a  var hasPublishAction = _ref.hasPublishAction,\x0a      isBeingScheduled = _ref.isBeingScheduled,\x0a      children = _ref.children;\x0a  var prePublishTitle, prePublishBodyText;\x0a\x0a  if (!hasPublishAction) {\x0a    prePublishTitle = Object(external_this_wp_i18n_[\x22__\x22])(\x27Are you ready to submit for review?\x27);\x0a    prePublishBodyText = Object(external_this_wp_i18n_[\x22__\x22])(\x27When you\xe2\x80\x99re ready, submit your work for review, and an Editor will be able to approve it for you.\x27);\x0a  } else if (isBeingScheduled) {\x0a    prePublishTitle = Object(external_this_wp_i18n_[\x22__\x22])(\x27Are you ready to schedule?\x27);\x0a    prePublishBodyText = Object(external_this_wp_i18n_[\x22__\x22])(\x27Your work will be published at the specified date and time.\x27);\x0a  } else {\x0a    prePublishTitle = Object(external_this_wp_i18n_[\x22__\x22])(\x27Are you ready to publish?\x27);\x0a    prePublishBodyText = Object(external_this_wp_i18n_[\x22__\x22])(\x27Double-check your settings before publishing.\x27);\x0a  }\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a    className: \x22editor-post-publish-panel__prepublish\x22\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, null, Object(external_this_wp_element_[\x22createElement\x22])(\x22strong\x22, null, prePublishTitle)), Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, null, prePublishBodyText), hasPublishAction && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    initialOpen: false,\x0a    title: [Object(external_this_wp_i18n_[\x22__\x22])(\x27Visibility:\x27), Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a      className: \x22editor-post-publish-panel__link\x22,\x0a      key: \x22label\x22\x0a    }, Object(external_this_wp_element_[\x22createElement\x22])(post_visibility_label, null))]\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(post_visibility, null)), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a    initialOpen: false,\x0a    title: [Object(external_this_wp_i18n_[\x22__\x22])(\x27Publish:\x27), Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a      className: \x22editor-post-publish-panel__link\x22,\x0a      key: \x22label\x22\x0a    }, Object(external_this_wp_element_[\x22createElement\x22])(post_schedule_label, null))]\x0a  }, Object(external_this_wp_element_[\x22createElement\x22])(post_schedule, null)), Object(external_this_wp_element_[\x22createElement\x22])(maybe_post_format_panel, null), Object(external_this_wp_element_[\x22createElement\x22])(maybe_tags_panel, null), children));\x0a}\x0a\x0a/* harmony default export */ var prepublish = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getCurrentPost = _select.getCurrentPost,\x0a      isEditedPostBeingScheduled = _select.isEditedPostBeingScheduled;\x0a\x0a  return {\x0a    hasPublishAction: Object(external_lodash_[\x22get\x22])(getCurrentPost(), [\x27_links\x27, \x27wp:action-publish\x27], false),\x0a    isBeingScheduled: isEditedPostBeingScheduled()\x0a  };\x0a})(PostPublishPanelPrepublish));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-publish-panel/postpublish.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0avar postpublish_PostPublishPanelPostpublish =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(PostPublishPanelPostpublish, _Component);\x0a\x0a  function PostPublishPanelPostpublish() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, PostPublishPanelPostpublish);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(PostPublishPanelPostpublish).apply(this, arguments));\x0a    _this.state = {\x0a      showCopyConfirmation: false\x0a    };\x0a    _this.onCopy = _this.onCopy.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.onSelectInput = _this.onSelectInput.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.postLink = Object(external_this_wp_element_[\x22createRef\x22])();\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(PostPublishPanelPostpublish, [{\x0a    key: \x22componentDidMount\x22,\x0a    value: function componentDidMount() {\x0a      if (this.props.focusOnMount) {\x0a        this.postLink.current.focus();\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22componentWillUnmount\x22,\x0a    value: function componentWillUnmount() {\x0a      clearTimeout(this.dismissCopyConfirmation);\x0a    }\x0a  }, {\x0a    key: \x22onCopy\x22,\x0a    value: function onCopy() {\x0a      var _this2 = this;\x0a\x0a      this.setState({\x0a        showCopyConfirmation: true\x0a      });\x0a      clearTimeout(this.dismissCopyConfirmation);\x0a      this.dismissCopyConfirmation = setTimeout(function () {\x0a        _this2.setState({\x0a          showCopyConfirmation: false\x0a        });\x0a      }, 4000);\x0a    }\x0a  }, {\x0a    key: \x22onSelectInput\x22,\x0a    value: function onSelectInput(event) {\x0a      event.target.select();\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props = this.props,\x0a          children = _this$props.children,\x0a          isScheduled = _this$props.isScheduled,\x0a          post = _this$props.post,\x0a          postType = _this$props.postType;\x0a      var postLabel = Object(external_lodash_[\x22get\x22])(postType, [\x27labels\x27, \x27singular_name\x27]);\x0a      var viewPostLabel = Object(external_lodash_[\x22get\x22])(postType, [\x27labels\x27, \x27view_item\x27]);\x0a      var postPublishNonLinkHeader = isScheduled ? Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_element_[\x22Fragment\x22], null, Object(external_this_wp_i18n_[\x22__\x22])(\x27is now scheduled. It will go live on\x27), \x22 \x22, Object(external_this_wp_element_[\x22createElement\x22])(post_schedule_label, null), \x22.\x22) : Object(external_this_wp_i18n_[\x22__\x22])(\x27is now live.\x27);\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22post-publish-panel__postpublish\x22\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], {\x0a        className: \x22post-publish-panel__postpublish-header\x22\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(\x22a\x22, {\x0a        ref: this.postLink,\x0a        href: post.link\x0a      }, post.title || Object(external_this_wp_i18n_[\x22__\x22])(\x27(no title)\x27)), \x22 \x22, postPublishNonLinkHeader), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22PanelBody\x22], null, Object(external_this_wp_element_[\x22createElement\x22])(\x22p\x22, {\x0a        className: \x22post-publish-panel__postpublish-subheader\x22\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(\x22strong\x22, null, Object(external_this_wp_i18n_[\x22__\x22])(\x27What\xe2\x80\x99s next?\x27))), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22TextControl\x22], {\x0a        className: \x22post-publish-panel__postpublish-post-address\x22,\x0a        readOnly: true,\x0a        label: Object(external_this_wp_i18n_[\x22sprintf\x22])(\x0a        /* translators: %s: post type singular name */\x0a        Object(external_this_wp_i18n_[\x22__\x22])(\x27%s address\x27), postLabel),\x0a        value: Object(external_this_wp_url_[\x22safeDecodeURIComponent\x22])(post.link),\x0a        onFocus: this.onSelectInput\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22post-publish-panel__postpublish-buttons\x22\x0a      }, !isScheduled && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        isDefault: true,\x0a        href: post.link\x0a      }, viewPostLabel), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22ClipboardButton\x22], {\x0a        isDefault: true,\x0a        text: post.link,\x0a        onCopy: this.onCopy\x0a      }, this.state.showCopyConfirmation ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Copied!\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Copy Link\x27)))), children);\x0a    }\x0a  }]);\x0a\x0a  return PostPublishPanelPostpublish;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var postpublish = (Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getEditedPostAttribute = _select.getEditedPostAttribute,\x0a      getCurrentPost = _select.getCurrentPost,\x0a      isCurrentPostScheduled = _select.isCurrentPostScheduled;\x0a\x0a  var _select2 = select(\x27core\x27),\x0a      getPostType = _select2.getPostType;\x0a\x0a  return {\x0a    post: getCurrentPost(),\x0a    postType: getPostType(getEditedPostAttribute(\x27type\x27)),\x0a    isScheduled: isCurrentPostScheduled()\x0a  };\x0a})(postpublish_PostPublishPanelPostpublish));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-publish-panel/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0a\x0avar post_publish_panel_PostPublishPanel =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(PostPublishPanel, _Component);\x0a\x0a  function PostPublishPanel() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, PostPublishPanel);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(PostPublishPanel).apply(this, arguments));\x0a    _this.onSubmit = _this.onSubmit.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(PostPublishPanel, [{\x0a    key: \x22componentDidUpdate\x22,\x0a    value: function componentDidUpdate(prevProps) {\x0a      // Automatically collapse the publish sidebar when a post\x0a      // is published and the user makes an edit.\x0a      if (prevProps.isPublished && !this.props.isSaving && this.props.isDirty) {\x0a        this.props.onClose();\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22onSubmit\x22,\x0a    value: function onSubmit() {\x0a      var _this$props = this.props,\x0a          onClose = _this$props.onClose,\x0a          hasPublishAction = _this$props.hasPublishAction,\x0a          isPostTypeViewable = _this$props.isPostTypeViewable;\x0a\x0a      if (!hasPublishAction || !isPostTypeViewable) {\x0a        onClose();\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props2 = this.props,\x0a          forceIsDirty = _this$props2.forceIsDirty,\x0a          forceIsSaving = _this$props2.forceIsSaving,\x0a          isBeingScheduled = _this$props2.isBeingScheduled,\x0a          isPublished = _this$props2.isPublished,\x0a          isPublishSidebarEnabled = _this$props2.isPublishSidebarEnabled,\x0a          isScheduled = _this$props2.isScheduled,\x0a          isSaving = _this$props2.isSaving,\x0a          onClose = _this$props2.onClose,\x0a          onTogglePublishSidebar = _this$props2.onTogglePublishSidebar,\x0a          PostPublishExtension = _this$props2.PostPublishExtension,\x0a          PrePublishExtension = _this$props2.PrePublishExtension,\x0a          additionalProps = Object(objectWithoutProperties[\x22a\x22 /* default */])(_this$props2, [\x22forceIsDirty\x22, \x22forceIsSaving\x22, \x22isBeingScheduled\x22, \x22isPublished\x22, \x22isPublishSidebarEnabled\x22, \x22isScheduled\x22, \x22isSaving\x22, \x22onClose\x22, \x22onTogglePublishSidebar\x22, \x22PostPublishExtension\x22, \x22PrePublishExtension\x22]);\x0a\x0a      var propsForPanel = Object(external_lodash_[\x22omit\x22])(additionalProps, [\x27hasPublishAction\x27, \x27isDirty\x27, \x27isPostTypeViewable\x27]);\x0a      var isPublishedOrScheduled = isPublished || isScheduled && isBeingScheduled;\x0a      var isPrePublish = !isPublishedOrScheduled && !isSaving;\x0a      var isPostPublish = isPublishedOrScheduled && !isSaving;\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, Object(esm_extends[\x22a\x22 /* default */])({\x0a        className: \x22editor-post-publish-panel\x22\x0a      }, propsForPanel), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22editor-post-publish-panel__header\x22\x0a      }, isPostPublish ? Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22editor-post-publish-panel__header-published\x22\x0a      }, isScheduled ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Scheduled\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Published\x27)) : Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22editor-post-publish-panel__header-publish-button\x22\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(post_publish_button, {\x0a        focusOnMount: true,\x0a        onSubmit: this.onSubmit,\x0a        forceIsDirty: forceIsDirty,\x0a        forceIsSaving: forceIsSaving\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a        className: \x22editor-post-publish-panel__spacer\x22\x0a      })), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a        \x22aria-expanded\x22: true,\x0a        onClick: onClose,\x0a        icon: \x22no-alt\x22,\x0a        label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Close panel\x27)\x0a      })), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22editor-post-publish-panel__content\x22\x0a      }, isPrePublish && Object(external_this_wp_element_[\x22createElement\x22])(prepublish, null, PrePublishExtension && Object(external_this_wp_element_[\x22createElement\x22])(PrePublishExtension, null)), isPostPublish && Object(external_this_wp_element_[\x22createElement\x22])(postpublish, {\x0a        focusOnMount: true\x0a      }, PostPublishExtension && Object(external_this_wp_element_[\x22createElement\x22])(PostPublishExtension, null)), isSaving && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Spinner\x22], null)), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22editor-post-publish-panel__footer\x22\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22CheckboxControl\x22], {\x0a        label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Always show pre-publish checks.\x27),\x0a        checked: isPublishSidebarEnabled,\x0a        onChange: onTogglePublishSidebar\x0a      })));\x0a    }\x0a  }]);\x0a\x0a  return PostPublishPanel;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a/* harmony default export */ var post_publish_panel = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core\x27),\x0a      getPostType = _select.getPostType;\x0a\x0a  var _select2 = select(\x27core/editor\x27),\x0a      getCurrentPost = _select2.getCurrentPost,\x0a      getEditedPostAttribute = _select2.getEditedPostAttribute,\x0a      isCurrentPostPublished = _select2.isCurrentPostPublished,\x0a      isCurrentPostScheduled = _select2.isCurrentPostScheduled,\x0a      isEditedPostBeingScheduled = _select2.isEditedPostBeingScheduled,\x0a      isEditedPostDirty = _select2.isEditedPostDirty,\x0a      isSavingPost = _select2.isSavingPost;\x0a\x0a  var _select3 = select(\x27core/editor\x27),\x0a      isPublishSidebarEnabled = _select3.isPublishSidebarEnabled;\x0a\x0a  var postType = getPostType(getEditedPostAttribute(\x27type\x27));\x0a  return {\x0a    hasPublishAction: Object(external_lodash_[\x22get\x22])(getCurrentPost(), [\x27_links\x27, \x27wp:action-publish\x27], false),\x0a    isPostTypeViewable: Object(external_lodash_[\x22get\x22])(postType, [\x27viewable\x27], false),\x0a    isBeingScheduled: isEditedPostBeingScheduled(),\x0a    isDirty: isEditedPostDirty(),\x0a    isPublished: isCurrentPostPublished(),\x0a    isPublishSidebarEnabled: isPublishSidebarEnabled(),\x0a    isSaving: isSavingPost(),\x0a    isScheduled: isCurrentPostScheduled()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch, _ref) {\x0a  var isPublishSidebarEnabled = _ref.isPublishSidebarEnabled;\x0a\x0a  var _dispatch = dispatch(\x27core/editor\x27),\x0a      disablePublishSidebar = _dispatch.disablePublishSidebar,\x0a      enablePublishSidebar = _dispatch.enablePublishSidebar;\x0a\x0a  return {\x0a    onTogglePublishSidebar: function onTogglePublishSidebar() {\x0a      if (isPublishSidebarEnabled) {\x0a        disablePublishSidebar();\x0a      } else {\x0a        enablePublishSidebar();\x0a      }\x0a    }\x0a  };\x0a}), external_this_wp_components_[\x22withFocusReturn\x22], external_this_wp_components_[\x22withConstrainedTabbing\x22]])(post_publish_panel_PostPublishPanel));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-switch-to-draft-button/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0afunction PostSwitchToDraftButton(_ref) {\x0a  var isSaving = _ref.isSaving,\x0a      isPublished = _ref.isPublished,\x0a      isScheduled = _ref.isScheduled,\x0a      onClick = _ref.onClick;\x0a\x0a  if (!isPublished && !isScheduled) {\x0a    return null;\x0a  }\x0a\x0a  var onSwitch = function onSwitch() {\x0a    var alertMessage;\x0a\x0a    if (isPublished) {\x0a      alertMessage = Object(external_this_wp_i18n_[\x22__\x22])(\x27Are you sure you want to unpublish this post?\x27);\x0a    } else if (isScheduled) {\x0a      alertMessage = Object(external_this_wp_i18n_[\x22__\x22])(\x27Are you sure you want to unschedule this post?\x27);\x0a    } // eslint-disable-next-line no-alert\x0a\x0a\x0a    if (window.confirm(alertMessage)) {\x0a      onClick();\x0a    }\x0a  };\x0a\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a    className: \x22editor-post-switch-to-draft\x22,\x0a    onClick: onSwitch,\x0a    disabled: isSaving,\x0a    isTertiary: true\x0a  }, Object(external_this_wp_i18n_[\x22__\x22])(\x27Switch to Draft\x27));\x0a}\x0a\x0a/* harmony default export */ var post_switch_to_draft_button = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      isSavingPost = _select.isSavingPost,\x0a      isCurrentPostPublished = _select.isCurrentPostPublished,\x0a      isCurrentPostScheduled = _select.isCurrentPostScheduled;\x0a\x0a  return {\x0a    isSaving: isSavingPost(),\x0a    isPublished: isCurrentPostPublished(),\x0a    isScheduled: isCurrentPostScheduled()\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  var _dispatch = dispatch(\x27core/editor\x27),\x0a      editPost = _dispatch.editPost,\x0a      savePost = _dispatch.savePost;\x0a\x0a  return {\x0a    onClick: function onClick() {\x0a      editPost({\x0a        status: \x27draft\x27\x0a      });\x0a      savePost();\x0a    }\x0a  };\x0a})])(PostSwitchToDraftButton));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-saved-state/index.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/**\x0a * Component showing whether the post is saved or not and displaying save links.\x0a *\x0a * @param   {Object}    Props Component Props.\x0a */\x0a\x0avar post_saved_state_PostSavedState =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(PostSavedState, _Component);\x0a\x0a  function PostSavedState() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, PostSavedState);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(PostSavedState).apply(this, arguments));\x0a    _this.state = {\x0a      forceSavedMessage: false\x0a    };\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(PostSavedState, [{\x0a    key: \x22componentDidUpdate\x22,\x0a    value: function componentDidUpdate(prevProps) {\x0a      var _this2 = this;\x0a\x0a      if (prevProps.isSaving && !this.props.isSaving) {\x0a        this.setState({\x0a          forceSavedMessage: true\x0a        });\x0a        this.props.setTimeout(function () {\x0a          _this2.setState({\x0a            forceSavedMessage: false\x0a          });\x0a        }, 1000);\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props = this.props,\x0a          post = _this$props.post,\x0a          isNew = _this$props.isNew,\x0a          isScheduled = _this$props.isScheduled,\x0a          isPublished = _this$props.isPublished,\x0a          isDirty = _this$props.isDirty,\x0a          isSaving = _this$props.isSaving,\x0a          isSaveable = _this$props.isSaveable,\x0a          onSave = _this$props.onSave,\x0a          isAutosaving = _this$props.isAutosaving,\x0a          isPending = _this$props.isPending,\x0a          isLargeViewport = _this$props.isLargeViewport;\x0a      var forceSavedMessage = this.state.forceSavedMessage;\x0a\x0a      if (isSaving) {\x0a        // TODO: Classes generation should be common across all return\x0a        // paths of this function, including proper naming convention for\x0a        // the \x22Save Draft\x22 button.\x0a        var classes = classnames_default()(\x27editor-post-saved-state\x27, \x27is-saving\x27, {\x0a          \x27is-autosaving\x27: isAutosaving\x0a        });\x0a        return Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a          className: classes\x0a        }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Dashicon\x22], {\x0a          icon: \x22cloud\x22\x0a        }), isAutosaving ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Autosaving\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Saving\x27));\x0a      }\x0a\x0a      if (isPublished || isScheduled) {\x0a        return Object(external_this_wp_element_[\x22createElement\x22])(post_switch_to_draft_button, null);\x0a      }\x0a\x0a      if (!isSaveable) {\x0a        return null;\x0a      }\x0a\x0a      if (forceSavedMessage || !isNew && !isDirty) {\x0a        return Object(external_this_wp_element_[\x22createElement\x22])(\x22span\x22, {\x0a          className: \x22editor-post-saved-state is-saved\x22\x0a        }, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Dashicon\x22], {\x0a          icon: \x22saved\x22\x0a        }), Object(external_this_wp_i18n_[\x22__\x22])(\x27Saved\x27));\x0a      } // Once the post has been submitted for review this button\x0a      // is not needed for the contributor role.\x0a\x0a\x0a      var hasPublishAction = Object(external_lodash_[\x22get\x22])(post, [\x27_links\x27, \x27wp:action-publish\x27], false);\x0a\x0a      if (!hasPublishAction && isPending) {\x0a        return null;\x0a      }\x0a\x0a      var label = isPending ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Save as Pending\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Save Draft\x27);\x0a\x0a      if (!isLargeViewport) {\x0a        return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22IconButton\x22], {\x0a          className: \x22editor-post-save-draft\x22,\x0a          label: label,\x0a          onClick: onSave,\x0a          shortcut: external_this_wp_keycodes_[\x22displayShortcut\x22].primary(\x27s\x27),\x0a          icon: \x22cloud-upload\x22\x0a        });\x0a      }\x0a\x0a      return Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        className: \x22editor-post-save-draft\x22,\x0a        onClick: onSave,\x0a        shortcut: external_this_wp_keycodes_[\x22displayShortcut\x22].primary(\x27s\x27),\x0a        isTertiary: true\x0a      }, label);\x0a    }\x0a  }]);\x0a\x0a  return PostSavedState;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a/* harmony default export */ var post_saved_state = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref) {\x0a  var forceIsDirty = _ref.forceIsDirty,\x0a      forceIsSaving = _ref.forceIsSaving;\x0a\x0a  var _select = select(\x27core/editor\x27),\x0a      isEditedPostNew = _select.isEditedPostNew,\x0a      isCurrentPostPublished = _select.isCurrentPostPublished,\x0a      isCurrentPostScheduled = _select.isCurrentPostScheduled,\x0a      isEditedPostDirty = _select.isEditedPostDirty,\x0a      isSavingPost = _select.isSavingPost,\x0a      isEditedPostSaveable = _select.isEditedPostSaveable,\x0a      getCurrentPost = _select.getCurrentPost,\x0a      isAutosavingPost = _select.isAutosavingPost,\x0a      getEditedPostAttribute = _select.getEditedPostAttribute;\x0a\x0a  return {\x0a    post: getCurrentPost(),\x0a    isNew: isEditedPostNew(),\x0a    isPublished: isCurrentPostPublished(),\x0a    isScheduled: isCurrentPostScheduled(),\x0a    isDirty: forceIsDirty || isEditedPostDirty(),\x0a    isSaving: forceIsSaving || isSavingPost(),\x0a    isSaveable: isEditedPostSaveable(),\x0a    isAutosaving: isAutosavingPost(),\x0a    isPending: \x27pending\x27 === getEditedPostAttribute(\x27status\x27)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onSave: dispatch(\x27core/editor\x27).savePost\x0a  };\x0a}), external_this_wp_compose_[\x22withSafeTimeout\x22], Object(external_this_wp_viewport_[\x22withViewportMatch\x22])({\x0a  isLargeViewport: \x27medium\x27\x0a})])(post_saved_state_PostSavedState));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-schedule/check.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0afunction PostScheduleCheck(_ref) {\x0a  var hasPublishAction = _ref.hasPublishAction,\x0a      children = _ref.children;\x0a\x0a  if (!hasPublishAction) {\x0a    return null;\x0a  }\x0a\x0a  return children;\x0a}\x0a/* harmony default export */ var post_schedule_check = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var _select = select(\x27core/editor\x27),\x0a      getCurrentPost = _select.getCurrentPost,\x0a      getCurrentPostType = _select.getCurrentPostType;\x0a\x0a  return {\x0a    hasPublishAction: Object(external_lodash_[\x22get\x22])(getCurrentPost(), [\x27_links\x27, \x27wp:action-publish\x27], false),\x0a    postType: getCurrentPostType()\x0a  };\x0a})])(PostScheduleCheck));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-sticky/check.js\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0afunction PostStickyCheck(_ref) {\x0a  var hasStickyAction = _ref.hasStickyAction,\x0a      postType = _ref.postType,\x0a      children = _ref.children;\x0a\x0a  if (postType !== \x27post\x27 || !hasStickyAction) {\x0a    return null;\x0a  }\x0a\x0a  return children;\x0a}\x0a/* harmony default export */ var post_sticky_check = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  var post = select(\x27core/editor\x27).getCurrentPost();\x0a  return {\x0a    hasStickyAction: Object(external_lodash_[\x22get\x22])(post, [\x27_links\x27, \x27wp:action-sticky\x27], false),\x0a    postType: select(\x27core/editor\x27).getCurrentPostType()\x0a  };\x0a})])(PostStickyCheck));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-sticky/index.js\x0a\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0afunction PostSticky(_ref) {\x0a  var onUpdateSticky = _ref.onUpdateSticky,\x0a      _ref$postSticky = _ref.postSticky,\x0a      postSticky = _ref$postSticky === void 0 ? false : _ref$postSticky;\x0a  return Object(external_this_wp_element_[\x22createElement\x22])(post_sticky_check, null, Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22CheckboxControl\x22], {\x0a    label: Object(external_this_wp_i18n_[\x22__\x22])(\x27Stick to the top of the blog\x27),\x0a    checked: postSticky,\x0a    onChange: function onChange() {\x0a      return onUpdateSticky(!postSticky);\x0a    }\x0a  }));\x0a}\x0a/* harmony default export */ var post_sticky = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select) {\x0a  return {\x0a    postSticky: select(\x27core/editor\x27).getEditedPostAttribute(\x27sticky\x27)\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onUpdateSticky: function onUpdateSticky(postSticky) {\x0a      dispatch(\x27core/editor\x27).editPost({\x0a        sticky: postSticky\x0a      });\x0a    }\x0a  };\x0a})])(PostSticky));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-taxonomies/hierarchical-term-selector.js\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a/**\x0a * Module Constants\x0a */\x0a\x0avar hierarchical_term_selector_DEFAULT_QUERY = {\x0a  per_page: -1,\x0a  orderby: \x27name\x27,\x0a  order: \x27asc\x27,\x0a  _fields: \x27id,name,parent\x27\x0a};\x0avar MIN_TERMS_COUNT_FOR_FILTER = 8;\x0a\x0avar hierarchical_term_selector_HierarchicalTermSelector =\x0a/*#__PURE__*/\x0afunction (_Component) {\x0a  Object(inherits[\x22a\x22 /* default */])(HierarchicalTermSelector, _Component);\x0a\x0a  function HierarchicalTermSelector() {\x0a    var _this;\x0a\x0a    Object(classCallCheck[\x22a\x22 /* default */])(this, HierarchicalTermSelector);\x0a\x0a    _this = Object(possibleConstructorReturn[\x22a\x22 /* default */])(this, Object(getPrototypeOf[\x22a\x22 /* default */])(HierarchicalTermSelector).apply(this, arguments));\x0a    _this.findTerm = _this.findTerm.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.onChange = _this.onChange.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.onChangeFormName = _this.onChangeFormName.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.onChangeFormParent = _this.onChangeFormParent.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.onAddTerm = _this.onAddTerm.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.onToggleForm = _this.onToggleForm.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.setFilterValue = _this.setFilterValue.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.sortBySelected = _this.sortBySelected.bind(Object(assertThisInitialized[\x22a\x22 /* default */])(Object(assertThisInitialized[\x22a\x22 /* default */])(_this)));\x0a    _this.state = {\x0a      loading: true,\x0a      availableTermsTree: [],\x0a      availableTerms: [],\x0a      adding: false,\x0a      formName: \x27\x27,\x0a      formParent: \x27\x27,\x0a      showForm: false,\x0a      filterValue: \x27\x27,\x0a      filteredTermsTree: []\x0a    };\x0a    return _this;\x0a  }\x0a\x0a  Object(createClass[\x22a\x22 /* default */])(HierarchicalTermSelector, [{\x0a    key: \x22onChange\x22,\x0a    value: function onChange(event) {\x0a      var _this$props = this.props,\x0a          onUpdateTerms = _this$props.onUpdateTerms,\x0a          _this$props$terms = _this$props.terms,\x0a          terms = _this$props$terms === void 0 ? [] : _this$props$terms,\x0a          taxonomy = _this$props.taxonomy;\x0a      var termId = parseInt(event.target.value, 10);\x0a      var hasTerm = terms.indexOf(termId) !== -1;\x0a      var newTerms = hasTerm ? Object(external_lodash_[\x22without\x22])(terms, termId) : [].concat(Object(toConsumableArray[\x22a\x22 /* default */])(terms), [termId]);\x0a      onUpdateTerms(newTerms, taxonomy.rest_base);\x0a    }\x0a  }, {\x0a    key: \x22onChangeFormName\x22,\x0a    value: function onChangeFormName(event) {\x0a      var newValue = event.target.value.trim() === \x27\x27 ? \x27\x27 : event.target.value;\x0a      this.setState({\x0a        formName: newValue\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22onChangeFormParent\x22,\x0a    value: function onChangeFormParent(newParent) {\x0a      this.setState({\x0a        formParent: newParent\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22onToggleForm\x22,\x0a    value: function onToggleForm() {\x0a      this.setState(function (state) {\x0a        return {\x0a          showForm: !state.showForm\x0a        };\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22findTerm\x22,\x0a    value: function findTerm(terms, parent, name) {\x0a      return Object(external_lodash_[\x22find\x22])(terms, function (term) {\x0a        return (!term.parent && !parent || parseInt(term.parent) === parseInt(parent)) && term.name.toLowerCase() === name.toLowerCase();\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22onAddTerm\x22,\x0a    value: function onAddTerm(event) {\x0a      var _this2 = this;\x0a\x0a      event.preventDefault();\x0a      var _this$props2 = this.props,\x0a          onUpdateTerms = _this$props2.onUpdateTerms,\x0a          taxonomy = _this$props2.taxonomy,\x0a          terms = _this$props2.terms,\x0a          slug = _this$props2.slug;\x0a      var _this$state = this.state,\x0a          formName = _this$state.formName,\x0a          formParent = _this$state.formParent,\x0a          adding = _this$state.adding,\x0a          availableTerms = _this$state.availableTerms;\x0a\x0a      if (formName === \x27\x27 || adding) {\x0a        return;\x0a      } // check if the term we are adding already exists\x0a\x0a\x0a      var existingTerm = this.findTerm(availableTerms, formParent, formName);\x0a\x0a      if (existingTerm) {\x0a        // if the term we are adding exists but is not selected select it\x0a        if (!Object(external_lodash_[\x22some\x22])(terms, function (term) {\x0a          return term === existingTerm.id;\x0a        })) {\x0a          onUpdateTerms([].concat(Object(toConsumableArray[\x22a\x22 /* default */])(terms), [existingTerm.id]), taxonomy.rest_base);\x0a        }\x0a\x0a        this.setState({\x0a          formName: \x27\x27,\x0a          formParent: \x27\x27\x0a        });\x0a        return;\x0a      }\x0a\x0a      this.setState({\x0a        adding: true\x0a      });\x0a      this.addRequest = external_this_wp_apiFetch_default()({\x0a        path: \x22/wp/v2/\x22.concat(taxonomy.rest_base),\x0a        method: \x27POST\x27,\x0a        data: {\x0a          name: formName,\x0a          parent: formParent ? formParent : undefined\x0a        }\x0a      }); // Tries to create a term or fetch it if it already exists\x0a\x0a      var findOrCreatePromise = this.addRequest.catch(function (error) {\x0a        var errorCode = error.code;\x0a\x0a        if (errorCode === \x27term_exists\x27) {\x0a          // search the new category created since last fetch\x0a          _this2.addRequest = external_this_wp_apiFetch_default()({\x0a            path: Object(external_this_wp_url_[\x22addQueryArgs\x22])(\x22/wp/v2/\x22.concat(taxonomy.rest_base), Object(objectSpread[\x22a\x22 /* default */])({}, hierarchical_term_selector_DEFAULT_QUERY, {\x0a              parent: formParent || 0,\x0a              search: formName\x0a            }))\x0a          });\x0a          return _this2.addRequest.then(function (searchResult) {\x0a            return _this2.findTerm(searchResult, formParent, formName);\x0a          });\x0a        }\x0a\x0a        return Promise.reject(error);\x0a      });\x0a      findOrCreatePromise.then(function (term) {\x0a        var hasTerm = !!Object(external_lodash_[\x22find\x22])(_this2.state.availableTerms, function (availableTerm) {\x0a          return availableTerm.id === term.id;\x0a        });\x0a        var newAvailableTerms = hasTerm ? _this2.state.availableTerms : [term].concat(Object(toConsumableArray[\x22a\x22 /* default */])(_this2.state.availableTerms));\x0a        var termAddedMessage = Object(external_this_wp_i18n_[\x22sprintf\x22])(Object(external_this_wp_i18n_[\x22_x\x22])(\x27%s added\x27, \x27term\x27), Object(external_lodash_[\x22get\x22])(_this2.props.taxonomy, [\x27labels\x27, \x27singular_name\x27], slug === \x27category\x27 ? Object(external_this_wp_i18n_[\x22__\x22])(\x27Category\x27) : Object(external_this_wp_i18n_[\x22__\x22])(\x27Term\x27)));\x0a\x0a        _this2.props.speak(termAddedMessage, \x27assertive\x27);\x0a\x0a        _this2.addRequest = null;\x0a\x0a        _this2.setState({\x0a          adding: false,\x0a          formName: \x27\x27,\x0a          formParent: \x27\x27,\x0a          availableTerms: newAvailableTerms,\x0a          availableTermsTree: _this2.sortBySelected(buildTermsTree(newAvailableTerms))\x0a        });\x0a\x0a        onUpdateTerms([].concat(Object(toConsumableArray[\x22a\x22 /* default */])(terms), [term.id]), taxonomy.rest_base);\x0a      }, function (xhr) {\x0a        if (xhr.statusText === \x27abort\x27) {\x0a          return;\x0a        }\x0a\x0a        _this2.addRequest = null;\x0a\x0a        _this2.setState({\x0a          adding: false\x0a        });\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22componentDidMount\x22,\x0a    value: function componentDidMount() {\x0a      this.fetchTerms();\x0a    }\x0a  }, {\x0a    key: \x22componentWillUnmount\x22,\x0a    value: function componentWillUnmount() {\x0a      Object(external_lodash_[\x22invoke\x22])(this.fetchRequest, [\x27abort\x27]);\x0a      Object(external_lodash_[\x22invoke\x22])(this.addRequest, [\x27abort\x27]);\x0a    }\x0a  }, {\x0a    key: \x22componentDidUpdate\x22,\x0a    value: function componentDidUpdate(prevProps) {\x0a      if (this.props.taxonomy !== prevProps.taxonomy) {\x0a        this.fetchTerms();\x0a      }\x0a    }\x0a  }, {\x0a    key: \x22fetchTerms\x22,\x0a    value: function fetchTerms() {\x0a      var _this3 = this;\x0a\x0a      var taxonomy = this.props.taxonomy;\x0a\x0a      if (!taxonomy) {\x0a        return;\x0a      }\x0a\x0a      this.fetchRequest = external_this_wp_apiFetch_default()({\x0a        path: Object(external_this_wp_url_[\x22addQueryArgs\x22])(\x22/wp/v2/\x22.concat(taxonomy.rest_base), hierarchical_term_selector_DEFAULT_QUERY)\x0a      });\x0a      this.fetchRequest.then(function (terms) {\x0a        // resolve\x0a        var availableTermsTree = _this3.sortBySelected(buildTermsTree(terms));\x0a\x0a        _this3.fetchRequest = null;\x0a\x0a        _this3.setState({\x0a          loading: false,\x0a          availableTermsTree: availableTermsTree,\x0a          availableTerms: terms\x0a        });\x0a      }, function (xhr) {\x0a        // reject\x0a        if (xhr.statusText === \x27abort\x27) {\x0a          return;\x0a        }\x0a\x0a        _this3.fetchRequest = null;\x0a\x0a        _this3.setState({\x0a          loading: false\x0a        });\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22sortBySelected\x22,\x0a    value: function sortBySelected(termsTree) {\x0a      var terms = this.props.terms;\x0a\x0a      var treeHasSelection = function treeHasSelection(termTree) {\x0a        if (terms.indexOf(termTree.id) !== -1) {\x0a          return true;\x0a        }\x0a\x0a        if (undefined === termTree.children) {\x0a          return false;\x0a        }\x0a\x0a        var anyChildIsSelected = termTree.children.map(treeHasSelection).filter(function (child) {\x0a          return child;\x0a        }).length \x3e 0;\x0a\x0a        if (anyChildIsSelected) {\x0a          return true;\x0a        }\x0a\x0a        return false;\x0a      };\x0a\x0a      var termOrChildIsSelected = function termOrChildIsSelected(termA, termB) {\x0a        var termASelected = treeHasSelection(termA);\x0a        var termBSelected = treeHasSelection(termB);\x0a\x0a        if (termASelected === termBSelected) {\x0a          return 0;\x0a        }\x0a\x0a        if (termASelected && !termBSelected) {\x0a          return -1;\x0a        }\x0a\x0a        if (!termASelected && termBSelected) {\x0a          return 1;\x0a        }\x0a\x0a        return 0;\x0a      };\x0a\x0a      termsTree.sort(termOrChildIsSelected);\x0a      return termsTree;\x0a    }\x0a  }, {\x0a    key: \x22setFilterValue\x22,\x0a    value: function setFilterValue(event) {\x0a      var availableTermsTree = this.state.availableTermsTree;\x0a      var filterValue = event.target.value;\x0a      var filteredTermsTree = availableTermsTree.map(this.getFilterMatcher(filterValue)).filter(function (term) {\x0a        return term;\x0a      });\x0a\x0a      var getResultCount = function getResultCount(terms) {\x0a        var count = 0;\x0a\x0a        for (var i = 0; i \x3c terms.length; i++) {\x0a          count++;\x0a\x0a          if (undefined !== terms[i].children) {\x0a            count += getResultCount(terms[i].children);\x0a          }\x0a        }\x0a\x0a        return count;\x0a      };\x0a\x0a      this.setState({\x0a        filterValue: filterValue,\x0a        filteredTermsTree: filteredTermsTree\x0a      });\x0a      var resultCount = getResultCount(filteredTermsTree);\x0a      var resultsFoundMessage = Object(external_this_wp_i18n_[\x22sprintf\x22])(Object(external_this_wp_i18n_[\x22_n\x22])(\x27%d result found.\x27, \x27%d results found.\x27, resultCount), resultCount);\x0a      this.props.debouncedSpeak(resultsFoundMessage, \x27assertive\x27);\x0a    }\x0a  }, {\x0a    key: \x22getFilterMatcher\x22,\x0a    value: function getFilterMatcher(filterValue) {\x0a      var matchTermsForFilter = function matchTermsForFilter(originalTerm) {\x0a        if (\x27\x27 === filterValue) {\x0a          return originalTerm;\x0a        } // Shallow clone, because we\x27ll be filtering the term\x27s children and\x0a        // don\x27t want to modify the original term.\x0a\x0a\x0a        var term = Object(objectSpread[\x22a\x22 /* default */])({}, originalTerm); // Map and filter the children, recursive so we deal with grandchildren\x0a        // and any deeper levels.\x0a\x0a\x0a        if (term.children.length \x3e 0) {\x0a          term.children = term.children.map(matchTermsForFilter).filter(function (child) {\x0a            return child;\x0a          });\x0a        } // If the term\x27s name contains the filterValue, or it has children\x0a        // (i.e. some child matched at some point in the tree) then return it.\x0a\x0a\x0a        if (-1 !== term.name.toLowerCase().indexOf(filterValue) || term.children.length \x3e 0) {\x0a          return term;\x0a        } // Otherwise, return false. After mapping, the list of terms will need\x0a        // to have false values filtered out.\x0a\x0a\x0a        return false;\x0a      };\x0a\x0a      return matchTermsForFilter;\x0a    }\x0a  }, {\x0a    key: \x22renderTerms\x22,\x0a    value: function renderTerms(renderedTerms) {\x0a      var _this4 = this;\x0a\x0a      var _this$props$terms2 = this.props.terms,\x0a          terms = _this$props$terms2 === void 0 ? [] : _this$props$terms2;\x0a      return renderedTerms.map(function (term) {\x0a        var id = \x22editor-post-taxonomies-hierarchical-term-\x22.concat(term.id);\x0a        return Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a          key: term.id,\x0a          className: \x22editor-post-taxonomies__hierarchical-terms-choice\x22\x0a        }, Object(external_this_wp_element_[\x22createElement\x22])(\x22input\x22, {\x0a          id: id,\x0a          className: \x22editor-post-taxonomies__hierarchical-terms-input\x22,\x0a          type: \x22checkbox\x22,\x0a          checked: terms.indexOf(term.id) !== -1,\x0a          value: term.id,\x0a          onChange: _this4.onChange\x0a        }), Object(external_this_wp_element_[\x22createElement\x22])(\x22label\x22, {\x0a          htmlFor: id\x0a        }, Object(external_lodash_[\x22unescape\x22])(term.name)), !!term.children.length && Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a          className: \x22editor-post-taxonomies__hierarchical-terms-subchoices\x22\x0a        }, _this4.renderTerms(term.children)));\x0a      });\x0a    }\x0a  }, {\x0a    key: \x22render\x22,\x0a    value: function render() {\x0a      var _this$props3 = this.props,\x0a          slug = _this$props3.slug,\x0a          taxonomy = _this$props3.taxonomy,\x0a          instanceId = _this$props3.instanceId,\x0a          hasCreateAction = _this$props3.hasCreateAction,\x0a          hasAssignAction = _this$props3.hasAssignAction;\x0a\x0a      if (!hasAssignAction) {\x0a        return null;\x0a      }\x0a\x0a      var _this$state2 = this.state,\x0a          availableTermsTree = _this$state2.availableTermsTree,\x0a          availableTerms = _this$state2.availableTerms,\x0a          filteredTermsTree = _this$state2.filteredTermsTree,\x0a          formName = _this$state2.formName,\x0a          formParent = _this$state2.formParent,\x0a          loading = _this$state2.loading,\x0a          showForm = _this$state2.showForm,\x0a          filterValue = _this$state2.filterValue;\x0a\x0a      var labelWithFallback = function labelWithFallback(labelProperty, fallbackIsCategory, fallbackIsNotCategory) {\x0a        return Object(external_lodash_[\x22get\x22])(taxonomy, [\x27labels\x27, labelProperty], slug === \x27category\x27 ? fallbackIsCategory : fallbackIsNotCategory);\x0a      };\x0a\x0a      var newTermButtonLabel = labelWithFallback(\x27add_new_item\x27, Object(external_this_wp_i18n_[\x22__\x22])(\x27Add new category\x27), Object(external_this_wp_i18n_[\x22__\x22])(\x27Add new term\x27));\x0a      var newTermLabel = labelWithFallback(\x27new_item_name\x27, Object(external_this_wp_i18n_[\x22__\x22])(\x27Add new category\x27), Object(external_this_wp_i18n_[\x22__\x22])(\x27Add new term\x27));\x0a      var parentSelectLabel = labelWithFallback(\x27parent_item\x27, Object(external_this_wp_i18n_[\x22__\x22])(\x27Parent Category\x27), Object(external_this_wp_i18n_[\x22__\x22])(\x27Parent Term\x27));\x0a      var noParentOption = \x22\x5cu2014 \x22.concat(parentSelectLabel, \x22 \x5cu2014\x22);\x0a      var newTermSubmitLabel = newTermButtonLabel;\x0a      var inputId = \x22editor-post-taxonomies__hierarchical-terms-input-\x22.concat(instanceId);\x0a      var filterInputId = \x22editor-post-taxonomies__hierarchical-terms-filter-\x22.concat(instanceId);\x0a      var filterLabel = Object(external_lodash_[\x22get\x22])(this.props.taxonomy, [\x27labels\x27, \x27search_items\x27], Object(external_this_wp_i18n_[\x22__\x22])(\x27Search Terms\x27));\x0a      var groupLabel = Object(external_lodash_[\x22get\x22])(this.props.taxonomy, [\x27name\x27], Object(external_this_wp_i18n_[\x22__\x22])(\x27Terms\x27));\x0a      var showFilter = availableTerms.length \x3e= MIN_TERMS_COUNT_FOR_FILTER;\x0a      return [showFilter && Object(external_this_wp_element_[\x22createElement\x22])(\x22label\x22, {\x0a        key: \x22filter-label\x22,\x0a        htmlFor: filterInputId\x0a      }, filterLabel), showFilter && Object(external_this_wp_element_[\x22createElement\x22])(\x22input\x22, {\x0a        type: \x22search\x22,\x0a        id: filterInputId,\x0a        value: filterValue,\x0a        onChange: this.setFilterValue,\x0a        className: \x22editor-post-taxonomies__hierarchical-terms-filter\x22,\x0a        key: \x22term-filter-input\x22\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(\x22div\x22, {\x0a        className: \x22editor-post-taxonomies__hierarchical-terms-list\x22,\x0a        key: \x22term-list\x22,\x0a        tabIndex: \x220\x22,\x0a        role: \x22group\x22,\x0a        \x22aria-label\x22: groupLabel\x0a      }, this.renderTerms(\x27\x27 !== filterValue ? filteredTermsTree : availableTermsTree)), !loading && hasCreateAction && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        key: \x22term-add-button\x22,\x0a        onClick: this.onToggleForm,\x0a        className: \x22editor-post-taxonomies__hierarchical-terms-add\x22,\x0a        \x22aria-expanded\x22: showForm,\x0a        isLink: true\x0a      }, newTermButtonLabel), showForm && Object(external_this_wp_element_[\x22createElement\x22])(\x22form\x22, {\x0a        onSubmit: this.onAddTerm,\x0a        key: \x22hierarchical-terms-form\x22\x0a      }, Object(external_this_wp_element_[\x22createElement\x22])(\x22label\x22, {\x0a        htmlFor: inputId,\x0a        className: \x22editor-post-taxonomies__hierarchical-terms-label\x22\x0a      }, newTermLabel), Object(external_this_wp_element_[\x22createElement\x22])(\x22input\x22, {\x0a        type: \x22text\x22,\x0a        id: inputId,\x0a        className: \x22editor-post-taxonomies__hierarchical-terms-input\x22,\x0a        value: formName,\x0a        onChange: this.onChangeFormName,\x0a        required: true\x0a      }), !!availableTerms.length && Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22TreeSelect\x22], {\x0a        label: parentSelectLabel,\x0a        noOptionLabel: noParentOption,\x0a        onChange: this.onChangeFormParent,\x0a        selectedId: formParent,\x0a        tree: availableTermsTree\x0a      }), Object(external_this_wp_element_[\x22createElement\x22])(external_this_wp_components_[\x22Button\x22], {\x0a        isDefault: true,\x0a        type: \x22submit\x22,\x0a        className: \x22editor-post-taxonomies__hierarchical-terms-submit\x22\x0a      }, newTermSubmitLabel))];\x0a      /* eslint-enable jsx-a11y/no-onchange */\x0a    }\x0a  }]);\x0a\x0a  return HierarchicalTermSelector;\x0a}(external_this_wp_element_[\x22Component\x22]);\x0a\x0a/* harmony default export */ var hierarchical_term_selector = (Object(external_this_wp_compose_[\x22compose\x22])([Object(external_this_wp_data_[\x22withSelect\x22])(function (select, _ref) {\x0a  var slug = _ref.slug;\x0a\x0a  var _select = select(\x27core/editor\x27),\x0a      getCurrentPost = _select.getCurrentPost;\x0a\x0a  var _select2 = select(\x27core\x27),\x0a      getTaxonomy = _select2.getTaxonomy;\x0a\x0a  var taxonomy = getTaxonomy(slug);\x0a  return {\x0a    hasCreateAction: taxonomy ? Object(external_lodash_[\x22get\x22])(getCurrentPost(), [\x27_links\x27, \x27wp:action-create-\x27 + taxonomy.rest_base], false) : false,\x0a    hasAssignAction: taxonomy ? Object(external_lodash_[\x22get\x22])(getCurrentPost(), [\x27_links\x27, \x27wp:action-assign-\x27 + taxonomy.rest_base], false) : false,\x0a    terms: taxonomy ? select(\x27core/editor\x27).getEditedPostAttribute(taxonomy.rest_base) : [],\x0a    taxonomy: taxonomy\x0a  };\x0a}), Object(external_this_wp_data_[\x22withDispatch\x22])(function (dispatch) {\x0a  return {\x0a    onUpdateTerms: function onUpdateTerms(terms, restBase) {\x0a      dispatch(\x27core/editor\x27).editPost(Object(defineProperty[\x22a\x22 /* default */])({}, restBase, terms));\x0a    }\x0a  };\x0a}), external_this_wp_components_[\x22withSpokenMessages\x22], external_this_wp_compose_[\x22withInstanceId\x22], Object(external_this_wp_components_[\x22withFilters\x22])(\x27editor.PostTaxonomyType\x27)])(hierarchical_term_selector_HierarchicalTermSelector));\x0a\x0a// CONCATENATED MODULE: ./node_modules/@wordpress/editor/build-module/components/post-taxonomies/index.js\x0a\x0a\x0a/**\x0a * External dependencies\x0a */\x0a\x0a/**\x0a * WordPress dependencies\x0a */\x0a\x0a\x0a\x0a\x0a/**\x0a * Internal dependencies\x0a */\x0a\x0a\x0a\x0afunction PostTaxonomies(_ref) {\x0a  var postType = _ref.postType,\x0a      taxonomies = _ref.taxonomies,\x0a      _ref$taxonomy'}