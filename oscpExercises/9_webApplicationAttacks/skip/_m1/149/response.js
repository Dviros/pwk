var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Sun, 20 Sep 2020 14:55:46 GMT\x0aServer: Apache/2.4.29 (Ubuntu)\x0aLast-Modified: Sat, 07 Nov 2015 16:12:27 GMT\x0aETag: \x22c6c-523f5a04e50c0-gzip\x22\x0aAccept-Ranges: bytes\x0aVary: Accept-Encoding\x0aContent-Encoding: gzip\x0aContent-Range: bytes 0-1191/1192\x0aContent-Length: 1192\x0aKeep-Alive: timeout=5, max=63\x0aConnection: Keep-Alive\x0aContent-Type: application/javascript\x0a\x0a/* global tinymce */\x0atinymce.PluginManager.add(\x27wpgallery\x27, function( editor ) {\x0a\x0a\x09function replaceGalleryShortcodes( content ) {\x0a\x09\x09return content.replace( /\x5c[gallery([^\x5c]]*)\x5c]/g, function( match ) {\x0a\x09\x09\x09return html( \x27wp-gallery\x27, match );\x0a\x09\x09});\x0a\x09}\x0a\x0a\x09function html( cls, data ) {\x0a\x09\x09data = window.encodeURIComponent( data );\x0a\x09\x09return \x27\x3cimg src=\x22\x27 + tinymce.Env.transparentSrc + \x27\x22 class=\x22wp-media mceItem \x27 + cls + \x27\x22 \x27 +\x0a\x09\x09\x09\x27data-wp-media=\x22\x27 + data + \x27\x22 data-mce-resize=\x22false\x22 data-mce-placeholder=\x221\x22 alt=\x22\x22 /\x3e\x27;\x0a\x09}\x0a\x0a\x09function restoreMediaShortcodes( content ) {\x0a\x09\x09function getAttr( str, name ) {\x0a\x09\x09\x09name = new RegExp( name + \x27=\x5c\x22([^\x5c\x22]+)\x5c\x22\x27 ).exec( str );\x0a\x09\x09\x09return name ? window.decodeURIComponent( name[1] ) : \x27\x27;\x0a\x09\x09}\x0a\x0a\x09\x09return content.replace( /(?:\x3cp(?: [^\x3e]+)?\x3e)*(\x3cimg [^\x3e]+\x3e)(?:\x3c\x5c/p\x3e)*/g, function( match, image ) {\x0a\x09\x09\x09var data = getAttr( image, \x27data-wp-media\x27 );\x0a\x0a\x09\x09\x09if ( data ) {\x0a\x09\x09\x09\x09return \x27\x3cp\x3e\x27 + data + \x27\x3c/p\x3e\x27;\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return match;\x0a\x09\x09});\x0a\x09}\x0a\x0a\x09function editMedia( node ) {\x0a\x09\x09var gallery, frame, data;\x0a\x0a\x09\x09if ( node.nodeName !== \x27IMG\x27 ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09// Check if the `wp.media` API exists.\x0a\x09\x09if ( typeof wp === \x27undefined\x27 || ! wp.media ) {\x0a\x09\x09\x09return;\x0a\x09\x09}\x0a\x0a\x09\x09data = window.decodeURIComponent( editor.dom.getAttrib( node, \x27data-wp-media\x27 ) );\x0a\x0a\x09\x09// Make sure we\x27ve selected a gallery node.\x0a\x09\x09if ( editor.dom.hasClass( node, \x27wp-gallery\x27 ) && wp.media.gallery ) {\x0a\x09\x09\x09gallery = wp.media.gallery;\x0a\x09\x09\x09frame = gallery.edit( data );\x0a\x0a\x09\x09\x09frame.state(\x27gallery-edit\x27).on( \x27update\x27, function( selection ) {\x0a\x09\x09\x09\x09var shortcode = gallery.shortcode( selection ).string();\x0a\x09\x09\x09\x09editor.dom.setAttrib( node, \x27data-wp-media\x27, window.encodeURIComponent( shortcode ) );\x0a\x09\x09\x09\x09frame.detach();\x0a\x09\x09\x09});\x0a\x09\x09}\x0a\x09}\x0a\x0a\x09// Register the command so that it can be invoked by using tinyMCE.activeEditor.execCommand(\x27...\x27);\x0a\x09editor.addCommand( \x27WP_Gallery\x27, function() {\x0a\x09\x09editMedia( editor.selection.getNode() );\x0a\x09});\x0a\x0a\x09editor.on( \x27mouseup\x27, function( event ) {\x0a\x09\x09var dom = editor.dom,\x0a\x09\x09\x09node = event.target;\x0a\x0a\x09\x09function unselect() {\x0a\x09\x09\x09dom.removeClass( dom.select( \x27img.wp-media-selected\x27 ), \x27wp-media-selected\x27 );\x0a\x09\x09}\x0a\x0a\x09\x09if ( node.nodeName === \x27IMG\x27 && dom.getAttrib( node, \x27data-wp-media\x27 ) ) {\x0a\x09\x09\x09// Don\x27t trigger on right-click\x0a\x09\x09\x09if ( event.button !== 2 ) {\x0a\x09\x09\x09\x09if ( dom.hasClass( node, \x27wp-media-selected\x27 ) ) {\x0a\x09\x09\x09\x09\x09editMedia( node );\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09unselect();\x0a\x09\x09\x09\x09\x09dom.addClass( node, \x27wp-media-selected\x27 );\x0a\x09\x09\x09\x09}\x0a\x09\x09\x09}\x0a\x09\x09} else {\x0a\x09\x09\x09unselect();\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09// Display gallery, audio or video instead of img in the element path\x0a\x09editor.on( \x27ResolveName\x27, function( event ) {\x0a\x09\x09var dom = editor.dom,\x0a\x09\x09\x09node = event.target;\x0a\x0a\x09\x09if ( node.nodeName === \x27IMG\x27 && dom.getAttrib( node, \x27data-wp-media\x27 ) ) {\x0a\x09\x09\x09if ( dom.hasClass( node, \x27wp-gallery\x27 ) ) {\x0a\x09\x09\x09\x09event.name = \x27gallery\x27;\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27BeforeSetContent\x27, function( event ) {\x0a\x09\x09// \x27wpview\x27 handles the gallery shortcode when present\x0a\x09\x09if ( ! editor.plugins.wpview || typeof wp === \x27undefined\x27 || ! wp.mce ) {\x0a\x09\x09\x09event.content = replaceGalleryShortcodes( event.content );\x0a\x09\x09}\x0a\x09});\x0a\x0a\x09editor.on( \x27PostProcess\x27, function( event ) {\x0a\x09\x09if ( event.get ) {\x0a\x09\x09\x09event.content = restoreMediaShortcodes( event.content );\x0a\x09\x09}\x0a\x09});\x0a});\x0a'}